

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 01:22:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0018                     _RCSTAbits	set	24
   458  0019                     _TXREG	set	25
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0007                     _PORTC	set	7
   462  0006                     _PORTB	set	6
   463  0005                     _PORTA	set	5
   464  0005                     _PORTAbits	set	5
   465  0001                     _TMR0	set	1
   466  000B                     _INTCONbits	set	11
   467  001A                     _RCREG	set	26
   468  000C                     _PIR1bits	set	12
   469  0063                     _SSPIF	set	99
   470  005E                     _PEIE	set	94
   471  005F                     _GIE	set	95
   472  0091                     _SSPCON2bits	set	145
   473  0087                     _TRISCbits	set	135
   474  0094                     _SSPSTAT	set	148
   475  0093                     _SSPADD	set	147
   476  0091                     _SSPCON2	set	145
   477  008F                     _OSCCONbits	set	143
   478  009A                     _SPBRGH	set	154
   479  0099                     _SPBRG	set	153
   480  0098                     _TXSTAbits	set	152
   481  0081                     _OPTION_REGbits	set	129
   482  0089                     _TRISE	set	137
   483  0088                     _TRISD	set	136
   484  0087                     _TRISC	set	135
   485  0086                     _TRISB	set	134
   486  0085                     _TRISA	set	133
   487  008C                     _PIE1bits	set	140
   488  0463                     _SSPIE	set	1123
   489  043C                     _TRISC4	set	1084
   490  043B                     _TRISC3	set	1083
   491  0187                     _BAUDCTLbits	set	391
   492  0189                     _ANSELH	set	393
   493  0188                     _ANSEL	set	392
   494                           
   495                           	psect	cinit
   496  0011                     start_initialization:	
   497                           ; #config settings
   498                           
   499  0011                     __initialization:
   500                           
   501                           ; Clear objects allocated to COMMON
   502  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   503  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   504  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   505  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   506  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   507  0016  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   508                           
   509                           ; Clear objects allocated to BANK0
   510  0017  1383               	bcf	3,7	;select IRP bank0
   511  0018  3037               	movlw	low __pbssBANK0
   512  0019  0084               	movwf	4
   513  001A  304B               	movlw	low (__pbssBANK0+20)
   514  001B  120A  118A  2397  120A  118A  	fcall	clear_ram0
   515  0020                     end_of_initialization:	
   516                           ;End of C runtime variable initialization code
   517                           
   518  0020                     __end_of__initialization:
   519  0020  0183               	clrf	3
   520  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   521                           
   522                           	psect	bssCOMMON
   523  0070                     __pbssCOMMON:
   524  0070                     _min:
   525  0070                     	ds	1
   526  0071                     _hor:
   527  0071                     	ds	1
   528  0072                     _day:
   529  0072                     	ds	1
   530  0073                     _mou:
   531  0073                     	ds	1
   532  0074                     _GET2:
   533  0074                     	ds	1
   534  0075                     _GET:
   535  0075                     	ds	1
   536                           
   537                           	psect	bssBANK0
   538  0037                     __pbssBANK0:
   539  0037                     _seg_t:
   540  0037                     	ds	1
   541  0038                     _min_t:
   542  0038                     	ds	1
   543  0039                     _hor_t:
   544  0039                     	ds	1
   545  003A                     _day_t:
   546  003A                     	ds	1
   547  003B                     _mou_t:
   548  003B                     	ds	1
   549  003C                     _seg_u:
   550  003C                     	ds	1
   551  003D                     _min_u:
   552  003D                     	ds	1
   553  003E                     _hor_u:
   554  003E                     	ds	1
   555  003F                     _day_u:
   556  003F                     	ds	1
   557  0040                     _mou_u:
   558  0040                     	ds	1
   559  0041                     _year:
   560  0041                     	ds	1
   561  0042                     _week:
   562  0042                     	ds	1
   563  0043                     _seg:
   564  0043                     	ds	1
   565  0044                     _temp:
   566  0044                     	ds	1
   567  0045                     _q:
   568  0045                     	ds	1
   569  0046                     _C:
   570  0046                     	ds	1
   571  0047                     _r:
   572  0047                     	ds	1
   573  0048                     _z:
   574  0048                     	ds	1
   575  0049                     _Z:
   576  0049                     	ds	1
   577  004A                     _L:
   578  004A                     	ds	1
   579                           
   580                           	psect	clrtext
   581  0397                     clear_ram0:	
   582                           ;	Called with FSR containing the base address, and
   583                           ;	W with the last address+1
   584                           
   585  0397  0064               	clrwdt	;clear the watchdog before getting into this loop
   586  0398                     clrloop0:
   587  0398  0180               	clrf	0	;clear RAM location pointed to by FSR
   588  0399  0A84               	incf	4,f	;increment pointer
   589  039A  0604               	xorwf	4,w	;XOR with final address
   590  039B  1903               	btfsc	3,2	;have we reached the end yet?
   591  039C  3400               	retlw	0	;all done for this memory range, return
   592  039D  0604               	xorwf	4,w	;XOR again to restore value
   593  039E  2B98               	goto	clrloop0	;do the next byte
   594                           
   595                           	psect	cstackCOMMON
   596  0076                     __pcstackCOMMON:
   597  0076                     ?_send_hora:
   598  0076                     ??_send_hora:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0076                     ?_forced_send:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0076                     ??_forced_send:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0076                     ?_Setup:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0076                     ?_initOsc:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0076                     ?_SET_RXT:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0076                     ?_SET_TXR:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0076                     ?_I2C_Master_Start:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0076                     ?_I2C_Master_RepeatedStart:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0076                     ?_I2C_Master_Stop:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0076                     ?_CONVET:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0076                     ?_isr:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0076                     ?_main:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0076                     ?_I2C_Master_Wait:	
   638                           ; 1 bytes @ 0x0
   639                           
   640                           
   641                           ; 1 bytes @ 0x0
   642  0076                     	ds	2
   643  0078                     ??_isr:
   644                           
   645                           ; 1 bytes @ 0x2
   646  0078                     	ds	4
   647                           
   648                           	psect	cstackBANK0
   649  0020                     __pcstackBANK0:
   650  0020                     ??_Setup:
   651  0020                     ??_initOsc:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0020                     ??_SET_RXT:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0020                     ??_SET_TXR:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0020                     ??_I2C_Master_Start:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0020                     ?_I2C_Master_Write:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0020                     ??_I2C_Master_RepeatedStart:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0020                     ??_I2C_Master_Stop:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0020                     ??_CONVET:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0020                     ??_I2C_Master_Wait:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0020                     ?_I2C_Master_Read:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0020                     ?___lldiv:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0020                     I2C_Master_Write@d:	
   685                           ; 4 bytes @ 0x0
   686                           
   687  0020                     I2C_Master_Read@a:	
   688                           ; 2 bytes @ 0x0
   689                           
   690  0020                     ___lldiv@divisor:	
   691                           ; 2 bytes @ 0x0
   692                           
   693                           
   694                           ; 4 bytes @ 0x0
   695  0020                     	ds	2
   696  0022                     ??_I2C_Master_Write:
   697  0022                     ??_I2C_Master_Read:	
   698                           ; 1 bytes @ 0x2
   699                           
   700  0022                     initOsc@IRCF:	
   701                           ; 1 bytes @ 0x2
   702                           
   703                           
   704                           ; 1 bytes @ 0x2
   705  0022                     	ds	2
   706  0024                     I2C_Master_Read@temp:
   707  0024                     ___lldiv@dividend:	
   708                           ; 2 bytes @ 0x4
   709                           
   710                           
   711                           ; 4 bytes @ 0x4
   712  0024                     	ds	4
   713  0028                     ??___lldiv:
   714                           
   715                           ; 1 bytes @ 0x8
   716  0028                     	ds	1
   717  0029                     ___lldiv@quotient:
   718                           
   719                           ; 4 bytes @ 0x9
   720  0029                     	ds	4
   721  002D                     ___lldiv@counter:
   722                           
   723                           ; 1 bytes @ 0xD
   724  002D                     	ds	1
   725  002E                     ?_I2C_Master_Init:
   726  002E                     I2C_Master_Init@c:	
   727                           ; 1 bytes @ 0xE
   728                           
   729                           
   730                           ; 4 bytes @ 0xE
   731  002E                     	ds	4
   732  0032                     ??_I2C_Master_Init:
   733                           
   734                           ; 1 bytes @ 0x12
   735  0032                     	ds	4
   736  0036                     ??_main:
   737                           
   738                           ; 1 bytes @ 0x16
   739  0036                     	ds	1
   740                           
   741                           	psect	maintext
   742  0024                     __pmaintext:	
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 81 in file "MAIN_PRO.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : B00/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          0       1       0       0       0
   765 ;;      Totals:         0       1       0       0       0
   766 ;;Total ram usage:        1 bytes
   767 ;; Hardware stack levels required when called:    4
   768 ;; This function calls:
   769 ;;		_CONVET
   770 ;;		_I2C_Master_Init
   771 ;;		_I2C_Master_Read
   772 ;;		_I2C_Master_RepeatedStart
   773 ;;		_I2C_Master_Start
   774 ;;		_I2C_Master_Stop
   775 ;;		_I2C_Master_Write
   776 ;;		_SET_RXT
   777 ;;		_SET_TXR
   778 ;;		_Setup
   779 ;;		_initOsc
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _main
   787  0024                     _main:
   788  0024                     l1709:	
   789                           ;incstack = 0
   790                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   791                           
   792                           
   793                           ;MAIN_PRO.c: 82:     Setup();
   794  0024  120A  118A  2320  120A  118A  	fcall	_Setup
   795  0029                     l1711:
   796                           
   797                           ;MAIN_PRO.c: 83:     initOsc(6);
   798  0029  3006               	movlw	6
   799  002A  120A  118A  21BA  120A  118A  	fcall	_initOsc
   800  002F                     l1713:
   801                           
   802                           ;MAIN_PRO.c: 84:     SET_RXT();
   803  002F  120A  118A  235C  120A  118A  	fcall	_SET_RXT
   804  0034                     l1715:
   805                           
   806                           ;MAIN_PRO.c: 85:     SET_TXR();
   807  0034  120A  118A  2340  120A  118A  	fcall	_SET_TXR
   808  0039                     l1717:
   809                           
   810                           ;MAIN_PRO.c: 86:     I2C_Master_Init(100000);
   811  0039  3000               	movlw	0
   812  003A  1283               	bcf	3,5	;RP0=0, select bank0
   813  003B  1303               	bcf	3,6	;RP1=0, select bank0
   814  003C  00B1               	movwf	I2C_Master_Init@c+3
   815  003D  3001               	movlw	1
   816  003E  00B0               	movwf	I2C_Master_Init@c+2
   817  003F  3086               	movlw	134
   818  0040  00AF               	movwf	I2C_Master_Init@c+1
   819  0041  30A0               	movlw	160
   820  0042  00AE               	movwf	I2C_Master_Init@c
   821  0043  120A  118A  22B4  120A  118A  	fcall	_I2C_Master_Init
   822  0048                     l1719:
   823                           
   824                           ;MAIN_PRO.c: 91:         PORTAbits.RA0=0;
   825  0048  1283               	bcf	3,5	;RP0=0, select bank0
   826  0049  1303               	bcf	3,6	;RP1=0, select bank0
   827  004A  1005               	bcf	5,0	;volatile
   828  004B                     l1721:
   829                           
   830                           ;MAIN_PRO.c: 92:         I2C_Master_Start();
   831  004B  120A  118A  2385  120A  118A  	fcall	_I2C_Master_Start
   832  0050                     l1723:
   833                           
   834                           ;MAIN_PRO.c: 93:         I2C_Master_Write(0xD0);
   835  0050  30D0               	movlw	208
   836  0051  1283               	bcf	3,5	;RP0=0, select bank0
   837  0052  1303               	bcf	3,6	;RP1=0, select bank0
   838  0053  00A0               	movwf	I2C_Master_Write@d
   839  0054  3000               	movlw	0
   840  0055  00A1               	movwf	I2C_Master_Write@d+1
   841  0056  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Write
   842  005B                     l1725:
   843                           
   844                           ;MAIN_PRO.c: 94:         I2C_Master_Write(0x00);
   845  005B  3000               	movlw	0
   846  005C  1283               	bcf	3,5	;RP0=0, select bank0
   847  005D  1303               	bcf	3,6	;RP1=0, select bank0
   848  005E  00A0               	movwf	I2C_Master_Write@d
   849  005F  00A1               	movwf	I2C_Master_Write@d+1
   850  0060  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Write
   851  0065                     l1727:
   852                           
   853                           ;MAIN_PRO.c: 95:         I2C_Master_RepeatedStart();
   854  0065  120A  118A  238E  120A  118A  	fcall	_I2C_Master_RepeatedStart
   855  006A                     l1729:
   856                           
   857                           ;MAIN_PRO.c: 96:         I2C_Master_Write(0xD1);
   858  006A  30D1               	movlw	209
   859  006B  1283               	bcf	3,5	;RP0=0, select bank0
   860  006C  1303               	bcf	3,6	;RP1=0, select bank0
   861  006D  00A0               	movwf	I2C_Master_Write@d
   862  006E  3000               	movlw	0
   863  006F  00A1               	movwf	I2C_Master_Write@d+1
   864  0070  120A  118A  2372  120A  118A  	fcall	_I2C_Master_Write
   865  0075                     l1731:
   866                           
   867                           ;MAIN_PRO.c: 97:         seg = I2C_Master_Read(1);
   868  0075  3001               	movlw	1
   869  0076  1283               	bcf	3,5	;RP0=0, select bank0
   870  0077  1303               	bcf	3,6	;RP1=0, select bank0
   871  0078  00A0               	movwf	I2C_Master_Read@a
   872  0079  3000               	movlw	0
   873  007A  00A1               	movwf	I2C_Master_Read@a+1
   874  007B  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   875  0080  1283               	bcf	3,5	;RP0=0, select bank0
   876  0081  1303               	bcf	3,6	;RP1=0, select bank0
   877  0082  0820               	movf	?_I2C_Master_Read,w
   878  0083  00B6               	movwf	??_main
   879  0084  0836               	movf	??_main,w
   880  0085  00C3               	movwf	_seg
   881  0086                     l1733:
   882                           
   883                           ;MAIN_PRO.c: 98:         min = I2C_Master_Read(1);
   884  0086  3001               	movlw	1
   885  0087  00A0               	movwf	I2C_Master_Read@a
   886  0088  3000               	movlw	0
   887  0089  00A1               	movwf	I2C_Master_Read@a+1
   888  008A  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   889  008F  1283               	bcf	3,5	;RP0=0, select bank0
   890  0090  1303               	bcf	3,6	;RP1=0, select bank0
   891  0091  0820               	movf	?_I2C_Master_Read,w
   892  0092  00B6               	movwf	??_main
   893  0093  0836               	movf	??_main,w
   894  0094  00F0               	movwf	_min
   895  0095                     l1735:
   896                           
   897                           ;MAIN_PRO.c: 99:         hor = I2C_Master_Read(1);
   898  0095  3001               	movlw	1
   899  0096  00A0               	movwf	I2C_Master_Read@a
   900  0097  3000               	movlw	0
   901  0098  00A1               	movwf	I2C_Master_Read@a+1
   902  0099  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   903  009E  1283               	bcf	3,5	;RP0=0, select bank0
   904  009F  1303               	bcf	3,6	;RP1=0, select bank0
   905  00A0  0820               	movf	?_I2C_Master_Read,w
   906  00A1  00B6               	movwf	??_main
   907  00A2  0836               	movf	??_main,w
   908  00A3  00F1               	movwf	_hor
   909  00A4                     l1737:
   910                           
   911                           ;MAIN_PRO.c: 100:         week = I2C_Master_Read(1);
   912  00A4  3001               	movlw	1
   913  00A5  00A0               	movwf	I2C_Master_Read@a
   914  00A6  3000               	movlw	0
   915  00A7  00A1               	movwf	I2C_Master_Read@a+1
   916  00A8  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   917  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   918  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   919  00AF  0820               	movf	?_I2C_Master_Read,w
   920  00B0  00B6               	movwf	??_main
   921  00B1  0836               	movf	??_main,w
   922  00B2  00C2               	movwf	_week
   923  00B3                     l1739:
   924                           
   925                           ;MAIN_PRO.c: 101:         day = I2C_Master_Read(1);
   926  00B3  3001               	movlw	1
   927  00B4  00A0               	movwf	I2C_Master_Read@a
   928  00B5  3000               	movlw	0
   929  00B6  00A1               	movwf	I2C_Master_Read@a+1
   930  00B7  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   931  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   932  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   933  00BE  0820               	movf	?_I2C_Master_Read,w
   934  00BF  00B6               	movwf	??_main
   935  00C0  0836               	movf	??_main,w
   936  00C1  00F2               	movwf	_day
   937  00C2                     l1741:
   938                           
   939                           ;MAIN_PRO.c: 102:         mou = I2C_Master_Read(1);
   940  00C2  3001               	movlw	1
   941  00C3  00A0               	movwf	I2C_Master_Read@a
   942  00C4  3000               	movlw	0
   943  00C5  00A1               	movwf	I2C_Master_Read@a+1
   944  00C6  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   945  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   946  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   947  00CD  0820               	movf	?_I2C_Master_Read,w
   948  00CE  00B6               	movwf	??_main
   949  00CF  0836               	movf	??_main,w
   950  00D0  00F3               	movwf	_mou
   951  00D1                     l1743:
   952                           
   953                           ;MAIN_PRO.c: 103:         year= I2C_Master_Read(0);
   954  00D1  3000               	movlw	0
   955  00D2  00A0               	movwf	I2C_Master_Read@a
   956  00D3  00A1               	movwf	I2C_Master_Read@a+1
   957  00D4  120A  118A  22EE  120A  118A  	fcall	_I2C_Master_Read
   958  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   959  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   960  00DB  0820               	movf	?_I2C_Master_Read,w
   961  00DC  00B6               	movwf	??_main
   962  00DD  0836               	movf	??_main,w
   963  00DE  00C1               	movwf	_year
   964  00DF                     l1745:
   965                           
   966                           ;MAIN_PRO.c: 104:         I2C_Master_Stop();
   967  00DF  120A  118A  237C  120A  118A  	fcall	_I2C_Master_Stop
   968  00E4                     l1747:
   969                           
   970                           ;MAIN_PRO.c: 105:         CONVET();
   971  00E4  120A  118A  2218  120A  118A  	fcall	_CONVET
   972  00E9  2848               	goto	l1719
   973  00EA  120A  118A  280E   	ljmp	start
   974  00ED                     __end_of_main:
   975                           
   976                           	psect	text1
   977  01BA                     __ptext1:	
   978 ;; *************** function _initOsc *****************
   979 ;; Defined at:
   980 ;;		line 6 in file "Oscilador.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  IRCF            1    wreg     unsigned char 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  IRCF            1    2[BANK0 ] unsigned char 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       1       0       0       0
   996 ;;      Temps:          0       2       0       0       0
   997 ;;      Totals:         0       3       0       0       0
   998 ;;Total ram usage:        3 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    2
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _initOsc
  1010  01BA                     _initOsc:
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1014                           ;initOsc@IRCF stored from wreg
  1015  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1016  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1017  01BC  00A2               	movwf	initOsc@IRCF
  1018  01BD                     l1631:
  1019                           
  1020                           ;Oscilador.c: 7: switch (IRCF) {
  1021  01BD  29F4               	goto	l1635
  1022  01BE                     l208:	
  1023                           ;Oscilador.c: 8:             case 0:
  1024                           
  1025                           
  1026                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  1027  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1028  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1029  01C0  130F               	bcf	15,6	;volatile
  1030                           
  1031                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  1032  01C1  128F               	bcf	15,5	;volatile
  1033                           
  1034                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  1035  01C2  120F               	bcf	15,4	;volatile
  1036                           
  1037                           ;Oscilador.c: 12:                 break;
  1038  01C3  2A16               	goto	l209
  1039  01C4                     l210:	
  1040                           ;Oscilador.c: 13:             case 1:
  1041                           
  1042                           
  1043                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  1044  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1045  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  1046  01C6  130F               	bcf	15,6	;volatile
  1047                           
  1048                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  1049  01C7  128F               	bcf	15,5	;volatile
  1050                           
  1051                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  1052  01C8  160F               	bsf	15,4	;volatile
  1053                           
  1054                           ;Oscilador.c: 17:                 break;
  1055  01C9  2A16               	goto	l209
  1056  01CA                     l211:	
  1057                           ;Oscilador.c: 18:             case 2:
  1058                           
  1059                           
  1060                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  1061  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1062  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1063  01CC  130F               	bcf	15,6	;volatile
  1064                           
  1065                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  1066  01CD  168F               	bsf	15,5	;volatile
  1067                           
  1068                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  1069  01CE  120F               	bcf	15,4	;volatile
  1070                           
  1071                           ;Oscilador.c: 22:                 break;
  1072  01CF  2A16               	goto	l209
  1073  01D0                     l212:	
  1074                           ;Oscilador.c: 23:             case 3:
  1075                           
  1076                           
  1077                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  1078  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1079  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1080  01D2  130F               	bcf	15,6	;volatile
  1081                           
  1082                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  1083  01D3  168F               	bsf	15,5	;volatile
  1084                           
  1085                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  1086  01D4  160F               	bsf	15,4	;volatile
  1087                           
  1088                           ;Oscilador.c: 27:                 break;
  1089  01D5  2A16               	goto	l209
  1090  01D6                     l213:	
  1091                           ;Oscilador.c: 28:             case 4:
  1092                           
  1093                           
  1094                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  1095  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1096  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1097  01D8  170F               	bsf	15,6	;volatile
  1098                           
  1099                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  1100  01D9  128F               	bcf	15,5	;volatile
  1101                           
  1102                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  1103  01DA  120F               	bcf	15,4	;volatile
  1104                           
  1105                           ;Oscilador.c: 32:                 break;
  1106  01DB  2A16               	goto	l209
  1107  01DC                     l214:	
  1108                           ;Oscilador.c: 33:             case 5:
  1109                           
  1110                           
  1111                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  1112  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1113  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1114  01DE  170F               	bsf	15,6	;volatile
  1115                           
  1116                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  1117  01DF  128F               	bcf	15,5	;volatile
  1118                           
  1119                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  1120  01E0  160F               	bsf	15,4	;volatile
  1121                           
  1122                           ;Oscilador.c: 37:                 break;
  1123  01E1  2A16               	goto	l209
  1124  01E2                     l215:	
  1125                           ;Oscilador.c: 38:             case 6:
  1126                           
  1127                           
  1128                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  1129  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1130  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1131  01E4  170F               	bsf	15,6	;volatile
  1132                           
  1133                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  1134  01E5  168F               	bsf	15,5	;volatile
  1135                           
  1136                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  1137  01E6  120F               	bcf	15,4	;volatile
  1138                           
  1139                           ;Oscilador.c: 42:                 break;
  1140  01E7  2A16               	goto	l209
  1141  01E8                     l216:	
  1142                           ;Oscilador.c: 43:             case 7:
  1143                           
  1144                           
  1145                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  1146  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1147  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1148  01EA  170F               	bsf	15,6	;volatile
  1149                           
  1150                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  1151  01EB  168F               	bsf	15,5	;volatile
  1152                           
  1153                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  1154  01EC  160F               	bsf	15,4	;volatile
  1155                           
  1156                           ;Oscilador.c: 47:                 break;
  1157  01ED  2A16               	goto	l209
  1158  01EE                     l217:	
  1159                           ;Oscilador.c: 48:             default:
  1160                           
  1161                           
  1162                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  1163  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1164  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1165  01F0  170F               	bsf	15,6	;volatile
  1166                           
  1167                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  1168  01F1  168F               	bsf	15,5	;volatile
  1169                           
  1170                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  1171  01F2  120F               	bcf	15,4	;volatile
  1172                           
  1173                           ;Oscilador.c: 52:                 break;
  1174  01F3  2A16               	goto	l209
  1175  01F4                     l1635:
  1176  01F4  0822               	movf	initOsc@IRCF,w
  1177  01F5  00A0               	movwf	??_initOsc
  1178  01F6  01A1               	clrf	??_initOsc+1
  1179                           
  1180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1181                           ; Switch size 1, requested type "simple"
  1182                           ; Number of cases is 1, Range of values is 0 to 0
  1183                           ; switch strategies available:
  1184                           ; Name         Instructions Cycles
  1185                           ; simple_byte            4     3 (average)
  1186                           ; direct_byte           11     8 (fixed)
  1187                           ; jumptable            260     6 (fixed)
  1188                           ;	Chosen strategy is simple_byte
  1189  01F7  0821               	movf	??_initOsc+1,w
  1190  01F8  3A00               	xorlw	0	; case 0
  1191  01F9  1903               	skipnz
  1192  01FA  29FC               	goto	l1801
  1193  01FB  29EE               	goto	l217
  1194  01FC                     l1801:
  1195                           
  1196                           ; Switch size 1, requested type "simple"
  1197                           ; Number of cases is 8, Range of values is 0 to 7
  1198                           ; switch strategies available:
  1199                           ; Name         Instructions Cycles
  1200                           ; simple_byte           25    13 (average)
  1201                           ; direct_byte           32     8 (fixed)
  1202                           ; jumptable            260     6 (fixed)
  1203                           ;	Chosen strategy is simple_byte
  1204  01FC  0820               	movf	??_initOsc,w
  1205  01FD  3A00               	xorlw	0	; case 0
  1206  01FE  1903               	skipnz
  1207  01FF  29BE               	goto	l208
  1208  0200  3A01               	xorlw	1	; case 1
  1209  0201  1903               	skipnz
  1210  0202  29C4               	goto	l210
  1211  0203  3A03               	xorlw	3	; case 2
  1212  0204  1903               	skipnz
  1213  0205  29CA               	goto	l211
  1214  0206  3A01               	xorlw	1	; case 3
  1215  0207  1903               	skipnz
  1216  0208  29D0               	goto	l212
  1217  0209  3A07               	xorlw	7	; case 4
  1218  020A  1903               	skipnz
  1219  020B  29D6               	goto	l213
  1220  020C  3A01               	xorlw	1	; case 5
  1221  020D  1903               	skipnz
  1222  020E  29DC               	goto	l214
  1223  020F  3A03               	xorlw	3	; case 6
  1224  0210  1903               	skipnz
  1225  0211  29E2               	goto	l215
  1226  0212  3A01               	xorlw	1	; case 7
  1227  0213  1903               	skipnz
  1228  0214  29E8               	goto	l216
  1229  0215  29EE               	goto	l217
  1230  0216                     l209:
  1231                           
  1232                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  1233  0216  140F               	bsf	15,0	;volatile
  1234  0217                     l218:
  1235  0217  0008               	return
  1236  0218                     __end_of_initOsc:
  1237                           
  1238                           	psect	text2
  1239  0320                     __ptext2:	
  1240 ;; *************** function _Setup *****************
  1241 ;; Defined at:
  1242 ;;		line 111 in file "MAIN_PRO.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		status,2
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0
  1259 ;;      Totals:         0       0       0       0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    2
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _Setup
  1272  0320                     _Setup:
  1273  0320                     l1607:	
  1274                           ;incstack = 0
  1275                           ; Regs used in _Setup: [status,2]
  1276                           
  1277                           
  1278                           ;MAIN_PRO.c: 113:     PORTA = 0;
  1279  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0322  0185               	clrf	5	;volatile
  1282                           
  1283                           ;MAIN_PRO.c: 114:     PORTB = 0;
  1284  0323  0186               	clrf	6	;volatile
  1285                           
  1286                           ;MAIN_PRO.c: 115:     PORTC = 0;
  1287  0324  0187               	clrf	7	;volatile
  1288                           
  1289                           ;MAIN_PRO.c: 116:     PORTD = 0;
  1290  0325  0188               	clrf	8	;volatile
  1291                           
  1292                           ;MAIN_PRO.c: 117:     PORTE = 0;
  1293  0326  0189               	clrf	9	;volatile
  1294                           
  1295                           ;MAIN_PRO.c: 119:     TRISA = 0B00000000;
  1296  0327  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0328  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0329  0185               	clrf	5	;volatile
  1299                           
  1300                           ;MAIN_PRO.c: 120:     TRISB = 0B00000000;
  1301  032A  0186               	clrf	6	;volatile
  1302                           
  1303                           ;MAIN_PRO.c: 121:     TRISC = 0B00000000;
  1304  032B  0187               	clrf	7	;volatile
  1305                           
  1306                           ;MAIN_PRO.c: 122:     TRISD = 0B00000000;
  1307  032C  0188               	clrf	8	;volatile
  1308                           
  1309                           ;MAIN_PRO.c: 123:     TRISE = 0B0000;
  1310  032D  0189               	clrf	9	;volatile
  1311                           
  1312                           ;MAIN_PRO.c: 125:     ANSEL = 0B00000000;
  1313  032E  1683               	bsf	3,5	;RP0=1, select bank3
  1314  032F  1703               	bsf	3,6	;RP1=1, select bank3
  1315  0330  0188               	clrf	8	;volatile
  1316                           
  1317                           ;MAIN_PRO.c: 126:     ANSELH = 0B00000000;
  1318  0331  0189               	clrf	9	;volatile
  1319  0332                     l1609:
  1320                           
  1321                           ;MAIN_PRO.c: 129:     INTCONbits.GIE=1;
  1322  0332  178B               	bsf	11,7	;volatile
  1323  0333                     l1611:
  1324                           
  1325                           ;MAIN_PRO.c: 130:     INTCONbits.PEIE=1;
  1326  0333  170B               	bsf	11,6	;volatile
  1327  0334                     l1613:
  1328                           
  1329                           ;MAIN_PRO.c: 131:     INTCONbits.TMR0IE=1;
  1330  0334  168B               	bsf	11,5	;volatile
  1331  0335                     l1615:
  1332                           
  1333                           ;MAIN_PRO.c: 132:     INTCONbits.TMR0IF=0;
  1334  0335  110B               	bcf	11,2	;volatile
  1335  0336                     l1617:
  1336                           
  1337                           ;MAIN_PRO.c: 133:     PIE1bits.TXIE = 1;
  1338  0336  1683               	bsf	3,5	;RP0=1, select bank1
  1339  0337  1303               	bcf	3,6	;RP1=0, select bank1
  1340  0338  160C               	bsf	12,4	;volatile
  1341  0339                     l1619:
  1342                           
  1343                           ;MAIN_PRO.c: 134:     OPTION_REGbits.T0CS=0;
  1344  0339  1281               	bcf	1,5	;volatile
  1345  033A                     l1621:
  1346                           
  1347                           ;MAIN_PRO.c: 135:     OPTION_REGbits.T0SE=0;
  1348  033A  1201               	bcf	1,4	;volatile
  1349  033B                     l1623:
  1350                           
  1351                           ;MAIN_PRO.c: 136:     OPTION_REGbits.PSA=0;
  1352  033B  1181               	bcf	1,3	;volatile
  1353  033C                     l1625:
  1354                           
  1355                           ;MAIN_PRO.c: 138:     OPTION_REGbits.PS0=1;
  1356  033C  1401               	bsf	1,0	;volatile
  1357  033D                     l1627:
  1358                           
  1359                           ;MAIN_PRO.c: 139:     OPTION_REGbits.PS1=1;
  1360  033D  1481               	bsf	1,1	;volatile
  1361  033E                     l1629:
  1362                           
  1363                           ;MAIN_PRO.c: 140:     OPTION_REGbits.PS2=1;
  1364  033E  1501               	bsf	1,2	;volatile
  1365  033F                     l138:
  1366  033F  0008               	return
  1367  0340                     __end_of_Setup:
  1368                           
  1369                           	psect	text3
  1370  0340                     __ptext3:	
  1371 ;; *************** function _SET_TXR *****************
  1372 ;; Defined at:
  1373 ;;		line 3 in file "EUSART.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _SET_TXR
  1403  0340                     _SET_TXR:
  1404  0340                     l1645:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _SET_TXR: [wreg+status,2]
  1407                           
  1408                           
  1409                           ;EUSART.c: 4:     TXSTAbits.SYNC=0;
  1410  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0342  1218               	bcf	24,4	;volatile
  1413                           
  1414                           ;EUSART.c: 5:     TXSTAbits.TXEN=1;
  1415  0343  1698               	bsf	24,5	;volatile
  1416                           
  1417                           ;EUSART.c: 6:     TXSTAbits.BRGH=1;
  1418  0344  1518               	bsf	24,2	;volatile
  1419                           
  1420                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  1421  0345  1318               	bcf	24,6	;volatile
  1422                           
  1423                           ;EUSART.c: 8:     BAUDCTLbits.BRG16=0;
  1424  0346  1683               	bsf	3,5	;RP0=1, select bank3
  1425  0347  1703               	bsf	3,6	;RP1=1, select bank3
  1426  0348  1187               	bcf	7,3	;volatile
  1427  0349                     l1647:
  1428                           
  1429                           ;EUSART.c: 9:     SPBRG=25;
  1430  0349  3019               	movlw	25
  1431  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1432  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1433  034C  0099               	movwf	25	;volatile
  1434  034D                     l1649:
  1435                           
  1436                           ;EUSART.c: 10:     SPBRGH=0;
  1437  034D  019A               	clrf	26	;volatile
  1438  034E                     l199:
  1439  034E  0008               	return
  1440  034F                     __end_of_SET_TXR:
  1441                           
  1442                           	psect	text4
  1443  035C                     __ptext4:	
  1444 ;; *************** function _SET_RXT *****************
  1445 ;; Defined at:
  1446 ;;		line 12 in file "EUSART.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		None
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0
  1463 ;;      Totals:         0       0       0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _SET_RXT
  1476  035C                     _SET_RXT:
  1477  035C                     l1643:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _SET_RXT: []
  1480                           
  1481                           
  1482                           ;EUSART.c: 13:     RCSTAbits.SPEN=1;
  1483  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1484  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1485  035E  1798               	bsf	24,7	;volatile
  1486                           
  1487                           ;EUSART.c: 14:     RCSTAbits.CREN=1;
  1488  035F  1618               	bsf	24,4	;volatile
  1489                           
  1490                           ;EUSART.c: 15:     RCSTAbits.FERR=0;
  1491  0360  1118               	bcf	24,2	;volatile
  1492                           
  1493                           ;EUSART.c: 16:     RCSTAbits.OERR=0;
  1494  0361  1098               	bcf	24,1	;volatile
  1495                           
  1496                           ;EUSART.c: 17:     RCSTAbits.RX9=0;
  1497  0362  1318               	bcf	24,6	;volatile
  1498                           
  1499                           ;EUSART.c: 18:     PIE1bits.RCIE=1;
  1500  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0365  168C               	bsf	12,5	;volatile
  1503  0366                     l202:
  1504  0366  0008               	return
  1505  0367                     __end_of_SET_RXT:
  1506                           
  1507                           	psect	text5
  1508  0372                     __ptext5:	
  1509 ;; *************** function _I2C_Master_Write *****************
  1510 ;; Defined at:
  1511 ;;		line 54 in file "I2C.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  d               2    0[BANK0 ] unsigned int 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       2       0       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       2       0       0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		_I2C_Master_Wait
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;;		_CARGA
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _I2C_Master_Write
  1542  0372                     _I2C_Master_Write:
  1543  0372                     l1667:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1546                           
  1547                           
  1548                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  1549  0372  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1550  0377                     l1669:
  1551                           
  1552                           ;I2C.c: 57:     SSPBUF = d;
  1553  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0379  0820               	movf	I2C_Master_Write@d,w
  1556  037A  0093               	movwf	19	;volatile
  1557  037B                     l265:
  1558  037B  0008               	return
  1559  037C                     __end_of_I2C_Master_Write:
  1560                           
  1561                           	psect	text6
  1562  037C                     __ptext6:	
  1563 ;; *************** function _I2C_Master_Stop *****************
  1564 ;; Defined at:
  1565 ;;		line 44 in file "I2C.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    3
  1586 ;; This function calls:
  1587 ;;		_I2C_Master_Wait
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;;		_CARGA
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _I2C_Master_Stop
  1596  037C                     _I2C_Master_Stop:
  1597  037C                     l1691:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1600                           
  1601                           
  1602                           ;I2C.c: 46:     I2C_Master_Wait();
  1603  037C  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1604  0381                     l1693:
  1605                           
  1606                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  1607  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0382  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0383  1511               	bsf	17,2	;volatile
  1610  0384                     l262:
  1611  0384  0008               	return
  1612  0385                     __end_of_I2C_Master_Stop:
  1613                           
  1614                           	psect	text7
  1615  0385                     __ptext7:	
  1616 ;; *************** function _I2C_Master_Start *****************
  1617 ;; Defined at:
  1618 ;;		line 28 in file "I2C.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    3
  1639 ;; This function calls:
  1640 ;;		_I2C_Master_Wait
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;;		_CARGA
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _I2C_Master_Start
  1649  0385                     _I2C_Master_Start:
  1650  0385                     l1663:	
  1651                           ;incstack = 0
  1652                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1653                           
  1654                           
  1655                           ;I2C.c: 30:     I2C_Master_Wait();
  1656  0385  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1657  038A                     l1665:
  1658                           
  1659                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  1660  038A  1683               	bsf	3,5	;RP0=1, select bank1
  1661  038B  1303               	bcf	3,6	;RP1=0, select bank1
  1662  038C  1411               	bsf	17,0	;volatile
  1663  038D                     l256:
  1664  038D  0008               	return
  1665  038E                     __end_of_I2C_Master_Start:
  1666                           
  1667                           	psect	text8
  1668  038E                     __ptext8:	
  1669 ;; *************** function _I2C_Master_RepeatedStart *****************
  1670 ;; Defined at:
  1671 ;;		line 36 in file "I2C.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    3
  1692 ;; This function calls:
  1693 ;;		_I2C_Master_Wait
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _I2C_Master_RepeatedStart
  1701  038E                     _I2C_Master_RepeatedStart:
  1702  038E                     l1671:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  1705                           
  1706                           
  1707                           ;I2C.c: 38:     I2C_Master_Wait();
  1708  038E  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1709  0393                     l1673:
  1710                           
  1711                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  1712  0393  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0394  1303               	bcf	3,6	;RP1=0, select bank1
  1714  0395  1491               	bsf	17,1	;volatile
  1715  0396                     l259:
  1716  0396  0008               	return
  1717  0397                     __end_of_I2C_Master_RepeatedStart:
  1718                           
  1719                           	psect	text9
  1720  02EE                     __ptext9:	
  1721 ;; *************** function _I2C_Master_Read *****************
  1722 ;; Defined at:
  1723 ;;		line 63 in file "I2C.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               2    0[BANK0 ] unsigned short 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  temp            2    4[BANK0 ] unsigned short 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    0[BANK0 ] unsigned short 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       2       0       0       0
  1738 ;;      Locals:         0       2       0       0       0
  1739 ;;      Temps:          0       2       0       0       0
  1740 ;;      Totals:         0       6       0       0       0
  1741 ;;Total ram usage:        6 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    3
  1744 ;; This function calls:
  1745 ;;		_I2C_Master_Wait
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _I2C_Master_Read
  1753  02EE                     _I2C_Master_Read:
  1754  02EE                     l1675:	
  1755                           ;incstack = 0
  1756                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1757                           
  1758                           
  1759                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  1760  02EE  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1761  02F3                     l1677:
  1762                           
  1763                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  1764  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  1765  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  1766  02F5  1591               	bsf	17,3	;volatile
  1767                           
  1768                           ;I2C.c: 68:     I2C_Master_Wait();
  1769  02F6  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1770  02FB                     l1679:
  1771                           
  1772                           ;I2C.c: 69:     temp = SSPBUF;
  1773  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1774  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1775  02FD  0813               	movf	19,w	;volatile
  1776  02FE  00A2               	movwf	??_I2C_Master_Read
  1777  02FF  01A3               	clrf	??_I2C_Master_Read+1
  1778  0300  0822               	movf	??_I2C_Master_Read,w
  1779  0301  00A4               	movwf	I2C_Master_Read@temp
  1780  0302  0823               	movf	??_I2C_Master_Read+1,w
  1781  0303  00A5               	movwf	I2C_Master_Read@temp+1
  1782  0304                     l1681:
  1783                           
  1784                           ;I2C.c: 70:     I2C_Master_Wait();
  1785  0304  120A  118A  234F  120A  118A  	fcall	_I2C_Master_Wait
  1786  0309                     l1683:
  1787                           
  1788                           ;I2C.c: 71:     if(a == 1){
  1789  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1790  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1791  030B  0320               	decf	I2C_Master_Read@a,w
  1792  030C  0421               	iorwf	I2C_Master_Read@a+1,w
  1793  030D  1D03               	btfss	3,2
  1794  030E  2B10               	goto	u611
  1795  030F  2B11               	goto	u610
  1796  0310                     u611:
  1797  0310  2B15               	goto	l268
  1798  0311                     u610:
  1799  0311                     l1685:
  1800                           
  1801                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  1802  0311  1683               	bsf	3,5	;RP0=1, select bank1
  1803  0312  1303               	bcf	3,6	;RP1=0, select bank1
  1804  0313  1291               	bcf	17,5	;volatile
  1805                           
  1806                           ;I2C.c: 73:     }else{
  1807  0314  2B18               	goto	l269
  1808  0315                     l268:
  1809                           
  1810                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  1811  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0317  1691               	bsf	17,5	;volatile
  1814  0318                     l269:	
  1815                           ;I2C.c: 75:     }
  1816                           
  1817                           
  1818                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  1819  0318  1611               	bsf	17,4	;volatile
  1820  0319                     l1687:
  1821                           
  1822                           ;I2C.c: 77:     return temp;
  1823  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1824  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1825  031B  0825               	movf	I2C_Master_Read@temp+1,w
  1826  031C  00A1               	movwf	?_I2C_Master_Read+1
  1827  031D  0824               	movf	I2C_Master_Read@temp,w
  1828  031E  00A0               	movwf	?_I2C_Master_Read
  1829  031F                     l270:
  1830  031F  0008               	return
  1831  0320                     __end_of_I2C_Master_Read:
  1832                           
  1833                           	psect	text10
  1834  034F                     __ptext10:	
  1835 ;; *************** function _I2C_Master_Wait *****************
  1836 ;; Defined at:
  1837 ;;		line 21 in file "I2C.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    2
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_I2C_Master_Start
  1862 ;;		_I2C_Master_RepeatedStart
  1863 ;;		_I2C_Master_Stop
  1864 ;;		_I2C_Master_Write
  1865 ;;		_I2C_Master_Read
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _I2C_Master_Wait
  1871  034F                     _I2C_Master_Wait:
  1872  034F                     l1579:	
  1873                           ;incstack = 0
  1874                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1875                           
  1876  034F                     l250:	
  1877                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1878                           
  1879  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1880  0350  1303               	bcf	3,6	;RP1=0, select bank1
  1881  0351  1914               	btfsc	20,2	;volatile
  1882  0352  2B54               	goto	u511
  1883  0353  2B55               	goto	u510
  1884  0354                     u511:
  1885  0354  2B4F               	goto	l250
  1886  0355                     u510:
  1887  0355                     l1581:
  1888  0355  0811               	movf	17,w	;volatile
  1889  0356  391F               	andlw	31
  1890  0357  1D03               	btfss	3,2
  1891  0358  2B5A               	goto	u521
  1892  0359  2B5B               	goto	u520
  1893  035A                     u521:
  1894  035A  2B4F               	goto	l250
  1895  035B                     u520:
  1896  035B                     l253:
  1897  035B  0008               	return
  1898  035C                     __end_of_I2C_Master_Wait:
  1899                           
  1900                           	psect	text11
  1901  02B4                     __ptext11:	
  1902 ;; *************** function _I2C_Master_Init *****************
  1903 ;; Defined at:
  1904 ;;		line 5 in file "I2C.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  c               4   14[BANK0 ] const unsigned long 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0, pclath, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       4       0       0       0
  1919 ;;      Locals:         0       0       0       0       0
  1920 ;;      Temps:          0       4       0       0       0
  1921 ;;      Totals:         0       8       0       0       0
  1922 ;;Total ram usage:        8 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    3
  1925 ;; This function calls:
  1926 ;;		___lldiv
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _I2C_Master_Init
  1934  02B4                     _I2C_Master_Init:
  1935  02B4                     l1651:	
  1936                           ;incstack = 0
  1937                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1938                           
  1939                           
  1940                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  1941  02B4  3028               	movlw	40
  1942  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1943  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1944  02B7  0094               	movwf	20	;volatile
  1945  02B8                     l1653:
  1946                           
  1947                           ;I2C.c: 8:     SSPCON2 = 0;
  1948  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1949  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1950  02BA  0191               	clrf	17	;volatile
  1951  02BB                     l1655:
  1952                           
  1953                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  1954  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1955  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1956  02BD  082E               	movf	I2C_Master_Init@c,w
  1957  02BE  00B2               	movwf	??_I2C_Master_Init
  1958  02BF  082F               	movf	I2C_Master_Init@c+1,w
  1959  02C0  00B3               	movwf	??_I2C_Master_Init+1
  1960  02C1  0830               	movf	I2C_Master_Init@c+2,w
  1961  02C2  00B4               	movwf	??_I2C_Master_Init+2
  1962  02C3  0831               	movf	I2C_Master_Init@c+3,w
  1963  02C4  00B5               	movwf	??_I2C_Master_Init+3
  1964  02C5  3002               	movlw	2
  1965  02C6                     u605:
  1966  02C6  1003               	clrc
  1967  02C7  0DB2               	rlf	??_I2C_Master_Init,f
  1968  02C8  0DB3               	rlf	??_I2C_Master_Init+1,f
  1969  02C9  0DB4               	rlf	??_I2C_Master_Init+2,f
  1970  02CA  0DB5               	rlf	??_I2C_Master_Init+3,f
  1971  02CB                     u600:
  1972  02CB  3EFF               	addlw	-1
  1973  02CC  1D03               	skipz
  1974  02CD  2AC6               	goto	u605
  1975  02CE  0835               	movf	??_I2C_Master_Init+3,w
  1976  02CF  00A3               	movwf	___lldiv@divisor+3
  1977  02D0  0834               	movf	??_I2C_Master_Init+2,w
  1978  02D1  00A2               	movwf	___lldiv@divisor+2
  1979  02D2  0833               	movf	??_I2C_Master_Init+1,w
  1980  02D3  00A1               	movwf	___lldiv@divisor+1
  1981  02D4  0832               	movf	??_I2C_Master_Init,w
  1982  02D5  00A0               	movwf	___lldiv@divisor
  1983  02D6  3000               	movlw	0
  1984  02D7  00A7               	movwf	___lldiv@dividend+3
  1985  02D8  307A               	movlw	122
  1986  02D9  00A6               	movwf	___lldiv@dividend+2
  1987  02DA  3012               	movlw	18
  1988  02DB  00A5               	movwf	___lldiv@dividend+1
  1989  02DC  3000               	movlw	0
  1990  02DD  00A4               	movwf	___lldiv@dividend
  1991  02DE  120A  118A  20ED  120A  118A  	fcall	___lldiv
  1992  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1993  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1994  02E5  0820               	movf	?___lldiv,w
  1995  02E6  3EFF               	addlw	255
  1996  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1997  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1998  02E9  0093               	movwf	19	;volatile
  1999  02EA                     l1657:
  2000                           
  2001                           ;I2C.c: 10:     SSPSTAT = 0;
  2002  02EA  0194               	clrf	20	;volatile
  2003  02EB                     l1659:
  2004                           
  2005                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  2006  02EB  1587               	bsf	7,3	;volatile
  2007  02EC                     l1661:
  2008                           
  2009                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  2010  02EC  1607               	bsf	7,4	;volatile
  2011  02ED                     l247:
  2012  02ED  0008               	return
  2013  02EE                     __end_of_I2C_Master_Init:
  2014                           
  2015                           	psect	text12
  2016  00ED                     __ptext12:	
  2017 ;; *************** function ___lldiv *****************
  2018 ;; Defined at:
  2019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  divisor         4    0[BANK0 ] unsigned long 
  2022 ;;  dividend        4    4[BANK0 ] unsigned long 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  quotient        4    9[BANK0 ] unsigned long 
  2025 ;;  counter         1   13[BANK0 ] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  4    0[BANK0 ] unsigned long 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       8       0       0       0
  2036 ;;      Locals:         0       5       0       0       0
  2037 ;;      Temps:          0       1       0       0       0
  2038 ;;      Totals:         0      14       0       0       0
  2039 ;;Total ram usage:       14 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_I2C_Master_Init
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function ___lldiv
  2051  00ED                     ___lldiv:
  2052  00ED                     l1583:	
  2053                           ;incstack = 0
  2054                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2055                           
  2056  00ED  3000               	movlw	0
  2057  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2058  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2059  00F0  00AC               	movwf	___lldiv@quotient+3
  2060  00F1  3000               	movlw	0
  2061  00F2  00AB               	movwf	___lldiv@quotient+2
  2062  00F3  3000               	movlw	0
  2063  00F4  00AA               	movwf	___lldiv@quotient+1
  2064  00F5  3000               	movlw	0
  2065  00F6  00A9               	movwf	___lldiv@quotient
  2066  00F7  0823               	movf	___lldiv@divisor+3,w
  2067  00F8  0422               	iorwf	___lldiv@divisor+2,w
  2068  00F9  0421               	iorwf	___lldiv@divisor+1,w
  2069  00FA  0420               	iorwf	___lldiv@divisor,w
  2070  00FB  1903               	skipnz
  2071  00FC  28FE               	goto	u531
  2072  00FD  28FF               	goto	u530
  2073  00FE                     u531:
  2074  00FE  294C               	goto	l1603
  2075  00FF                     u530:
  2076  00FF                     l1585:
  2077  00FF  01AD               	clrf	___lldiv@counter
  2078  0100  0AAD               	incf	___lldiv@counter,f
  2079  0101  290F               	goto	l1589
  2080  0102                     l1587:
  2081  0102  3001               	movlw	1
  2082  0103  00A8               	movwf	??___lldiv
  2083  0104                     u545:
  2084  0104  1003               	clrc
  2085  0105  0DA0               	rlf	___lldiv@divisor,f
  2086  0106  0DA1               	rlf	___lldiv@divisor+1,f
  2087  0107  0DA2               	rlf	___lldiv@divisor+2,f
  2088  0108  0DA3               	rlf	___lldiv@divisor+3,f
  2089  0109  0BA8               	decfsz	??___lldiv,f
  2090  010A  2904               	goto	u545
  2091  010B  3001               	movlw	1
  2092  010C  00A8               	movwf	??___lldiv
  2093  010D  0828               	movf	??___lldiv,w
  2094  010E  07AD               	addwf	___lldiv@counter,f
  2095  010F                     l1589:
  2096  010F  1FA3               	btfss	___lldiv@divisor+3,7
  2097  0110  2912               	goto	u551
  2098  0111  2913               	goto	u550
  2099  0112                     u551:
  2100  0112  2902               	goto	l1587
  2101  0113                     u550:
  2102  0113                     l1591:
  2103  0113  3001               	movlw	1
  2104  0114  00A8               	movwf	??___lldiv
  2105  0115                     u565:
  2106  0115  1003               	clrc
  2107  0116  0DA9               	rlf	___lldiv@quotient,f
  2108  0117  0DAA               	rlf	___lldiv@quotient+1,f
  2109  0118  0DAB               	rlf	___lldiv@quotient+2,f
  2110  0119  0DAC               	rlf	___lldiv@quotient+3,f
  2111  011A  0BA8               	decfsz	??___lldiv,f
  2112  011B  2915               	goto	u565
  2113  011C                     l1593:
  2114  011C  0823               	movf	___lldiv@divisor+3,w
  2115  011D  0227               	subwf	___lldiv@dividend+3,w
  2116  011E  1D03               	skipz
  2117  011F  292A               	goto	u575
  2118  0120  0822               	movf	___lldiv@divisor+2,w
  2119  0121  0226               	subwf	___lldiv@dividend+2,w
  2120  0122  1D03               	skipz
  2121  0123  292A               	goto	u575
  2122  0124  0821               	movf	___lldiv@divisor+1,w
  2123  0125  0225               	subwf	___lldiv@dividend+1,w
  2124  0126  1D03               	skipz
  2125  0127  292A               	goto	u575
  2126  0128  0820               	movf	___lldiv@divisor,w
  2127  0129  0224               	subwf	___lldiv@dividend,w
  2128  012A                     u575:
  2129  012A  1C03               	skipc
  2130  012B  292D               	goto	u571
  2131  012C  292E               	goto	u570
  2132  012D                     u571:
  2133  012D  293D               	goto	l1599
  2134  012E                     u570:
  2135  012E                     l1595:
  2136  012E  0820               	movf	___lldiv@divisor,w
  2137  012F  02A4               	subwf	___lldiv@dividend,f
  2138  0130  0821               	movf	___lldiv@divisor+1,w
  2139  0131  1C03               	skipc
  2140  0132  0F21               	incfsz	___lldiv@divisor+1,w
  2141  0133  02A5               	subwf	___lldiv@dividend+1,f
  2142  0134  0822               	movf	___lldiv@divisor+2,w
  2143  0135  1C03               	skipc
  2144  0136  0F22               	incfsz	___lldiv@divisor+2,w
  2145  0137  02A6               	subwf	___lldiv@dividend+2,f
  2146  0138  0823               	movf	___lldiv@divisor+3,w
  2147  0139  1C03               	skipc
  2148  013A  0F23               	incfsz	___lldiv@divisor+3,w
  2149  013B  02A7               	subwf	___lldiv@dividend+3,f
  2150  013C                     l1597:
  2151  013C  1429               	bsf	___lldiv@quotient,0
  2152  013D                     l1599:
  2153  013D  3001               	movlw	1
  2154  013E                     u585:
  2155  013E  1003               	clrc
  2156  013F  0CA3               	rrf	___lldiv@divisor+3,f
  2157  0140  0CA2               	rrf	___lldiv@divisor+2,f
  2158  0141  0CA1               	rrf	___lldiv@divisor+1,f
  2159  0142  0CA0               	rrf	___lldiv@divisor,f
  2160  0143  3EFF               	addlw	-1
  2161  0144  1D03               	skipz
  2162  0145  293E               	goto	u585
  2163  0146                     l1601:
  2164  0146  3001               	movlw	1
  2165  0147  02AD               	subwf	___lldiv@counter,f
  2166  0148  1D03               	btfss	3,2
  2167  0149  294B               	goto	u591
  2168  014A  294C               	goto	u590
  2169  014B                     u591:
  2170  014B  2913               	goto	l1591
  2171  014C                     u590:
  2172  014C                     l1603:
  2173  014C  082C               	movf	___lldiv@quotient+3,w
  2174  014D  00A3               	movwf	?___lldiv+3
  2175  014E  082B               	movf	___lldiv@quotient+2,w
  2176  014F  00A2               	movwf	?___lldiv+2
  2177  0150  082A               	movf	___lldiv@quotient+1,w
  2178  0151  00A1               	movwf	?___lldiv+1
  2179  0152  0829               	movf	___lldiv@quotient,w
  2180  0153  00A0               	movwf	?___lldiv
  2181  0154                     l395:
  2182  0154  0008               	return
  2183  0155                     __end_of___lldiv:
  2184                           
  2185                           	psect	text13
  2186  0218                     __ptext13:	
  2187 ;; *************** function _CONVET *****************
  2188 ;; Defined at:
  2189 ;;		line 145 in file "MAIN_PRO.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0
  2205 ;;      Temps:          0       2       0       0       0
  2206 ;;      Totals:         0       2       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    2
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _CONVET
  2219  0218                     _CONVET:
  2220  0218                     l1695:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _CONVET: [wreg+status,2+status,0]
  2223                           
  2224                           
  2225                           ;MAIN_PRO.c: 146:     mou_t = ((mou & 0b00010000)>>4);
  2226  0218  0873               	movf	_mou,w
  2227  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2228  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2229  021B  00A0               	movwf	??_CONVET
  2230  021C  3004               	movlw	4
  2231  021D                     u625:
  2232  021D  1003               	clrc
  2233  021E  0CA0               	rrf	??_CONVET,f
  2234  021F  3EFF               	addlw	-1
  2235  0220  1D03               	skipz
  2236  0221  2A1D               	goto	u625
  2237  0222  0820               	movf	??_CONVET,w
  2238  0223  3901               	andlw	1
  2239  0224  00A1               	movwf	??_CONVET+1
  2240  0225  0821               	movf	??_CONVET+1,w
  2241  0226  00BB               	movwf	_mou_t
  2242  0227                     l1697:
  2243                           
  2244                           ;MAIN_PRO.c: 147:     mou_u = (mou & 0b00001111);
  2245  0227  0873               	movf	_mou,w
  2246  0228  390F               	andlw	15
  2247  0229  00A0               	movwf	??_CONVET
  2248  022A  0820               	movf	??_CONVET,w
  2249  022B  00C0               	movwf	_mou_u
  2250  022C                     l1699:
  2251                           
  2252                           ;MAIN_PRO.c: 148:     day_t = ((day & 0b00110000)>>4);
  2253  022C  0872               	movf	_day,w
  2254  022D  00A0               	movwf	??_CONVET
  2255  022E  3004               	movlw	4
  2256  022F                     u635:
  2257  022F  1003               	clrc
  2258  0230  0CA0               	rrf	??_CONVET,f
  2259  0231  3EFF               	addlw	-1
  2260  0232  1D03               	skipz
  2261  0233  2A2F               	goto	u635
  2262  0234  0820               	movf	??_CONVET,w
  2263  0235  3903               	andlw	3
  2264  0236  00A1               	movwf	??_CONVET+1
  2265  0237  0821               	movf	??_CONVET+1,w
  2266  0238  00BA               	movwf	_day_t
  2267                           
  2268                           ;MAIN_PRO.c: 149:     day_u = (day & 0b00001111);
  2269  0239  0872               	movf	_day,w
  2270  023A  390F               	andlw	15
  2271  023B  00A0               	movwf	??_CONVET
  2272  023C  0820               	movf	??_CONVET,w
  2273  023D  00BF               	movwf	_day_u
  2274  023E                     l1701:
  2275                           
  2276                           ;MAIN_PRO.c: 150:     hor_t = ((hor & 0b00110000)>>4);
  2277  023E  0871               	movf	_hor,w
  2278  023F  00A0               	movwf	??_CONVET
  2279  0240  3004               	movlw	4
  2280  0241                     u645:
  2281  0241  1003               	clrc
  2282  0242  0CA0               	rrf	??_CONVET,f
  2283  0243  3EFF               	addlw	-1
  2284  0244  1D03               	skipz
  2285  0245  2A41               	goto	u645
  2286  0246  0820               	movf	??_CONVET,w
  2287  0247  3903               	andlw	3
  2288  0248  00A1               	movwf	??_CONVET+1
  2289  0249  0821               	movf	??_CONVET+1,w
  2290  024A  00B9               	movwf	_hor_t
  2291  024B                     l1703:
  2292                           
  2293                           ;MAIN_PRO.c: 151:     hor_u = (hor & 0b00001111);
  2294  024B  0871               	movf	_hor,w
  2295  024C  390F               	andlw	15
  2296  024D  00A0               	movwf	??_CONVET
  2297  024E  0820               	movf	??_CONVET,w
  2298  024F  00BE               	movwf	_hor_u
  2299                           
  2300                           ;MAIN_PRO.c: 152:     min_t = ((min & 0b01110000)>>4);
  2301  0250  0870               	movf	_min,w
  2302  0251  00A0               	movwf	??_CONVET
  2303  0252  3004               	movlw	4
  2304  0253                     u655:
  2305  0253  1003               	clrc
  2306  0254  0CA0               	rrf	??_CONVET,f
  2307  0255  3EFF               	addlw	-1
  2308  0256  1D03               	skipz
  2309  0257  2A53               	goto	u655
  2310  0258  0820               	movf	??_CONVET,w
  2311  0259  3907               	andlw	7
  2312  025A  00A1               	movwf	??_CONVET+1
  2313  025B  0821               	movf	??_CONVET+1,w
  2314  025C  00B8               	movwf	_min_t
  2315  025D                     l1705:
  2316                           
  2317                           ;MAIN_PRO.c: 153:     min_u = (min & 0b00001111);
  2318  025D  0870               	movf	_min,w
  2319  025E  390F               	andlw	15
  2320  025F  00A0               	movwf	??_CONVET
  2321  0260  0820               	movf	??_CONVET,w
  2322  0261  00BD               	movwf	_min_u
  2323  0262                     l1707:
  2324                           
  2325                           ;MAIN_PRO.c: 154:     seg_t = ((seg & 0b01110000)>>4);
  2326  0262  0843               	movf	_seg,w
  2327  0263  00A0               	movwf	??_CONVET
  2328  0264  3004               	movlw	4
  2329  0265                     u665:
  2330  0265  1003               	clrc
  2331  0266  0CA0               	rrf	??_CONVET,f
  2332  0267  3EFF               	addlw	-1
  2333  0268  1D03               	skipz
  2334  0269  2A65               	goto	u665
  2335  026A  0820               	movf	??_CONVET,w
  2336  026B  3907               	andlw	7
  2337  026C  00A1               	movwf	??_CONVET+1
  2338  026D  0821               	movf	??_CONVET+1,w
  2339  026E  00B7               	movwf	_seg_t
  2340                           
  2341                           ;MAIN_PRO.c: 155:     seg_u = (seg & 0b00001111);
  2342  026F  0843               	movf	_seg,w
  2343  0270  390F               	andlw	15
  2344  0271  00A0               	movwf	??_CONVET
  2345  0272  0820               	movf	??_CONVET,w
  2346  0273  00BC               	movwf	_seg_u
  2347  0274                     l141:
  2348  0274  0008               	return
  2349  0275                     __end_of_CONVET:
  2350                           
  2351                           	psect	text14
  2352  0275                     __ptext14:	
  2353 ;; *************** function _isr *****************
  2354 ;; Defined at:
  2355 ;;		line 53 in file "MAIN_PRO.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0
  2371 ;;      Temps:          4       0       0       0       0
  2372 ;;      Totals:         4       0       0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    1
  2376 ;; This function calls:
  2377 ;;		_forced_send
  2378 ;;		_send_hora
  2379 ;; This function is called by:
  2380 ;;		Interrupt level 1
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _isr
  2386  0275                     _isr:
  2387  0275                     i1l1393:
  2388                           
  2389                           ;MAIN_PRO.c: 55:         if (PIR1bits.TXIF ==1){
  2390  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0277  1E0C               	btfss	12,4	;volatile
  2393  0278  2A7A               	goto	u43_21
  2394  0279  2A7B               	goto	u43_20
  2395  027A                     u43_21:
  2396  027A  2A86               	goto	i1l1401
  2397  027B                     u43_20:
  2398  027B                     i1l1395:
  2399                           
  2400                           ;MAIN_PRO.c: 56:             send_hora();
  2401  027B  120A  118A  2155  120A  118A  	fcall	_send_hora
  2402  0280                     i1l1397:
  2403                           
  2404                           ;MAIN_PRO.c: 57:             PIE1bits.TXIE = 0;
  2405  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2406  0281  1303               	bcf	3,6	;RP1=0, select bank1
  2407  0282  120C               	bcf	12,4	;volatile
  2408  0283                     i1l1399:
  2409                           
  2410                           ;MAIN_PRO.c: 58:             PIR1bits.TXIF =0;}
  2411  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0285  120C               	bcf	12,4	;volatile
  2414  0286                     i1l1401:
  2415                           
  2416                           ;MAIN_PRO.c: 64:     if (PIR1bits.RCIF==1){
  2417  0286  1E8C               	btfss	12,5	;volatile
  2418  0287  2A89               	goto	u44_21
  2419  0288  2A8A               	goto	u44_20
  2420  0289                     u44_21:
  2421  0289  2A96               	goto	i1l1409
  2422  028A                     u44_20:
  2423  028A                     i1l1403:
  2424                           
  2425                           ;MAIN_PRO.c: 65:         temp= RCREG ;
  2426  028A  081A               	movf	26,w	;volatile
  2427  028B  00F8               	movwf	??_isr
  2428  028C  0878               	movf	??_isr,w
  2429  028D  00C4               	movwf	_temp
  2430  028E                     i1l1405:
  2431                           
  2432                           ;MAIN_PRO.c: 66:         forced_send();
  2433  028E  120A  118A  2367  120A  118A  	fcall	_forced_send
  2434  0293                     i1l1407:
  2435                           
  2436                           ;MAIN_PRO.c: 67:         PIR1bits.RCIF=1;
  2437  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0295  168C               	bsf	12,5	;volatile
  2440  0296                     i1l1409:
  2441                           
  2442                           ;MAIN_PRO.c: 69:     if (INTCONbits.TMR0IF==1){
  2443  0296  1D0B               	btfss	11,2	;volatile
  2444  0297  2A99               	goto	u45_21
  2445  0298  2A9A               	goto	u45_20
  2446  0299                     u45_21:
  2447  0299  2AAB               	goto	i1l127
  2448  029A                     u45_20:
  2449  029A                     i1l1411:
  2450                           
  2451                           ;MAIN_PRO.c: 70:         TMR0=236;
  2452  029A  30EC               	movlw	236
  2453  029B  0081               	movwf	1	;volatile
  2454  029C                     i1l1413:
  2455                           
  2456                           ;MAIN_PRO.c: 71:         INTCONbits.TMR0IF=0;
  2457  029C  110B               	bcf	11,2	;volatile
  2458  029D                     i1l1415:
  2459                           
  2460                           ;MAIN_PRO.c: 72:         r++;
  2461  029D  3001               	movlw	1
  2462  029E  00F8               	movwf	??_isr
  2463  029F  0878               	movf	??_isr,w
  2464  02A0  07C7               	addwf	_r,f
  2465  02A1                     i1l1417:
  2466                           
  2467                           ;MAIN_PRO.c: 73:         if(r==10){
  2468  02A1  300A               	movlw	10
  2469  02A2  0647               	xorwf	_r,w
  2470  02A3  1D03               	btfss	3,2
  2471  02A4  2AA6               	goto	u46_21
  2472  02A5  2AA7               	goto	u46_20
  2473  02A6                     u46_21:
  2474  02A6  2AAB               	goto	i1l127
  2475  02A7                     u46_20:
  2476  02A7                     i1l1419:
  2477                           
  2478                           ;MAIN_PRO.c: 74:             r=0;
  2479  02A7  01C7               	clrf	_r
  2480  02A8                     i1l1421:
  2481                           
  2482                           ;MAIN_PRO.c: 75:             PIE1bits.TXIE = 1;}
  2483  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2484  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2485  02AA  160C               	bsf	12,4	;volatile
  2486  02AB                     i1l127:
  2487  02AB  087B               	movf	??_isr+3,w
  2488  02AC  008A               	movwf	10
  2489  02AD  087A               	movf	??_isr+2,w
  2490  02AE  0084               	movwf	4
  2491  02AF  0E79               	swapf	??_isr+1,w
  2492  02B0  0083               	movwf	3
  2493  02B1  0EFE               	swapf	btemp,f
  2494  02B2  0E7E               	swapf	btemp,w
  2495  02B3  0009               	retfie
  2496  02B4                     __end_of_isr:
  2497                           
  2498                           	psect	intentry
  2499  0004                     __pintentry:	
  2500                           ;incstack = 0
  2501                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2502                           
  2503  0004                     interrupt_function:
  2504  007E                     saved_w	set	btemp
  2505  0004  00FE               	movwf	btemp
  2506  0005  0E03               	swapf	3,w
  2507  0006  00F9               	movwf	??_isr+1
  2508  0007  0804               	movf	4,w
  2509  0008  00FA               	movwf	??_isr+2
  2510  0009  080A               	movf	10,w
  2511  000A  00FB               	movwf	??_isr+3
  2512  000B  120A  118A  2A75   	ljmp	_isr
  2513                           
  2514                           	psect	text15
  2515  0155                     __ptext15:	
  2516 ;; *************** function _send_hora *****************
  2517 ;; Defined at:
  2518 ;;		line 196 in file "MAIN_PRO.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          2       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_isr
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _send_hora
  2547  0155                     _send_hora:
  2548  0155                     i1l1251:	
  2549                           ;incstack = 0
  2550                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0]
  2551                           
  2552                           
  2553                           ;MAIN_PRO.c: 197:     switch (z){
  2554  0155  2992               	goto	i1l1281
  2555  0156                     i1l1253:
  2556                           
  2557                           ;MAIN_PRO.c: 199:             TXREG = (hor_t+0x30);
  2558  0156  0839               	movf	_hor_t,w
  2559  0157  3E30               	addlw	48
  2560  0158  0099               	movwf	25	;volatile
  2561                           
  2562                           ;MAIN_PRO.c: 200:             z++;
  2563  0159  3001               	movlw	1
  2564  015A  00F6               	movwf	??_send_hora
  2565  015B  0876               	movf	??_send_hora,w
  2566  015C  07C8               	addwf	_z,f
  2567                           
  2568                           ;MAIN_PRO.c: 201:             break;
  2569  015D  29B9               	goto	i1l173
  2570  015E                     i1l1255:
  2571                           
  2572                           ;MAIN_PRO.c: 203:             TXREG = (hor_u+0x30);
  2573  015E  083E               	movf	_hor_u,w
  2574  015F  3E30               	addlw	48
  2575  0160  0099               	movwf	25	;volatile
  2576                           
  2577                           ;MAIN_PRO.c: 204:             z++;
  2578  0161  3001               	movlw	1
  2579  0162  00F6               	movwf	??_send_hora
  2580  0163  0876               	movf	??_send_hora,w
  2581  0164  07C8               	addwf	_z,f
  2582                           
  2583                           ;MAIN_PRO.c: 205:             break;
  2584  0165  29B9               	goto	i1l173
  2585  0166                     i1l1257:
  2586                           
  2587                           ;MAIN_PRO.c: 207:             TXREG = (0x3A);
  2588  0166  303A               	movlw	58
  2589  0167  0099               	movwf	25	;volatile
  2590  0168                     i1l1259:
  2591                           
  2592                           ;MAIN_PRO.c: 208:             z++;
  2593  0168  3001               	movlw	1
  2594  0169  00F6               	movwf	??_send_hora
  2595  016A  0876               	movf	??_send_hora,w
  2596  016B  07C8               	addwf	_z,f
  2597                           
  2598                           ;MAIN_PRO.c: 209:             break;
  2599  016C  29B9               	goto	i1l173
  2600  016D                     i1l1261:
  2601                           
  2602                           ;MAIN_PRO.c: 211:              TXREG = (min_t+0x30);
  2603  016D  0838               	movf	_min_t,w
  2604  016E  3E30               	addlw	48
  2605  016F  0099               	movwf	25	;volatile
  2606                           
  2607                           ;MAIN_PRO.c: 212:              z++;
  2608  0170  3001               	movlw	1
  2609  0171  00F6               	movwf	??_send_hora
  2610  0172  0876               	movf	??_send_hora,w
  2611  0173  07C8               	addwf	_z,f
  2612                           
  2613                           ;MAIN_PRO.c: 213:             break;
  2614  0174  29B9               	goto	i1l173
  2615  0175                     i1l1263:
  2616                           
  2617                           ;MAIN_PRO.c: 215:              TXREG = (min_u +0x30);
  2618  0175  083D               	movf	_min_u,w
  2619  0176  3E30               	addlw	48
  2620  0177  0099               	movwf	25	;volatile
  2621                           
  2622                           ;MAIN_PRO.c: 216:             z++;
  2623  0178  3001               	movlw	1
  2624  0179  00F6               	movwf	??_send_hora
  2625  017A  0876               	movf	??_send_hora,w
  2626  017B  07C8               	addwf	_z,f
  2627                           
  2628                           ;MAIN_PRO.c: 217:             break;
  2629  017C  29B9               	goto	i1l173
  2630  017D                     i1l1269:
  2631                           
  2632                           ;MAIN_PRO.c: 223:               TXREG = (seg_t+0x30);
  2633  017D  0837               	movf	_seg_t,w
  2634  017E  3E30               	addlw	48
  2635  017F  0099               	movwf	25	;volatile
  2636                           
  2637                           ;MAIN_PRO.c: 224:              z++;
  2638  0180  3001               	movlw	1
  2639  0181  00F6               	movwf	??_send_hora
  2640  0182  0876               	movf	??_send_hora,w
  2641  0183  07C8               	addwf	_z,f
  2642                           
  2643                           ;MAIN_PRO.c: 225:             break;
  2644  0184  29B9               	goto	i1l173
  2645  0185                     i1l1271:
  2646                           
  2647                           ;MAIN_PRO.c: 227:               TXREG = (seg_u+0x30);
  2648  0185  083C               	movf	_seg_u,w
  2649  0186  3E30               	addlw	48
  2650  0187  0099               	movwf	25	;volatile
  2651                           
  2652                           ;MAIN_PRO.c: 228:              z++;
  2653  0188  3001               	movlw	1
  2654  0189  00F6               	movwf	??_send_hora
  2655  018A  0876               	movf	??_send_hora,w
  2656  018B  07C8               	addwf	_z,f
  2657                           
  2658                           ;MAIN_PRO.c: 229:             break;
  2659  018C  29B9               	goto	i1l173
  2660  018D                     i1l1273:
  2661                           
  2662                           ;MAIN_PRO.c: 231:              TXREG = (0x0A);
  2663  018D  300A               	movlw	10
  2664  018E  0099               	movwf	25	;volatile
  2665  018F                     i1l1275:
  2666                           
  2667                           ;MAIN_PRO.c: 232:              z=0;
  2668  018F  01C8               	clrf	_z
  2669  0190                     i1l1277:
  2670                           
  2671                           ;MAIN_PRO.c: 233:              C=0;
  2672  0190  01C6               	clrf	_C
  2673                           
  2674                           ;MAIN_PRO.c: 234:             break;
  2675  0191  29B9               	goto	i1l173
  2676  0192                     i1l1281:
  2677  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0194  0848               	movf	_z,w
  2680  0195  00F6               	movwf	??_send_hora
  2681  0196  01F7               	clrf	??_send_hora+1
  2682                           
  2683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2684                           ; Switch size 1, requested type "simple"
  2685                           ; Number of cases is 1, Range of values is 0 to 0
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte            4     3 (average)
  2689                           ; direct_byte           11     8 (fixed)
  2690                           ; jumptable            260     6 (fixed)
  2691                           ;	Chosen strategy is simple_byte
  2692  0197  0877               	movf	??_send_hora+1,w
  2693  0198  3A00               	xorlw	0	; case 0
  2694  0199  1903               	skipnz
  2695  019A  299C               	goto	i1l1803
  2696  019B  29B9               	goto	i1l173
  2697  019C                     i1l1803:
  2698                           
  2699                           ; Switch size 1, requested type "simple"
  2700                           ; Number of cases is 9, Range of values is 0 to 8
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte           28    15 (average)
  2704                           ; direct_byte           35     8 (fixed)
  2705                           ; jumptable            260     6 (fixed)
  2706                           ;	Chosen strategy is simple_byte
  2707  019C  0876               	movf	??_send_hora,w
  2708  019D  3A00               	xorlw	0	; case 0
  2709  019E  1903               	skipnz
  2710  019F  2956               	goto	i1l1253
  2711  01A0  3A01               	xorlw	1	; case 1
  2712  01A1  1903               	skipnz
  2713  01A2  295E               	goto	i1l1255
  2714  01A3  3A03               	xorlw	3	; case 2
  2715  01A4  1903               	skipnz
  2716  01A5  2966               	goto	i1l1257
  2717  01A6  3A01               	xorlw	1	; case 3
  2718  01A7  1903               	skipnz
  2719  01A8  296D               	goto	i1l1261
  2720  01A9  3A07               	xorlw	7	; case 4
  2721  01AA  1903               	skipnz
  2722  01AB  2975               	goto	i1l1263
  2723  01AC  3A01               	xorlw	1	; case 5
  2724  01AD  1903               	skipnz
  2725  01AE  2966               	goto	i1l1257
  2726  01AF  3A03               	xorlw	3	; case 6
  2727  01B0  1903               	skipnz
  2728  01B1  297D               	goto	i1l1269
  2729  01B2  3A01               	xorlw	1	; case 7
  2730  01B3  1903               	skipnz
  2731  01B4  2985               	goto	i1l1271
  2732  01B5  3A0F               	xorlw	15	; case 8
  2733  01B6  1903               	skipnz
  2734  01B7  298D               	goto	i1l1273
  2735  01B8  29B9               	goto	i1l173
  2736  01B9                     i1l173:
  2737  01B9  0008               	return
  2738  01BA                     __end_of_send_hora:
  2739                           
  2740                           	psect	text16
  2741  0367                     __ptext16:	
  2742 ;; *************** function _forced_send *****************
  2743 ;; Defined at:
  2744 ;;		line 188 in file "MAIN_PRO.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_isr
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _forced_send
  2773  0367                     _forced_send:
  2774  0367                     i1l1287:	
  2775                           ;incstack = 0
  2776                           ; Regs used in _forced_send: [wreg+status,2+status,0]
  2777                           
  2778                           
  2779                           ;MAIN_PRO.c: 189:     if (temp == 1){C=1;
  2780  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0369  0344               	decf	_temp,w
  2783  036A  1D03               	btfss	3,2
  2784  036B  2B6D               	goto	u35_21
  2785  036C  2B6E               	goto	u35_20
  2786  036D                     u35_21:
  2787  036D  2B71               	goto	i1l159
  2788  036E                     u35_20:
  2789  036E                     i1l1289:
  2790  036E  01C6               	clrf	_C
  2791  036F  0AC6               	incf	_C,f
  2792                           
  2793                           ;MAIN_PRO.c: 190:     PORTAbits.RA0=0;
  2794  0370  1005               	bcf	5,0	;volatile
  2795  0371                     i1l159:
  2796  0371  0008               	return
  2797  0372                     __end_of_forced_send:
  2798  007E                     btemp	set	126	;btemp
  2799  007E                     wtemp0	set	126
  2800                           
  2801                           	psect	config
  2802                           
  2803                           ;Config register CONFIG1 @ 0x2007
  2804                           ;	Oscillator Selection bits
  2805                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2806                           ;	Watchdog Timer Enable bit
  2807                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2808                           ;	Power-up Timer Enable bit
  2809                           ;	PWRTE = OFF, PWRT disabled
  2810                           ;	RE3/MCLR pin function select bit
  2811                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2812                           ;	Code Protection bit
  2813                           ;	CP = OFF, Program memory code protection is disabled
  2814                           ;	Data Code Protection bit
  2815                           ;	CPD = OFF, Data memory code protection is disabled
  2816                           ;	Brown Out Reset Selection bits
  2817                           ;	BOREN = OFF, BOR disabled
  2818                           ;	Internal External Switchover bit
  2819                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2820                           ;	Fail-Safe Clock Monitor Enabled bit
  2821                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2822                           ;	Low Voltage Programming Enable bit
  2823                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2824                           ;	In-Circuit Debugger Mode bit
  2825                           ;	DEBUG = 0x1, unprogrammed default
  2826  2007                     	org	8199
  2827  2007  20D4               	dw	8404
  2828                           
  2829                           ;Config register CONFIG2 @ 0x2008
  2830                           ;	Brown-out Reset Selection bit
  2831                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2832                           ;	Flash Program Memory Self Write Enable bits
  2833                           ;	WRT = OFF, Write protection off
  2834  2008                     	org	8200
  2835  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     23      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_send_hora

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2379
                                             22 BANK0      1     1      0
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _SET_RXT
                            _SET_TXR
                              _Setup
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                        _forced_send
                          _send_hora
 ---------------------------------------------------------------------------------
 (4) _send_hora                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forced_send                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _SET_RXT
   _SET_TXR
   _Setup
   _initOsc

 _isr (ROOT)
   _forced_send
   _send_hora

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      37       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      37      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 01:22:13 2021

                                _C 0046                                  _L 004A  
                                _Z 0049                                  _q 0045  
                                _r 0047                                  _z 0048  
                               fsr 0004                                l202 0366  
                              l210 01C4                                l211 01CA  
                              l212 01D0                                l141 0274  
                              l213 01D6                                l214 01DC  
                              l215 01E2                                l216 01E8  
                              l208 01BE                                l217 01EE  
                              l209 0216                                l250 034F  
                              l138 033F                                l218 0217  
                              l253 035B                                l270 031F  
                              l262 0384                                l247 02ED  
                              l256 038D                                l265 037B  
                              l259 0396                                l268 0315  
                              l269 0318                                l199 034E  
                              l395 0154                                _GIE 005F  
                              _GET 0075                                u510 0355  
                              u511 0354                                u600 02CB  
                              u520 035B                                u521 035A  
                              u530 00FF                                u610 0311  
                              u531 00FE                                u611 0310  
                              u605 02C6                                u550 0113  
                              u551 0112                                u625 021D  
                              u545 0104                                u570 012E  
                              u635 022F                                u571 012D  
                              u645 0241                                u565 0115  
                              u590 014C                                u655 0253  
                              u591 014B                                u575 012A  
                              u665 0265                                u585 013E  
                              _day 0072                                _hor 0071  
                              _min 0070                                _isr 0275  
                              _seg 0043                                _mou 0073  
                              fsr0 0004                                indf 0000  
                             l1601 0146                               l1603 014C  
                             l1611 0333                               l1701 023E  
                             l1621 033A                               l1613 0334  
                             l1703 024B                               l1623 033B  
                             l1615 0335                               l1607 0320  
                             l1631 01BD                               l1711 0029  
                             l1705 025D                               l1625 033C  
                             l1617 0336                               l1609 0332  
                             l1801 01FC                               l1721 004B  
                             l1713 002F                               l1707 0262  
                             l1651 02B4                               l1643 035C  
                             l1627 033D                               l1619 0339  
                             l1635 01F4                               l1731 0075  
                             l1723 0050                               l1715 0034  
                             l1661 02EC                               l1653 02B8  
                             l1581 0355                               l1645 0340  
                             l1629 033E                               l1741 00C2  
                             l1733 0086                               l1725 005B  
                             l1717 0039                               l1709 0024  
                             l1591 0113                               l1583 00ED  
                             l1655 02BB                               l1671 038E  
                             l1663 0385                               l1647 0349  
                             l1743 00D1                               l1735 0095  
                             l1727 0065                               l1719 0048  
                             l1593 011C                               l1585 00FF  
                             l1657 02EA                               l1681 0304  
                             l1673 0393                               l1665 038A  
                             l1649 034D                               l1745 00DF  
                             l1737 00A4                               l1729 006A  
                             l1595 012E                               l1587 0102  
                             l1659 02EB                               l1579 034F  
                             l1683 0309                               l1675 02EE  
                             l1691 037C                               l1667 0372  
                             l1747 00E4                               l1739 00B3  
                             l1597 013C                               l1589 010F  
                             l1685 0311                               l1677 02F3  
                             l1693 0381                               l1669 0377  
                             l1695 0218                               l1599 013D  
                             l1687 0319                               l1679 02FB  
                             l1697 0227                               l1699 022C  
                             ?_isr 0076                               _GET2 0074  
                             _PEIE 005E                               _TMR0 0001  
                  __end_of_SET_RXT 0367                    __end_of_SET_TXR 034F  
 __end_of_I2C_Master_RepeatedStart 0397                               _main 0024  
                     ?_forced_send 0076                               _temp 0044  
                             _week 0042                               _year 0041  
                             btemp 007E                               start 000E  
                            ??_isr 0078                   ?_I2C_Master_Init 002E  
                 ?_I2C_Master_Read 0020                   ?_I2C_Master_Wait 0076  
                 ?_I2C_Master_Stop 0076                              ?_main 0076  
                            _ANSEL 0188                    __end_of___lldiv 0155  
                            i1l127 02AB                              i1l173 01B9  
                            i1l159 0371                              _RCREG 001A  
                            _SPBRG 0099                              u35_20 036E  
                            u43_20 027B                              u35_21 036D  
                            u43_21 027A                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u44_20 028A                              u44_21 0289  
                            u45_20 029A                              u45_21 0299  
                            u46_20 02A7                              u46_21 02A6  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _Setup 0320                              _day_t 003A  
                            _day_u 003F                    __end_of_initOsc 0218  
                            _hor_t 0039                              _hor_u 003E  
                            _min_t 0038                              _min_u 003D  
                            _seg_t 0037                              _seg_u 003C  
                            _mou_t 003B                              _mou_u 0040  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 0011  
                     __end_of_main 00ED                             ??_main 0036  
                ?_I2C_Master_Start 0076                  ?_I2C_Master_Write 0020  
                           ?_Setup 0076                 ??_I2C_Master_Start 0020  
                        ??_SET_RXT 0020                          ??_SET_TXR 0020  
               ??_I2C_Master_Write 0022                        initOsc@IRCF 0022  
                           _ANSELH 0189                             _CONVET 0218  
                           i1l1401 0286                             i1l1251 0155  
                           i1l1411 029A                             i1l1403 028A  
                           i1l1261 016D                             i1l1253 0156  
                           i1l1421 02A8                             i1l1413 029C  
                           i1l1405 028E                             i1l1271 0185  
                           i1l1263 0175                             i1l1255 015E  
                           i1l1415 029D                             i1l1407 0293  
                           i1l1273 018D                             i1l1257 0166  
                           i1l1281 0192                             i1l1417 02A1  
                           i1l1409 0296                             i1l1275 018F  
                           i1l1259 0168                             i1l1419 02A7  
                           i1l1277 0190                             i1l1269 017D  
                           i1l1287 0367                             i1l1289 036E  
                           i1l1393 0275                             i1l1803 019C  
                           i1l1395 027B                             i1l1397 0280  
                           i1l1399 0283                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 038E  
                        ??___lldiv 0028                          ??_initOsc 0020  
                           saved_w 007E            __end_of__initialization 0020  
             __size_of_forced_send 000B                     __pcstackCOMMON 0076  
                    __end_of_Setup 0340                     _OPTION_REGbits 0081  
                          ??_Setup 0020                            ?_CONVET 0076  
                       __pbssBANK0 0037                         __pmaintext 0024  
                       __pintentry 0004                 __size_of_send_hora 0065  
                          _SET_RXT 035C                            _SET_TXR 0340  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                  __size_of_CONVET 005D                            ___lldiv 00ED  
                          __ptext1 01BA                            __ptext2 0320  
                          __ptext3 0340                            __ptext4 035C  
                          __ptext5 0372                            __ptext6 037C  
                          __ptext7 0385                            __ptext8 038E  
                          __ptext9 02EE                            _initOsc 01BA  
                     __size_of_isr 003F           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0032           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 0398  
             end_of_initialization 0020         ??_I2C_Master_RepeatedStart 0020  
                __end_of_send_hora 01BA          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0020  
                  ___lldiv@counter 002D                          _RCSTAbits 0018  
                 I2C_Master_Init@c 002E                   I2C_Master_Read@a 0020  
                        _PORTAbits 0005                          _TRISCbits 0087  
                   __end_of_CONVET 0275                          _TXSTAbits 0098  
                      _BAUDCTLbits 0187                start_initialization 0011  
                      __end_of_isr 02B4                           ??_CONVET 0020  
                ??_I2C_Master_Init 0032                  ??_I2C_Master_Read 0022  
                ??_I2C_Master_Wait 0020                      ??_forced_send 0076  
                ??_I2C_Master_Stop 0020                        __pbssCOMMON 0070  
                        ___latbits 0002                      __pcstackBANK0 0020  
                         ?_SET_RXT 0076                           ?_SET_TXR 0076  
                 _I2C_Master_Start 0385                   _I2C_Master_Write 0372  
              __end_of_forced_send 0372                           ?___lldiv 0020  
                         ?_initOsc 0076                     __size_of_Setup 0020  
                interrupt_function 0004                          clear_ram0 0397  
                         _PIE1bits 008C                          _send_hora 0155  
                         _PIR1bits 000C                I2C_Master_Read@temp 0024  
                 __size_of_SET_RXT 000B                   __size_of_SET_TXR 000F  
                      _forced_send 0367                         ?_send_hora 0076  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0076  
                 __size_of___lldiv 0068                    _I2C_Master_Init 02B4  
                  _I2C_Master_Read 02EE                    _I2C_Master_Wait 034F  
                  _I2C_Master_Stop 037C                   __size_of_initOsc 005E  
                         __ptext10 034F                           __ptext11 02B4  
                         __ptext12 00ED                           __ptext13 0218  
                         __ptext14 0275                           __ptext15 0155  
                         __ptext16 0367                      __size_of_main 00C9  
         __end_of_I2C_Master_Start 038E           __end_of_I2C_Master_Write 037C  
                       _INTCONbits 000B                           intlevel1 0000  
                 ___lldiv@dividend 0024                        ??_send_hora 0076  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 02EE  
          __end_of_I2C_Master_Read 0320            __end_of_I2C_Master_Wait 035C  
          __end_of_I2C_Master_Stop 0385                   ___lldiv@quotient 0029  
                I2C_Master_Write@d 0020                        _SSPCON2bits 0091  
