

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 01:35:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0018                     _RCSTAbits	set	24
   460  0019                     _TXREG	set	25
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0007                     _PORTC	set	7
   464  0006                     _PORTB	set	6
   465  0005                     _PORTA	set	5
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0005                     _PORTAbits	set	5
   469  001A                     _RCREG	set	26
   470  000C                     _PIR1bits	set	12
   471  0063                     _SSPIF	set	99
   472  005E                     _PEIE	set	94
   473  005F                     _GIE	set	95
   474  0091                     _SSPCON2bits	set	145
   475  0087                     _TRISCbits	set	135
   476  0094                     _SSPSTAT	set	148
   477  0093                     _SSPADD	set	147
   478  0091                     _SSPCON2	set	145
   479  008F                     _OSCCONbits	set	143
   480  009A                     _SPBRGH	set	154
   481  0099                     _SPBRG	set	153
   482  0098                     _TXSTAbits	set	152
   483  0081                     _OPTION_REGbits	set	129
   484  008C                     _PIE1bits	set	140
   485  0089                     _TRISE	set	137
   486  0088                     _TRISD	set	136
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	cinit
   498  000F                     start_initialization:	
   499                           ; #config settings
   500                           
   501  000F                     __initialization:
   502                           
   503                           ; Clear objects allocated to COMMON
   504  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   505  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   506  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  0012  1383               	bcf	3,7	;select IRP bank0
   510  0013  3020               	movlw	low __pbssBANK0
   511  0014  0084               	movwf	4
   512  0015  303C               	movlw	low (__pbssBANK0+28)
   513  0016  120A  118A  2420  120A  118A  	fcall	clear_ram0
   514  001B                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  001B                     __end_of__initialization:
   518  001B  0183               	clrf	3
   519  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0078                     __pbssCOMMON:
   523  0078                     _day:
   524  0078                     	ds	1
   525  0079                     _mou:
   526  0079                     	ds	1
   527  007A                     _temp:
   528  007A                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0020                     __pbssBANK0:
   532  0020                     _H:
   533  0020                     	ds	2
   534  0022                     _seg_t:
   535  0022                     	ds	1
   536  0023                     _min_t:
   537  0023                     	ds	1
   538  0024                     _hor_t:
   539  0024                     	ds	1
   540  0025                     _day_t:
   541  0025                     	ds	1
   542  0026                     _mou_t:
   543  0026                     	ds	1
   544  0027                     _seg_u:
   545  0027                     	ds	1
   546  0028                     _min_u:
   547  0028                     	ds	1
   548  0029                     _hor_u:
   549  0029                     	ds	1
   550  002A                     _day_u:
   551  002A                     	ds	1
   552  002B                     _mou_u:
   553  002B                     	ds	1
   554  002C                     _year:
   555  002C                     	ds	1
   556  002D                     _week:
   557  002D                     	ds	1
   558  002E                     _seg:
   559  002E                     	ds	1
   560  002F                     _min:
   561  002F                     	ds	1
   562  0030                     _hor:
   563  0030                     	ds	1
   564  0031                     _M:
   565  0031                     	ds	1
   566  0032                     _s:
   567  0032                     	ds	1
   568  0033                     _m:
   569  0033                     	ds	1
   570  0034                     _h:
   571  0034                     	ds	1
   572  0035                     _q:
   573  0035                     	ds	1
   574  0036                     _C:
   575  0036                     	ds	1
   576  0037                     _r:
   577  0037                     	ds	1
   578  0038                     _z:
   579  0038                     	ds	1
   580  0039                     _Z:
   581  0039                     	ds	1
   582  003A                     _b:
   583  003A                     	ds	1
   584  003B                     _L:
   585  003B                     	ds	1
   586                           
   587                           	psect	clrtext
   588  0420                     clear_ram0:	
   589                           ;	Called with FSR containing the base address, and
   590                           ;	W with the last address+1
   591                           
   592  0420  0064               	clrwdt	;clear the watchdog before getting into this loop
   593  0421                     clrloop0:
   594  0421  0180               	clrf	0	;clear RAM location pointed to by FSR
   595  0422  0A84               	incf	4,f	;increment pointer
   596  0423  0604               	xorwf	4,w	;XOR with final address
   597  0424  1903               	btfsc	3,2	;have we reached the end yet?
   598  0425  3400               	retlw	0	;all done for this memory range, return
   599  0426  0604               	xorwf	4,w	;XOR again to restore value
   600  0427  2C21               	goto	clrloop0	;do the next byte
   601                           
   602                           	psect	cstackCOMMON
   603  0070                     __pcstackCOMMON:
   604  0070                     ?_Setup:
   605  0070                     ?_I2C_Master_Start:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_I2C_Master_RepeatedStart:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_I2C_Master_Stop:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_CONVET:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_forced_send:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_initOsc:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_SET_RXT:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_SET_TXR:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_send_seg:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_send_min:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_send_hora:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_isr:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_isr:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650                           
   651                           ; 1 bytes @ 0x0
   652  0070                     	ds	3
   653  0073                     ??_I2C_Master_Start:
   654  0073                     ?_I2C_Master_Write:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ??_I2C_Master_RepeatedStart:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_I2C_Master_Stop:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_CONVET:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_initOsc:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??_SET_RXT:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ??_SET_TXR:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ??_send_seg:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ??_send_min:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ??_send_hora:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ??_I2C_Master_Wait:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     ??___lldiv:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ?_I2C_Master_Read:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     I2C_Master_Write@d:	
   694                           ; 2 bytes @ 0x3
   695                           
   696  0073                     I2C_Master_Read@a:	
   697                           ; 2 bytes @ 0x3
   698                           
   699                           
   700                           ; 2 bytes @ 0x3
   701  0073                     	ds	1
   702  0074                     ??_I2C_Master_Init:
   703                           
   704                           ; 1 bytes @ 0x4
   705  0074                     	ds	1
   706  0075                     ??_I2C_Master_Write:
   707  0075                     ??_I2C_Master_Read:	
   708                           ; 1 bytes @ 0x5
   709                           
   710  0075                     ??_forced_send:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     initOsc@IRCF:	
   714                           ; 1 bytes @ 0x5
   715                           
   716                           
   717                           ; 1 bytes @ 0x5
   718  0075                     	ds	1
   719  0076                     ??_Setup:
   720                           
   721                           ; 1 bytes @ 0x6
   722  0076                     	ds	2
   723                           
   724                           	psect	cstackBANK0
   725  003C                     __pcstackBANK0:
   726  003C                     ?___lldiv:
   727  003C                     I2C_Master_Read@temp:	
   728                           ; 4 bytes @ 0x0
   729                           
   730  003C                     ___lldiv@divisor:	
   731                           ; 2 bytes @ 0x0
   732                           
   733                           
   734                           ; 4 bytes @ 0x0
   735  003C                     	ds	4
   736  0040                     ___lldiv@dividend:
   737                           
   738                           ; 4 bytes @ 0x4
   739  0040                     	ds	4
   740  0044                     ___lldiv@quotient:
   741                           
   742                           ; 4 bytes @ 0x8
   743  0044                     	ds	4
   744  0048                     ___lldiv@counter:
   745                           
   746                           ; 1 bytes @ 0xC
   747  0048                     	ds	1
   748  0049                     ?_I2C_Master_Init:
   749  0049                     I2C_Master_Init@c:	
   750                           ; 1 bytes @ 0xD
   751                           
   752                           
   753                           ; 4 bytes @ 0xD
   754  0049                     	ds	4
   755  004D                     ??_main:
   756                           
   757                           ; 1 bytes @ 0x11
   758  004D                     	ds	1
   759                           
   760                           	psect	maintext
   761  001F                     __pmaintext:	
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 82 in file "MAIN_PRO.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : B00/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       1       0       0       0
   784 ;;      Totals:         0       1       0       0       0
   785 ;;Total ram usage:        1 bytes
   786 ;; Hardware stack levels required when called:    3
   787 ;; This function calls:
   788 ;;		_CONVET
   789 ;;		_I2C_Master_Init
   790 ;;		_I2C_Master_Read
   791 ;;		_I2C_Master_RepeatedStart
   792 ;;		_I2C_Master_Start
   793 ;;		_I2C_Master_Stop
   794 ;;		_I2C_Master_Write
   795 ;;		_Setup
   796 ;;		_forced_send
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _main
   804  001F                     _main:
   805  001F                     l1874:	
   806                           ;incstack = 0
   807                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   808                           
   809                           
   810                           ;MAIN_PRO.c: 83:     Setup();
   811  001F  120A  118A  2374  120A  118A  	fcall	_Setup
   812  0024                     l1876:
   813                           
   814                           ;MAIN_PRO.c: 84:     PORTAbits.RA0=1;
   815  0024  1283               	bcf	3,5	;RP0=0, select bank0
   816  0025  1303               	bcf	3,6	;RP1=0, select bank0
   817  0026  1405               	bsf	5,0	;volatile
   818  0027                     l1878:
   819                           
   820                           ;MAIN_PRO.c: 85:     PORTAbits.RA1=1;
   821  0027  1485               	bsf	5,1	;volatile
   822  0028                     l1880:
   823                           
   824                           ;MAIN_PRO.c: 86:     PORTAbits.RA0=0;
   825  0028  1005               	bcf	5,0	;volatile
   826  0029                     l1882:
   827                           
   828                           ;MAIN_PRO.c: 87:     PORTAbits.RA1=0;
   829  0029  1085               	bcf	5,1	;volatile
   830  002A                     l1884:
   831                           
   832                           ;MAIN_PRO.c: 88:     I2C_Master_Init(100000);
   833  002A  3000               	movlw	0
   834  002B  00CC               	movwf	I2C_Master_Init@c+3
   835  002C  3001               	movlw	1
   836  002D  00CB               	movwf	I2C_Master_Init@c+2
   837  002E  3086               	movlw	134
   838  002F  00CA               	movwf	I2C_Master_Init@c+1
   839  0030  30A0               	movlw	160
   840  0031  00C9               	movwf	I2C_Master_Init@c
   841  0032  120A  118A  2301  120A  118A  	fcall	_I2C_Master_Init
   842  0037                     l1886:
   843                           
   844                           ;MAIN_PRO.c: 94:         I2C_Master_Start();
   845  0037  120A  118A  240E  120A  118A  	fcall	_I2C_Master_Start
   846  003C                     l1888:
   847                           
   848                           ;MAIN_PRO.c: 95:         I2C_Master_Write(0xD0);
   849  003C  30D0               	movlw	208
   850  003D  00F3               	movwf	I2C_Master_Write@d
   851  003E  3000               	movlw	0
   852  003F  00F4               	movwf	I2C_Master_Write@d+1
   853  0040  120A  118A  23FB  120A  118A  	fcall	_I2C_Master_Write
   854  0045                     l1890:
   855                           
   856                           ;MAIN_PRO.c: 96:         I2C_Master_Write(0x00);
   857  0045  3000               	movlw	0
   858  0046  00F3               	movwf	I2C_Master_Write@d
   859  0047  00F4               	movwf	I2C_Master_Write@d+1
   860  0048  120A  118A  23FB  120A  118A  	fcall	_I2C_Master_Write
   861  004D                     l1892:
   862                           
   863                           ;MAIN_PRO.c: 97:         I2C_Master_RepeatedStart();
   864  004D  120A  118A  2417  120A  118A  	fcall	_I2C_Master_RepeatedStart
   865  0052                     l1894:
   866                           
   867                           ;MAIN_PRO.c: 98:         I2C_Master_Write(0xD1);
   868  0052  30D1               	movlw	209
   869  0053  00F3               	movwf	I2C_Master_Write@d
   870  0054  3000               	movlw	0
   871  0055  00F4               	movwf	I2C_Master_Write@d+1
   872  0056  120A  118A  23FB  120A  118A  	fcall	_I2C_Master_Write
   873  005B                     l1896:
   874                           
   875                           ;MAIN_PRO.c: 99:         seg = I2C_Master_Read(1);
   876  005B  3001               	movlw	1
   877  005C  00F3               	movwf	I2C_Master_Read@a
   878  005D  3000               	movlw	0
   879  005E  00F4               	movwf	I2C_Master_Read@a+1
   880  005F  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   881  0064  0873               	movf	?_I2C_Master_Read,w
   882  0065  1283               	bcf	3,5	;RP0=0, select bank0
   883  0066  1303               	bcf	3,6	;RP1=0, select bank0
   884  0067  00CD               	movwf	??_main
   885  0068  084D               	movf	??_main,w
   886  0069  00AE               	movwf	_seg
   887  006A                     l1898:
   888                           
   889                           ;MAIN_PRO.c: 100:         min = I2C_Master_Read(1);
   890  006A  3001               	movlw	1
   891  006B  00F3               	movwf	I2C_Master_Read@a
   892  006C  3000               	movlw	0
   893  006D  00F4               	movwf	I2C_Master_Read@a+1
   894  006E  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   895  0073  0873               	movf	?_I2C_Master_Read,w
   896  0074  1283               	bcf	3,5	;RP0=0, select bank0
   897  0075  1303               	bcf	3,6	;RP1=0, select bank0
   898  0076  00CD               	movwf	??_main
   899  0077  084D               	movf	??_main,w
   900  0078  00AF               	movwf	_min
   901  0079                     l1900:
   902                           
   903                           ;MAIN_PRO.c: 101:         hor = I2C_Master_Read(1);
   904  0079  3001               	movlw	1
   905  007A  00F3               	movwf	I2C_Master_Read@a
   906  007B  3000               	movlw	0
   907  007C  00F4               	movwf	I2C_Master_Read@a+1
   908  007D  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   909  0082  0873               	movf	?_I2C_Master_Read,w
   910  0083  1283               	bcf	3,5	;RP0=0, select bank0
   911  0084  1303               	bcf	3,6	;RP1=0, select bank0
   912  0085  00CD               	movwf	??_main
   913  0086  084D               	movf	??_main,w
   914  0087  00B0               	movwf	_hor
   915  0088                     l1902:
   916                           
   917                           ;MAIN_PRO.c: 102:         week = I2C_Master_Read(1);
   918  0088  3001               	movlw	1
   919  0089  00F3               	movwf	I2C_Master_Read@a
   920  008A  3000               	movlw	0
   921  008B  00F4               	movwf	I2C_Master_Read@a+1
   922  008C  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   923  0091  0873               	movf	?_I2C_Master_Read,w
   924  0092  1283               	bcf	3,5	;RP0=0, select bank0
   925  0093  1303               	bcf	3,6	;RP1=0, select bank0
   926  0094  00CD               	movwf	??_main
   927  0095  084D               	movf	??_main,w
   928  0096  00AD               	movwf	_week
   929  0097                     l1904:
   930                           
   931                           ;MAIN_PRO.c: 103:         day = I2C_Master_Read(1);
   932  0097  3001               	movlw	1
   933  0098  00F3               	movwf	I2C_Master_Read@a
   934  0099  3000               	movlw	0
   935  009A  00F4               	movwf	I2C_Master_Read@a+1
   936  009B  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   937  00A0  0873               	movf	?_I2C_Master_Read,w
   938  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   939  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   940  00A3  00CD               	movwf	??_main
   941  00A4  084D               	movf	??_main,w
   942  00A5  00F8               	movwf	_day
   943  00A6                     l1906:
   944                           
   945                           ;MAIN_PRO.c: 104:         mou = I2C_Master_Read(1);
   946  00A6  3001               	movlw	1
   947  00A7  00F3               	movwf	I2C_Master_Read@a
   948  00A8  3000               	movlw	0
   949  00A9  00F4               	movwf	I2C_Master_Read@a+1
   950  00AA  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   951  00AF  0873               	movf	?_I2C_Master_Read,w
   952  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   953  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   954  00B2  00CD               	movwf	??_main
   955  00B3  084D               	movf	??_main,w
   956  00B4  00F9               	movwf	_mou
   957  00B5                     l1908:
   958                           
   959                           ;MAIN_PRO.c: 105:         year= I2C_Master_Read(0);
   960  00B5  3000               	movlw	0
   961  00B6  00F3               	movwf	I2C_Master_Read@a
   962  00B7  00F4               	movwf	I2C_Master_Read@a+1
   963  00B8  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Read
   964  00BD  0873               	movf	?_I2C_Master_Read,w
   965  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   966  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   967  00C0  00CD               	movwf	??_main
   968  00C1  084D               	movf	??_main,w
   969  00C2  00AC               	movwf	_year
   970  00C3                     l1910:
   971                           
   972                           ;MAIN_PRO.c: 106:         I2C_Master_Stop();
   973  00C3  120A  118A  2405  120A  118A  	fcall	_I2C_Master_Stop
   974  00C8                     l1912:
   975                           
   976                           ;MAIN_PRO.c: 107:         CONVET();
   977  00C8  120A  118A  213E  120A  118A  	fcall	_CONVET
   978  00CD                     l1914:
   979                           
   980                           ;MAIN_PRO.c: 108:         forced_send();
   981  00CD  120A  118A  233B  120A  118A  	fcall	_forced_send
   982  00D2  2837               	goto	l1886
   983  00D3  120A  118A  280C   	ljmp	start
   984  00D6                     __end_of_main:
   985                           
   986                           	psect	text1
   987  033B                     __ptext1:	
   988 ;; *************** function _forced_send *****************
   989 ;; Defined at:
   990 ;;		line 188 in file "MAIN_PRO.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          1       0       0       0       0
  1007 ;;      Totals:         1       0       0       0       0
  1008 ;;Total ram usage:        1 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    2
  1011 ;; This function calls:
  1012 ;;		_send_hora
  1013 ;;		_send_min
  1014 ;;		_send_seg
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function _forced_send
  1022  033B                     _forced_send:
  1023  033B                     l1588:	
  1024                           ;incstack = 0
  1025                           ; Regs used in _forced_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1026                           
  1027                           
  1028                           ;MAIN_PRO.c: 189:     if (C==1){
  1029  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1030  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1031  033D  0336               	decf	_C,w
  1032  033E  1D03               	btfss	3,2
  1033  033F  2B41               	goto	u651
  1034  0340  2B42               	goto	u650
  1035  0341                     u651:
  1036  0341  2B73               	goto	l173
  1037  0342                     u650:
  1038  0342                     l1590:
  1039                           
  1040                           ;MAIN_PRO.c: 190:         send_seg();
  1041  0342  120A  118A  2247  120A  118A  	fcall	_send_seg
  1042  0347                     l1592:
  1043                           
  1044                           ;MAIN_PRO.c: 191:         M++;
  1045  0347  3001               	movlw	1
  1046  0348  00F5               	movwf	??_forced_send
  1047  0349  0875               	movf	??_forced_send,w
  1048  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1049  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1050  034C  07B1               	addwf	_M,f
  1051  034D                     l1594:
  1052                           
  1053                           ;MAIN_PRO.c: 192:         if (M==19){
  1054  034D  3013               	movlw	19
  1055  034E  0631               	xorwf	_M,w
  1056  034F  1D03               	btfss	3,2
  1057  0350  2B52               	goto	u661
  1058  0351  2B53               	goto	u660
  1059  0352                     u661:
  1060  0352  2B73               	goto	l173
  1061  0353                     u660:
  1062  0353                     l1596:
  1063                           
  1064                           ;MAIN_PRO.c: 193:             send_min();
  1065  0353  120A  118A  2285  120A  118A  	fcall	_send_min
  1066  0358                     l1598:
  1067                           
  1068                           ;MAIN_PRO.c: 194:             M=0;
  1069  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1071  035A  01B1               	clrf	_M
  1072  035B                     l1600:
  1073                           
  1074                           ;MAIN_PRO.c: 195:             H++;
  1075  035B  3001               	movlw	1
  1076  035C  07A0               	addwf	_H,f
  1077  035D  1803               	skipnc
  1078  035E  0AA1               	incf	_H+1,f
  1079  035F  3000               	movlw	0
  1080  0360  07A1               	addwf	_H+1,f
  1081  0361                     l1602:
  1082                           
  1083                           ;MAIN_PRO.c: 196:             if (H==1199){
  1084  0361  30AF               	movlw	175
  1085  0362  0620               	xorwf	_H,w
  1086  0363  3004               	movlw	4
  1087  0364  1903               	skipnz
  1088  0365  0621               	xorwf	_H+1,w
  1089  0366  1D03               	btfss	3,2
  1090  0367  2B69               	goto	u671
  1091  0368  2B6A               	goto	u670
  1092  0369                     u671:
  1093  0369  2B73               	goto	l173
  1094  036A                     u670:
  1095  036A                     l1604:
  1096                           
  1097                           ;MAIN_PRO.c: 197:                 send_hora();
  1098  036A  120A  118A  22C3  120A  118A  	fcall	_send_hora
  1099  036F                     l1606:
  1100                           
  1101                           ;MAIN_PRO.c: 198:                 H=0;
  1102  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0371  01A0               	clrf	_H
  1105  0372  01A1               	clrf	_H+1
  1106  0373                     l173:
  1107  0373  0008               	return
  1108  0374                     __end_of_forced_send:
  1109                           
  1110                           	psect	text2
  1111  0247                     __ptext2:	
  1112 ;; *************** function _send_seg *****************
  1113 ;; Defined at:
  1114 ;;		line 244 in file "MAIN_PRO.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          2       0       0       0       0
  1131 ;;      Totals:         2       0       0       0       0
  1132 ;;Total ram usage:        2 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    1
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_forced_send
  1139 ;;		_first_send
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _send_seg
  1145  0247                     _send_seg:
  1146  0247                     l1406:	
  1147                           ;incstack = 0
  1148                           ; Regs used in _send_seg: [wreg-fsr0h+status,2+status,0]
  1149                           
  1150                           
  1151                           ;MAIN_PRO.c: 245:     switch (s){
  1152  0247  2A6F               	goto	l1422
  1153  0248                     l1408:
  1154                           
  1155                           ;MAIN_PRO.c: 247:             TXREG = (seg_t+0x30);
  1156  0248  0822               	movf	_seg_t,w
  1157  0249  3E30               	addlw	48
  1158  024A  0099               	movwf	25	;volatile
  1159  024B                     l212:	
  1160                           ;MAIN_PRO.c: 248:             while(!TXSTAbits.TRMT);
  1161                           
  1162  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1163  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1164  024D  1C98               	btfss	24,1	;volatile
  1165  024E  2A50               	goto	u401
  1166  024F  2A51               	goto	u400
  1167  0250                     u401:
  1168  0250  2A4B               	goto	l212
  1169  0251                     u400:
  1170  0251                     l1410:
  1171                           
  1172                           ;MAIN_PRO.c: 249:             s++;
  1173  0251  3001               	movlw	1
  1174  0252  00F3               	movwf	??_send_seg
  1175  0253  0873               	movf	??_send_seg,w
  1176  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0256  07B2               	addwf	_s,f
  1179                           
  1180                           ;MAIN_PRO.c: 250:             break;
  1181  0257  2A84               	goto	l224
  1182  0258                     l1412:
  1183                           
  1184                           ;MAIN_PRO.c: 252:             TXREG = (seg_u+0x30);
  1185  0258  0827               	movf	_seg_u,w
  1186  0259  3E30               	addlw	48
  1187  025A  0099               	movwf	25	;volatile
  1188  025B                     l217:	
  1189                           ;MAIN_PRO.c: 253:             while(!TXSTAbits.TRMT);
  1190                           
  1191  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1192  025C  1303               	bcf	3,6	;RP1=0, select bank1
  1193  025D  1C98               	btfss	24,1	;volatile
  1194  025E  2A60               	goto	u411
  1195  025F  2A61               	goto	u410
  1196  0260                     u411:
  1197  0260  2A5B               	goto	l217
  1198  0261                     u410:
  1199  0261  2A51               	goto	l1410
  1200  0262                     l1416:
  1201                           
  1202                           ;MAIN_PRO.c: 257:             TXREG = (0x3A);
  1203  0262  303A               	movlw	58
  1204  0263  0099               	movwf	25	;volatile
  1205  0264                     l221:	
  1206                           ;MAIN_PRO.c: 258:             while(!TXSTAbits.TRMT);
  1207                           
  1208  0264  1683               	bsf	3,5	;RP0=1, select bank1
  1209  0265  1303               	bcf	3,6	;RP1=0, select bank1
  1210  0266  1C98               	btfss	24,1	;volatile
  1211  0267  2A69               	goto	u421
  1212  0268  2A6A               	goto	u420
  1213  0269                     u421:
  1214  0269  2A64               	goto	l221
  1215  026A                     u420:
  1216  026A                     l1418:
  1217                           
  1218                           ;MAIN_PRO.c: 259:             s=0;
  1219  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1220  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1221  026C  01B2               	clrf	_s
  1222                           
  1223                           ;MAIN_PRO.c: 260:             C=0;
  1224  026D  01B6               	clrf	_C
  1225                           
  1226                           ;MAIN_PRO.c: 261:             break;
  1227  026E  2A84               	goto	l224
  1228  026F                     l1422:
  1229  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0271  0832               	movf	_s,w
  1232  0272  00F3               	movwf	??_send_seg
  1233  0273  01F4               	clrf	??_send_seg+1
  1234                           
  1235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 1, Range of values is 0 to 0
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte            4     3 (average)
  1241                           ; direct_byte           11     8 (fixed)
  1242                           ; jumptable            260     6 (fixed)
  1243                           ;	Chosen strategy is simple_byte
  1244  0274  0874               	movf	??_send_seg+1,w
  1245  0275  3A00               	xorlw	0	; case 0
  1246  0276  1903               	skipnz
  1247  0277  2A79               	goto	l1998
  1248  0278  2A84               	goto	l224
  1249  0279                     l1998:
  1250                           
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 3, Range of values is 0 to 2
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte           10     6 (average)
  1256                           ; direct_byte           17     8 (fixed)
  1257                           ; jumptable            260     6 (fixed)
  1258                           ;	Chosen strategy is simple_byte
  1259  0279  0873               	movf	??_send_seg,w
  1260  027A  3A00               	xorlw	0	; case 0
  1261  027B  1903               	skipnz
  1262  027C  2A48               	goto	l1408
  1263  027D  3A01               	xorlw	1	; case 1
  1264  027E  1903               	skipnz
  1265  027F  2A58               	goto	l1412
  1266  0280  3A03               	xorlw	3	; case 2
  1267  0281  1903               	skipnz
  1268  0282  2A62               	goto	l1416
  1269  0283  2A84               	goto	l224
  1270  0284                     l224:
  1271  0284  0008               	return
  1272  0285                     __end_of_send_seg:
  1273                           
  1274                           	psect	text3
  1275  0285                     __ptext3:	
  1276 ;; *************** function _send_min *****************
  1277 ;; Defined at:
  1278 ;;		line 224 in file "MAIN_PRO.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0
  1294 ;;      Temps:          2       0       0       0       0
  1295 ;;      Totals:         2       0       0       0       0
  1296 ;;Total ram usage:        2 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_forced_send
  1303 ;;		_first_send
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _send_min
  1309  0285                     _send_min:
  1310  0285                     l1428:	
  1311                           ;incstack = 0
  1312                           ; Regs used in _send_min: [wreg-fsr0h+status,2+status,0]
  1313                           
  1314                           
  1315                           ;MAIN_PRO.c: 225:     switch (m){
  1316  0285  2AAD               	goto	l1444
  1317  0286                     l1430:
  1318                           
  1319                           ;MAIN_PRO.c: 227:              TXREG = (min_t+0x30);
  1320  0286  0823               	movf	_min_t,w
  1321  0287  3E30               	addlw	48
  1322  0288  0099               	movwf	25	;volatile
  1323  0289                     l195:	
  1324                           ;MAIN_PRO.c: 228:              while(!TXSTAbits.TRMT);
  1325                           
  1326  0289  1683               	bsf	3,5	;RP0=1, select bank1
  1327  028A  1303               	bcf	3,6	;RP1=0, select bank1
  1328  028B  1C98               	btfss	24,1	;volatile
  1329  028C  2A8E               	goto	u431
  1330  028D  2A8F               	goto	u430
  1331  028E                     u431:
  1332  028E  2A89               	goto	l195
  1333  028F                     u430:
  1334  028F                     l1432:
  1335                           
  1336                           ;MAIN_PRO.c: 229:              m++;
  1337  028F  3001               	movlw	1
  1338  0290  00F3               	movwf	??_send_min
  1339  0291  0873               	movf	??_send_min,w
  1340  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0294  07B3               	addwf	_m,f
  1343                           
  1344                           ;MAIN_PRO.c: 230:             break;
  1345  0295  2AC2               	goto	l207
  1346  0296                     l1434:
  1347                           
  1348                           ;MAIN_PRO.c: 232:              TXREG = (min_u +0x30);
  1349  0296  0828               	movf	_min_u,w
  1350  0297  3E30               	addlw	48
  1351  0298  0099               	movwf	25	;volatile
  1352  0299                     l200:	
  1353                           ;MAIN_PRO.c: 233:              while(!TXSTAbits.TRMT);
  1354                           
  1355  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1356  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1357  029B  1C98               	btfss	24,1	;volatile
  1358  029C  2A9E               	goto	u441
  1359  029D  2A9F               	goto	u440
  1360  029E                     u441:
  1361  029E  2A99               	goto	l200
  1362  029F                     u440:
  1363  029F  2A8F               	goto	l1432
  1364  02A0                     l1438:
  1365                           
  1366                           ;MAIN_PRO.c: 237:             TXREG = (0x3A);
  1367  02A0  303A               	movlw	58
  1368  02A1  0099               	movwf	25	;volatile
  1369  02A2                     l204:	
  1370                           ;MAIN_PRO.c: 238:             while(!TXSTAbits.TRMT);
  1371                           
  1372  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  1373  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  1374  02A4  1C98               	btfss	24,1	;volatile
  1375  02A5  2AA7               	goto	u451
  1376  02A6  2AA8               	goto	u450
  1377  02A7                     u451:
  1378  02A7  2AA2               	goto	l204
  1379  02A8                     u450:
  1380  02A8                     l1440:
  1381                           
  1382                           ;MAIN_PRO.c: 239:             m=0;
  1383  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1384  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1385  02AA  01B3               	clrf	_m
  1386                           
  1387                           ;MAIN_PRO.c: 240:             C=0;
  1388  02AB  01B6               	clrf	_C
  1389                           
  1390                           ;MAIN_PRO.c: 241:             break;
  1391  02AC  2AC2               	goto	l207
  1392  02AD                     l1444:
  1393  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1394  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1395  02AF  0833               	movf	_m,w
  1396  02B0  00F3               	movwf	??_send_min
  1397  02B1  01F4               	clrf	??_send_min+1
  1398                           
  1399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1400                           ; Switch size 1, requested type "simple"
  1401                           ; Number of cases is 1, Range of values is 0 to 0
  1402                           ; switch strategies available:
  1403                           ; Name         Instructions Cycles
  1404                           ; simple_byte            4     3 (average)
  1405                           ; direct_byte           11     8 (fixed)
  1406                           ; jumptable            260     6 (fixed)
  1407                           ;	Chosen strategy is simple_byte
  1408  02B2  0874               	movf	??_send_min+1,w
  1409  02B3  3A00               	xorlw	0	; case 0
  1410  02B4  1903               	skipnz
  1411  02B5  2AB7               	goto	l2000
  1412  02B6  2AC2               	goto	l207
  1413  02B7                     l2000:
  1414                           
  1415                           ; Switch size 1, requested type "simple"
  1416                           ; Number of cases is 3, Range of values is 0 to 2
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte           10     6 (average)
  1420                           ; direct_byte           17     8 (fixed)
  1421                           ; jumptable            260     6 (fixed)
  1422                           ;	Chosen strategy is simple_byte
  1423  02B7  0873               	movf	??_send_min,w
  1424  02B8  3A00               	xorlw	0	; case 0
  1425  02B9  1903               	skipnz
  1426  02BA  2A86               	goto	l1430
  1427  02BB  3A01               	xorlw	1	; case 1
  1428  02BC  1903               	skipnz
  1429  02BD  2A96               	goto	l1434
  1430  02BE  3A03               	xorlw	3	; case 2
  1431  02BF  1903               	skipnz
  1432  02C0  2AA0               	goto	l1438
  1433  02C1  2AC2               	goto	l207
  1434  02C2                     l207:
  1435  02C2  0008               	return
  1436  02C3                     __end_of_send_min:
  1437                           
  1438                           	psect	text4
  1439  02C3                     __ptext4:	
  1440 ;; *************** function _send_hora *****************
  1441 ;; Defined at:
  1442 ;;		line 205 in file "MAIN_PRO.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          2       0       0       0       0
  1459 ;;      Totals:         2       0       0       0       0
  1460 ;;Total ram usage:        2 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_forced_send
  1467 ;;		_first_send
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _send_hora
  1473  02C3                     _send_hora:
  1474  02C3                     l1450:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0]
  1477                           
  1478                           
  1479                           ;MAIN_PRO.c: 206:     switch (h){
  1480  02C3  2AEB               	goto	l1466
  1481  02C4                     l1452:
  1482                           
  1483                           ;MAIN_PRO.c: 208:             TXREG = (hor_t+0x30);
  1484  02C4  0824               	movf	_hor_t,w
  1485  02C5  3E30               	addlw	48
  1486  02C6  0099               	movwf	25	;volatile
  1487  02C7                     l178:	
  1488                           ;MAIN_PRO.c: 209:             while(!TXSTAbits.TRMT);
  1489                           
  1490  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1491  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1492  02C9  1C98               	btfss	24,1	;volatile
  1493  02CA  2ACC               	goto	u461
  1494  02CB  2ACD               	goto	u460
  1495  02CC                     u461:
  1496  02CC  2AC7               	goto	l178
  1497  02CD                     u460:
  1498  02CD                     l1454:
  1499                           
  1500                           ;MAIN_PRO.c: 210:             h++;
  1501  02CD  3001               	movlw	1
  1502  02CE  00F3               	movwf	??_send_hora
  1503  02CF  0873               	movf	??_send_hora,w
  1504  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1505  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1506  02D2  07B4               	addwf	_h,f
  1507                           
  1508                           ;MAIN_PRO.c: 211:             break;
  1509  02D3  2B00               	goto	l190
  1510  02D4                     l1456:
  1511                           
  1512                           ;MAIN_PRO.c: 213:             TXREG = (hor_u+0x30);
  1513  02D4  0829               	movf	_hor_u,w
  1514  02D5  3E30               	addlw	48
  1515  02D6  0099               	movwf	25	;volatile
  1516  02D7                     l183:	
  1517                           ;MAIN_PRO.c: 214:             while(!TXSTAbits.TRMT);
  1518                           
  1519  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1520  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1521  02D9  1C98               	btfss	24,1	;volatile
  1522  02DA  2ADC               	goto	u471
  1523  02DB  2ADD               	goto	u470
  1524  02DC                     u471:
  1525  02DC  2AD7               	goto	l183
  1526  02DD                     u470:
  1527  02DD  2ACD               	goto	l1454
  1528  02DE                     l1460:
  1529                           
  1530                           ;MAIN_PRO.c: 218:             TXREG = (0x3A);
  1531  02DE  303A               	movlw	58
  1532  02DF  0099               	movwf	25	;volatile
  1533  02E0                     l187:	
  1534                           ;MAIN_PRO.c: 219:             while(!TXSTAbits.TRMT);
  1535                           
  1536  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  1537  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  1538  02E2  1C98               	btfss	24,1	;volatile
  1539  02E3  2AE5               	goto	u481
  1540  02E4  2AE6               	goto	u480
  1541  02E5                     u481:
  1542  02E5  2AE0               	goto	l187
  1543  02E6                     u480:
  1544  02E6                     l1462:
  1545                           
  1546                           ;MAIN_PRO.c: 220:             h=0;
  1547  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1548  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1549  02E8  01B4               	clrf	_h
  1550                           
  1551                           ;MAIN_PRO.c: 221:             C=0;
  1552  02E9  01B6               	clrf	_C
  1553                           
  1554                           ;MAIN_PRO.c: 222:             break;
  1555  02EA  2B00               	goto	l190
  1556  02EB                     l1466:
  1557  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1558  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1559  02ED  0834               	movf	_h,w
  1560  02EE  00F3               	movwf	??_send_hora
  1561  02EF  01F4               	clrf	??_send_hora+1
  1562                           
  1563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 1, Range of values is 0 to 0
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            4     3 (average)
  1569                           ; direct_byte           11     8 (fixed)
  1570                           ; jumptable            260     6 (fixed)
  1571                           ;	Chosen strategy is simple_byte
  1572  02F0  0874               	movf	??_send_hora+1,w
  1573  02F1  3A00               	xorlw	0	; case 0
  1574  02F2  1903               	skipnz
  1575  02F3  2AF5               	goto	l2002
  1576  02F4  2B00               	goto	l190
  1577  02F5                     l2002:
  1578                           
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 3, Range of values is 0 to 2
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte           10     6 (average)
  1584                           ; direct_byte           17     8 (fixed)
  1585                           ; jumptable            260     6 (fixed)
  1586                           ;	Chosen strategy is simple_byte
  1587  02F5  0873               	movf	??_send_hora,w
  1588  02F6  3A00               	xorlw	0	; case 0
  1589  02F7  1903               	skipnz
  1590  02F8  2AC4               	goto	l1452
  1591  02F9  3A01               	xorlw	1	; case 1
  1592  02FA  1903               	skipnz
  1593  02FB  2AD4               	goto	l1456
  1594  02FC  3A03               	xorlw	3	; case 2
  1595  02FD  1903               	skipnz
  1596  02FE  2ADE               	goto	l1460
  1597  02FF  2B00               	goto	l190
  1598  0300                     l190:
  1599  0300  0008               	return
  1600  0301                     __end_of_send_hora:
  1601                           
  1602                           	psect	text5
  1603  0374                     __ptext5:	
  1604 ;; *************** function _Setup *****************
  1605 ;; Defined at:
  1606 ;;		line 116 in file "MAIN_PRO.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    2
  1627 ;; This function calls:
  1628 ;;		_SET_RXT
  1629 ;;		_SET_TXR
  1630 ;;		_initOsc
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _Setup
  1638  0374                     _Setup:
  1639  0374                     l1500:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1642                           
  1643                           
  1644                           ;MAIN_PRO.c: 118:     PORTA = 0;
  1645  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0376  0185               	clrf	5	;volatile
  1648                           
  1649                           ;MAIN_PRO.c: 119:     PORTB = 0;
  1650  0377  0186               	clrf	6	;volatile
  1651                           
  1652                           ;MAIN_PRO.c: 120:     PORTC = 0;
  1653  0378  0187               	clrf	7	;volatile
  1654                           
  1655                           ;MAIN_PRO.c: 121:     PORTD = 0;
  1656  0379  0188               	clrf	8	;volatile
  1657                           
  1658                           ;MAIN_PRO.c: 122:     PORTE = 0;
  1659  037A  0189               	clrf	9	;volatile
  1660                           
  1661                           ;MAIN_PRO.c: 124:     TRISA = 0B00000000;
  1662  037B  1683               	bsf	3,5	;RP0=1, select bank1
  1663  037C  1303               	bcf	3,6	;RP1=0, select bank1
  1664  037D  0185               	clrf	5	;volatile
  1665                           
  1666                           ;MAIN_PRO.c: 125:     TRISB = 0B00000000;
  1667  037E  0186               	clrf	6	;volatile
  1668                           
  1669                           ;MAIN_PRO.c: 126:     TRISC = 0B00000000;
  1670  037F  0187               	clrf	7	;volatile
  1671                           
  1672                           ;MAIN_PRO.c: 127:     TRISD = 0B00000000;
  1673  0380  0188               	clrf	8	;volatile
  1674                           
  1675                           ;MAIN_PRO.c: 128:     TRISE = 0B0000;
  1676  0381  0189               	clrf	9	;volatile
  1677                           
  1678                           ;MAIN_PRO.c: 130:     ANSEL = 0B00000000;
  1679  0382  1683               	bsf	3,5	;RP0=1, select bank3
  1680  0383  1703               	bsf	3,6	;RP1=1, select bank3
  1681  0384  0188               	clrf	8	;volatile
  1682                           
  1683                           ;MAIN_PRO.c: 131:     ANSELH = 0B00000000;
  1684  0385  0189               	clrf	9	;volatile
  1685  0386                     l1502:
  1686                           
  1687                           ;MAIN_PRO.c: 134:     INTCONbits.GIE=1;
  1688  0386  178B               	bsf	11,7	;volatile
  1689  0387                     l1504:
  1690                           
  1691                           ;MAIN_PRO.c: 135:     INTCONbits.PEIE=1;
  1692  0387  170B               	bsf	11,6	;volatile
  1693  0388                     l1506:
  1694                           
  1695                           ;MAIN_PRO.c: 136:     INTCONbits.TMR0IE=1;
  1696  0388  168B               	bsf	11,5	;volatile
  1697  0389                     l1508:
  1698                           
  1699                           ;MAIN_PRO.c: 137:     INTCONbits.TMR0IF=0;
  1700  0389  110B               	bcf	11,2	;volatile
  1701  038A                     l1510:
  1702                           
  1703                           ;MAIN_PRO.c: 139:     PIE1bits.RCIE = 1;
  1704  038A  1683               	bsf	3,5	;RP0=1, select bank1
  1705  038B  1303               	bcf	3,6	;RP1=0, select bank1
  1706  038C  168C               	bsf	12,5	;volatile
  1707  038D                     l1512:
  1708                           
  1709                           ;MAIN_PRO.c: 140:     OPTION_REGbits.T0CS=0;
  1710  038D  1281               	bcf	1,5	;volatile
  1711  038E                     l1514:
  1712                           
  1713                           ;MAIN_PRO.c: 141:     OPTION_REGbits.T0SE=0;
  1714  038E  1201               	bcf	1,4	;volatile
  1715  038F                     l1516:
  1716                           
  1717                           ;MAIN_PRO.c: 142:     OPTION_REGbits.PSA=0;
  1718  038F  1181               	bcf	1,3	;volatile
  1719  0390                     l1518:
  1720                           
  1721                           ;MAIN_PRO.c: 144:     OPTION_REGbits.PS0=1;
  1722  0390  1401               	bsf	1,0	;volatile
  1723  0391                     l1520:
  1724                           
  1725                           ;MAIN_PRO.c: 145:     OPTION_REGbits.PS1=1;
  1726  0391  1481               	bsf	1,1	;volatile
  1727  0392                     l1522:
  1728                           
  1729                           ;MAIN_PRO.c: 146:     OPTION_REGbits.PS2=1;
  1730  0392  1501               	bsf	1,2	;volatile
  1731  0393                     l1524:
  1732                           
  1733                           ;MAIN_PRO.c: 148:     initOsc(6);
  1734  0393  3006               	movlw	6
  1735  0394  120A  118A  219B  120A  118A  	fcall	_initOsc
  1736  0399                     l1526:
  1737                           
  1738                           ;MAIN_PRO.c: 149:     SET_RXT();
  1739  0399  120A  118A  23F0  120A  118A  	fcall	_SET_RXT
  1740  039E                     l1528:
  1741                           
  1742                           ;MAIN_PRO.c: 150:     SET_TXR();
  1743  039E  120A  118A  23D4  120A  118A  	fcall	_SET_TXR
  1744  03A3                     l157:
  1745  03A3  0008               	return
  1746  03A4                     __end_of_Setup:
  1747                           
  1748                           	psect	text6
  1749  019B                     __ptext6:	
  1750 ;; *************** function _initOsc *****************
  1751 ;; Defined at:
  1752 ;;		line 6 in file "Oscilador.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  IRCF            1    wreg     unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  IRCF            1    5[COMMON] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0
  1768 ;;      Temps:          2       0       0       0       0
  1769 ;;      Totals:         3       0       0       0       0
  1770 ;;Total ram usage:        3 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_Setup
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _initOsc
  1782  019B                     _initOsc:
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1786                           ;initOsc@IRCF stored from wreg
  1787  019B  00F5               	movwf	initOsc@IRCF
  1788  019C                     l1388:
  1789                           
  1790                           ;Oscilador.c: 7: switch (IRCF) {
  1791  019C  29D3               	goto	l1392
  1792  019D                     l265:	
  1793                           ;Oscilador.c: 8:             case 0:
  1794                           
  1795                           
  1796                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  1797  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1798  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1799  019F  130F               	bcf	15,6	;volatile
  1800                           
  1801                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  1802  01A0  128F               	bcf	15,5	;volatile
  1803                           
  1804                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  1805  01A1  120F               	bcf	15,4	;volatile
  1806                           
  1807                           ;Oscilador.c: 12:                 break;
  1808  01A2  29F5               	goto	l266
  1809  01A3                     l267:	
  1810                           ;Oscilador.c: 13:             case 1:
  1811                           
  1812                           
  1813                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  1814  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1815  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1816  01A5  130F               	bcf	15,6	;volatile
  1817                           
  1818                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  1819  01A6  128F               	bcf	15,5	;volatile
  1820                           
  1821                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  1822  01A7  160F               	bsf	15,4	;volatile
  1823                           
  1824                           ;Oscilador.c: 17:                 break;
  1825  01A8  29F5               	goto	l266
  1826  01A9                     l268:	
  1827                           ;Oscilador.c: 18:             case 2:
  1828                           
  1829                           
  1830                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  1831  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1832  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1833  01AB  130F               	bcf	15,6	;volatile
  1834                           
  1835                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  1836  01AC  168F               	bsf	15,5	;volatile
  1837                           
  1838                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  1839  01AD  120F               	bcf	15,4	;volatile
  1840                           
  1841                           ;Oscilador.c: 22:                 break;
  1842  01AE  29F5               	goto	l266
  1843  01AF                     l269:	
  1844                           ;Oscilador.c: 23:             case 3:
  1845                           
  1846                           
  1847                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  1848  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1849  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1850  01B1  130F               	bcf	15,6	;volatile
  1851                           
  1852                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  1853  01B2  168F               	bsf	15,5	;volatile
  1854                           
  1855                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  1856  01B3  160F               	bsf	15,4	;volatile
  1857                           
  1858                           ;Oscilador.c: 27:                 break;
  1859  01B4  29F5               	goto	l266
  1860  01B5                     l270:	
  1861                           ;Oscilador.c: 28:             case 4:
  1862                           
  1863                           
  1864                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  1865  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1866  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1867  01B7  170F               	bsf	15,6	;volatile
  1868                           
  1869                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  1870  01B8  128F               	bcf	15,5	;volatile
  1871                           
  1872                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  1873  01B9  120F               	bcf	15,4	;volatile
  1874                           
  1875                           ;Oscilador.c: 32:                 break;
  1876  01BA  29F5               	goto	l266
  1877  01BB                     l271:	
  1878                           ;Oscilador.c: 33:             case 5:
  1879                           
  1880                           
  1881                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  1882  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1883  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1884  01BD  170F               	bsf	15,6	;volatile
  1885                           
  1886                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  1887  01BE  128F               	bcf	15,5	;volatile
  1888                           
  1889                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  1890  01BF  160F               	bsf	15,4	;volatile
  1891                           
  1892                           ;Oscilador.c: 37:                 break;
  1893  01C0  29F5               	goto	l266
  1894  01C1                     l272:	
  1895                           ;Oscilador.c: 38:             case 6:
  1896                           
  1897                           
  1898                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  1899  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1900  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1901  01C3  170F               	bsf	15,6	;volatile
  1902                           
  1903                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  1904  01C4  168F               	bsf	15,5	;volatile
  1905                           
  1906                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  1907  01C5  120F               	bcf	15,4	;volatile
  1908                           
  1909                           ;Oscilador.c: 42:                 break;
  1910  01C6  29F5               	goto	l266
  1911  01C7                     l273:	
  1912                           ;Oscilador.c: 43:             case 7:
  1913                           
  1914                           
  1915                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  1916  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1917  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1918  01C9  170F               	bsf	15,6	;volatile
  1919                           
  1920                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  1921  01CA  168F               	bsf	15,5	;volatile
  1922                           
  1923                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  1924  01CB  160F               	bsf	15,4	;volatile
  1925                           
  1926                           ;Oscilador.c: 47:                 break;
  1927  01CC  29F5               	goto	l266
  1928  01CD                     l274:	
  1929                           ;Oscilador.c: 48:             default:
  1930                           
  1931                           
  1932                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  1933  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1934  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1935  01CF  170F               	bsf	15,6	;volatile
  1936                           
  1937                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  1938  01D0  168F               	bsf	15,5	;volatile
  1939                           
  1940                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  1941  01D1  120F               	bcf	15,4	;volatile
  1942                           
  1943                           ;Oscilador.c: 52:                 break;
  1944  01D2  29F5               	goto	l266
  1945  01D3                     l1392:
  1946  01D3  0875               	movf	initOsc@IRCF,w
  1947  01D4  00F3               	movwf	??_initOsc
  1948  01D5  01F4               	clrf	??_initOsc+1
  1949                           
  1950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1951                           ; Switch size 1, requested type "simple"
  1952                           ; Number of cases is 1, Range of values is 0 to 0
  1953                           ; switch strategies available:
  1954                           ; Name         Instructions Cycles
  1955                           ; simple_byte            4     3 (average)
  1956                           ; direct_byte           11     8 (fixed)
  1957                           ; jumptable            260     6 (fixed)
  1958                           ;	Chosen strategy is simple_byte
  1959  01D6  0874               	movf	??_initOsc+1,w
  1960  01D7  3A00               	xorlw	0	; case 0
  1961  01D8  1903               	skipnz
  1962  01D9  29DB               	goto	l2004
  1963  01DA  29CD               	goto	l274
  1964  01DB                     l2004:
  1965                           
  1966                           ; Switch size 1, requested type "simple"
  1967                           ; Number of cases is 8, Range of values is 0 to 7
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte           25    13 (average)
  1971                           ; direct_byte           32     8 (fixed)
  1972                           ; jumptable            260     6 (fixed)
  1973                           ;	Chosen strategy is simple_byte
  1974  01DB  0873               	movf	??_initOsc,w
  1975  01DC  3A00               	xorlw	0	; case 0
  1976  01DD  1903               	skipnz
  1977  01DE  299D               	goto	l265
  1978  01DF  3A01               	xorlw	1	; case 1
  1979  01E0  1903               	skipnz
  1980  01E1  29A3               	goto	l267
  1981  01E2  3A03               	xorlw	3	; case 2
  1982  01E3  1903               	skipnz
  1983  01E4  29A9               	goto	l268
  1984  01E5  3A01               	xorlw	1	; case 3
  1985  01E6  1903               	skipnz
  1986  01E7  29AF               	goto	l269
  1987  01E8  3A07               	xorlw	7	; case 4
  1988  01E9  1903               	skipnz
  1989  01EA  29B5               	goto	l270
  1990  01EB  3A01               	xorlw	1	; case 5
  1991  01EC  1903               	skipnz
  1992  01ED  29BB               	goto	l271
  1993  01EE  3A03               	xorlw	3	; case 6
  1994  01EF  1903               	skipnz
  1995  01F0  29C1               	goto	l272
  1996  01F1  3A01               	xorlw	1	; case 7
  1997  01F2  1903               	skipnz
  1998  01F3  29C7               	goto	l273
  1999  01F4  29CD               	goto	l274
  2000  01F5                     l266:
  2001                           
  2002                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  2003  01F5  140F               	bsf	15,0	;volatile
  2004  01F6                     l275:
  2005  01F6  0008               	return
  2006  01F7                     __end_of_initOsc:
  2007                           
  2008                           	psect	text7
  2009  03D4                     __ptext7:	
  2010 ;; *************** function _SET_TXR *****************
  2011 ;; Defined at:
  2012 ;;		line 3 in file "EUSART.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_Setup
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _SET_TXR
  2042  03D4                     _SET_TXR:
  2043  03D4                     l1400:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _SET_TXR: [wreg+status,2]
  2046                           
  2047                           
  2048                           ;EUSART.c: 4:     TXSTAbits.SYNC=0;
  2049  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2050  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2051  03D6  1218               	bcf	24,4	;volatile
  2052                           
  2053                           ;EUSART.c: 5:     TXSTAbits.TXEN=1;
  2054  03D7  1698               	bsf	24,5	;volatile
  2055                           
  2056                           ;EUSART.c: 6:     TXSTAbits.BRGH=1;
  2057  03D8  1518               	bsf	24,2	;volatile
  2058                           
  2059                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  2060  03D9  1318               	bcf	24,6	;volatile
  2061                           
  2062                           ;EUSART.c: 8:     BAUDCTLbits.BRG16=0;
  2063  03DA  1683               	bsf	3,5	;RP0=1, select bank3
  2064  03DB  1703               	bsf	3,6	;RP1=1, select bank3
  2065  03DC  1187               	bcf	7,3	;volatile
  2066  03DD                     l1402:
  2067                           
  2068                           ;EUSART.c: 9:     SPBRG=25;
  2069  03DD  3019               	movlw	25
  2070  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2071  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2072  03E0  0099               	movwf	25	;volatile
  2073  03E1                     l1404:
  2074                           
  2075                           ;EUSART.c: 10:     SPBRGH=0;
  2076  03E1  019A               	clrf	26	;volatile
  2077  03E2                     l256:
  2078  03E2  0008               	return
  2079  03E3                     __end_of_SET_TXR:
  2080                           
  2081                           	psect	text8
  2082  03F0                     __ptext8:	
  2083 ;; *************** function _SET_RXT *****************
  2084 ;; Defined at:
  2085 ;;		line 13 in file "EUSART.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		None
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_Setup
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _SET_RXT
  2115  03F0                     _SET_RXT:
  2116  03F0                     l1398:	
  2117                           ;incstack = 0
  2118                           ; Regs used in _SET_RXT: []
  2119                           
  2120                           
  2121                           ;EUSART.c: 14:     RCSTAbits.SPEN=1;
  2122  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2123  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2124  03F2  1798               	bsf	24,7	;volatile
  2125                           
  2126                           ;EUSART.c: 15:     RCSTAbits.CREN=1;
  2127  03F3  1618               	bsf	24,4	;volatile
  2128                           
  2129                           ;EUSART.c: 16:     RCSTAbits.FERR=0;
  2130  03F4  1118               	bcf	24,2	;volatile
  2131                           
  2132                           ;EUSART.c: 17:     RCSTAbits.OERR=0;
  2133  03F5  1098               	bcf	24,1	;volatile
  2134                           
  2135                           ;EUSART.c: 18:     RCSTAbits.RX9=0;
  2136  03F6  1318               	bcf	24,6	;volatile
  2137                           
  2138                           ;EUSART.c: 19:     PIE1bits.RCIE=1;
  2139  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2140  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2141  03F9  168C               	bsf	12,5	;volatile
  2142  03FA                     l259:
  2143  03FA  0008               	return
  2144  03FB                     __end_of_SET_RXT:
  2145                           
  2146                           	psect	text9
  2147  03FB                     __ptext9:	
  2148 ;; *************** function _I2C_Master_Write *****************
  2149 ;; Defined at:
  2150 ;;		line 54 in file "I2C.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  d               2    3[COMMON] unsigned int 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         2       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		_I2C_Master_Wait
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;;		_CARGA
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _I2C_Master_Write
  2181  03FB                     _I2C_Master_Write:
  2182  03FB                     l1846:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2185                           
  2186                           
  2187                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  2188  03FB  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2189  0400                     l1848:
  2190                           
  2191                           ;I2C.c: 57:     SSPBUF = d;
  2192  0400  0873               	movf	I2C_Master_Write@d,w
  2193  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0403  0093               	movwf	19	;volatile
  2196  0404                     l322:
  2197  0404  0008               	return
  2198  0405                     __end_of_I2C_Master_Write:
  2199                           
  2200                           	psect	text10
  2201  0405                     __ptext10:	
  2202 ;; *************** function _I2C_Master_Stop *****************
  2203 ;; Defined at:
  2204 ;;		line 44 in file "I2C.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0
  2221 ;;      Totals:         0       0       0       0       0
  2222 ;;Total ram usage:        0 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    2
  2225 ;; This function calls:
  2226 ;;		_I2C_Master_Wait
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;;		_CARGA
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _I2C_Master_Stop
  2235  0405                     _I2C_Master_Stop:
  2236  0405                     l1870:	
  2237                           ;incstack = 0
  2238                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2239                           
  2240                           
  2241                           ;I2C.c: 46:     I2C_Master_Wait();
  2242  0405  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2243  040A                     l1872:
  2244                           
  2245                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  2246  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2247  040B  1303               	bcf	3,6	;RP1=0, select bank1
  2248  040C  1511               	bsf	17,2	;volatile
  2249  040D                     l319:
  2250  040D  0008               	return
  2251  040E                     __end_of_I2C_Master_Stop:
  2252                           
  2253                           	psect	text11
  2254  040E                     __ptext11:	
  2255 ;; *************** function _I2C_Master_Start *****************
  2256 ;; Defined at:
  2257 ;;		line 28 in file "I2C.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, pclath, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		_I2C_Master_Wait
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;;		_CARGA
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _I2C_Master_Start
  2288  040E                     _I2C_Master_Start:
  2289  040E                     l1842:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2292                           
  2293                           
  2294                           ;I2C.c: 30:     I2C_Master_Wait();
  2295  040E  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2296  0413                     l1844:
  2297                           
  2298                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  2299  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2300  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2301  0415  1411               	bsf	17,0	;volatile
  2302  0416                     l313:
  2303  0416  0008               	return
  2304  0417                     __end_of_I2C_Master_Start:
  2305                           
  2306                           	psect	text12
  2307  0417                     __ptext12:	
  2308 ;; *************** function _I2C_Master_RepeatedStart *****************
  2309 ;; Defined at:
  2310 ;;		line 36 in file "I2C.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    2
  2331 ;; This function calls:
  2332 ;;		_I2C_Master_Wait
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _I2C_Master_RepeatedStart
  2340  0417                     _I2C_Master_RepeatedStart:
  2341  0417                     l1850:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2344                           
  2345                           
  2346                           ;I2C.c: 38:     I2C_Master_Wait();
  2347  0417  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2348  041C                     l1852:
  2349                           
  2350                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  2351  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2352  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2353  041E  1491               	bsf	17,1	;volatile
  2354  041F                     l316:
  2355  041F  0008               	return
  2356  0420                     __end_of_I2C_Master_RepeatedStart:
  2357                           
  2358                           	psect	text13
  2359  03A4                     __ptext13:	
  2360 ;; *************** function _I2C_Master_Read *****************
  2361 ;; Defined at:
  2362 ;;		line 63 in file "I2C.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  a               2    3[COMMON] unsigned short 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  temp            2    0[BANK0 ] unsigned short 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  2    3[COMMON] unsigned short 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2376 ;;      Params:         2       0       0       0       0
  2377 ;;      Locals:         0       2       0       0       0
  2378 ;;      Temps:          2       0       0       0       0
  2379 ;;      Totals:         4       2       0       0       0
  2380 ;;Total ram usage:        6 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    2
  2383 ;; This function calls:
  2384 ;;		_I2C_Master_Wait
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _I2C_Master_Read
  2392  03A4                     _I2C_Master_Read:
  2393  03A4                     l1854:	
  2394                           ;incstack = 0
  2395                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2396                           
  2397                           
  2398                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  2399  03A4  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2400  03A9                     l1856:
  2401                           
  2402                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2403  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2404  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2405  03AB  1591               	bsf	17,3	;volatile
  2406                           
  2407                           ;I2C.c: 68:     I2C_Master_Wait();
  2408  03AC  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2409  03B1                     l1858:
  2410                           
  2411                           ;I2C.c: 69:     temp = SSPBUF;
  2412  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2413  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2414  03B3  0813               	movf	19,w	;volatile
  2415  03B4  00F5               	movwf	??_I2C_Master_Read
  2416  03B5  01F6               	clrf	??_I2C_Master_Read+1
  2417  03B6  0875               	movf	??_I2C_Master_Read,w
  2418  03B7  00BC               	movwf	I2C_Master_Read@temp
  2419  03B8  0876               	movf	??_I2C_Master_Read+1,w
  2420  03B9  00BD               	movwf	I2C_Master_Read@temp+1
  2421  03BA                     l1860:
  2422                           
  2423                           ;I2C.c: 70:     I2C_Master_Wait();
  2424  03BA  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Wait
  2425  03BF                     l1862:
  2426                           
  2427                           ;I2C.c: 71:     if(a == 1){
  2428  03BF  0373               	decf	I2C_Master_Read@a,w
  2429  03C0  0474               	iorwf	I2C_Master_Read@a+1,w
  2430  03C1  1D03               	btfss	3,2
  2431  03C2  2BC4               	goto	u881
  2432  03C3  2BC5               	goto	u880
  2433  03C4                     u881:
  2434  03C4  2BC9               	goto	l325
  2435  03C5                     u880:
  2436  03C5                     l1864:
  2437                           
  2438                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  2439  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2440  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2441  03C7  1291               	bcf	17,5	;volatile
  2442                           
  2443                           ;I2C.c: 73:     }else{
  2444  03C8  2BCC               	goto	l326
  2445  03C9                     l325:
  2446                           
  2447                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  2448  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2449  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2450  03CB  1691               	bsf	17,5	;volatile
  2451  03CC                     l326:	
  2452                           ;I2C.c: 75:     }
  2453                           
  2454                           
  2455                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  2456  03CC  1611               	bsf	17,4	;volatile
  2457  03CD                     l1866:
  2458                           
  2459                           ;I2C.c: 77:     return temp;
  2460  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03CF  083D               	movf	I2C_Master_Read@temp+1,w
  2463  03D0  00F4               	movwf	?_I2C_Master_Read+1
  2464  03D1  083C               	movf	I2C_Master_Read@temp,w
  2465  03D2  00F3               	movwf	?_I2C_Master_Read
  2466  03D3                     l327:
  2467  03D3  0008               	return
  2468  03D4                     __end_of_I2C_Master_Read:
  2469                           
  2470                           	psect	text14
  2471  03E3                     __ptext14:	
  2472 ;; *************** function _I2C_Master_Wait *****************
  2473 ;; Defined at:
  2474 ;;		line 21 in file "I2C.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_I2C_Master_Start
  2499 ;;		_I2C_Master_RepeatedStart
  2500 ;;		_I2C_Master_Stop
  2501 ;;		_I2C_Master_Write
  2502 ;;		_I2C_Master_Read
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _I2C_Master_Wait
  2508  03E3                     _I2C_Master_Wait:
  2509  03E3                     l1802:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2512                           
  2513  03E3                     l307:	
  2514                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2515                           
  2516  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2517  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2518  03E5  1914               	btfsc	20,2	;volatile
  2519  03E6  2BE8               	goto	u781
  2520  03E7  2BE9               	goto	u780
  2521  03E8                     u781:
  2522  03E8  2BE3               	goto	l307
  2523  03E9                     u780:
  2524  03E9                     l1804:
  2525  03E9  0811               	movf	17,w	;volatile
  2526  03EA  391F               	andlw	31
  2527  03EB  1D03               	btfss	3,2
  2528  03EC  2BEE               	goto	u791
  2529  03ED  2BEF               	goto	u790
  2530  03EE                     u791:
  2531  03EE  2BE3               	goto	l307
  2532  03EF                     u790:
  2533  03EF                     l310:
  2534  03EF  0008               	return
  2535  03F0                     __end_of_I2C_Master_Wait:
  2536                           
  2537                           	psect	text15
  2538  0301                     __ptext15:	
  2539 ;; *************** function _I2C_Master_Init *****************
  2540 ;; Defined at:
  2541 ;;		line 5 in file "I2C.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  c               4   13[BANK0 ] const unsigned long 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       4       0       0       0
  2556 ;;      Locals:         0       0       0       0       0
  2557 ;;      Temps:          4       0       0       0       0
  2558 ;;      Totals:         4       4       0       0       0
  2559 ;;Total ram usage:        8 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		___lldiv
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _I2C_Master_Init
  2571  0301                     _I2C_Master_Init:
  2572  0301                     l1830:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2575                           
  2576                           
  2577                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  2578  0301  3028               	movlw	40
  2579  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0304  0094               	movwf	20	;volatile
  2582  0305                     l1832:
  2583                           
  2584                           ;I2C.c: 8:     SSPCON2 = 0;
  2585  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2586  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2587  0307  0191               	clrf	17	;volatile
  2588  0308                     l1834:
  2589                           
  2590                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  2591  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2593  030A  0849               	movf	I2C_Master_Init@c,w
  2594  030B  00F4               	movwf	??_I2C_Master_Init
  2595  030C  084A               	movf	I2C_Master_Init@c+1,w
  2596  030D  00F5               	movwf	??_I2C_Master_Init+1
  2597  030E  084B               	movf	I2C_Master_Init@c+2,w
  2598  030F  00F6               	movwf	??_I2C_Master_Init+2
  2599  0310  084C               	movf	I2C_Master_Init@c+3,w
  2600  0311  00F7               	movwf	??_I2C_Master_Init+3
  2601  0312  3002               	movlw	2
  2602  0313                     u875:
  2603  0313  1003               	clrc
  2604  0314  0DF4               	rlf	??_I2C_Master_Init,f
  2605  0315  0DF5               	rlf	??_I2C_Master_Init+1,f
  2606  0316  0DF6               	rlf	??_I2C_Master_Init+2,f
  2607  0317  0DF7               	rlf	??_I2C_Master_Init+3,f
  2608  0318                     u870:
  2609  0318  3EFF               	addlw	-1
  2610  0319  1D03               	skipz
  2611  031A  2B13               	goto	u875
  2612  031B  0877               	movf	??_I2C_Master_Init+3,w
  2613  031C  00BF               	movwf	___lldiv@divisor+3
  2614  031D  0876               	movf	??_I2C_Master_Init+2,w
  2615  031E  00BE               	movwf	___lldiv@divisor+2
  2616  031F  0875               	movf	??_I2C_Master_Init+1,w
  2617  0320  00BD               	movwf	___lldiv@divisor+1
  2618  0321  0874               	movf	??_I2C_Master_Init,w
  2619  0322  00BC               	movwf	___lldiv@divisor
  2620  0323  3000               	movlw	0
  2621  0324  00C3               	movwf	___lldiv@dividend+3
  2622  0325  307A               	movlw	122
  2623  0326  00C2               	movwf	___lldiv@dividend+2
  2624  0327  3012               	movlw	18
  2625  0328  00C1               	movwf	___lldiv@dividend+1
  2626  0329  3000               	movlw	0
  2627  032A  00C0               	movwf	___lldiv@dividend
  2628  032B  120A  118A  20D6  120A  118A  	fcall	___lldiv
  2629  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0332  083C               	movf	?___lldiv,w
  2632  0333  3EFF               	addlw	255
  2633  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2634  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2635  0336  0093               	movwf	19	;volatile
  2636  0337                     l1836:
  2637                           
  2638                           ;I2C.c: 10:     SSPSTAT = 0;
  2639  0337  0194               	clrf	20	;volatile
  2640  0338                     l1838:
  2641                           
  2642                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  2643  0338  1587               	bsf	7,3	;volatile
  2644  0339                     l1840:
  2645                           
  2646                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  2647  0339  1607               	bsf	7,4	;volatile
  2648  033A                     l304:
  2649  033A  0008               	return
  2650  033B                     __end_of_I2C_Master_Init:
  2651                           
  2652                           	psect	text16
  2653  00D6                     __ptext16:	
  2654 ;; *************** function ___lldiv *****************
  2655 ;; Defined at:
  2656 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  divisor         4    0[BANK0 ] unsigned long 
  2659 ;;  dividend        4    4[BANK0 ] unsigned long 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  quotient        4    8[BANK0 ] unsigned long 
  2662 ;;  counter         1   12[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  4    0[BANK0 ] unsigned long 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       8       0       0       0
  2673 ;;      Locals:         0       5       0       0       0
  2674 ;;      Temps:          1       0       0       0       0
  2675 ;;      Totals:         1      13       0       0       0
  2676 ;;Total ram usage:       14 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    1
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_I2C_Master_Init
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function ___lldiv
  2688  00D6                     ___lldiv:
  2689  00D6                     l1806:	
  2690                           ;incstack = 0
  2691                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2692                           
  2693  00D6  3000               	movlw	0
  2694  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2695  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2696  00D9  00C7               	movwf	___lldiv@quotient+3
  2697  00DA  3000               	movlw	0
  2698  00DB  00C6               	movwf	___lldiv@quotient+2
  2699  00DC  3000               	movlw	0
  2700  00DD  00C5               	movwf	___lldiv@quotient+1
  2701  00DE  3000               	movlw	0
  2702  00DF  00C4               	movwf	___lldiv@quotient
  2703  00E0  083F               	movf	___lldiv@divisor+3,w
  2704  00E1  043E               	iorwf	___lldiv@divisor+2,w
  2705  00E2  043D               	iorwf	___lldiv@divisor+1,w
  2706  00E3  043C               	iorwf	___lldiv@divisor,w
  2707  00E4  1903               	skipnz
  2708  00E5  28E7               	goto	u801
  2709  00E6  28E8               	goto	u800
  2710  00E7                     u801:
  2711  00E7  2935               	goto	l1826
  2712  00E8                     u800:
  2713  00E8                     l1808:
  2714  00E8  01C8               	clrf	___lldiv@counter
  2715  00E9  0AC8               	incf	___lldiv@counter,f
  2716  00EA  28F8               	goto	l1812
  2717  00EB                     l1810:
  2718  00EB  3001               	movlw	1
  2719  00EC  00F3               	movwf	??___lldiv
  2720  00ED                     u815:
  2721  00ED  1003               	clrc
  2722  00EE  0DBC               	rlf	___lldiv@divisor,f
  2723  00EF  0DBD               	rlf	___lldiv@divisor+1,f
  2724  00F0  0DBE               	rlf	___lldiv@divisor+2,f
  2725  00F1  0DBF               	rlf	___lldiv@divisor+3,f
  2726  00F2  0BF3               	decfsz	??___lldiv,f
  2727  00F3  28ED               	goto	u815
  2728  00F4  3001               	movlw	1
  2729  00F5  00F3               	movwf	??___lldiv
  2730  00F6  0873               	movf	??___lldiv,w
  2731  00F7  07C8               	addwf	___lldiv@counter,f
  2732  00F8                     l1812:
  2733  00F8  1FBF               	btfss	___lldiv@divisor+3,7
  2734  00F9  28FB               	goto	u821
  2735  00FA  28FC               	goto	u820
  2736  00FB                     u821:
  2737  00FB  28EB               	goto	l1810
  2738  00FC                     u820:
  2739  00FC                     l1814:
  2740  00FC  3001               	movlw	1
  2741  00FD  00F3               	movwf	??___lldiv
  2742  00FE                     u835:
  2743  00FE  1003               	clrc
  2744  00FF  0DC4               	rlf	___lldiv@quotient,f
  2745  0100  0DC5               	rlf	___lldiv@quotient+1,f
  2746  0101  0DC6               	rlf	___lldiv@quotient+2,f
  2747  0102  0DC7               	rlf	___lldiv@quotient+3,f
  2748  0103  0BF3               	decfsz	??___lldiv,f
  2749  0104  28FE               	goto	u835
  2750  0105                     l1816:
  2751  0105  083F               	movf	___lldiv@divisor+3,w
  2752  0106  0243               	subwf	___lldiv@dividend+3,w
  2753  0107  1D03               	skipz
  2754  0108  2913               	goto	u845
  2755  0109  083E               	movf	___lldiv@divisor+2,w
  2756  010A  0242               	subwf	___lldiv@dividend+2,w
  2757  010B  1D03               	skipz
  2758  010C  2913               	goto	u845
  2759  010D  083D               	movf	___lldiv@divisor+1,w
  2760  010E  0241               	subwf	___lldiv@dividend+1,w
  2761  010F  1D03               	skipz
  2762  0110  2913               	goto	u845
  2763  0111  083C               	movf	___lldiv@divisor,w
  2764  0112  0240               	subwf	___lldiv@dividend,w
  2765  0113                     u845:
  2766  0113  1C03               	skipc
  2767  0114  2916               	goto	u841
  2768  0115  2917               	goto	u840
  2769  0116                     u841:
  2770  0116  2926               	goto	l1822
  2771  0117                     u840:
  2772  0117                     l1818:
  2773  0117  083C               	movf	___lldiv@divisor,w
  2774  0118  02C0               	subwf	___lldiv@dividend,f
  2775  0119  083D               	movf	___lldiv@divisor+1,w
  2776  011A  1C03               	skipc
  2777  011B  0F3D               	incfsz	___lldiv@divisor+1,w
  2778  011C  02C1               	subwf	___lldiv@dividend+1,f
  2779  011D  083E               	movf	___lldiv@divisor+2,w
  2780  011E  1C03               	skipc
  2781  011F  0F3E               	incfsz	___lldiv@divisor+2,w
  2782  0120  02C2               	subwf	___lldiv@dividend+2,f
  2783  0121  083F               	movf	___lldiv@divisor+3,w
  2784  0122  1C03               	skipc
  2785  0123  0F3F               	incfsz	___lldiv@divisor+3,w
  2786  0124  02C3               	subwf	___lldiv@dividend+3,f
  2787  0125                     l1820:
  2788  0125  1444               	bsf	___lldiv@quotient,0
  2789  0126                     l1822:
  2790  0126  3001               	movlw	1
  2791  0127                     u855:
  2792  0127  1003               	clrc
  2793  0128  0CBF               	rrf	___lldiv@divisor+3,f
  2794  0129  0CBE               	rrf	___lldiv@divisor+2,f
  2795  012A  0CBD               	rrf	___lldiv@divisor+1,f
  2796  012B  0CBC               	rrf	___lldiv@divisor,f
  2797  012C  3EFF               	addlw	-1
  2798  012D  1D03               	skipz
  2799  012E  2927               	goto	u855
  2800  012F                     l1824:
  2801  012F  3001               	movlw	1
  2802  0130  02C8               	subwf	___lldiv@counter,f
  2803  0131  1D03               	btfss	3,2
  2804  0132  2934               	goto	u861
  2805  0133  2935               	goto	u860
  2806  0134                     u861:
  2807  0134  28FC               	goto	l1814
  2808  0135                     u860:
  2809  0135                     l1826:
  2810  0135  0847               	movf	___lldiv@quotient+3,w
  2811  0136  00BF               	movwf	?___lldiv+3
  2812  0137  0846               	movf	___lldiv@quotient+2,w
  2813  0138  00BE               	movwf	?___lldiv+2
  2814  0139  0845               	movf	___lldiv@quotient+1,w
  2815  013A  00BD               	movwf	?___lldiv+1
  2816  013B  0844               	movf	___lldiv@quotient,w
  2817  013C  00BC               	movwf	?___lldiv
  2818  013D                     l452:
  2819  013D  0008               	return
  2820  013E                     __end_of___lldiv:
  2821                           
  2822                           	psect	text17
  2823  013E                     __ptext17:	
  2824 ;; *************** function _CONVET *****************
  2825 ;; Defined at:
  2826 ;;		line 155 in file "MAIN_PRO.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       0       0       0       0
  2841 ;;      Locals:         0       0       0       0       0
  2842 ;;      Temps:          2       0       0       0       0
  2843 ;;      Totals:         2       0       0       0       0
  2844 ;;Total ram usage:        2 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _CONVET
  2856  013E                     _CONVET:
  2857  013E                     l1574:	
  2858                           ;incstack = 0
  2859                           ; Regs used in _CONVET: [wreg+status,2+status,0]
  2860                           
  2861                           
  2862                           ;MAIN_PRO.c: 156:     mou_t = ((mou & 0b00010000)>>4);
  2863  013E  0879               	movf	_mou,w
  2864  013F  00F3               	movwf	??_CONVET
  2865  0140  3004               	movlw	4
  2866  0141                     u605:
  2867  0141  1003               	clrc
  2868  0142  0CF3               	rrf	??_CONVET,f
  2869  0143  3EFF               	addlw	-1
  2870  0144  1D03               	skipz
  2871  0145  2941               	goto	u605
  2872  0146  0873               	movf	??_CONVET,w
  2873  0147  3901               	andlw	1
  2874  0148  00F4               	movwf	??_CONVET+1
  2875  0149  0874               	movf	??_CONVET+1,w
  2876  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2877  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2878  014C  00A6               	movwf	_mou_t
  2879  014D                     l1576:
  2880                           
  2881                           ;MAIN_PRO.c: 157:     mou_u = (mou & 0b00001111);
  2882  014D  0879               	movf	_mou,w
  2883  014E  390F               	andlw	15
  2884  014F  00F3               	movwf	??_CONVET
  2885  0150  0873               	movf	??_CONVET,w
  2886  0151  00AB               	movwf	_mou_u
  2887  0152                     l1578:
  2888                           
  2889                           ;MAIN_PRO.c: 158:     day_t = ((day & 0b00110000)>>4);
  2890  0152  0878               	movf	_day,w
  2891  0153  00F3               	movwf	??_CONVET
  2892  0154  3004               	movlw	4
  2893  0155                     u615:
  2894  0155  1003               	clrc
  2895  0156  0CF3               	rrf	??_CONVET,f
  2896  0157  3EFF               	addlw	-1
  2897  0158  1D03               	skipz
  2898  0159  2955               	goto	u615
  2899  015A  0873               	movf	??_CONVET,w
  2900  015B  3903               	andlw	3
  2901  015C  00F4               	movwf	??_CONVET+1
  2902  015D  0874               	movf	??_CONVET+1,w
  2903  015E  00A5               	movwf	_day_t
  2904                           
  2905                           ;MAIN_PRO.c: 159:     day_u = (day & 0b00001111);
  2906  015F  0878               	movf	_day,w
  2907  0160  390F               	andlw	15
  2908  0161  00F3               	movwf	??_CONVET
  2909  0162  0873               	movf	??_CONVET,w
  2910  0163  00AA               	movwf	_day_u
  2911  0164                     l1580:
  2912                           
  2913                           ;MAIN_PRO.c: 160:     hor_t = ((hor & 0b00110000)>>4);
  2914  0164  0830               	movf	_hor,w
  2915  0165  00F3               	movwf	??_CONVET
  2916  0166  3004               	movlw	4
  2917  0167                     u625:
  2918  0167  1003               	clrc
  2919  0168  0CF3               	rrf	??_CONVET,f
  2920  0169  3EFF               	addlw	-1
  2921  016A  1D03               	skipz
  2922  016B  2967               	goto	u625
  2923  016C  0873               	movf	??_CONVET,w
  2924  016D  3903               	andlw	3
  2925  016E  00F4               	movwf	??_CONVET+1
  2926  016F  0874               	movf	??_CONVET+1,w
  2927  0170  00A4               	movwf	_hor_t
  2928  0171                     l1582:
  2929                           
  2930                           ;MAIN_PRO.c: 161:     hor_u = (hor & 0b00001111);
  2931  0171  0830               	movf	_hor,w
  2932  0172  390F               	andlw	15
  2933  0173  00F3               	movwf	??_CONVET
  2934  0174  0873               	movf	??_CONVET,w
  2935  0175  00A9               	movwf	_hor_u
  2936                           
  2937                           ;MAIN_PRO.c: 162:     min_t = ((min & 0b01110000)>>4);
  2938  0176  082F               	movf	_min,w
  2939  0177  00F3               	movwf	??_CONVET
  2940  0178  3004               	movlw	4
  2941  0179                     u635:
  2942  0179  1003               	clrc
  2943  017A  0CF3               	rrf	??_CONVET,f
  2944  017B  3EFF               	addlw	-1
  2945  017C  1D03               	skipz
  2946  017D  2979               	goto	u635
  2947  017E  0873               	movf	??_CONVET,w
  2948  017F  3907               	andlw	7
  2949  0180  00F4               	movwf	??_CONVET+1
  2950  0181  0874               	movf	??_CONVET+1,w
  2951  0182  00A3               	movwf	_min_t
  2952  0183                     l1584:
  2953                           
  2954                           ;MAIN_PRO.c: 163:     min_u = (min & 0b00001111);
  2955  0183  082F               	movf	_min,w
  2956  0184  390F               	andlw	15
  2957  0185  00F3               	movwf	??_CONVET
  2958  0186  0873               	movf	??_CONVET,w
  2959  0187  00A8               	movwf	_min_u
  2960  0188                     l1586:
  2961                           
  2962                           ;MAIN_PRO.c: 164:     seg_t = ((seg & 0b01110000)>>4);
  2963  0188  082E               	movf	_seg,w
  2964  0189  00F3               	movwf	??_CONVET
  2965  018A  3004               	movlw	4
  2966  018B                     u645:
  2967  018B  1003               	clrc
  2968  018C  0CF3               	rrf	??_CONVET,f
  2969  018D  3EFF               	addlw	-1
  2970  018E  1D03               	skipz
  2971  018F  298B               	goto	u645
  2972  0190  0873               	movf	??_CONVET,w
  2973  0191  3907               	andlw	7
  2974  0192  00F4               	movwf	??_CONVET+1
  2975  0193  0874               	movf	??_CONVET+1,w
  2976  0194  00A2               	movwf	_seg_t
  2977                           
  2978                           ;MAIN_PRO.c: 165:     seg_u = (seg & 0b00001111);
  2979  0195  082E               	movf	_seg,w
  2980  0196  390F               	andlw	15
  2981  0197  00F3               	movwf	??_CONVET
  2982  0198  0873               	movf	??_CONVET,w
  2983  0199  00A7               	movwf	_seg_u
  2984  019A                     l160:
  2985  019A  0008               	return
  2986  019B                     __end_of_CONVET:
  2987                           
  2988                           	psect	text18
  2989  01F7                     __ptext18:	
  2990 ;; *************** function _isr *****************
  2991 ;; Defined at:
  2992 ;;		line 58 in file "MAIN_PRO.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0
  3008 ;;      Temps:          3       0       0       0       0
  3009 ;;      Totals:         3       0       0       0       0
  3010 ;;Total ram usage:        3 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		Interrupt level 1
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _isr
  3021  01F7                     _isr:
  3022  01F7                     i1l1608:
  3023                           
  3024                           ;MAIN_PRO.c: 59:     if (PIR1bits.RCIF==1){
  3025  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3026  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3027  01F9  1E8C               	btfss	12,5	;volatile
  3028  01FA  29FC               	goto	u68_21
  3029  01FB  29FD               	goto	u68_20
  3030  01FC                     u68_21:
  3031  01FC  2A2E               	goto	i1l137
  3032  01FD                     u68_20:
  3033  01FD                     i1l1610:
  3034                           
  3035                           ;MAIN_PRO.c: 60:         temp = 0;
  3036  01FD  01FA               	clrf	_temp
  3037  01FE                     i1l1612:
  3038                           
  3039                           ;MAIN_PRO.c: 61:         temp = RCREG;
  3040  01FE  081A               	movf	26,w	;volatile
  3041  01FF  00F0               	movwf	??_isr
  3042  0200  0870               	movf	??_isr,w
  3043  0201  00FA               	movwf	_temp
  3044  0202                     i1l1614:
  3045                           
  3046                           ;MAIN_PRO.c: 62:         if (temp == 0X30){PORTAbits.RA1=0;}
  3047  0202  3030               	movlw	48
  3048  0203  067A               	xorwf	_temp,w
  3049  0204  1D03               	btfss	3,2
  3050  0205  2A07               	goto	u69_21
  3051  0206  2A08               	goto	u69_20
  3052  0207                     u69_21:
  3053  0207  2A09               	goto	i1l1618
  3054  0208                     u69_20:
  3055  0208                     i1l1616:
  3056  0208  1085               	bcf	5,1	;volatile
  3057  0209                     i1l1618:
  3058                           
  3059                           ;MAIN_PRO.c: 63:         if (temp == 0X31){PORTAbits.RA1=1;}
  3060  0209  3031               	movlw	49
  3061  020A  067A               	xorwf	_temp,w
  3062  020B  1D03               	btfss	3,2
  3063  020C  2A0E               	goto	u70_21
  3064  020D  2A0F               	goto	u70_20
  3065  020E                     u70_21:
  3066  020E  2A10               	goto	i1l1622
  3067  020F                     u70_20:
  3068  020F                     i1l1620:
  3069  020F  1485               	bsf	5,1	;volatile
  3070  0210                     i1l1622:
  3071                           
  3072                           ;MAIN_PRO.c: 64:         if (temp == 0X32){PORTAbits.RA0=0;}
  3073  0210  3032               	movlw	50
  3074  0211  067A               	xorwf	_temp,w
  3075  0212  1D03               	btfss	3,2
  3076  0213  2A15               	goto	u71_21
  3077  0214  2A16               	goto	u71_20
  3078  0215                     u71_21:
  3079  0215  2A17               	goto	i1l1626
  3080  0216                     u71_20:
  3081  0216                     i1l1624:
  3082  0216  1005               	bcf	5,0	;volatile
  3083  0217                     i1l1626:
  3084                           
  3085                           ;MAIN_PRO.c: 65:         if (temp == 0X33){PORTAbits.RA0=1;}
  3086  0217  3033               	movlw	51
  3087  0218  067A               	xorwf	_temp,w
  3088  0219  1D03               	btfss	3,2
  3089  021A  2A1C               	goto	u72_21
  3090  021B  2A1D               	goto	u72_20
  3091  021C                     u72_21:
  3092  021C  2A1E               	goto	i1l1630
  3093  021D                     u72_20:
  3094  021D                     i1l1628:
  3095  021D  1405               	bsf	5,0	;volatile
  3096  021E                     i1l1630:
  3097                           
  3098                           ;MAIN_PRO.c: 66:         if (temp == 0X34){C=1;}
  3099  021E  3034               	movlw	52
  3100  021F  067A               	xorwf	_temp,w
  3101  0220  1D03               	btfss	3,2
  3102  0221  2A23               	goto	u73_21
  3103  0222  2A24               	goto	u73_20
  3104  0223                     u73_21:
  3105  0223  2A26               	goto	i1l1634
  3106  0224                     u73_20:
  3107  0224                     i1l1632:
  3108  0224  01B6               	clrf	_C
  3109  0225  0AB6               	incf	_C,f
  3110  0226                     i1l1634:
  3111                           
  3112                           ;MAIN_PRO.c: 67:         if (temp == 0X35){b=1;}
  3113  0226  3035               	movlw	53
  3114  0227  067A               	xorwf	_temp,w
  3115  0228  1D03               	btfss	3,2
  3116  0229  2A2B               	goto	u74_21
  3117  022A  2A2C               	goto	u74_20
  3118  022B                     u74_21:
  3119  022B  2A2E               	goto	i1l137
  3120  022C                     u74_20:
  3121  022C                     i1l1636:
  3122  022C  01BA               	clrf	_b
  3123  022D  0ABA               	incf	_b,f
  3124  022E                     i1l137:	
  3125                           ;MAIN_PRO.c: 69:     }
  3126                           
  3127                           
  3128                           ;MAIN_PRO.c: 70:     if (INTCONbits.TMR0IF==1){
  3129  022E  1D0B               	btfss	11,2	;volatile
  3130  022F  2A31               	goto	u75_21
  3131  0230  2A32               	goto	u75_20
  3132  0231                     u75_21:
  3133  0231  2A40               	goto	i1l146
  3134  0232                     u75_20:
  3135  0232                     i1l1638:
  3136                           
  3137                           ;MAIN_PRO.c: 71:         TMR0=236;
  3138  0232  30EC               	movlw	236
  3139  0233  0081               	movwf	1	;volatile
  3140  0234                     i1l1640:
  3141                           
  3142                           ;MAIN_PRO.c: 72:         INTCONbits.TMR0IF=0;
  3143  0234  110B               	bcf	11,2	;volatile
  3144  0235                     i1l1642:
  3145                           
  3146                           ;MAIN_PRO.c: 73:         r++;
  3147  0235  3001               	movlw	1
  3148  0236  00F0               	movwf	??_isr
  3149  0237  0870               	movf	??_isr,w
  3150  0238  07B7               	addwf	_r,f
  3151  0239                     i1l1644:
  3152                           
  3153                           ;MAIN_PRO.c: 74:         if(r==10){
  3154  0239  300A               	movlw	10
  3155  023A  0637               	xorwf	_r,w
  3156  023B  1D03               	btfss	3,2
  3157  023C  2A3E               	goto	u76_21
  3158  023D  2A3F               	goto	u76_20
  3159  023E                     u76_21:
  3160  023E  2A40               	goto	i1l146
  3161  023F                     u76_20:
  3162  023F                     i1l1646:
  3163                           
  3164                           ;MAIN_PRO.c: 75:             r=0;
  3165  023F  01B7               	clrf	_r
  3166  0240                     i1l146:
  3167  0240  0872               	movf	??_isr+2,w
  3168  0241  008A               	movwf	10
  3169  0242  0E71               	swapf	??_isr+1,w
  3170  0243  0083               	movwf	3
  3171  0244  0EFE               	swapf	btemp,f
  3172  0245  0E7E               	swapf	btemp,w
  3173  0246  0009               	retfie
  3174  0247                     __end_of_isr:
  3175  007E                     btemp	set	126	;btemp
  3176  007E                     wtemp0	set	126
  3177                           
  3178                           	psect	intentry
  3179  0004                     __pintentry:	
  3180                           ;incstack = 0
  3181                           ; Regs used in _isr: [wreg+status,2+status,0]
  3182                           
  3183  0004                     interrupt_function:
  3184  007E                     saved_w	set	btemp
  3185  0004  00FE               	movwf	btemp
  3186  0005  0E03               	swapf	3,w
  3187  0006  00F1               	movwf	??_isr+1
  3188  0007  080A               	movf	10,w
  3189  0008  00F2               	movwf	??_isr+2
  3190  0009  120A  118A  29F7   	ljmp	_isr
  3191                           
  3192                           	psect	config
  3193                           
  3194                           ;Config register CONFIG1 @ 0x2007
  3195                           ;	Oscillator Selection bits
  3196                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3197                           ;	Watchdog Timer Enable bit
  3198                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3199                           ;	Power-up Timer Enable bit
  3200                           ;	PWRTE = OFF, PWRT disabled
  3201                           ;	RE3/MCLR pin function select bit
  3202                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3203                           ;	Code Protection bit
  3204                           ;	CP = OFF, Program memory code protection is disabled
  3205                           ;	Data Code Protection bit
  3206                           ;	CPD = OFF, Data memory code protection is disabled
  3207                           ;	Brown Out Reset Selection bits
  3208                           ;	BOREN = OFF, BOR disabled
  3209                           ;	Internal External Switchover bit
  3210                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3211                           ;	Fail-Safe Clock Monitor Enabled bit
  3212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3213                           ;	Low Voltage Programming Enable bit
  3214                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3215                           ;	In-Circuit Debugger Mode bit
  3216                           ;	DEBUG = 0x1, unprogrammed default
  3217  2007                     	org	8199
  3218  2007  20D4               	dw	8404
  3219                           
  3220                           ;Config register CONFIG2 @ 0x2008
  3221                           ;	Brown-out Reset Selection bit
  3222                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3223                           ;	Flash Program Memory Self Write Enable bits
  3224                           ;	WRT = OFF, Write protection off
  3225  2008                     	org	8200
  3226  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     18      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _forced_send->_send_hora
    _forced_send->_send_min
    _forced_send->_send_seg
    _Setup->_initOsc
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2370
                                             17 BANK0      1     1      0
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                        _forced_send
 ---------------------------------------------------------------------------------
 (1) _forced_send                                          1     1      0       0
                                              5 COMMON     1     1      0
                          _send_hora
                           _send_min
                           _send_seg
 ---------------------------------------------------------------------------------
 (2) _send_seg                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_min                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_hora                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      22
                            _SET_RXT
                            _SET_TXR
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _SET_RXT
     _SET_TXR
     _initOsc
   _forced_send
     _send_hora
     _send_min
     _send_seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 01:35:41 2021

                                _C 0036                                  _H 0020  
                                _L 003B                                  _M 0031  
                                _Z 0039                                  _b 003A  
                                _h 0034                                  _m 0033  
                                _q 0035                                  _r 0037  
                                _s 0032                                  _z 0038  
                               fsr 0004                                l200 0299  
                              l204 02A2                                l212 024B  
                              l221 0264                                l310 03EF  
                              l207 02C2                                l160 019A  
                              l304 033A                                l224 0284  
                              l313 0416                                l217 025B  
                              l322 0404                                l307 03E3  
                              l316 041F                                l325 03C9  
                              l157 03A3                                l173 0373  
                              l326 03CC                                l270 01B5  
                              l190 0300                                l327 03D3  
                              l319 040D                                l271 01BB  
                              l183 02D7                                l256 03E2  
                              l272 01C1                                l273 01C7  
                              l265 019D                                l274 01CD  
                              l266 01F5                                l178 02C7  
                              l259 03FA                                l275 01F6  
                              l267 01A3                                l187 02E0  
                              l195 0289                                l452 013D  
                              l268 01A9                                l269 01AF  
                              _GIE 005F                                u400 0251  
                              u401 0250                                u410 0261  
                              u411 0260                                u420 026A  
                              u421 0269                                u430 028F  
                              u431 028E                                u440 029F  
                              u441 029E                                u450 02A8  
                              u451 02A7                                u460 02CD  
                              u605 0141                                u461 02CC  
                              u470 02DD                                u615 0155  
                              u471 02DC                                u800 00E8  
                              u480 02E6                                u625 0167  
                              u801 00E7                                u481 02E5  
                              u650 0342                                u635 0179  
                              u651 0341                                u820 00FC  
                              u660 0353                                u645 018B  
                              u821 00FB                                u661 0352  
                              u670 036A                                u815 00ED  
                              u671 0369                                u840 0117  
                              u841 0116                                u835 00FE  
                              u860 0135                                u780 03E9  
                              u861 0134                                u845 0113  
                              u781 03E8                                u870 0318  
                              u790 03EF                                u855 0127  
                              u791 03EE                                u880 03C5  
                              u881 03C4                                u875 0313  
                              _day 0078                                _hor 0030  
                              _min 002F                                _isr 01F7  
                              _seg 002E                                _mou 0079  
                              indf 0000                               l2000 02B7  
                             l2002 02F5                               l2004 01DB  
                             l1400 03D4                               l1402 03DD  
                             l1410 0251                               l1404 03E1  
                             l1500 0374                               l1412 0258  
                             l1510 038A                               l1502 0386  
                             l1430 0286                               l1422 026F  
                             l1406 0247                               l1520 0391  
                             l1512 038D                               l1504 0387  
                             l1440 02A8                               l1432 028F  
                             l1416 0262                               l1408 0248  
                             l1600 035B                               l1522 0392  
                             l1514 038E                               l1506 0388  
                             l1450 02C3                               l1434 0296  
                             l1418 026A                               l1602 0361  
                             l1524 0393                               l1516 038F  
                             l1508 0389                               l1460 02DE  
                             l1452 02C4                               l1444 02AD  
                             l1428 0285                               l1604 036A  
                             l1526 0399                               l1518 0390  
                             l1462 02E6                               l1454 02CD  
                             l1438 02A0                               l1606 036F  
                             l1392 01D3                               l1528 039E  
                             l1456 02D4                               l1810 00EB  
                             l1802 03E3                               l1466 02EB  
                             l1580 0164                               l1820 0125  
                             l1812 00F8                               l1804 03E9  
                             l1388 019C                               l1900 0079  
                             l1582 0171                               l1574 013E  
                             l1822 0126                               l1814 00FC  
                             l1806 00D6                               l1830 0301  
                             l1398 03F0                               l1590 0342  
                             l1910 00C3                               l1902 0088  
                             l1584 0183                               l1576 014D  
                             l1824 012F                               l1816 0105  
                             l1808 00E8                               l1840 0339  
                             l1832 0305                               l1592 0347  
                             l1912 00C8                               l1904 0097  
                             l1586 0188                               l1578 0152  
                             l1818 0117                               l1826 0135  
                             l1834 0308                               l1850 0417  
                             l1842 040E                               l1594 034D  
                             l1914 00CD                               l1906 00A6  
                             l1836 0337                               l1860 03BA  
                             l1852 041C                               l1844 0413  
                             l1596 0353                               l1588 033B  
                             l1908 00B5                               l1838 0338  
                             l1862 03BF                               l1854 03A4  
                             l1870 0405                               l1846 03FB  
                             l1598 0358                               l1864 03C5  
                             l1856 03A9                               l1872 040A  
                             l1848 0400                               l1880 0028  
                             l1866 03CD                               l1858 03B1  
                             l1890 0045                               l1882 0029  
                             l1874 001F                               l1892 004D  
                             l1884 002A                               l1876 0024  
                             l1894 0052                               l1886 0037  
                             l1878 0027                               l1896 005B  
                             l1888 003C                               l1898 006A  
                             l1998 0279                               ?_isr 0070  
                             _PEIE 005E                               _TMR0 0001  
                  __end_of_SET_RXT 03FB                    __end_of_SET_TXR 03E3  
 __end_of_I2C_Master_RepeatedStart 0420                               _main 001F  
                     ?_forced_send 0070                               _temp 007A  
                             _week 002D                               _year 002C  
                             btemp 007E                               start 000C  
                            ??_isr 0070                   ?_I2C_Master_Init 0049  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 013E  
                            i1l137 022E                              i1l146 0240  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u70_20 020F  
                            u70_21 020E                              u71_20 0216  
                            u71_21 0215                              u72_20 021D  
                            u72_21 021C                              u73_20 0224  
                            u73_21 0223                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u74_20 022C  
                            _SSPIF 0063                              u74_21 022B  
                            u75_20 0232                              u75_21 0231  
                            u76_20 023F                              u68_20 01FD  
                            u76_21 023E                              u68_21 01FC  
                            u69_20 0208                              u69_21 0207  
                            _TXREG 0019                              _Setup 0374  
                            _day_t 0025                              _day_u 002A  
                  __end_of_initOsc 01F7                              _hor_t 0024  
                            _hor_u 0029                              _min_t 0023  
                            _min_u 0028                              _seg_t 0022  
                            _seg_u 0027                              _mou_t 0026  
                            _mou_u 002B                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 000F                       __end_of_main 00D6  
                           ??_main 004D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                             ?_Setup 0070  
               ??_I2C_Master_Start 0073                          ??_SET_RXT 0073  
                        ??_SET_TXR 0073                 ??_I2C_Master_Write 0075  
                      initOsc@IRCF 0075                             _ANSELH 0189  
                           _CONVET 013E                             i1l1610 01FD  
                           i1l1620 020F                             i1l1612 01FE  
                           i1l1630 021E                             i1l1622 0210  
                           i1l1614 0202                             i1l1640 0234  
                           i1l1632 0224                             i1l1624 0216  
                           i1l1616 0208                             i1l1608 01F7  
                           i1l1642 0235                             i1l1634 0226  
                           i1l1626 0217                             i1l1618 0209  
                           i1l1644 0239                             i1l1636 022C  
                           i1l1628 021D                             i1l1646 023F  
                           i1l1638 0232                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0417  
                        ??___lldiv 0073                   __end_of_send_min 02C3  
                 __end_of_send_seg 0285                          ??_initOsc 0073  
                           saved_w 007E            __end_of__initialization 001B  
             __size_of_forced_send 0039                     __pcstackCOMMON 0070  
                    __end_of_Setup 03A4                     _OPTION_REGbits 0081  
                          ??_Setup 0076                            ?_CONVET 0070  
                       __pbssBANK0 0020                         __pmaintext 001F  
                       __pintentry 0004                 __size_of_send_hora 003E  
                          _SET_RXT 03F0                            _SET_TXR 03D4  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                  __size_of_CONVET 005D                          ?_send_min 0070  
                        ?_send_seg 0070                            ___lldiv 00D6  
                          __ptext1 033B                            __ptext2 0247  
                          __ptext3 0285                            __ptext4 02C3  
                          __ptext5 0374                            __ptext6 019B  
                          __ptext7 03D4                            __ptext8 03F0  
                          __ptext9 03FB                            _initOsc 019B  
                     __size_of_isr 0050           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 0421  
             end_of_initialization 001B         ??_I2C_Master_RepeatedStart 0073  
                __end_of_send_hora 0301          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 003C  
                       ??_send_min 0073                         ??_send_seg 0073  
                  ___lldiv@counter 0048                          _RCSTAbits 0018  
                 I2C_Master_Init@c 0049                   I2C_Master_Read@a 0073  
                        _PORTAbits 0005                          _TRISCbits 0087  
                   __end_of_CONVET 019B                          _TXSTAbits 0098  
                      _BAUDCTLbits 0187                start_initialization 000F  
                      __end_of_isr 0247                           ??_CONVET 0073  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                      ??_forced_send 0075  
                ??_I2C_Master_Stop 0073                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 003C  
                         ?_SET_RXT 0070                           ?_SET_TXR 0070  
                 _I2C_Master_Start 040E                   _I2C_Master_Write 03FB  
              __end_of_forced_send 0374                  __size_of_send_min 003E  
                __size_of_send_seg 003E                           ?___lldiv 003C  
                         ?_initOsc 0070                     __size_of_Setup 0030  
                interrupt_function 0004                          clear_ram0 0420  
                         _PIE1bits 008C                          _send_hora 02C3  
                         _PIR1bits 000C                I2C_Master_Read@temp 003C  
                 __size_of_SET_RXT 000B                   __size_of_SET_TXR 000F  
                      _forced_send 033B                         ?_send_hora 0070  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                    _I2C_Master_Init 0301  
                  _I2C_Master_Read 03A4                    _I2C_Master_Wait 03E3  
                  _I2C_Master_Stop 0405                   __size_of_initOsc 005C  
                         __ptext10 0405                           __ptext11 040E  
                         __ptext12 0417                           __ptext13 03A4  
                         __ptext14 03E3                           __ptext15 0301  
                         __ptext16 00D6                           __ptext17 013E  
                         __ptext18 01F7                      __size_of_main 00B7  
                         _send_min 0285                           _send_seg 0247  
         __end_of_I2C_Master_Start 0417           __end_of_I2C_Master_Write 0405  
                       _INTCONbits 000B                           intlevel1 0000  
                 ___lldiv@dividend 0040                        ??_send_hora 0073  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 033B  
          __end_of_I2C_Master_Read 03D4            __end_of_I2C_Master_Wait 03F0  
          __end_of_I2C_Master_Stop 040E                   ___lldiv@quotient 0044  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
