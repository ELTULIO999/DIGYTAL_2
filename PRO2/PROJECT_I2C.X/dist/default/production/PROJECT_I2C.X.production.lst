

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 13:23:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0013                     _SSPBUF	set	19
   378  0014                     _SSPCON	set	20
   379  0019                     _TXREG	set	25
   380  0009                     _PORTE	set	9
   381  0008                     _PORTD	set	8
   382  0007                     _PORTC	set	7
   383  0006                     _PORTB	set	6
   384  0005                     _PORTA	set	5
   385  0001                     _TMR0	set	1
   386  000B                     _INTCONbits	set	11
   387  0005                     _PORTAbits	set	5
   388  001A                     _RCREG	set	26
   389  000C                     _PIR1bits	set	12
   390  0063                     _SSPIF	set	99
   391  005E                     _PEIE	set	94
   392  005F                     _GIE	set	95
   393  0091                     _SSPCON2bits	set	145
   394  0087                     _TRISCbits	set	135
   395  0094                     _SSPSTAT	set	148
   396  0093                     _SSPADD	set	147
   397  0091                     _SSPCON2	set	145
   398  008F                     _OSCCONbits	set	143
   399  0098                     _TXSTAbits	set	152
   400  0081                     _OPTION_REGbits	set	129
   401  008C                     _PIE1bits	set	140
   402  0089                     _TRISE	set	137
   403  0088                     _TRISD	set	136
   404  0087                     _TRISC	set	135
   405  0086                     _TRISB	set	134
   406  0085                     _TRISA	set	133
   407  0463                     _SSPIE	set	1123
   408  043C                     _TRISC4	set	1084
   409  043B                     _TRISC3	set	1083
   410  0189                     _ANSELH	set	393
   411  0188                     _ANSEL	set	392
   412                           
   413                           	psect	cinit
   414  000F                     start_initialization:	
   415                           ; #config settings
   416                           
   417  000F                     __initialization:
   418                           
   419                           ; Clear objects allocated to COMMON
   420  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   421  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   422  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   423                           
   424                           ; Clear objects allocated to BANK0
   425  0012  1383               	bcf	3,7	;select IRP bank0
   426  0013  3020               	movlw	low __pbssBANK0
   427  0014  0084               	movwf	4
   428  0015  303C               	movlw	low (__pbssBANK0+28)
   429  0016  120A  118A  23F8  120A  118A  	fcall	clear_ram0
   430  001B                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  001B                     __end_of__initialization:
   434  001B  0183               	clrf	3
   435  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  0078                     __pbssCOMMON:
   439  0078                     _day:
   440  0078                     	ds	1
   441  0079                     _mou:
   442  0079                     	ds	1
   443  007A                     _temp:
   444  007A                     	ds	1
   445                           
   446                           	psect	bssBANK0
   447  0020                     __pbssBANK0:
   448  0020                     _segundos:
   449  0020                     	ds	1
   450  0021                     _seg_t:
   451  0021                     	ds	1
   452  0022                     _min_t:
   453  0022                     	ds	1
   454  0023                     _hor_t:
   455  0023                     	ds	1
   456  0024                     _day_t:
   457  0024                     	ds	1
   458  0025                     _mou_t:
   459  0025                     	ds	1
   460  0026                     _seg_u:
   461  0026                     	ds	1
   462  0027                     _min_u:
   463  0027                     	ds	1
   464  0028                     _hor_u:
   465  0028                     	ds	1
   466  0029                     _day_u:
   467  0029                     	ds	1
   468  002A                     _mou_u:
   469  002A                     	ds	1
   470  002B                     _year:
   471  002B                     	ds	1
   472  002C                     _week:
   473  002C                     	ds	1
   474  002D                     _seg:
   475  002D                     	ds	1
   476  002E                     _min:
   477  002E                     	ds	1
   478  002F                     _hor:
   479  002F                     	ds	1
   480  0030                     _g:
   481  0030                     	ds	1
   482  0031                     _b:
   483  0031                     	ds	1
   484  0032                     _M:
   485  0032                     	ds	1
   486  0033                     _s:
   487  0033                     	ds	1
   488  0034                     _m:
   489  0034                     	ds	1
   490  0035                     _h:
   491  0035                     	ds	1
   492  0036                     _q:
   493  0036                     	ds	1
   494  0037                     _C:
   495  0037                     	ds	1
   496  0038                     _r:
   497  0038                     	ds	1
   498  0039                     _z:
   499  0039                     	ds	1
   500  003A                     _Z:
   501  003A                     	ds	1
   502  003B                     _L:
   503  003B                     	ds	1
   504                           
   505                           	psect	clrtext
   506  03F8                     clear_ram0:	
   507                           ;	Called with FSR containing the base address, and
   508                           ;	W with the last address+1
   509                           
   510  03F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   511  03F9                     clrloop0:
   512  03F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   513  03FA  0A84               	incf	4,f	;increment pointer
   514  03FB  0604               	xorwf	4,w	;XOR with final address
   515  03FC  1903               	btfsc	3,2	;have we reached the end yet?
   516  03FD  3400               	retlw	0	;all done for this memory range, return
   517  03FE  0604               	xorwf	4,w	;XOR again to restore value
   518  03FF  2BF9               	goto	clrloop0	;do the next byte
   519                           
   520                           	psect	cstackCOMMON
   521  0070                     __pcstackCOMMON:
   522  0070                     ?_Setup:
   523  0070                     ?_I2C_Master_Start:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_I2C_Master_RepeatedStart:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_I2C_Master_Stop:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_CONVET:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_first_send:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_initOsc:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_send_seg:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_send_min:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_send_hora:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_isr:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_isr:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_main:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_I2C_Master_Wait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562                           
   563                           ; 1 bytes @ 0x0
   564  0070                     	ds	3
   565  0073                     ??_I2C_Master_Start:
   566  0073                     ?_I2C_Master_Write:	
   567                           ; 1 bytes @ 0x3
   568                           
   569  0073                     ??_I2C_Master_RepeatedStart:	
   570                           ; 1 bytes @ 0x3
   571                           
   572  0073                     ??_I2C_Master_Stop:	
   573                           ; 1 bytes @ 0x3
   574                           
   575  0073                     ??_CONVET:	
   576                           ; 1 bytes @ 0x3
   577                           
   578  0073                     ??_initOsc:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  0073                     ??_send_seg:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0073                     ??_send_min:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ??_send_hora:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     ??_I2C_Master_Wait:	
   591                           ; 1 bytes @ 0x3
   592                           
   593  0073                     ??___lldiv:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     ?_I2C_Master_Read:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     I2C_Master_Write@d:	
   600                           ; 2 bytes @ 0x3
   601                           
   602  0073                     I2C_Master_Read@a:	
   603                           ; 2 bytes @ 0x3
   604                           
   605                           
   606                           ; 2 bytes @ 0x3
   607  0073                     	ds	1
   608  0074                     ??_I2C_Master_Init:
   609                           
   610                           ; 1 bytes @ 0x4
   611  0074                     	ds	1
   612  0075                     ??_I2C_Master_Write:
   613  0075                     ??_I2C_Master_Read:	
   614                           ; 1 bytes @ 0x5
   615                           
   616  0075                     ??_first_send:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0075                     initOsc@IRCF:	
   620                           ; 1 bytes @ 0x5
   621                           
   622                           
   623                           ; 1 bytes @ 0x5
   624  0075                     	ds	1
   625  0076                     ??_Setup:
   626                           
   627                           ; 1 bytes @ 0x6
   628  0076                     	ds	2
   629                           
   630                           	psect	cstackBANK0
   631  003C                     __pcstackBANK0:
   632  003C                     ?___lldiv:
   633  003C                     I2C_Master_Read@temp:	
   634                           ; 4 bytes @ 0x0
   635                           
   636  003C                     ___lldiv@divisor:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 4 bytes @ 0x0
   641  003C                     	ds	4
   642  0040                     ___lldiv@dividend:
   643                           
   644                           ; 4 bytes @ 0x4
   645  0040                     	ds	4
   646  0044                     ___lldiv@quotient:
   647                           
   648                           ; 4 bytes @ 0x8
   649  0044                     	ds	4
   650  0048                     ___lldiv@counter:
   651                           
   652                           ; 1 bytes @ 0xC
   653  0048                     	ds	1
   654  0049                     ?_I2C_Master_Init:
   655  0049                     I2C_Master_Init@c:	
   656                           ; 1 bytes @ 0xD
   657                           
   658                           
   659                           ; 4 bytes @ 0xD
   660  0049                     	ds	4
   661  004D                     ??_main:
   662                           
   663                           ; 1 bytes @ 0x11
   664  004D                     	ds	1
   665                           
   666                           	psect	maintext
   667  001F                     __pmaintext:	
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 72 in file "MAIN_PRO.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : B00/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       1       0       0       0
   690 ;;      Totals:         0       1       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels required when called:    3
   693 ;; This function calls:
   694 ;;		_CONVET
   695 ;;		_I2C_Master_Init
   696 ;;		_I2C_Master_Read
   697 ;;		_I2C_Master_RepeatedStart
   698 ;;		_I2C_Master_Start
   699 ;;		_I2C_Master_Stop
   700 ;;		_I2C_Master_Write
   701 ;;		_Setup
   702 ;;		_first_send
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _main
   710  001F                     _main:
   711  001F                     l1744:	
   712                           ;incstack = 0
   713                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   714                           
   715                           
   716                           ;MAIN_PRO.c: 73:     Setup();
   717  001F  120A  118A  237B  120A  118A  	fcall	_Setup
   718  0024                     l1746:
   719                           
   720                           ;MAIN_PRO.c: 74:     PORTAbits.RA0=1;
   721  0024  1283               	bcf	3,5	;RP0=0, select bank0
   722  0025  1303               	bcf	3,6	;RP1=0, select bank0
   723  0026  1405               	bsf	5,0	;volatile
   724  0027                     l1748:
   725                           
   726                           ;MAIN_PRO.c: 75:     PORTAbits.RA1=1;
   727  0027  1485               	bsf	5,1	;volatile
   728  0028                     l1750:
   729                           
   730                           ;MAIN_PRO.c: 76:     PORTAbits.RA0=0;
   731  0028  1005               	bcf	5,0	;volatile
   732  0029                     l1752:
   733                           
   734                           ;MAIN_PRO.c: 77:     PORTAbits.RA1=0;
   735  0029  1085               	bcf	5,1	;volatile
   736  002A                     l1754:
   737                           
   738                           ;MAIN_PRO.c: 78:     I2C_Master_Init(100000);
   739  002A  3000               	movlw	0
   740  002B  00CC               	movwf	I2C_Master_Init@c+3
   741  002C  3001               	movlw	1
   742  002D  00CB               	movwf	I2C_Master_Init@c+2
   743  002E  3086               	movlw	134
   744  002F  00CA               	movwf	I2C_Master_Init@c+1
   745  0030  30A0               	movlw	160
   746  0031  00C9               	movwf	I2C_Master_Init@c
   747  0032  120A  118A  2311  120A  118A  	fcall	_I2C_Master_Init
   748  0037                     l1756:
   749                           
   750                           ;MAIN_PRO.c: 84:         I2C_Master_Start();
   751  0037  120A  118A  23E6  120A  118A  	fcall	_I2C_Master_Start
   752  003C                     l1758:
   753                           
   754                           ;MAIN_PRO.c: 85:         I2C_Master_Write(0xD0);
   755  003C  30D0               	movlw	208
   756  003D  00F3               	movwf	I2C_Master_Write@d
   757  003E  3000               	movlw	0
   758  003F  00F4               	movwf	I2C_Master_Write@d+1
   759  0040  120A  118A  23D3  120A  118A  	fcall	_I2C_Master_Write
   760  0045                     l1760:
   761                           
   762                           ;MAIN_PRO.c: 86:         I2C_Master_Write(0x00);
   763  0045  3000               	movlw	0
   764  0046  00F3               	movwf	I2C_Master_Write@d
   765  0047  00F4               	movwf	I2C_Master_Write@d+1
   766  0048  120A  118A  23D3  120A  118A  	fcall	_I2C_Master_Write
   767  004D                     l1762:
   768                           
   769                           ;MAIN_PRO.c: 87:         I2C_Master_RepeatedStart();
   770  004D  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_RepeatedStart
   771  0052                     l1764:
   772                           
   773                           ;MAIN_PRO.c: 88:         I2C_Master_Write(0xD1);
   774  0052  30D1               	movlw	209
   775  0053  00F3               	movwf	I2C_Master_Write@d
   776  0054  3000               	movlw	0
   777  0055  00F4               	movwf	I2C_Master_Write@d+1
   778  0056  120A  118A  23D3  120A  118A  	fcall	_I2C_Master_Write
   779  005B                     l1766:
   780                           
   781                           ;MAIN_PRO.c: 89:         seg = I2C_Master_Read(1);
   782  005B  3001               	movlw	1
   783  005C  00F3               	movwf	I2C_Master_Read@a
   784  005D  3000               	movlw	0
   785  005E  00F4               	movwf	I2C_Master_Read@a+1
   786  005F  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   787  0064  0873               	movf	?_I2C_Master_Read,w
   788  0065  1283               	bcf	3,5	;RP0=0, select bank0
   789  0066  1303               	bcf	3,6	;RP1=0, select bank0
   790  0067  00CD               	movwf	??_main
   791  0068  084D               	movf	??_main,w
   792  0069  00AD               	movwf	_seg
   793  006A                     l1768:
   794                           
   795                           ;MAIN_PRO.c: 90:         min = I2C_Master_Read(1);
   796  006A  3001               	movlw	1
   797  006B  00F3               	movwf	I2C_Master_Read@a
   798  006C  3000               	movlw	0
   799  006D  00F4               	movwf	I2C_Master_Read@a+1
   800  006E  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   801  0073  0873               	movf	?_I2C_Master_Read,w
   802  0074  1283               	bcf	3,5	;RP0=0, select bank0
   803  0075  1303               	bcf	3,6	;RP1=0, select bank0
   804  0076  00CD               	movwf	??_main
   805  0077  084D               	movf	??_main,w
   806  0078  00AE               	movwf	_min
   807  0079                     l1770:
   808                           
   809                           ;MAIN_PRO.c: 91:         hor = I2C_Master_Read(1);
   810  0079  3001               	movlw	1
   811  007A  00F3               	movwf	I2C_Master_Read@a
   812  007B  3000               	movlw	0
   813  007C  00F4               	movwf	I2C_Master_Read@a+1
   814  007D  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   815  0082  0873               	movf	?_I2C_Master_Read,w
   816  0083  1283               	bcf	3,5	;RP0=0, select bank0
   817  0084  1303               	bcf	3,6	;RP1=0, select bank0
   818  0085  00CD               	movwf	??_main
   819  0086  084D               	movf	??_main,w
   820  0087  00AF               	movwf	_hor
   821  0088                     l1772:
   822                           
   823                           ;MAIN_PRO.c: 92:         week = I2C_Master_Read(1);
   824  0088  3001               	movlw	1
   825  0089  00F3               	movwf	I2C_Master_Read@a
   826  008A  3000               	movlw	0
   827  008B  00F4               	movwf	I2C_Master_Read@a+1
   828  008C  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   829  0091  0873               	movf	?_I2C_Master_Read,w
   830  0092  1283               	bcf	3,5	;RP0=0, select bank0
   831  0093  1303               	bcf	3,6	;RP1=0, select bank0
   832  0094  00CD               	movwf	??_main
   833  0095  084D               	movf	??_main,w
   834  0096  00AC               	movwf	_week
   835  0097                     l1774:
   836                           
   837                           ;MAIN_PRO.c: 93:         day = I2C_Master_Read(1);
   838  0097  3001               	movlw	1
   839  0098  00F3               	movwf	I2C_Master_Read@a
   840  0099  3000               	movlw	0
   841  009A  00F4               	movwf	I2C_Master_Read@a+1
   842  009B  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   843  00A0  0873               	movf	?_I2C_Master_Read,w
   844  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   845  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   846  00A3  00CD               	movwf	??_main
   847  00A4  084D               	movf	??_main,w
   848  00A5  00F8               	movwf	_day
   849  00A6                     l1776:
   850                           
   851                           ;MAIN_PRO.c: 94:         mou = I2C_Master_Read(1);
   852  00A6  3001               	movlw	1
   853  00A7  00F3               	movwf	I2C_Master_Read@a
   854  00A8  3000               	movlw	0
   855  00A9  00F4               	movwf	I2C_Master_Read@a+1
   856  00AA  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   857  00AF  0873               	movf	?_I2C_Master_Read,w
   858  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   859  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   860  00B2  00CD               	movwf	??_main
   861  00B3  084D               	movf	??_main,w
   862  00B4  00F9               	movwf	_mou
   863  00B5                     l1778:
   864                           
   865                           ;MAIN_PRO.c: 95:         year= I2C_Master_Read(0);
   866  00B5  3000               	movlw	0
   867  00B6  00F3               	movwf	I2C_Master_Read@a
   868  00B7  00F4               	movwf	I2C_Master_Read@a+1
   869  00B8  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Read
   870  00BD  0873               	movf	?_I2C_Master_Read,w
   871  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   872  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   873  00C0  00CD               	movwf	??_main
   874  00C1  084D               	movf	??_main,w
   875  00C2  00AB               	movwf	_year
   876  00C3                     l1780:
   877                           
   878                           ;MAIN_PRO.c: 96:         I2C_Master_Stop();
   879  00C3  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Stop
   880  00C8                     l1782:
   881                           
   882                           ;MAIN_PRO.c: 97:         CONVET();
   883  00C8  120A  118A  213E  120A  118A  	fcall	_CONVET
   884  00CD                     l1784:
   885                           
   886                           ;MAIN_PRO.c: 98:         first_send();
   887  00CD  120A  118A  23A1  120A  118A  	fcall	_first_send
   888  00D2  2837               	goto	l1756
   889  00D3  120A  118A  280C   	ljmp	start
   890  00D6                     __end_of_main:
   891                           
   892                           	psect	text1
   893  03A1                     __ptext1:	
   894 ;; *************** function _first_send *****************
   895 ;; Defined at:
   896 ;;		line 165 in file "MAIN_PRO.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0
   913 ;;      Totals:         0       0       0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    2
   917 ;; This function calls:
   918 ;;		_send_hora
   919 ;;		_send_min
   920 ;;		_send_seg
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _first_send
   928  03A1                     _first_send:
   929  03A1                     l1492:	
   930                           ;incstack = 0
   931                           ; Regs used in _first_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   932                           
   933                           
   934                           ;MAIN_PRO.c: 166:     if (C==1){send_seg();}
   935  03A1  1283               	bcf	3,5	;RP0=0, select bank0
   936  03A2  1303               	bcf	3,6	;RP1=0, select bank0
   937  03A3  0337               	decf	_C,w
   938  03A4  1D03               	btfss	3,2
   939  03A5  2BA7               	goto	u651
   940  03A6  2BA8               	goto	u650
   941  03A7                     u651:
   942  03A7  2BAD               	goto	l1496
   943  03A8                     u650:
   944  03A8                     l1494:
   945  03A8  120A  118A  224F  120A  118A  	fcall	_send_seg
   946  03AD                     l1496:
   947                           
   948                           ;MAIN_PRO.c: 167:     if (b==1){send_min();}
   949  03AD  1283               	bcf	3,5	;RP0=0, select bank0
   950  03AE  1303               	bcf	3,6	;RP1=0, select bank0
   951  03AF  0331               	decf	_b,w
   952  03B0  1D03               	btfss	3,2
   953  03B1  2BB3               	goto	u661
   954  03B2  2BB4               	goto	u660
   955  03B3                     u661:
   956  03B3  2BB9               	goto	l1500
   957  03B4                     u660:
   958  03B4                     l1498:
   959  03B4  120A  118A  2295  120A  118A  	fcall	_send_min
   960  03B9                     l1500:
   961                           
   962                           ;MAIN_PRO.c: 168:     if (g==1){send_hora();}
   963  03B9  1283               	bcf	3,5	;RP0=0, select bank0
   964  03BA  1303               	bcf	3,6	;RP1=0, select bank0
   965  03BB  0330               	decf	_g,w
   966  03BC  1D03               	btfss	3,2
   967  03BD  2BBF               	goto	u671
   968  03BE  2BC0               	goto	u670
   969  03BF                     u671:
   970  03BF  2BC5               	goto	l168
   971  03C0                     u670:
   972  03C0                     l1502:
   973  03C0  120A  118A  22D3  120A  118A  	fcall	_send_hora
   974  03C5                     l168:
   975  03C5  0008               	return
   976  03C6                     __end_of_first_send:
   977                           
   978                           	psect	text2
   979  024F                     __ptext2:	
   980 ;; *************** function _send_seg *****************
   981 ;; Defined at:
   982 ;;		line 210 in file "MAIN_PRO.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0
   999 ;;      Totals:         2       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_first_send
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _send_seg
  1012  024F                     _send_seg:
  1013  024F                     l1310:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _send_seg: [wreg-fsr0h+status,2+status,0]
  1016                           
  1017                           
  1018                           ;MAIN_PRO.c: 212:     switch (s){
  1019  024F  2A7F               	goto	l1330
  1020  0250                     l1312:
  1021                           
  1022                           ;MAIN_PRO.c: 214:             TXREG = (seg_t+0x30);
  1023  0250  0821               	movf	_seg_t,w
  1024  0251  3E30               	addlw	48
  1025  0252  0099               	movwf	25	;volatile
  1026  0253                     l207:	
  1027                           ;MAIN_PRO.c: 215:             while(!TXSTAbits.TRMT);
  1028                           
  1029  0253  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0254  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0255  1C98               	btfss	24,1	;volatile
  1032  0256  2A58               	goto	u401
  1033  0257  2A59               	goto	u400
  1034  0258                     u401:
  1035  0258  2A53               	goto	l207
  1036  0259                     u400:
  1037  0259                     l1314:
  1038                           
  1039                           ;MAIN_PRO.c: 216:             s++;
  1040  0259  3001               	movlw	1
  1041  025A  00F3               	movwf	??_send_seg
  1042  025B  0873               	movf	??_send_seg,w
  1043  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1044  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1045  025E  07B3               	addwf	_s,f
  1046                           
  1047                           ;MAIN_PRO.c: 217:             break;
  1048  025F  2A94               	goto	l219
  1049  0260                     l1316:
  1050                           
  1051                           ;MAIN_PRO.c: 219:             TXREG = (seg_u+0x30);
  1052  0260  0826               	movf	_seg_u,w
  1053  0261  3E30               	addlw	48
  1054  0262  0099               	movwf	25	;volatile
  1055  0263                     l212:	
  1056                           ;MAIN_PRO.c: 220:             while(!TXSTAbits.TRMT);
  1057                           
  1058  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1060  0265  1C98               	btfss	24,1	;volatile
  1061  0266  2A68               	goto	u411
  1062  0267  2A69               	goto	u410
  1063  0268                     u411:
  1064  0268  2A63               	goto	l212
  1065  0269                     u410:
  1066  0269                     l1318:
  1067                           
  1068                           ;MAIN_PRO.c: 221:             s++;
  1069  0269  3001               	movlw	1
  1070  026A  00F3               	movwf	??_send_seg
  1071  026B  0873               	movf	??_send_seg,w
  1072  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1073  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1074  026E  07B3               	addwf	_s,f
  1075  026F                     l1320:
  1076                           
  1077                           ;MAIN_PRO.c: 222:             s=0;
  1078  026F  01B3               	clrf	_s
  1079  0270                     l1322:
  1080                           
  1081                           ;MAIN_PRO.c: 223:             C=0;
  1082  0270  01B7               	clrf	_C
  1083                           
  1084                           ;MAIN_PRO.c: 224:             break;
  1085  0271  2A94               	goto	l219
  1086  0272                     l1324:
  1087                           
  1088                           ;MAIN_PRO.c: 226:             TXREG = (0x03);
  1089  0272  3003               	movlw	3
  1090  0273  0099               	movwf	25	;volatile
  1091  0274                     l216:	
  1092                           ;MAIN_PRO.c: 227:             while(!TXSTAbits.TRMT);
  1093                           
  1094  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0276  1C98               	btfss	24,1	;volatile
  1097  0277  2A79               	goto	u421
  1098  0278  2A7A               	goto	u420
  1099  0279                     u421:
  1100  0279  2A74               	goto	l216
  1101  027A                     u420:
  1102  027A                     l1326:
  1103                           
  1104                           ;MAIN_PRO.c: 228:             s=0;
  1105  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1106  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1107  027C  01B3               	clrf	_s
  1108                           
  1109                           ;MAIN_PRO.c: 229:             C=0;
  1110  027D  01B7               	clrf	_C
  1111                           
  1112                           ;MAIN_PRO.c: 230:             break;
  1113  027E  2A94               	goto	l219
  1114  027F                     l1330:
  1115  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0281  0833               	movf	_s,w
  1118  0282  00F3               	movwf	??_send_seg
  1119  0283  01F4               	clrf	??_send_seg+1
  1120                           
  1121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 1, Range of values is 0 to 0
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte            4     3 (average)
  1127                           ; direct_byte           11     8 (fixed)
  1128                           ; jumptable            260     6 (fixed)
  1129                           ;	Chosen strategy is simple_byte
  1130  0284  0874               	movf	??_send_seg+1,w
  1131  0285  3A00               	xorlw	0	; case 0
  1132  0286  1903               	skipnz
  1133  0287  2A89               	goto	l1868
  1134  0288  2A94               	goto	l219
  1135  0289                     l1868:
  1136                           
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 3, Range of values is 0 to 2
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte           10     6 (average)
  1142                           ; direct_byte           17     8 (fixed)
  1143                           ; jumptable            260     6 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  0289  0873               	movf	??_send_seg,w
  1146  028A  3A00               	xorlw	0	; case 0
  1147  028B  1903               	skipnz
  1148  028C  2A50               	goto	l1312
  1149  028D  3A01               	xorlw	1	; case 1
  1150  028E  1903               	skipnz
  1151  028F  2A60               	goto	l1316
  1152  0290  3A03               	xorlw	3	; case 2
  1153  0291  1903               	skipnz
  1154  0292  2A72               	goto	l1324
  1155  0293  2A94               	goto	l219
  1156  0294                     l219:
  1157  0294  0008               	return
  1158  0295                     __end_of_send_seg:
  1159                           
  1160                           	psect	text3
  1161  0295                     __ptext3:	
  1162 ;; *************** function _send_min *****************
  1163 ;; Defined at:
  1164 ;;		line 190 in file "MAIN_PRO.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          2       0       0       0       0
  1181 ;;      Totals:         2       0       0       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_first_send
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _send_min
  1194  0295                     _send_min:
  1195  0295                     l1336:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _send_min: [wreg-fsr0h+status,2+status,0]
  1198                           
  1199                           
  1200                           ;MAIN_PRO.c: 192:     switch (m){
  1201  0295  2ABD               	goto	l1352
  1202  0296                     l1338:
  1203                           
  1204                           ;MAIN_PRO.c: 194:              TXREG = (min_t+0x30);
  1205  0296  0822               	movf	_min_t,w
  1206  0297  3E30               	addlw	48
  1207  0298  0099               	movwf	25	;volatile
  1208  0299                     l190:	
  1209                           ;MAIN_PRO.c: 195:              while(!TXSTAbits.TRMT);
  1210                           
  1211  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1212  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1213  029B  1C98               	btfss	24,1	;volatile
  1214  029C  2A9E               	goto	u431
  1215  029D  2A9F               	goto	u430
  1216  029E                     u431:
  1217  029E  2A99               	goto	l190
  1218  029F                     u430:
  1219  029F                     l1340:
  1220                           
  1221                           ;MAIN_PRO.c: 196:              m++;
  1222  029F  3001               	movlw	1
  1223  02A0  00F3               	movwf	??_send_min
  1224  02A1  0873               	movf	??_send_min,w
  1225  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1226  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1227  02A4  07B4               	addwf	_m,f
  1228                           
  1229                           ;MAIN_PRO.c: 197:             break;
  1230  02A5  2AD2               	goto	l202
  1231  02A6                     l1342:
  1232                           
  1233                           ;MAIN_PRO.c: 199:              TXREG = (min_u +0x30);
  1234  02A6  0827               	movf	_min_u,w
  1235  02A7  3E30               	addlw	48
  1236  02A8  0099               	movwf	25	;volatile
  1237  02A9                     l195:	
  1238                           ;MAIN_PRO.c: 200:              while(!TXSTAbits.TRMT);
  1239                           
  1240  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1241  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1242  02AB  1C98               	btfss	24,1	;volatile
  1243  02AC  2AAE               	goto	u441
  1244  02AD  2AAF               	goto	u440
  1245  02AE                     u441:
  1246  02AE  2AA9               	goto	l195
  1247  02AF                     u440:
  1248  02AF  2A9F               	goto	l1340
  1249  02B0                     l1346:
  1250                           
  1251                           ;MAIN_PRO.c: 204:             TXREG = (0x03);
  1252  02B0  3003               	movlw	3
  1253  02B1  0099               	movwf	25	;volatile
  1254  02B2                     l199:	
  1255                           ;MAIN_PRO.c: 205:             while(!TXSTAbits.TRMT);
  1256                           
  1257  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1258  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1259  02B4  1C98               	btfss	24,1	;volatile
  1260  02B5  2AB7               	goto	u451
  1261  02B6  2AB8               	goto	u450
  1262  02B7                     u451:
  1263  02B7  2AB2               	goto	l199
  1264  02B8                     u450:
  1265  02B8                     l1348:
  1266                           
  1267                           ;MAIN_PRO.c: 206:             m=0;
  1268  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1269  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1270  02BA  01B4               	clrf	_m
  1271                           
  1272                           ;MAIN_PRO.c: 207:             b=0;
  1273  02BB  01B1               	clrf	_b
  1274                           
  1275                           ;MAIN_PRO.c: 208:             break;
  1276  02BC  2AD2               	goto	l202
  1277  02BD                     l1352:
  1278  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1279  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1280  02BF  0834               	movf	_m,w
  1281  02C0  00F3               	movwf	??_send_min
  1282  02C1  01F4               	clrf	??_send_min+1
  1283                           
  1284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1285                           ; Switch size 1, requested type "simple"
  1286                           ; Number of cases is 1, Range of values is 0 to 0
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte            4     3 (average)
  1290                           ; direct_byte           11     8 (fixed)
  1291                           ; jumptable            260     6 (fixed)
  1292                           ;	Chosen strategy is simple_byte
  1293  02C2  0874               	movf	??_send_min+1,w
  1294  02C3  3A00               	xorlw	0	; case 0
  1295  02C4  1903               	skipnz
  1296  02C5  2AC7               	goto	l1870
  1297  02C6  2AD2               	goto	l202
  1298  02C7                     l1870:
  1299                           
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 3, Range of values is 0 to 2
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte           10     6 (average)
  1305                           ; direct_byte           17     8 (fixed)
  1306                           ; jumptable            260     6 (fixed)
  1307                           ;	Chosen strategy is simple_byte
  1308  02C7  0873               	movf	??_send_min,w
  1309  02C8  3A00               	xorlw	0	; case 0
  1310  02C9  1903               	skipnz
  1311  02CA  2A96               	goto	l1338
  1312  02CB  3A01               	xorlw	1	; case 1
  1313  02CC  1903               	skipnz
  1314  02CD  2AA6               	goto	l1342
  1315  02CE  3A03               	xorlw	3	; case 2
  1316  02CF  1903               	skipnz
  1317  02D0  2AB0               	goto	l1346
  1318  02D1  2AD2               	goto	l202
  1319  02D2                     l202:
  1320  02D2  0008               	return
  1321  02D3                     __end_of_send_min:
  1322                           
  1323                           	psect	text4
  1324  02D3                     __ptext4:	
  1325 ;; *************** function _send_hora *****************
  1326 ;; Defined at:
  1327 ;;		line 170 in file "MAIN_PRO.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          2       0       0       0       0
  1344 ;;      Totals:         2       0       0       0       0
  1345 ;;Total ram usage:        2 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_first_send
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _send_hora
  1357  02D3                     _send_hora:
  1358  02D3                     l1358:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0]
  1361                           
  1362                           
  1363                           ;MAIN_PRO.c: 172:     switch (h){
  1364  02D3  2AFB               	goto	l1374
  1365  02D4                     l1360:
  1366                           
  1367                           ;MAIN_PRO.c: 174:             TXREG = (hor_t+0x30);
  1368  02D4  0823               	movf	_hor_t,w
  1369  02D5  3E30               	addlw	48
  1370  02D6  0099               	movwf	25	;volatile
  1371  02D7                     l173:	
  1372                           ;MAIN_PRO.c: 175:             while(!TXSTAbits.TRMT);
  1373                           
  1374  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1375  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1376  02D9  1C98               	btfss	24,1	;volatile
  1377  02DA  2ADC               	goto	u461
  1378  02DB  2ADD               	goto	u460
  1379  02DC                     u461:
  1380  02DC  2AD7               	goto	l173
  1381  02DD                     u460:
  1382  02DD                     l1362:
  1383                           
  1384                           ;MAIN_PRO.c: 176:             h++;
  1385  02DD  3001               	movlw	1
  1386  02DE  00F3               	movwf	??_send_hora
  1387  02DF  0873               	movf	??_send_hora,w
  1388  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1389  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1390  02E2  07B5               	addwf	_h,f
  1391                           
  1392                           ;MAIN_PRO.c: 177:             break;
  1393  02E3  2B10               	goto	l185
  1394  02E4                     l1364:
  1395                           
  1396                           ;MAIN_PRO.c: 179:             TXREG = (hor_u+0x30);
  1397  02E4  0828               	movf	_hor_u,w
  1398  02E5  3E30               	addlw	48
  1399  02E6  0099               	movwf	25	;volatile
  1400  02E7                     l178:	
  1401                           ;MAIN_PRO.c: 180:             while(!TXSTAbits.TRMT);
  1402                           
  1403  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1404  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1405  02E9  1C98               	btfss	24,1	;volatile
  1406  02EA  2AEC               	goto	u471
  1407  02EB  2AED               	goto	u470
  1408  02EC                     u471:
  1409  02EC  2AE7               	goto	l178
  1410  02ED                     u470:
  1411  02ED  2ADD               	goto	l1362
  1412  02EE                     l1368:
  1413                           
  1414                           ;MAIN_PRO.c: 184:             TXREG = (0x03);
  1415  02EE  3003               	movlw	3
  1416  02EF  0099               	movwf	25	;volatile
  1417  02F0                     l182:	
  1418                           ;MAIN_PRO.c: 185:             while(!TXSTAbits.TRMT);
  1419                           
  1420  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1421  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1422  02F2  1C98               	btfss	24,1	;volatile
  1423  02F3  2AF5               	goto	u481
  1424  02F4  2AF6               	goto	u480
  1425  02F5                     u481:
  1426  02F5  2AF0               	goto	l182
  1427  02F6                     u480:
  1428  02F6                     l1370:
  1429                           
  1430                           ;MAIN_PRO.c: 186:             h=0;
  1431  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1432  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1433  02F8  01B5               	clrf	_h
  1434                           
  1435                           ;MAIN_PRO.c: 187:             g=0;
  1436  02F9  01B0               	clrf	_g
  1437                           
  1438                           ;MAIN_PRO.c: 188:             break;
  1439  02FA  2B10               	goto	l185
  1440  02FB                     l1374:
  1441  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1442  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1443  02FD  0835               	movf	_h,w
  1444  02FE  00F3               	movwf	??_send_hora
  1445  02FF  01F4               	clrf	??_send_hora+1
  1446                           
  1447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1448                           ; Switch size 1, requested type "simple"
  1449                           ; Number of cases is 1, Range of values is 0 to 0
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte            4     3 (average)
  1453                           ; direct_byte           11     8 (fixed)
  1454                           ; jumptable            260     6 (fixed)
  1455                           ;	Chosen strategy is simple_byte
  1456  0300  0874               	movf	??_send_hora+1,w
  1457  0301  3A00               	xorlw	0	; case 0
  1458  0302  1903               	skipnz
  1459  0303  2B05               	goto	l1872
  1460  0304  2B10               	goto	l185
  1461  0305                     l1872:
  1462                           
  1463                           ; Switch size 1, requested type "simple"
  1464                           ; Number of cases is 3, Range of values is 0 to 2
  1465                           ; switch strategies available:
  1466                           ; Name         Instructions Cycles
  1467                           ; simple_byte           10     6 (average)
  1468                           ; direct_byte           17     8 (fixed)
  1469                           ; jumptable            260     6 (fixed)
  1470                           ;	Chosen strategy is simple_byte
  1471  0305  0873               	movf	??_send_hora,w
  1472  0306  3A00               	xorlw	0	; case 0
  1473  0307  1903               	skipnz
  1474  0308  2AD4               	goto	l1360
  1475  0309  3A01               	xorlw	1	; case 1
  1476  030A  1903               	skipnz
  1477  030B  2AE4               	goto	l1364
  1478  030C  3A03               	xorlw	3	; case 2
  1479  030D  1903               	skipnz
  1480  030E  2AEE               	goto	l1368
  1481  030F  2B10               	goto	l185
  1482  0310                     l185:
  1483  0310  0008               	return
  1484  0311                     __end_of_send_hora:
  1485                           
  1486                           	psect	text5
  1487  037B                     __ptext5:	
  1488 ;; *************** function _Setup *****************
  1489 ;; Defined at:
  1490 ;;		line 103 in file "MAIN_PRO.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0
  1507 ;;      Totals:         0       0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    2
  1511 ;; This function calls:
  1512 ;;		_initOsc
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _Setup
  1520  037B                     _Setup:
  1521  037B                     l1408:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1524                           
  1525                           
  1526                           ;MAIN_PRO.c: 105:     PORTA = 0;
  1527  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1528  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1529  037D  0185               	clrf	5	;volatile
  1530                           
  1531                           ;MAIN_PRO.c: 106:     PORTB = 0;
  1532  037E  0186               	clrf	6	;volatile
  1533                           
  1534                           ;MAIN_PRO.c: 107:     PORTC = 0;
  1535  037F  0187               	clrf	7	;volatile
  1536                           
  1537                           ;MAIN_PRO.c: 108:     PORTD = 0;
  1538  0380  0188               	clrf	8	;volatile
  1539                           
  1540                           ;MAIN_PRO.c: 109:     PORTE = 0;
  1541  0381  0189               	clrf	9	;volatile
  1542                           
  1543                           ;MAIN_PRO.c: 111:     TRISA = 0B00000000;
  1544  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0384  0185               	clrf	5	;volatile
  1547                           
  1548                           ;MAIN_PRO.c: 112:     TRISB = 0B00000000;
  1549  0385  0186               	clrf	6	;volatile
  1550                           
  1551                           ;MAIN_PRO.c: 113:     TRISC = 0B00000000;
  1552  0386  0187               	clrf	7	;volatile
  1553                           
  1554                           ;MAIN_PRO.c: 114:     TRISD = 0B00000000;
  1555  0387  0188               	clrf	8	;volatile
  1556                           
  1557                           ;MAIN_PRO.c: 115:     TRISE = 0B0000;
  1558  0388  0189               	clrf	9	;volatile
  1559                           
  1560                           ;MAIN_PRO.c: 117:     ANSEL = 0B00000000;
  1561  0389  1683               	bsf	3,5	;RP0=1, select bank3
  1562  038A  1703               	bsf	3,6	;RP1=1, select bank3
  1563  038B  0188               	clrf	8	;volatile
  1564                           
  1565                           ;MAIN_PRO.c: 118:     ANSELH = 0B00000000;
  1566  038C  0189               	clrf	9	;volatile
  1567  038D                     l1410:
  1568                           
  1569                           ;MAIN_PRO.c: 121:     INTCONbits.GIE=1;
  1570  038D  178B               	bsf	11,7	;volatile
  1571  038E                     l1412:
  1572                           
  1573                           ;MAIN_PRO.c: 122:     INTCONbits.PEIE=1;
  1574  038E  170B               	bsf	11,6	;volatile
  1575  038F                     l1414:
  1576                           
  1577                           ;MAIN_PRO.c: 123:     INTCONbits.TMR0IE=1;
  1578  038F  168B               	bsf	11,5	;volatile
  1579  0390                     l1416:
  1580                           
  1581                           ;MAIN_PRO.c: 124:     INTCONbits.TMR0IF=0;
  1582  0390  110B               	bcf	11,2	;volatile
  1583  0391                     l1418:
  1584                           
  1585                           ;MAIN_PRO.c: 125:     PIE1bits.RCIE = 1;
  1586  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1587  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1588  0393  168C               	bsf	12,5	;volatile
  1589  0394                     l1420:
  1590                           
  1591                           ;MAIN_PRO.c: 126:     OPTION_REGbits.T0CS=0;
  1592  0394  1281               	bcf	1,5	;volatile
  1593  0395                     l1422:
  1594                           
  1595                           ;MAIN_PRO.c: 127:     OPTION_REGbits.T0SE=0;
  1596  0395  1201               	bcf	1,4	;volatile
  1597  0396                     l1424:
  1598                           
  1599                           ;MAIN_PRO.c: 128:     OPTION_REGbits.PSA=0;
  1600  0396  1181               	bcf	1,3	;volatile
  1601  0397                     l1426:
  1602                           
  1603                           ;MAIN_PRO.c: 130:     OPTION_REGbits.PS0=1;
  1604  0397  1401               	bsf	1,0	;volatile
  1605  0398                     l1428:
  1606                           
  1607                           ;MAIN_PRO.c: 131:     OPTION_REGbits.PS1=1;
  1608  0398  1481               	bsf	1,1	;volatile
  1609  0399                     l1430:
  1610                           
  1611                           ;MAIN_PRO.c: 132:     OPTION_REGbits.PS2=1;
  1612  0399  1501               	bsf	1,2	;volatile
  1613  039A                     l1432:
  1614                           
  1615                           ;MAIN_PRO.c: 134:     initOsc(6);
  1616  039A  3006               	movlw	6
  1617  039B  120A  118A  219B  120A  118A  	fcall	_initOsc
  1618  03A0                     l156:
  1619  03A0  0008               	return
  1620  03A1                     __end_of_Setup:
  1621                           
  1622                           	psect	text6
  1623  019B                     __ptext6:	
  1624 ;; *************** function _initOsc *****************
  1625 ;; Defined at:
  1626 ;;		line 6 in file "Oscilador.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  IRCF            1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  IRCF            1    5[COMMON] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0
  1642 ;;      Temps:          2       0       0       0       0
  1643 ;;      Totals:         3       0       0       0       0
  1644 ;;Total ram usage:        3 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_Setup
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _initOsc
  1656  019B                     _initOsc:
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1660                           ;initOsc@IRCF stored from wreg
  1661  019B  00F5               	movwf	initOsc@IRCF
  1662  019C                     l1300:
  1663                           
  1664                           ;Oscilador.c: 7: switch (IRCF) {
  1665  019C  29D3               	goto	l1304
  1666  019D                     l231:	
  1667                           ;Oscilador.c: 8:             case 0:
  1668                           
  1669                           
  1670                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  1671  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1672  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1673  019F  130F               	bcf	15,6	;volatile
  1674                           
  1675                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  1676  01A0  128F               	bcf	15,5	;volatile
  1677                           
  1678                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  1679  01A1  120F               	bcf	15,4	;volatile
  1680                           
  1681                           ;Oscilador.c: 12:                 break;
  1682  01A2  29F5               	goto	l232
  1683  01A3                     l233:	
  1684                           ;Oscilador.c: 13:             case 1:
  1685                           
  1686                           
  1687                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  1688  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1689  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1690  01A5  130F               	bcf	15,6	;volatile
  1691                           
  1692                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  1693  01A6  128F               	bcf	15,5	;volatile
  1694                           
  1695                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  1696  01A7  160F               	bsf	15,4	;volatile
  1697                           
  1698                           ;Oscilador.c: 17:                 break;
  1699  01A8  29F5               	goto	l232
  1700  01A9                     l234:	
  1701                           ;Oscilador.c: 18:             case 2:
  1702                           
  1703                           
  1704                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  1705  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1706  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1707  01AB  130F               	bcf	15,6	;volatile
  1708                           
  1709                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  1710  01AC  168F               	bsf	15,5	;volatile
  1711                           
  1712                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  1713  01AD  120F               	bcf	15,4	;volatile
  1714                           
  1715                           ;Oscilador.c: 22:                 break;
  1716  01AE  29F5               	goto	l232
  1717  01AF                     l235:	
  1718                           ;Oscilador.c: 23:             case 3:
  1719                           
  1720                           
  1721                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  1722  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1723  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1724  01B1  130F               	bcf	15,6	;volatile
  1725                           
  1726                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  1727  01B2  168F               	bsf	15,5	;volatile
  1728                           
  1729                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  1730  01B3  160F               	bsf	15,4	;volatile
  1731                           
  1732                           ;Oscilador.c: 27:                 break;
  1733  01B4  29F5               	goto	l232
  1734  01B5                     l236:	
  1735                           ;Oscilador.c: 28:             case 4:
  1736                           
  1737                           
  1738                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  1739  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1740  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1741  01B7  170F               	bsf	15,6	;volatile
  1742                           
  1743                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  1744  01B8  128F               	bcf	15,5	;volatile
  1745                           
  1746                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  1747  01B9  120F               	bcf	15,4	;volatile
  1748                           
  1749                           ;Oscilador.c: 32:                 break;
  1750  01BA  29F5               	goto	l232
  1751  01BB                     l237:	
  1752                           ;Oscilador.c: 33:             case 5:
  1753                           
  1754                           
  1755                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  1756  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1757  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1758  01BD  170F               	bsf	15,6	;volatile
  1759                           
  1760                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  1761  01BE  128F               	bcf	15,5	;volatile
  1762                           
  1763                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  1764  01BF  160F               	bsf	15,4	;volatile
  1765                           
  1766                           ;Oscilador.c: 37:                 break;
  1767  01C0  29F5               	goto	l232
  1768  01C1                     l238:	
  1769                           ;Oscilador.c: 38:             case 6:
  1770                           
  1771                           
  1772                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  1773  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1774  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1775  01C3  170F               	bsf	15,6	;volatile
  1776                           
  1777                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  1778  01C4  168F               	bsf	15,5	;volatile
  1779                           
  1780                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  1781  01C5  120F               	bcf	15,4	;volatile
  1782                           
  1783                           ;Oscilador.c: 42:                 break;
  1784  01C6  29F5               	goto	l232
  1785  01C7                     l239:	
  1786                           ;Oscilador.c: 43:             case 7:
  1787                           
  1788                           
  1789                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  1790  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1791  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1792  01C9  170F               	bsf	15,6	;volatile
  1793                           
  1794                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  1795  01CA  168F               	bsf	15,5	;volatile
  1796                           
  1797                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  1798  01CB  160F               	bsf	15,4	;volatile
  1799                           
  1800                           ;Oscilador.c: 47:                 break;
  1801  01CC  29F5               	goto	l232
  1802  01CD                     l240:	
  1803                           ;Oscilador.c: 48:             default:
  1804                           
  1805                           
  1806                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  1807  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1808  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1809  01CF  170F               	bsf	15,6	;volatile
  1810                           
  1811                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  1812  01D0  168F               	bsf	15,5	;volatile
  1813                           
  1814                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  1815  01D1  120F               	bcf	15,4	;volatile
  1816                           
  1817                           ;Oscilador.c: 52:                 break;
  1818  01D2  29F5               	goto	l232
  1819  01D3                     l1304:
  1820  01D3  0875               	movf	initOsc@IRCF,w
  1821  01D4  00F3               	movwf	??_initOsc
  1822  01D5  01F4               	clrf	??_initOsc+1
  1823                           
  1824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 1, Range of values is 0 to 0
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            4     3 (average)
  1830                           ; direct_byte           11     8 (fixed)
  1831                           ; jumptable            260     6 (fixed)
  1832                           ;	Chosen strategy is simple_byte
  1833  01D6  0874               	movf	??_initOsc+1,w
  1834  01D7  3A00               	xorlw	0	; case 0
  1835  01D8  1903               	skipnz
  1836  01D9  29DB               	goto	l1874
  1837  01DA  29CD               	goto	l240
  1838  01DB                     l1874:
  1839                           
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 8, Range of values is 0 to 7
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte           25    13 (average)
  1845                           ; direct_byte           32     8 (fixed)
  1846                           ; jumptable            260     6 (fixed)
  1847                           ;	Chosen strategy is simple_byte
  1848  01DB  0873               	movf	??_initOsc,w
  1849  01DC  3A00               	xorlw	0	; case 0
  1850  01DD  1903               	skipnz
  1851  01DE  299D               	goto	l231
  1852  01DF  3A01               	xorlw	1	; case 1
  1853  01E0  1903               	skipnz
  1854  01E1  29A3               	goto	l233
  1855  01E2  3A03               	xorlw	3	; case 2
  1856  01E3  1903               	skipnz
  1857  01E4  29A9               	goto	l234
  1858  01E5  3A01               	xorlw	1	; case 3
  1859  01E6  1903               	skipnz
  1860  01E7  29AF               	goto	l235
  1861  01E8  3A07               	xorlw	7	; case 4
  1862  01E9  1903               	skipnz
  1863  01EA  29B5               	goto	l236
  1864  01EB  3A01               	xorlw	1	; case 5
  1865  01EC  1903               	skipnz
  1866  01ED  29BB               	goto	l237
  1867  01EE  3A03               	xorlw	3	; case 6
  1868  01EF  1903               	skipnz
  1869  01F0  29C1               	goto	l238
  1870  01F1  3A01               	xorlw	1	; case 7
  1871  01F2  1903               	skipnz
  1872  01F3  29C7               	goto	l239
  1873  01F4  29CD               	goto	l240
  1874  01F5                     l232:
  1875                           
  1876                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  1877  01F5  140F               	bsf	15,0	;volatile
  1878  01F6                     l241:
  1879  01F6  0008               	return
  1880  01F7                     __end_of_initOsc:
  1881                           
  1882                           	psect	text7
  1883  03D3                     __ptext7:	
  1884 ;; *************** function _I2C_Master_Write *****************
  1885 ;; Defined at:
  1886 ;;		line 54 in file "I2C.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  d               2    3[COMMON] unsigned int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, pclath, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1900 ;;      Params:         2       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0
  1903 ;;      Totals:         2       0       0       0       0
  1904 ;;Total ram usage:        2 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    2
  1907 ;; This function calls:
  1908 ;;		_I2C_Master_Wait
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;;		_CARGA
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _I2C_Master_Write
  1917  03D3                     _I2C_Master_Write:
  1918  03D3                     l1716:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1921                           
  1922                           
  1923                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  1924  03D3  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  1925  03D8                     l1718:
  1926                           
  1927                           ;I2C.c: 57:     SSPBUF = d;
  1928  03D8  0873               	movf	I2C_Master_Write@d,w
  1929  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1930  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1931  03DB  0093               	movwf	19	;volatile
  1932  03DC                     l288:
  1933  03DC  0008               	return
  1934  03DD                     __end_of_I2C_Master_Write:
  1935                           
  1936                           	psect	text8
  1937  03DD                     __ptext8:	
  1938 ;; *************** function _I2C_Master_Stop *****************
  1939 ;; Defined at:
  1940 ;;		line 44 in file "I2C.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0
  1957 ;;      Totals:         0       0       0       0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    2
  1961 ;; This function calls:
  1962 ;;		_I2C_Master_Wait
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;;		_CARGA
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _I2C_Master_Stop
  1971  03DD                     _I2C_Master_Stop:
  1972  03DD                     l1740:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1975                           
  1976                           
  1977                           ;I2C.c: 46:     I2C_Master_Wait();
  1978  03DD  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  1979  03E2                     l1742:
  1980                           
  1981                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  1982  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1983  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1984  03E4  1511               	bsf	17,2	;volatile
  1985  03E5                     l285:
  1986  03E5  0008               	return
  1987  03E6                     __end_of_I2C_Master_Stop:
  1988                           
  1989                           	psect	text9
  1990  03E6                     __ptext9:	
  1991 ;; *************** function _I2C_Master_Start *****************
  1992 ;; Defined at:
  1993 ;;		line 28 in file "I2C.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    2
  2014 ;; This function calls:
  2015 ;;		_I2C_Master_Wait
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;;		_CARGA
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _I2C_Master_Start
  2024  03E6                     _I2C_Master_Start:
  2025  03E6                     l1712:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2028                           
  2029                           
  2030                           ;I2C.c: 30:     I2C_Master_Wait();
  2031  03E6  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  2032  03EB                     l1714:
  2033                           
  2034                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  2035  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2036  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2037  03ED  1411               	bsf	17,0	;volatile
  2038  03EE                     l279:
  2039  03EE  0008               	return
  2040  03EF                     __end_of_I2C_Master_Start:
  2041                           
  2042                           	psect	text10
  2043  03EF                     __ptext10:	
  2044 ;; *************** function _I2C_Master_RepeatedStart *****************
  2045 ;; Defined at:
  2046 ;;		line 36 in file "I2C.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		_I2C_Master_Wait
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _I2C_Master_RepeatedStart
  2076  03EF                     _I2C_Master_RepeatedStart:
  2077  03EF                     l1720:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2080                           
  2081                           
  2082                           ;I2C.c: 38:     I2C_Master_Wait();
  2083  03EF  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  2084  03F4                     l1722:
  2085                           
  2086                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  2087  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2088  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2089  03F6  1491               	bsf	17,1	;volatile
  2090  03F7                     l282:
  2091  03F7  0008               	return
  2092  03F8                     __end_of_I2C_Master_RepeatedStart:
  2093                           
  2094                           	psect	text11
  2095  034B                     __ptext11:	
  2096 ;; *************** function _I2C_Master_Read *****************
  2097 ;; Defined at:
  2098 ;;		line 63 in file "I2C.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  a               2    3[COMMON] unsigned short 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  temp            2    0[BANK0 ] unsigned short 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2    3[COMMON] unsigned short 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         2       0       0       0       0
  2113 ;;      Locals:         0       2       0       0       0
  2114 ;;      Temps:          2       0       0       0       0
  2115 ;;      Totals:         4       2       0       0       0
  2116 ;;Total ram usage:        6 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    2
  2119 ;; This function calls:
  2120 ;;		_I2C_Master_Wait
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _I2C_Master_Read
  2128  034B                     _I2C_Master_Read:
  2129  034B                     l1724:	
  2130                           ;incstack = 0
  2131                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2132                           
  2133                           
  2134                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  2135  034B  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  2136  0350                     l1726:
  2137                           
  2138                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2139  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0352  1591               	bsf	17,3	;volatile
  2142                           
  2143                           ;I2C.c: 68:     I2C_Master_Wait();
  2144  0353  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  2145  0358                     l1728:
  2146                           
  2147                           ;I2C.c: 69:     temp = SSPBUF;
  2148  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2150  035A  0813               	movf	19,w	;volatile
  2151  035B  00F5               	movwf	??_I2C_Master_Read
  2152  035C  01F6               	clrf	??_I2C_Master_Read+1
  2153  035D  0875               	movf	??_I2C_Master_Read,w
  2154  035E  00BC               	movwf	I2C_Master_Read@temp
  2155  035F  0876               	movf	??_I2C_Master_Read+1,w
  2156  0360  00BD               	movwf	I2C_Master_Read@temp+1
  2157  0361                     l1730:
  2158                           
  2159                           ;I2C.c: 70:     I2C_Master_Wait();
  2160  0361  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Wait
  2161  0366                     l1732:
  2162                           
  2163                           ;I2C.c: 71:     if(a == 1){
  2164  0366  0373               	decf	I2C_Master_Read@a,w
  2165  0367  0474               	iorwf	I2C_Master_Read@a+1,w
  2166  0368  1D03               	btfss	3,2
  2167  0369  2B6B               	goto	u881
  2168  036A  2B6C               	goto	u880
  2169  036B                     u881:
  2170  036B  2B70               	goto	l291
  2171  036C                     u880:
  2172  036C                     l1734:
  2173                           
  2174                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  2175  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2176  036D  1303               	bcf	3,6	;RP1=0, select bank1
  2177  036E  1291               	bcf	17,5	;volatile
  2178                           
  2179                           ;I2C.c: 73:     }else{
  2180  036F  2B73               	goto	l292
  2181  0370                     l291:
  2182                           
  2183                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  2184  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0371  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0372  1691               	bsf	17,5	;volatile
  2187  0373                     l292:	
  2188                           ;I2C.c: 75:     }
  2189                           
  2190                           
  2191                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  2192  0373  1611               	bsf	17,4	;volatile
  2193  0374                     l1736:
  2194                           
  2195                           ;I2C.c: 77:     return temp;
  2196  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0376  083D               	movf	I2C_Master_Read@temp+1,w
  2199  0377  00F4               	movwf	?_I2C_Master_Read+1
  2200  0378  083C               	movf	I2C_Master_Read@temp,w
  2201  0379  00F3               	movwf	?_I2C_Master_Read
  2202  037A                     l293:
  2203  037A  0008               	return
  2204  037B                     __end_of_I2C_Master_Read:
  2205                           
  2206                           	psect	text12
  2207  03C6                     __ptext12:	
  2208 ;; *************** function _I2C_Master_Wait *****************
  2209 ;; Defined at:
  2210 ;;		line 21 in file "I2C.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_I2C_Master_Start
  2235 ;;		_I2C_Master_RepeatedStart
  2236 ;;		_I2C_Master_Stop
  2237 ;;		_I2C_Master_Write
  2238 ;;		_I2C_Master_Read
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _I2C_Master_Wait
  2244  03C6                     _I2C_Master_Wait:
  2245  03C6                     l1672:	
  2246                           ;incstack = 0
  2247                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2248                           
  2249  03C6                     l273:	
  2250                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2251                           
  2252  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2253  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2254  03C8  1914               	btfsc	20,2	;volatile
  2255  03C9  2BCB               	goto	u781
  2256  03CA  2BCC               	goto	u780
  2257  03CB                     u781:
  2258  03CB  2BC6               	goto	l273
  2259  03CC                     u780:
  2260  03CC                     l1674:
  2261  03CC  0811               	movf	17,w	;volatile
  2262  03CD  391F               	andlw	31
  2263  03CE  1D03               	btfss	3,2
  2264  03CF  2BD1               	goto	u791
  2265  03D0  2BD2               	goto	u790
  2266  03D1                     u791:
  2267  03D1  2BC6               	goto	l273
  2268  03D2                     u790:
  2269  03D2                     l276:
  2270  03D2  0008               	return
  2271  03D3                     __end_of_I2C_Master_Wait:
  2272                           
  2273                           	psect	text13
  2274  0311                     __ptext13:	
  2275 ;; *************** function _I2C_Master_Init *****************
  2276 ;; Defined at:
  2277 ;;		line 5 in file "I2C.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  c               4   13[BANK0 ] const unsigned long 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       4       0       0       0
  2292 ;;      Locals:         0       0       0       0       0
  2293 ;;      Temps:          4       0       0       0       0
  2294 ;;      Totals:         4       4       0       0       0
  2295 ;;Total ram usage:        8 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		___lldiv
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _I2C_Master_Init
  2307  0311                     _I2C_Master_Init:
  2308  0311                     l1700:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2311                           
  2312                           
  2313                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  2314  0311  3028               	movlw	40
  2315  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0314  0094               	movwf	20	;volatile
  2318  0315                     l1702:
  2319                           
  2320                           ;I2C.c: 8:     SSPCON2 = 0;
  2321  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2322  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2323  0317  0191               	clrf	17	;volatile
  2324  0318                     l1704:
  2325                           
  2326                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  2327  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2329  031A  0849               	movf	I2C_Master_Init@c,w
  2330  031B  00F4               	movwf	??_I2C_Master_Init
  2331  031C  084A               	movf	I2C_Master_Init@c+1,w
  2332  031D  00F5               	movwf	??_I2C_Master_Init+1
  2333  031E  084B               	movf	I2C_Master_Init@c+2,w
  2334  031F  00F6               	movwf	??_I2C_Master_Init+2
  2335  0320  084C               	movf	I2C_Master_Init@c+3,w
  2336  0321  00F7               	movwf	??_I2C_Master_Init+3
  2337  0322  3002               	movlw	2
  2338  0323                     u875:
  2339  0323  1003               	clrc
  2340  0324  0DF4               	rlf	??_I2C_Master_Init,f
  2341  0325  0DF5               	rlf	??_I2C_Master_Init+1,f
  2342  0326  0DF6               	rlf	??_I2C_Master_Init+2,f
  2343  0327  0DF7               	rlf	??_I2C_Master_Init+3,f
  2344  0328                     u870:
  2345  0328  3EFF               	addlw	-1
  2346  0329  1D03               	skipz
  2347  032A  2B23               	goto	u875
  2348  032B  0877               	movf	??_I2C_Master_Init+3,w
  2349  032C  00BF               	movwf	___lldiv@divisor+3
  2350  032D  0876               	movf	??_I2C_Master_Init+2,w
  2351  032E  00BE               	movwf	___lldiv@divisor+2
  2352  032F  0875               	movf	??_I2C_Master_Init+1,w
  2353  0330  00BD               	movwf	___lldiv@divisor+1
  2354  0331  0874               	movf	??_I2C_Master_Init,w
  2355  0332  00BC               	movwf	___lldiv@divisor
  2356  0333  3000               	movlw	0
  2357  0334  00C3               	movwf	___lldiv@dividend+3
  2358  0335  307A               	movlw	122
  2359  0336  00C2               	movwf	___lldiv@dividend+2
  2360  0337  3012               	movlw	18
  2361  0338  00C1               	movwf	___lldiv@dividend+1
  2362  0339  3000               	movlw	0
  2363  033A  00C0               	movwf	___lldiv@dividend
  2364  033B  120A  118A  20D6  120A  118A  	fcall	___lldiv
  2365  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0342  083C               	movf	?___lldiv,w
  2368  0343  3EFF               	addlw	255
  2369  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0346  0093               	movwf	19	;volatile
  2372  0347                     l1706:
  2373                           
  2374                           ;I2C.c: 10:     SSPSTAT = 0;
  2375  0347  0194               	clrf	20	;volatile
  2376  0348                     l1708:
  2377                           
  2378                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  2379  0348  1587               	bsf	7,3	;volatile
  2380  0349                     l1710:
  2381                           
  2382                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  2383  0349  1607               	bsf	7,4	;volatile
  2384  034A                     l270:
  2385  034A  0008               	return
  2386  034B                     __end_of_I2C_Master_Init:
  2387                           
  2388                           	psect	text14
  2389  00D6                     __ptext14:	
  2390 ;; *************** function ___lldiv *****************
  2391 ;; Defined at:
  2392 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  divisor         4    0[BANK0 ] unsigned long 
  2395 ;;  dividend        4    4[BANK0 ] unsigned long 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  quotient        4    8[BANK0 ] unsigned long 
  2398 ;;  counter         1   12[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  4    0[BANK0 ] unsigned long 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       8       0       0       0
  2409 ;;      Locals:         0       5       0       0       0
  2410 ;;      Temps:          1       0       0       0       0
  2411 ;;      Totals:         1      13       0       0       0
  2412 ;;Total ram usage:       14 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_I2C_Master_Init
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           
  2423                           ;psect for function ___lldiv
  2424  00D6                     ___lldiv:
  2425  00D6                     l1676:	
  2426                           ;incstack = 0
  2427                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2428                           
  2429  00D6  3000               	movlw	0
  2430  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2431  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2432  00D9  00C7               	movwf	___lldiv@quotient+3
  2433  00DA  3000               	movlw	0
  2434  00DB  00C6               	movwf	___lldiv@quotient+2
  2435  00DC  3000               	movlw	0
  2436  00DD  00C5               	movwf	___lldiv@quotient+1
  2437  00DE  3000               	movlw	0
  2438  00DF  00C4               	movwf	___lldiv@quotient
  2439  00E0  083F               	movf	___lldiv@divisor+3,w
  2440  00E1  043E               	iorwf	___lldiv@divisor+2,w
  2441  00E2  043D               	iorwf	___lldiv@divisor+1,w
  2442  00E3  043C               	iorwf	___lldiv@divisor,w
  2443  00E4  1903               	skipnz
  2444  00E5  28E7               	goto	u801
  2445  00E6  28E8               	goto	u800
  2446  00E7                     u801:
  2447  00E7  2935               	goto	l1696
  2448  00E8                     u800:
  2449  00E8                     l1678:
  2450  00E8  01C8               	clrf	___lldiv@counter
  2451  00E9  0AC8               	incf	___lldiv@counter,f
  2452  00EA  28F8               	goto	l1682
  2453  00EB                     l1680:
  2454  00EB  3001               	movlw	1
  2455  00EC  00F3               	movwf	??___lldiv
  2456  00ED                     u815:
  2457  00ED  1003               	clrc
  2458  00EE  0DBC               	rlf	___lldiv@divisor,f
  2459  00EF  0DBD               	rlf	___lldiv@divisor+1,f
  2460  00F0  0DBE               	rlf	___lldiv@divisor+2,f
  2461  00F1  0DBF               	rlf	___lldiv@divisor+3,f
  2462  00F2  0BF3               	decfsz	??___lldiv,f
  2463  00F3  28ED               	goto	u815
  2464  00F4  3001               	movlw	1
  2465  00F5  00F3               	movwf	??___lldiv
  2466  00F6  0873               	movf	??___lldiv,w
  2467  00F7  07C8               	addwf	___lldiv@counter,f
  2468  00F8                     l1682:
  2469  00F8  1FBF               	btfss	___lldiv@divisor+3,7
  2470  00F9  28FB               	goto	u821
  2471  00FA  28FC               	goto	u820
  2472  00FB                     u821:
  2473  00FB  28EB               	goto	l1680
  2474  00FC                     u820:
  2475  00FC                     l1684:
  2476  00FC  3001               	movlw	1
  2477  00FD  00F3               	movwf	??___lldiv
  2478  00FE                     u835:
  2479  00FE  1003               	clrc
  2480  00FF  0DC4               	rlf	___lldiv@quotient,f
  2481  0100  0DC5               	rlf	___lldiv@quotient+1,f
  2482  0101  0DC6               	rlf	___lldiv@quotient+2,f
  2483  0102  0DC7               	rlf	___lldiv@quotient+3,f
  2484  0103  0BF3               	decfsz	??___lldiv,f
  2485  0104  28FE               	goto	u835
  2486  0105                     l1686:
  2487  0105  083F               	movf	___lldiv@divisor+3,w
  2488  0106  0243               	subwf	___lldiv@dividend+3,w
  2489  0107  1D03               	skipz
  2490  0108  2913               	goto	u845
  2491  0109  083E               	movf	___lldiv@divisor+2,w
  2492  010A  0242               	subwf	___lldiv@dividend+2,w
  2493  010B  1D03               	skipz
  2494  010C  2913               	goto	u845
  2495  010D  083D               	movf	___lldiv@divisor+1,w
  2496  010E  0241               	subwf	___lldiv@dividend+1,w
  2497  010F  1D03               	skipz
  2498  0110  2913               	goto	u845
  2499  0111  083C               	movf	___lldiv@divisor,w
  2500  0112  0240               	subwf	___lldiv@dividend,w
  2501  0113                     u845:
  2502  0113  1C03               	skipc
  2503  0114  2916               	goto	u841
  2504  0115  2917               	goto	u840
  2505  0116                     u841:
  2506  0116  2926               	goto	l1692
  2507  0117                     u840:
  2508  0117                     l1688:
  2509  0117  083C               	movf	___lldiv@divisor,w
  2510  0118  02C0               	subwf	___lldiv@dividend,f
  2511  0119  083D               	movf	___lldiv@divisor+1,w
  2512  011A  1C03               	skipc
  2513  011B  0F3D               	incfsz	___lldiv@divisor+1,w
  2514  011C  02C1               	subwf	___lldiv@dividend+1,f
  2515  011D  083E               	movf	___lldiv@divisor+2,w
  2516  011E  1C03               	skipc
  2517  011F  0F3E               	incfsz	___lldiv@divisor+2,w
  2518  0120  02C2               	subwf	___lldiv@dividend+2,f
  2519  0121  083F               	movf	___lldiv@divisor+3,w
  2520  0122  1C03               	skipc
  2521  0123  0F3F               	incfsz	___lldiv@divisor+3,w
  2522  0124  02C3               	subwf	___lldiv@dividend+3,f
  2523  0125                     l1690:
  2524  0125  1444               	bsf	___lldiv@quotient,0
  2525  0126                     l1692:
  2526  0126  3001               	movlw	1
  2527  0127                     u855:
  2528  0127  1003               	clrc
  2529  0128  0CBF               	rrf	___lldiv@divisor+3,f
  2530  0129  0CBE               	rrf	___lldiv@divisor+2,f
  2531  012A  0CBD               	rrf	___lldiv@divisor+1,f
  2532  012B  0CBC               	rrf	___lldiv@divisor,f
  2533  012C  3EFF               	addlw	-1
  2534  012D  1D03               	skipz
  2535  012E  2927               	goto	u855
  2536  012F                     l1694:
  2537  012F  3001               	movlw	1
  2538  0130  02C8               	subwf	___lldiv@counter,f
  2539  0131  1D03               	btfss	3,2
  2540  0132  2934               	goto	u861
  2541  0133  2935               	goto	u860
  2542  0134                     u861:
  2543  0134  28FC               	goto	l1684
  2544  0135                     u860:
  2545  0135                     l1696:
  2546  0135  0847               	movf	___lldiv@quotient+3,w
  2547  0136  00BF               	movwf	?___lldiv+3
  2548  0137  0846               	movf	___lldiv@quotient+2,w
  2549  0138  00BE               	movwf	?___lldiv+2
  2550  0139  0845               	movf	___lldiv@quotient+1,w
  2551  013A  00BD               	movwf	?___lldiv+1
  2552  013B  0844               	movf	___lldiv@quotient,w
  2553  013C  00BC               	movwf	?___lldiv
  2554  013D                     l418:
  2555  013D  0008               	return
  2556  013E                     __end_of___lldiv:
  2557                           
  2558                           	psect	text15
  2559  013E                     __ptext15:	
  2560 ;; *************** function _CONVET *****************
  2561 ;; Defined at:
  2562 ;;		line 140 in file "MAIN_PRO.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0
  2578 ;;      Temps:          2       0       0       0       0
  2579 ;;      Totals:         2       0       0       0       0
  2580 ;;Total ram usage:        2 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    1
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_main
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           
  2591                           ;psect for function _CONVET
  2592  013E                     _CONVET:
  2593  013E                     l1478:	
  2594                           ;incstack = 0
  2595                           ; Regs used in _CONVET: [wreg+status,2+status,0]
  2596                           
  2597                           
  2598                           ;MAIN_PRO.c: 141:     mou_t = ((mou & 0b00010000)>>4);
  2599  013E  0879               	movf	_mou,w
  2600  013F  00F3               	movwf	??_CONVET
  2601  0140  3004               	movlw	4
  2602  0141                     u605:
  2603  0141  1003               	clrc
  2604  0142  0CF3               	rrf	??_CONVET,f
  2605  0143  3EFF               	addlw	-1
  2606  0144  1D03               	skipz
  2607  0145  2941               	goto	u605
  2608  0146  0873               	movf	??_CONVET,w
  2609  0147  3901               	andlw	1
  2610  0148  00F4               	movwf	??_CONVET+1
  2611  0149  0874               	movf	??_CONVET+1,w
  2612  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2613  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2614  014C  00A5               	movwf	_mou_t
  2615  014D                     l1480:
  2616                           
  2617                           ;MAIN_PRO.c: 142:     mou_u = (mou & 0b00001111);
  2618  014D  0879               	movf	_mou,w
  2619  014E  390F               	andlw	15
  2620  014F  00F3               	movwf	??_CONVET
  2621  0150  0873               	movf	??_CONVET,w
  2622  0151  00AA               	movwf	_mou_u
  2623  0152                     l1482:
  2624                           
  2625                           ;MAIN_PRO.c: 143:     day_t = ((day & 0b00110000)>>4);
  2626  0152  0878               	movf	_day,w
  2627  0153  00F3               	movwf	??_CONVET
  2628  0154  3004               	movlw	4
  2629  0155                     u615:
  2630  0155  1003               	clrc
  2631  0156  0CF3               	rrf	??_CONVET,f
  2632  0157  3EFF               	addlw	-1
  2633  0158  1D03               	skipz
  2634  0159  2955               	goto	u615
  2635  015A  0873               	movf	??_CONVET,w
  2636  015B  3903               	andlw	3
  2637  015C  00F4               	movwf	??_CONVET+1
  2638  015D  0874               	movf	??_CONVET+1,w
  2639  015E  00A4               	movwf	_day_t
  2640                           
  2641                           ;MAIN_PRO.c: 144:     day_u = (day & 0b00001111);
  2642  015F  0878               	movf	_day,w
  2643  0160  390F               	andlw	15
  2644  0161  00F3               	movwf	??_CONVET
  2645  0162  0873               	movf	??_CONVET,w
  2646  0163  00A9               	movwf	_day_u
  2647  0164                     l1484:
  2648                           
  2649                           ;MAIN_PRO.c: 145:     hor_t = ((hor & 0b00110000)>>4);
  2650  0164  082F               	movf	_hor,w
  2651  0165  00F3               	movwf	??_CONVET
  2652  0166  3004               	movlw	4
  2653  0167                     u625:
  2654  0167  1003               	clrc
  2655  0168  0CF3               	rrf	??_CONVET,f
  2656  0169  3EFF               	addlw	-1
  2657  016A  1D03               	skipz
  2658  016B  2967               	goto	u625
  2659  016C  0873               	movf	??_CONVET,w
  2660  016D  3903               	andlw	3
  2661  016E  00F4               	movwf	??_CONVET+1
  2662  016F  0874               	movf	??_CONVET+1,w
  2663  0170  00A3               	movwf	_hor_t
  2664  0171                     l1486:
  2665                           
  2666                           ;MAIN_PRO.c: 146:     hor_u = (hor & 0b00001111);
  2667  0171  082F               	movf	_hor,w
  2668  0172  390F               	andlw	15
  2669  0173  00F3               	movwf	??_CONVET
  2670  0174  0873               	movf	??_CONVET,w
  2671  0175  00A8               	movwf	_hor_u
  2672                           
  2673                           ;MAIN_PRO.c: 147:     min_t = ((min & 0b01110000)>>4);
  2674  0176  082E               	movf	_min,w
  2675  0177  00F3               	movwf	??_CONVET
  2676  0178  3004               	movlw	4
  2677  0179                     u635:
  2678  0179  1003               	clrc
  2679  017A  0CF3               	rrf	??_CONVET,f
  2680  017B  3EFF               	addlw	-1
  2681  017C  1D03               	skipz
  2682  017D  2979               	goto	u635
  2683  017E  0873               	movf	??_CONVET,w
  2684  017F  3907               	andlw	7
  2685  0180  00F4               	movwf	??_CONVET+1
  2686  0181  0874               	movf	??_CONVET+1,w
  2687  0182  00A2               	movwf	_min_t
  2688  0183                     l1488:
  2689                           
  2690                           ;MAIN_PRO.c: 148:     min_u = (min & 0b00001111);
  2691  0183  082E               	movf	_min,w
  2692  0184  390F               	andlw	15
  2693  0185  00F3               	movwf	??_CONVET
  2694  0186  0873               	movf	??_CONVET,w
  2695  0187  00A7               	movwf	_min_u
  2696  0188                     l1490:
  2697                           
  2698                           ;MAIN_PRO.c: 149:     seg_t = ((seg & 0b01110000)>>4);
  2699  0188  082D               	movf	_seg,w
  2700  0189  00F3               	movwf	??_CONVET
  2701  018A  3004               	movlw	4
  2702  018B                     u645:
  2703  018B  1003               	clrc
  2704  018C  0CF3               	rrf	??_CONVET,f
  2705  018D  3EFF               	addlw	-1
  2706  018E  1D03               	skipz
  2707  018F  298B               	goto	u645
  2708  0190  0873               	movf	??_CONVET,w
  2709  0191  3907               	andlw	7
  2710  0192  00F4               	movwf	??_CONVET+1
  2711  0193  0874               	movf	??_CONVET+1,w
  2712  0194  00A1               	movwf	_seg_t
  2713                           
  2714                           ;MAIN_PRO.c: 150:     seg_u = (seg & 0b00001111);
  2715  0195  082D               	movf	_seg,w
  2716  0196  390F               	andlw	15
  2717  0197  00F3               	movwf	??_CONVET
  2718  0198  0873               	movf	??_CONVET,w
  2719  0199  00A6               	movwf	_seg_u
  2720  019A                     l159:
  2721  019A  0008               	return
  2722  019B                     __end_of_CONVET:
  2723                           
  2724                           	psect	text16
  2725  01F7                     __ptext16:	
  2726 ;; *************** function _isr *****************
  2727 ;; Defined at:
  2728 ;;		line 48 in file "MAIN_PRO.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0
  2744 ;;      Temps:          3       0       0       0       0
  2745 ;;      Totals:         3       0       0       0       0
  2746 ;;Total ram usage:        3 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		Interrupt level 1
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _isr
  2757  01F7                     _isr:
  2758  01F7                     i1l1504:
  2759                           
  2760                           ;MAIN_PRO.c: 49:     if (PIR1bits.RCIF==1){
  2761  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2762  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2763  01F9  1E8C               	btfss	12,5	;volatile
  2764  01FA  29FC               	goto	u68_21
  2765  01FB  29FD               	goto	u68_20
  2766  01FC                     u68_21:
  2767  01FC  2A36               	goto	i1l135
  2768  01FD                     u68_20:
  2769  01FD                     i1l1506:
  2770                           
  2771                           ;MAIN_PRO.c: 50:         temp = 0;
  2772  01FD  01FA               	clrf	_temp
  2773  01FE                     i1l1508:
  2774                           
  2775                           ;MAIN_PRO.c: 51:         temp = RCREG;
  2776  01FE  081A               	movf	26,w	;volatile
  2777  01FF  00F0               	movwf	??_isr
  2778  0200  0870               	movf	??_isr,w
  2779  0201  00FA               	movwf	_temp
  2780  0202                     i1l1510:
  2781                           
  2782                           ;MAIN_PRO.c: 52:         if (temp == 0X30){PORTAbits.RA0=0;}
  2783  0202  3030               	movlw	48
  2784  0203  067A               	xorwf	_temp,w
  2785  0204  1D03               	btfss	3,2
  2786  0205  2A07               	goto	u69_21
  2787  0206  2A08               	goto	u69_20
  2788  0207                     u69_21:
  2789  0207  2A09               	goto	i1l1514
  2790  0208                     u69_20:
  2791  0208                     i1l1512:
  2792  0208  1005               	bcf	5,0	;volatile
  2793  0209                     i1l1514:
  2794                           
  2795                           ;MAIN_PRO.c: 53:         if (temp == 0X31){PORTAbits.RA0=1;}
  2796  0209  3031               	movlw	49
  2797  020A  067A               	xorwf	_temp,w
  2798  020B  1D03               	btfss	3,2
  2799  020C  2A0E               	goto	u70_21
  2800  020D  2A0F               	goto	u70_20
  2801  020E                     u70_21:
  2802  020E  2A10               	goto	i1l1518
  2803  020F                     u70_20:
  2804  020F                     i1l1516:
  2805  020F  1405               	bsf	5,0	;volatile
  2806  0210                     i1l1518:
  2807                           
  2808                           ;MAIN_PRO.c: 54:         if (temp == 0X32){PORTAbits.RA1=0;}
  2809  0210  3032               	movlw	50
  2810  0211  067A               	xorwf	_temp,w
  2811  0212  1D03               	btfss	3,2
  2812  0213  2A15               	goto	u71_21
  2813  0214  2A16               	goto	u71_20
  2814  0215                     u71_21:
  2815  0215  2A17               	goto	i1l1522
  2816  0216                     u71_20:
  2817  0216                     i1l1520:
  2818  0216  1085               	bcf	5,1	;volatile
  2819  0217                     i1l1522:
  2820                           
  2821                           ;MAIN_PRO.c: 55:         if (temp == 0X33){PORTAbits.RA1=1;}
  2822  0217  3033               	movlw	51
  2823  0218  067A               	xorwf	_temp,w
  2824  0219  1D03               	btfss	3,2
  2825  021A  2A1C               	goto	u72_21
  2826  021B  2A1D               	goto	u72_20
  2827  021C                     u72_21:
  2828  021C  2A1E               	goto	i1l1526
  2829  021D                     u72_20:
  2830  021D                     i1l1524:
  2831  021D  1485               	bsf	5,1	;volatile
  2832  021E                     i1l1526:
  2833                           
  2834                           ;MAIN_PRO.c: 56:         if (temp == 0X34){C=1;}
  2835  021E  3034               	movlw	52
  2836  021F  067A               	xorwf	_temp,w
  2837  0220  1D03               	btfss	3,2
  2838  0221  2A23               	goto	u73_21
  2839  0222  2A24               	goto	u73_20
  2840  0223                     u73_21:
  2841  0223  2A26               	goto	i1l1530
  2842  0224                     u73_20:
  2843  0224                     i1l1528:
  2844  0224  01B7               	clrf	_C
  2845  0225  0AB7               	incf	_C,f
  2846  0226                     i1l1530:
  2847                           
  2848                           ;MAIN_PRO.c: 57:         if (temp == 0X35){b=1;}
  2849  0226  3035               	movlw	53
  2850  0227  067A               	xorwf	_temp,w
  2851  0228  1D03               	btfss	3,2
  2852  0229  2A2B               	goto	u74_21
  2853  022A  2A2C               	goto	u74_20
  2854  022B                     u74_21:
  2855  022B  2A2E               	goto	i1l1534
  2856  022C                     u74_20:
  2857  022C                     i1l1532:
  2858  022C  01B1               	clrf	_b
  2859  022D  0AB1               	incf	_b,f
  2860  022E                     i1l1534:
  2861                           
  2862                           ;MAIN_PRO.c: 58:         if (temp == 0X36){g=1;}
  2863  022E  3036               	movlw	54
  2864  022F  067A               	xorwf	_temp,w
  2865  0230  1D03               	btfss	3,2
  2866  0231  2A33               	goto	u75_21
  2867  0232  2A34               	goto	u75_20
  2868  0233                     u75_21:
  2869  0233  2A36               	goto	i1l135
  2870  0234                     u75_20:
  2871  0234                     i1l1536:
  2872  0234  01B0               	clrf	_g
  2873  0235  0AB0               	incf	_g,f
  2874  0236                     i1l135:	
  2875                           ;MAIN_PRO.c: 59:     }
  2876                           
  2877                           
  2878                           ;MAIN_PRO.c: 60:     if (INTCONbits.TMR0IF==1){
  2879  0236  1D0B               	btfss	11,2	;volatile
  2880  0237  2A39               	goto	u76_21
  2881  0238  2A3A               	goto	u76_20
  2882  0239                     u76_21:
  2883  0239  2A48               	goto	i1l145
  2884  023A                     u76_20:
  2885  023A                     i1l1538:
  2886                           
  2887                           ;MAIN_PRO.c: 61:         TMR0=236;
  2888  023A  30EC               	movlw	236
  2889  023B  0081               	movwf	1	;volatile
  2890  023C                     i1l1540:
  2891                           
  2892                           ;MAIN_PRO.c: 62:         INTCONbits.TMR0IF=0;
  2893  023C  110B               	bcf	11,2	;volatile
  2894  023D                     i1l1542:
  2895                           
  2896                           ;MAIN_PRO.c: 63:         r++;
  2897  023D  3001               	movlw	1
  2898  023E  00F0               	movwf	??_isr
  2899  023F  0870               	movf	??_isr,w
  2900  0240  07B8               	addwf	_r,f
  2901  0241                     i1l1544:
  2902                           
  2903                           ;MAIN_PRO.c: 64:         if(r==10){
  2904  0241  300A               	movlw	10
  2905  0242  0638               	xorwf	_r,w
  2906  0243  1D03               	btfss	3,2
  2907  0244  2A46               	goto	u77_21
  2908  0245  2A47               	goto	u77_20
  2909  0246                     u77_21:
  2910  0246  2A48               	goto	i1l145
  2911  0247                     u77_20:
  2912  0247                     i1l1546:
  2913                           
  2914                           ;MAIN_PRO.c: 65:             r=0;
  2915  0247  01B8               	clrf	_r
  2916  0248                     i1l145:
  2917  0248  0872               	movf	??_isr+2,w
  2918  0249  008A               	movwf	10
  2919  024A  0E71               	swapf	??_isr+1,w
  2920  024B  0083               	movwf	3
  2921  024C  0EFE               	swapf	btemp,f
  2922  024D  0E7E               	swapf	btemp,w
  2923  024E  0009               	retfie
  2924  024F                     __end_of_isr:
  2925  007E                     btemp	set	126	;btemp
  2926  007E                     wtemp0	set	126
  2927                           
  2928                           	psect	intentry
  2929  0004                     __pintentry:	
  2930                           ;incstack = 0
  2931                           ; Regs used in _isr: [wreg+status,2+status,0]
  2932                           
  2933  0004                     interrupt_function:
  2934  007E                     saved_w	set	btemp
  2935  0004  00FE               	movwf	btemp
  2936  0005  0E03               	swapf	3,w
  2937  0006  00F1               	movwf	??_isr+1
  2938  0007  080A               	movf	10,w
  2939  0008  00F2               	movwf	??_isr+2
  2940  0009  120A  118A  29F7   	ljmp	_isr
  2941                           
  2942                           	psect	config
  2943                           
  2944                           ;Config register CONFIG1 @ 0x2007
  2945                           ;	Oscillator Selection bits
  2946                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2947                           ;	Watchdog Timer Enable bit
  2948                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2949                           ;	Power-up Timer Enable bit
  2950                           ;	PWRTE = OFF, PWRT disabled
  2951                           ;	RE3/MCLR pin function select bit
  2952                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2953                           ;	Code Protection bit
  2954                           ;	CP = OFF, Program memory code protection is disabled
  2955                           ;	Data Code Protection bit
  2956                           ;	CPD = OFF, Data memory code protection is disabled
  2957                           ;	Brown Out Reset Selection bits
  2958                           ;	BOREN = OFF, BOR disabled
  2959                           ;	Internal External Switchover bit
  2960                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2961                           ;	Fail-Safe Clock Monitor Enabled bit
  2962                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2963                           ;	Low Voltage Programming Enable bit
  2964                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2965                           ;	In-Circuit Debugger Mode bit
  2966                           ;	DEBUG = 0x1, unprogrammed default
  2967  2007                     	org	8199
  2968  2007  20D4               	dw	8404
  2969                           
  2970                           ;Config register CONFIG2 @ 0x2008
  2971                           ;	Brown-out Reset Selection bit
  2972                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2973                           ;	Flash Program Memory Self Write Enable bits
  2974                           ;	WRT = OFF, Write protection off
  2975  2008                     	org	8200
  2976  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     18      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _first_send->_send_hora
    _first_send->_send_min
    _first_send->_send_seg
    _Setup->_initOsc
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2370
                                             17 BANK0      1     1      0
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                         _first_send
 ---------------------------------------------------------------------------------
 (1) _first_send                                           0     0      0       0
                          _send_hora
                           _send_min
                           _send_seg
 ---------------------------------------------------------------------------------
 (2) _send_seg                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_min                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_hora                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _initOsc
   _first_send
     _send_hora
     _send_min
     _send_seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 13:23:45 2021

                                _C 0037                                  _L 003B  
                                _M 0032                                  _Z 003A  
                                _b 0031                                  _g 0030  
                                _h 0035                                  _m 0034  
                                _q 0036                                  _r 0038  
                                _s 0033                                  _z 0039  
                               fsr 0004                                l202 02D2  
                              l212 0263                                l231 019D  
                              l207 0253                                l240 01CD  
                              l232 01F5                                l216 0274  
                              l241 01F6                                l233 01A3  
                              l234 01A9                                l235 01AF  
                              l219 0294                                l236 01B5  
                              l156 03A0                                l237 01BB  
                              l173 02D7                                l270 034A  
                              l238 01C1                                l182 02F0  
                              l190 0299                                l159 019A  
                              l239 01C7                                l168 03C5  
                              l273 03C6                                l185 0310  
                              l418 013D                                l282 03F7  
                              l178 02E7                                l291 0370  
                              l195 02A9                                l276 03D2  
                              l292 0373                                l293 037A  
                              l285 03E5                                l279 03EE  
                              l199 02B2                                l288 03DC  
                              _GIE 005F                                u400 0259  
                              u401 0258                                u410 0269  
                              u411 0268                                u420 027A  
                              u421 0279                                u430 029F  
                              u431 029E                                u440 02AF  
                              u441 02AE                                u450 02B8  
                              u451 02B7                                u460 02DD  
                              u605 0141                                u461 02DC  
                              u470 02ED                                u615 0155  
                              u471 02EC                                u800 00E8  
                              u480 02F6                                u625 0167  
                              u801 00E7                                u481 02F5  
                              u650 03A8                                u635 0179  
                              u651 03A7                                u820 00FC  
                              u660 03B4                                u645 018B  
                              u821 00FB                                u661 03B3  
                              u670 03C0                                u815 00ED  
                              u671 03BF                                u840 0117  
                              u841 0116                                u835 00FE  
                              u860 0135                                u780 03CC  
                              u861 0134                                u845 0113  
                              u781 03CB                                u870 0328  
                              u790 03D2                                u855 0127  
                              u791 03D1                                u880 036C  
                              u881 036B                                u875 0323  
                              _day 0078                                _hor 002F  
                              _min 002E                                _isr 01F7  
                              _seg 002D                                _mou 0079  
                              indf 0000                               l1300 019C  
                             l1310 024F                               l1304 01D3  
                             l1320 026F                               l1312 0250  
                             l1410 038D                               l1322 0270  
                             l1314 0259                               l1330 027F  
                             l1420 0394                               l1412 038E  
                             l1340 029F                               l1324 0272  
                             l1316 0260                               l1500 03B9  
                             l1430 0399                               l1422 0395  
                             l1414 038F                               l1342 02A6  
                             l1326 027A                               l1318 0269  
                             l1502 03C0                               l1432 039A  
                             l1424 0396                               l1416 0390  
                             l1408 037B                               l1360 02D4  
                             l1352 02BD                               l1336 0295  
                             l1426 0397                               l1418 0391  
                             l1370 02F6                               l1362 02DD  
                             l1346 02B0                               l1338 0296  
                             l1700 0311                               l1428 0398  
                             l1364 02E4                               l1348 02B8  
                             l1710 0349                               l1702 0315  
                             l1374 02FB                               l1358 02D3  
                             l1480 014D                               l1704 0318  
                             l1720 03EF                               l1712 03E6  
                             l1368 02EE                               l1490 0188  
                             l1482 0152                               l1706 0347  
                             l1730 0361                               l1722 03F4  
                             l1714 03EB                               l1484 0164  
                             l1708 0348                               l1732 0366  
                             l1724 034B                               l1740 03DD  
                             l1716 03D3                               l1492 03A1  
                             l1486 0171                               l1478 013E  
                             l1734 036C                               l1726 0350  
                             l1742 03E2                               l1718 03D8  
                             l1494 03A8                               l1750 0028  
                             l1488 0183                               l1680 00EB  
                             l1672 03C6                               l1736 0374  
                             l1728 0358                               l1496 03AD  
                             l1760 0045                               l1752 0029  
                             l1744 001F                               l1690 0125  
                             l1682 00F8                               l1674 03CC  
                             l1498 03B4                               l1770 0079  
                             l1762 004D                               l1754 002A  
                             l1746 0024                               l1692 0126  
                             l1684 00FC                               l1676 00D6  
                             l1780 00C3                               l1772 0088  
                             l1764 0052                               l1756 0037  
                             l1748 0027                               l1694 012F  
                             l1686 0105                               l1678 00E8  
                             l1870 02C7                               l1782 00C8  
                             l1774 0097                               l1766 005B  
                             l1758 003C                               l1688 0117  
                             l1696 0135                               l1872 0305  
                             l1784 00CD                               l1776 00A6  
                             l1768 006A                               l1874 01DB  
                             l1778 00B5                               l1868 0289  
                             ?_isr 0070                               _PEIE 005E  
                             _TMR0 0001   __end_of_I2C_Master_RepeatedStart 03F8  
                             _main 001F                               _temp 007A  
                             _week 002C                               _year 002B  
                             btemp 007E                               start 000C  
                            ??_isr 0070                   ?_I2C_Master_Init 0049  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 013E  
                            i1l135 0236                              i1l145 0248  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u70_20 020F                              u70_21 020E  
                            u71_20 0216                              u71_21 0215  
                            u72_20 021D                              u72_21 021C  
                            u73_20 0224                              u73_21 0223  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            u74_20 022C                              _SSPIF 0063  
                            u74_21 022B                              u75_20 0234  
                            u75_21 0233                              u76_20 023A  
                            u68_20 01FD                              u76_21 0239  
                            u68_21 01FC                              u77_20 0247  
                            u69_20 0208                              u77_21 0246  
                            u69_21 0207                              _TXREG 0019  
                            _Setup 037B                              _day_t 0024  
                            _day_u 0029                    __end_of_initOsc 01F7  
                            _hor_t 0023                              _hor_u 0028  
                            _min_t 0022                              _min_u 0027  
                            _seg_t 0021                              _seg_u 0026  
                            _mou_t 0025                              _mou_u 002A  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 00D6                             ??_main 004D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
                           ?_Setup 0070                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                        initOsc@IRCF 0075  
                           _ANSELH 0189                             _CONVET 013E  
                           i1l1510 0202                             i1l1520 0216  
                           i1l1512 0208                             i1l1504 01F7  
                           i1l1530 0226                             i1l1522 0217  
                           i1l1514 0209                             i1l1506 01FD  
                           i1l1540 023C                             i1l1532 022C  
                           i1l1524 021D                             i1l1516 020F  
                           i1l1508 01FE                             i1l1542 023D  
                           i1l1534 022E                             i1l1526 021E  
                           i1l1518 0210                             i1l1544 0241  
                           i1l1536 0234                             i1l1528 0224  
                           i1l1546 0247                             i1l1538 023A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 03EF  
                        ??___lldiv 0073                   __end_of_send_min 02D3  
                 __end_of_send_seg 0295                          ??_initOsc 0073  
                           saved_w 007E            __end_of__initialization 001B  
                   __pcstackCOMMON 0070                      __end_of_Setup 03A1  
                   _OPTION_REGbits 0081                            ??_Setup 0076  
                          ?_CONVET 0070                         __pbssBANK0 0020  
                       __pmaintext 001F                         __pintentry 0004  
               __size_of_send_hora 003E                            _SSPCON2 0091  
                          _SSPSTAT 0094                    __size_of_CONVET 005D  
                       _first_send 03A1                          ?_send_min 0070  
                        ?_send_seg 0070                            ___lldiv 00D6  
                          __ptext1 03A1                            __ptext2 024F  
                          __ptext3 0295                            __ptext4 02D3  
                          __ptext5 037B                            __ptext6 019B  
                          __ptext7 03D3                            __ptext8 03DD  
                          __ptext9 03E6                            _initOsc 019B  
                     __size_of_isr 0058           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 03F9  
             end_of_initialization 001B         ??_I2C_Master_RepeatedStart 0073  
                __end_of_send_hora 0311          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 003C  
                       ??_send_min 0073                         ??_send_seg 0073  
                  ___lldiv@counter 0048                   I2C_Master_Init@c 0049  
                 I2C_Master_Read@a 0073                          _PORTAbits 0005  
                        _TRISCbits 0087                     __end_of_CONVET 019B  
                        _TXSTAbits 0098                        ?_first_send 0070  
              start_initialization 000F                        __end_of_isr 024F  
                         ??_CONVET 0073                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073                        __pbssCOMMON 0078  
                        ___latbits 0002                __size_of_first_send 0025  
                    __pcstackBANK0 003C                   _I2C_Master_Start 03E6  
                 _I2C_Master_Write 03D3                  __size_of_send_min 003E  
                __size_of_send_seg 0046                           ?___lldiv 003C  
                         ?_initOsc 0070                     __size_of_Setup 0026  
                interrupt_function 0004                          clear_ram0 03F8  
                         _PIE1bits 008C                          _send_hora 02D3  
                         _PIR1bits 000C                I2C_Master_Read@temp 003C  
                     ??_first_send 0075                         ?_send_hora 0070  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                    _I2C_Master_Init 0311  
                  _I2C_Master_Read 034B                    _I2C_Master_Wait 03C6  
                  _I2C_Master_Stop 03DD                   __size_of_initOsc 005C  
               __end_of_first_send 03C6                           __ptext10 03EF  
                         __ptext11 034B                           __ptext12 03C6  
                         __ptext13 0311                           __ptext14 00D6  
                         __ptext15 013E                           __ptext16 01F7  
                    __size_of_main 00B7                           _send_min 0295  
                         _send_seg 024F                           _segundos 0020  
         __end_of_I2C_Master_Start 03EF           __end_of_I2C_Master_Write 03DD  
                       _INTCONbits 000B                           intlevel1 0000  
                 ___lldiv@dividend 0040                        ??_send_hora 0073  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 034B  
          __end_of_I2C_Master_Read 037B            __end_of_I2C_Master_Wait 03D3  
          __end_of_I2C_Master_Stop 03E6                   ___lldiv@quotient 0044  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
