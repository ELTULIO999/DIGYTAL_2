

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 23:45:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0018                     _RCSTAbits	set	24
   460  0019                     _TXREG	set	25
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0007                     _PORTC	set	7
   464  0006                     _PORTB	set	6
   465  0005                     _PORTA	set	5
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0005                     _PORTAbits	set	5
   469  001A                     _RCREG	set	26
   470  000C                     _PIR1bits	set	12
   471  0063                     _SSPIF	set	99
   472  005E                     _PEIE	set	94
   473  005F                     _GIE	set	95
   474  0091                     _SSPCON2bits	set	145
   475  0087                     _TRISCbits	set	135
   476  0094                     _SSPSTAT	set	148
   477  0093                     _SSPADD	set	147
   478  0091                     _SSPCON2	set	145
   479  008F                     _OSCCONbits	set	143
   480  009A                     _SPBRGH	set	154
   481  0099                     _SPBRG	set	153
   482  0098                     _TXSTAbits	set	152
   483  0081                     _OPTION_REGbits	set	129
   484  008C                     _PIE1bits	set	140
   485  0089                     _TRISE	set	137
   486  0088                     _TRISD	set	136
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	cinit
   498  000F                     start_initialization:	
   499                           ; #config settings
   500                           
   501  000F                     __initialization:
   502                           
   503                           ; Clear objects allocated to COMMON
   504  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   505  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   506  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  0012  1383               	bcf	3,7	;select IRP bank0
   510  0013  3020               	movlw	low __pbssBANK0
   511  0014  0084               	movwf	4
   512  0015  303C               	movlw	low (__pbssBANK0+28)
   513  0016  120A  118A  241C  120A  118A  	fcall	clear_ram0
   514  001B                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  001B                     __end_of__initialization:
   518  001B  0183               	clrf	3
   519  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0078                     __pbssCOMMON:
   523  0078                     _day:
   524  0078                     	ds	1
   525  0079                     _mou:
   526  0079                     	ds	1
   527  007A                     _temp:
   528  007A                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0020                     __pbssBANK0:
   532  0020                     _segundos:
   533  0020                     	ds	1
   534  0021                     _seg_t:
   535  0021                     	ds	1
   536  0022                     _min_t:
   537  0022                     	ds	1
   538  0023                     _hor_t:
   539  0023                     	ds	1
   540  0024                     _day_t:
   541  0024                     	ds	1
   542  0025                     _mou_t:
   543  0025                     	ds	1
   544  0026                     _seg_u:
   545  0026                     	ds	1
   546  0027                     _min_u:
   547  0027                     	ds	1
   548  0028                     _hor_u:
   549  0028                     	ds	1
   550  0029                     _day_u:
   551  0029                     	ds	1
   552  002A                     _mou_u:
   553  002A                     	ds	1
   554  002B                     _year:
   555  002B                     	ds	1
   556  002C                     _week:
   557  002C                     	ds	1
   558  002D                     _seg:
   559  002D                     	ds	1
   560  002E                     _min:
   561  002E                     	ds	1
   562  002F                     _hor:
   563  002F                     	ds	1
   564  0030                     _g:
   565  0030                     	ds	1
   566  0031                     _b:
   567  0031                     	ds	1
   568  0032                     _M:
   569  0032                     	ds	1
   570  0033                     _s:
   571  0033                     	ds	1
   572  0034                     _m:
   573  0034                     	ds	1
   574  0035                     _h:
   575  0035                     	ds	1
   576  0036                     _q:
   577  0036                     	ds	1
   578  0037                     _C:
   579  0037                     	ds	1
   580  0038                     _r:
   581  0038                     	ds	1
   582  0039                     _z:
   583  0039                     	ds	1
   584  003A                     _Z:
   585  003A                     	ds	1
   586  003B                     _L:
   587  003B                     	ds	1
   588                           
   589                           	psect	clrtext
   590  041C                     clear_ram0:	
   591                           ;	Called with FSR containing the base address, and
   592                           ;	W with the last address+1
   593                           
   594  041C  0064               	clrwdt	;clear the watchdog before getting into this loop
   595  041D                     clrloop0:
   596  041D  0180               	clrf	0	;clear RAM location pointed to by FSR
   597  041E  0A84               	incf	4,f	;increment pointer
   598  041F  0604               	xorwf	4,w	;XOR with final address
   599  0420  1903               	btfsc	3,2	;have we reached the end yet?
   600  0421  3400               	retlw	0	;all done for this memory range, return
   601  0422  0604               	xorwf	4,w	;XOR again to restore value
   602  0423  2C1D               	goto	clrloop0	;do the next byte
   603                           
   604                           	psect	cstackCOMMON
   605  0070                     __pcstackCOMMON:
   606  0070                     ?_Setup:
   607  0070                     ?_I2C_Master_Start:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_I2C_Master_RepeatedStart:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_I2C_Master_Stop:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_CONVET:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_first_send:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_initOsc:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_SET_RXT:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_SET_TXR:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_send_seg:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_send_min:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_send_hora:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_isr:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_main:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_I2C_Master_Wait:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654  0070                     	ds	3
   655  0073                     ??_I2C_Master_Start:
   656  0073                     ?_I2C_Master_Write:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ??_I2C_Master_RepeatedStart:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     ??_I2C_Master_Stop:	
   663                           ; 1 bytes @ 0x3
   664                           
   665  0073                     ??_CONVET:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ??_initOsc:	
   669                           ; 1 bytes @ 0x3
   670                           
   671  0073                     ??_SET_RXT:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     ??_SET_TXR:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     ??_send_seg:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ??_send_min:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ??_send_hora:	
   684                           ; 1 bytes @ 0x3
   685                           
   686  0073                     ??_I2C_Master_Wait:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     ??___lldiv:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0073                     ?_I2C_Master_Read:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     I2C_Master_Write@d:	
   696                           ; 2 bytes @ 0x3
   697                           
   698  0073                     I2C_Master_Read@a:	
   699                           ; 2 bytes @ 0x3
   700                           
   701                           
   702                           ; 2 bytes @ 0x3
   703  0073                     	ds	1
   704  0074                     ??_I2C_Master_Init:
   705                           
   706                           ; 1 bytes @ 0x4
   707  0074                     	ds	1
   708  0075                     ??_I2C_Master_Write:
   709  0075                     ??_I2C_Master_Read:	
   710                           ; 1 bytes @ 0x5
   711                           
   712  0075                     ??_first_send:	
   713                           ; 1 bytes @ 0x5
   714                           
   715  0075                     initOsc@IRCF:	
   716                           ; 1 bytes @ 0x5
   717                           
   718                           
   719                           ; 1 bytes @ 0x5
   720  0075                     	ds	1
   721  0076                     ??_Setup:
   722                           
   723                           ; 1 bytes @ 0x6
   724  0076                     	ds	2
   725                           
   726                           	psect	cstackBANK0
   727  003C                     __pcstackBANK0:
   728  003C                     ?___lldiv:
   729  003C                     I2C_Master_Read@temp:	
   730                           ; 4 bytes @ 0x0
   731                           
   732  003C                     ___lldiv@divisor:	
   733                           ; 2 bytes @ 0x0
   734                           
   735                           
   736                           ; 4 bytes @ 0x0
   737  003C                     	ds	4
   738  0040                     ___lldiv@dividend:
   739                           
   740                           ; 4 bytes @ 0x4
   741  0040                     	ds	4
   742  0044                     ___lldiv@quotient:
   743                           
   744                           ; 4 bytes @ 0x8
   745  0044                     	ds	4
   746  0048                     ___lldiv@counter:
   747                           
   748                           ; 1 bytes @ 0xC
   749  0048                     	ds	1
   750  0049                     ?_I2C_Master_Init:
   751  0049                     I2C_Master_Init@c:	
   752                           ; 1 bytes @ 0xD
   753                           
   754                           
   755                           ; 4 bytes @ 0xD
   756  0049                     	ds	4
   757  004D                     ??_main:
   758                           
   759                           ; 1 bytes @ 0x11
   760  004D                     	ds	1
   761                           
   762                           	psect	maintext
   763  001F                     __pmaintext:	
   764 ;;
   765 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   766 ;;
   767 ;; *************** function _main *****************
   768 ;; Defined at:
   769 ;;		line 72 in file "MAIN_PRO.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : B00/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0
   785 ;;      Temps:          0       1       0       0       0
   786 ;;      Totals:         0       1       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels required when called:    3
   789 ;; This function calls:
   790 ;;		_CONVET
   791 ;;		_I2C_Master_Init
   792 ;;		_I2C_Master_Read
   793 ;;		_I2C_Master_RepeatedStart
   794 ;;		_I2C_Master_Start
   795 ;;		_I2C_Master_Stop
   796 ;;		_I2C_Master_Write
   797 ;;		_Setup
   798 ;;		_first_send
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _main
   806  001F                     _main:
   807  001F                     l1790:	
   808                           ;incstack = 0
   809                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   810                           
   811                           
   812                           ;MAIN_PRO.c: 73:     Setup();
   813  001F  120A  118A  234B  120A  118A  	fcall	_Setup
   814  0024                     l1792:
   815                           
   816                           ;MAIN_PRO.c: 74:     PORTAbits.RA0=1;
   817  0024  1283               	bcf	3,5	;RP0=0, select bank0
   818  0025  1303               	bcf	3,6	;RP1=0, select bank0
   819  0026  1405               	bsf	5,0	;volatile
   820  0027                     l1794:
   821                           
   822                           ;MAIN_PRO.c: 75:     PORTAbits.RA1=1;
   823  0027  1485               	bsf	5,1	;volatile
   824  0028                     l1796:
   825                           
   826                           ;MAIN_PRO.c: 76:     PORTAbits.RA0=0;
   827  0028  1005               	bcf	5,0	;volatile
   828  0029                     l1798:
   829                           
   830                           ;MAIN_PRO.c: 77:     PORTAbits.RA1=0;
   831  0029  1085               	bcf	5,1	;volatile
   832  002A                     l1800:
   833                           
   834                           ;MAIN_PRO.c: 78:     I2C_Master_Init(100000);
   835  002A  3000               	movlw	0
   836  002B  00CC               	movwf	I2C_Master_Init@c+3
   837  002C  3001               	movlw	1
   838  002D  00CB               	movwf	I2C_Master_Init@c+2
   839  002E  3086               	movlw	134
   840  002F  00CA               	movwf	I2C_Master_Init@c+1
   841  0030  30A0               	movlw	160
   842  0031  00C9               	movwf	I2C_Master_Init@c
   843  0032  120A  118A  2311  120A  118A  	fcall	_I2C_Master_Init
   844  0037                     l1802:
   845                           
   846                           ;MAIN_PRO.c: 84:         I2C_Master_Start();
   847  0037  120A  118A  240A  120A  118A  	fcall	_I2C_Master_Start
   848  003C                     l1804:
   849                           
   850                           ;MAIN_PRO.c: 85:         I2C_Master_Write(0xD0);
   851  003C  30D0               	movlw	208
   852  003D  00F3               	movwf	I2C_Master_Write@d
   853  003E  3000               	movlw	0
   854  003F  00F4               	movwf	I2C_Master_Write@d+1
   855  0040  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Write
   856  0045                     l1806:
   857                           
   858                           ;MAIN_PRO.c: 86:         I2C_Master_Write(0x00);
   859  0045  3000               	movlw	0
   860  0046  00F3               	movwf	I2C_Master_Write@d
   861  0047  00F4               	movwf	I2C_Master_Write@d+1
   862  0048  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Write
   863  004D                     l1808:
   864                           
   865                           ;MAIN_PRO.c: 87:         I2C_Master_RepeatedStart();
   866  004D  120A  118A  2413  120A  118A  	fcall	_I2C_Master_RepeatedStart
   867  0052                     l1810:
   868                           
   869                           ;MAIN_PRO.c: 88:         I2C_Master_Write(0xD1);
   870  0052  30D1               	movlw	209
   871  0053  00F3               	movwf	I2C_Master_Write@d
   872  0054  3000               	movlw	0
   873  0055  00F4               	movwf	I2C_Master_Write@d+1
   874  0056  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Write
   875  005B                     l1812:
   876                           
   877                           ;MAIN_PRO.c: 89:         seg = I2C_Master_Read(1);
   878  005B  3001               	movlw	1
   879  005C  00F3               	movwf	I2C_Master_Read@a
   880  005D  3000               	movlw	0
   881  005E  00F4               	movwf	I2C_Master_Read@a+1
   882  005F  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   883  0064  0873               	movf	?_I2C_Master_Read,w
   884  0065  1283               	bcf	3,5	;RP0=0, select bank0
   885  0066  1303               	bcf	3,6	;RP1=0, select bank0
   886  0067  00CD               	movwf	??_main
   887  0068  084D               	movf	??_main,w
   888  0069  00AD               	movwf	_seg
   889  006A                     l1814:
   890                           
   891                           ;MAIN_PRO.c: 90:         min = I2C_Master_Read(1);
   892  006A  3001               	movlw	1
   893  006B  00F3               	movwf	I2C_Master_Read@a
   894  006C  3000               	movlw	0
   895  006D  00F4               	movwf	I2C_Master_Read@a+1
   896  006E  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   897  0073  0873               	movf	?_I2C_Master_Read,w
   898  0074  1283               	bcf	3,5	;RP0=0, select bank0
   899  0075  1303               	bcf	3,6	;RP1=0, select bank0
   900  0076  00CD               	movwf	??_main
   901  0077  084D               	movf	??_main,w
   902  0078  00AE               	movwf	_min
   903  0079                     l1816:
   904                           
   905                           ;MAIN_PRO.c: 91:         hor = I2C_Master_Read(1);
   906  0079  3001               	movlw	1
   907  007A  00F3               	movwf	I2C_Master_Read@a
   908  007B  3000               	movlw	0
   909  007C  00F4               	movwf	I2C_Master_Read@a+1
   910  007D  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   911  0082  0873               	movf	?_I2C_Master_Read,w
   912  0083  1283               	bcf	3,5	;RP0=0, select bank0
   913  0084  1303               	bcf	3,6	;RP1=0, select bank0
   914  0085  00CD               	movwf	??_main
   915  0086  084D               	movf	??_main,w
   916  0087  00AF               	movwf	_hor
   917  0088                     l1818:
   918                           
   919                           ;MAIN_PRO.c: 92:         week = I2C_Master_Read(1);
   920  0088  3001               	movlw	1
   921  0089  00F3               	movwf	I2C_Master_Read@a
   922  008A  3000               	movlw	0
   923  008B  00F4               	movwf	I2C_Master_Read@a+1
   924  008C  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   925  0091  0873               	movf	?_I2C_Master_Read,w
   926  0092  1283               	bcf	3,5	;RP0=0, select bank0
   927  0093  1303               	bcf	3,6	;RP1=0, select bank0
   928  0094  00CD               	movwf	??_main
   929  0095  084D               	movf	??_main,w
   930  0096  00AC               	movwf	_week
   931  0097                     l1820:
   932                           
   933                           ;MAIN_PRO.c: 93:         day = I2C_Master_Read(1);
   934  0097  3001               	movlw	1
   935  0098  00F3               	movwf	I2C_Master_Read@a
   936  0099  3000               	movlw	0
   937  009A  00F4               	movwf	I2C_Master_Read@a+1
   938  009B  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   939  00A0  0873               	movf	?_I2C_Master_Read,w
   940  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   941  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   942  00A3  00CD               	movwf	??_main
   943  00A4  084D               	movf	??_main,w
   944  00A5  00F8               	movwf	_day
   945  00A6                     l1822:
   946                           
   947                           ;MAIN_PRO.c: 94:         mou = I2C_Master_Read(1);
   948  00A6  3001               	movlw	1
   949  00A7  00F3               	movwf	I2C_Master_Read@a
   950  00A8  3000               	movlw	0
   951  00A9  00F4               	movwf	I2C_Master_Read@a+1
   952  00AA  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   953  00AF  0873               	movf	?_I2C_Master_Read,w
   954  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   955  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   956  00B2  00CD               	movwf	??_main
   957  00B3  084D               	movf	??_main,w
   958  00B4  00F9               	movwf	_mou
   959  00B5                     l1824:
   960                           
   961                           ;MAIN_PRO.c: 95:         year= I2C_Master_Read(0);
   962  00B5  3000               	movlw	0
   963  00B6  00F3               	movwf	I2C_Master_Read@a
   964  00B7  00F4               	movwf	I2C_Master_Read@a+1
   965  00B8  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   966  00BD  0873               	movf	?_I2C_Master_Read,w
   967  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   968  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   969  00C0  00CD               	movwf	??_main
   970  00C1  084D               	movf	??_main,w
   971  00C2  00AB               	movwf	_year
   972  00C3                     l1826:
   973                           
   974                           ;MAIN_PRO.c: 96:         I2C_Master_Stop();
   975  00C3  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Stop
   976  00C8                     l1828:
   977                           
   978                           ;MAIN_PRO.c: 97:         CONVET();
   979  00C8  120A  118A  213E  120A  118A  	fcall	_CONVET
   980  00CD                     l1830:
   981                           
   982                           ;MAIN_PRO.c: 98:         first_send();
   983  00CD  120A  118A  23AB  120A  118A  	fcall	_first_send
   984  00D2  2837               	goto	l1802
   985  00D3  120A  118A  280C   	ljmp	start
   986  00D6                     __end_of_main:
   987                           
   988                           	psect	text1
   989  03AB                     __ptext1:	
   990 ;; *************** function _first_send *****************
   991 ;; Defined at:
   992 ;;		line 166 in file "MAIN_PRO.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		_send_hora
  1015 ;;		_send_min
  1016 ;;		_send_seg
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _first_send
  1024  03AB                     _first_send:
  1025  03AB                     l1538:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _first_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1028                           
  1029                           
  1030                           ;MAIN_PRO.c: 167:     if (C==1){send_seg();}
  1031  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1032  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1033  03AD  0337               	decf	_C,w
  1034  03AE  1D03               	btfss	3,2
  1035  03AF  2BB1               	goto	u651
  1036  03B0  2BB2               	goto	u650
  1037  03B1                     u651:
  1038  03B1  2BB7               	goto	l1542
  1039  03B2                     u650:
  1040  03B2                     l1540:
  1041  03B2  120A  118A  224F  120A  118A  	fcall	_send_seg
  1042  03B7                     l1542:
  1043                           
  1044                           ;MAIN_PRO.c: 168:     if (b==1){send_min();}
  1045  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1046  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1047  03B9  0331               	decf	_b,w
  1048  03BA  1D03               	btfss	3,2
  1049  03BB  2BBD               	goto	u661
  1050  03BC  2BBE               	goto	u660
  1051  03BD                     u661:
  1052  03BD  2BC3               	goto	l1546
  1053  03BE                     u660:
  1054  03BE                     l1544:
  1055  03BE  120A  118A  2295  120A  118A  	fcall	_send_min
  1056  03C3                     l1546:
  1057                           
  1058                           ;MAIN_PRO.c: 169:     if (g==1){send_hora();}
  1059  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1060  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1061  03C5  0330               	decf	_g,w
  1062  03C6  1D03               	btfss	3,2
  1063  03C7  2BC9               	goto	u671
  1064  03C8  2BCA               	goto	u670
  1065  03C9                     u671:
  1066  03C9  2BCF               	goto	l172
  1067  03CA                     u670:
  1068  03CA                     l1548:
  1069  03CA  120A  118A  22D3  120A  118A  	fcall	_send_hora
  1070  03CF                     l172:
  1071  03CF  0008               	return
  1072  03D0                     __end_of_first_send:
  1073                           
  1074                           	psect	text2
  1075  024F                     __ptext2:	
  1076 ;; *************** function _send_seg *****************
  1077 ;; Defined at:
  1078 ;;		line 211 in file "MAIN_PRO.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          2       0       0       0       0
  1095 ;;      Totals:         2       0       0       0       0
  1096 ;;Total ram usage:        2 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_first_send
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _send_seg
  1108  024F                     _send_seg:
  1109  024F                     l1352:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _send_seg: [wreg-fsr0h+status,2+status,0]
  1112                           
  1113                           
  1114                           ;MAIN_PRO.c: 213:     switch (s){
  1115  024F  2A7F               	goto	l1372
  1116  0250                     l1354:
  1117                           
  1118                           ;MAIN_PRO.c: 215:             TXREG = (seg_t+0x30);
  1119  0250  0821               	movf	_seg_t,w
  1120  0251  3E30               	addlw	48
  1121  0252  0099               	movwf	25	;volatile
  1122  0253                     l211:	
  1123                           ;MAIN_PRO.c: 216:             while(!TXSTAbits.TRMT);
  1124                           
  1125  0253  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0254  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0255  1C98               	btfss	24,1	;volatile
  1128  0256  2A58               	goto	u401
  1129  0257  2A59               	goto	u400
  1130  0258                     u401:
  1131  0258  2A53               	goto	l211
  1132  0259                     u400:
  1133  0259                     l1356:
  1134                           
  1135                           ;MAIN_PRO.c: 217:             s++;
  1136  0259  3001               	movlw	1
  1137  025A  00F3               	movwf	??_send_seg
  1138  025B  0873               	movf	??_send_seg,w
  1139  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1140  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1141  025E  07B3               	addwf	_s,f
  1142                           
  1143                           ;MAIN_PRO.c: 218:             break;
  1144  025F  2A94               	goto	l223
  1145  0260                     l1358:
  1146                           
  1147                           ;MAIN_PRO.c: 220:             TXREG = (seg_u+0x30);
  1148  0260  0826               	movf	_seg_u,w
  1149  0261  3E30               	addlw	48
  1150  0262  0099               	movwf	25	;volatile
  1151  0263                     l216:	
  1152                           ;MAIN_PRO.c: 221:             while(!TXSTAbits.TRMT);
  1153                           
  1154  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0265  1C98               	btfss	24,1	;volatile
  1157  0266  2A68               	goto	u411
  1158  0267  2A69               	goto	u410
  1159  0268                     u411:
  1160  0268  2A63               	goto	l216
  1161  0269                     u410:
  1162  0269                     l1360:
  1163                           
  1164                           ;MAIN_PRO.c: 222:             s++;
  1165  0269  3001               	movlw	1
  1166  026A  00F3               	movwf	??_send_seg
  1167  026B  0873               	movf	??_send_seg,w
  1168  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1169  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1170  026E  07B3               	addwf	_s,f
  1171  026F                     l1362:
  1172                           
  1173                           ;MAIN_PRO.c: 223:             s=0;
  1174  026F  01B3               	clrf	_s
  1175  0270                     l1364:
  1176                           
  1177                           ;MAIN_PRO.c: 224:             C=0;
  1178  0270  01B7               	clrf	_C
  1179                           
  1180                           ;MAIN_PRO.c: 225:             break;
  1181  0271  2A94               	goto	l223
  1182  0272                     l1366:
  1183                           
  1184                           ;MAIN_PRO.c: 227:             TXREG = (0x03);
  1185  0272  3003               	movlw	3
  1186  0273  0099               	movwf	25	;volatile
  1187  0274                     l220:	
  1188                           ;MAIN_PRO.c: 228:             while(!TXSTAbits.TRMT);
  1189                           
  1190  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0276  1C98               	btfss	24,1	;volatile
  1193  0277  2A79               	goto	u421
  1194  0278  2A7A               	goto	u420
  1195  0279                     u421:
  1196  0279  2A74               	goto	l220
  1197  027A                     u420:
  1198  027A                     l1368:
  1199                           
  1200                           ;MAIN_PRO.c: 229:             s=0;
  1201  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1202  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1203  027C  01B3               	clrf	_s
  1204                           
  1205                           ;MAIN_PRO.c: 230:             C=0;
  1206  027D  01B7               	clrf	_C
  1207                           
  1208                           ;MAIN_PRO.c: 231:             break;
  1209  027E  2A94               	goto	l223
  1210  027F                     l1372:
  1211  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0281  0833               	movf	_s,w
  1214  0282  00F3               	movwf	??_send_seg
  1215  0283  01F4               	clrf	??_send_seg+1
  1216                           
  1217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 1, Range of values is 0 to 0
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte            4     3 (average)
  1223                           ; direct_byte           11     8 (fixed)
  1224                           ; jumptable            260     6 (fixed)
  1225                           ;	Chosen strategy is simple_byte
  1226  0284  0874               	movf	??_send_seg+1,w
  1227  0285  3A00               	xorlw	0	; case 0
  1228  0286  1903               	skipnz
  1229  0287  2A89               	goto	l1914
  1230  0288  2A94               	goto	l223
  1231  0289                     l1914:
  1232                           
  1233                           ; Switch size 1, requested type "simple"
  1234                           ; Number of cases is 3, Range of values is 0 to 2
  1235                           ; switch strategies available:
  1236                           ; Name         Instructions Cycles
  1237                           ; simple_byte           10     6 (average)
  1238                           ; direct_byte           17     8 (fixed)
  1239                           ; jumptable            260     6 (fixed)
  1240                           ;	Chosen strategy is simple_byte
  1241  0289  0873               	movf	??_send_seg,w
  1242  028A  3A00               	xorlw	0	; case 0
  1243  028B  1903               	skipnz
  1244  028C  2A50               	goto	l1354
  1245  028D  3A01               	xorlw	1	; case 1
  1246  028E  1903               	skipnz
  1247  028F  2A60               	goto	l1358
  1248  0290  3A03               	xorlw	3	; case 2
  1249  0291  1903               	skipnz
  1250  0292  2A72               	goto	l1366
  1251  0293  2A94               	goto	l223
  1252  0294                     l223:
  1253  0294  0008               	return
  1254  0295                     __end_of_send_seg:
  1255                           
  1256                           	psect	text3
  1257  0295                     __ptext3:	
  1258 ;; *************** function _send_min *****************
  1259 ;; Defined at:
  1260 ;;		line 191 in file "MAIN_PRO.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          2       0       0       0       0
  1277 ;;      Totals:         2       0       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_first_send
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _send_min
  1290  0295                     _send_min:
  1291  0295                     l1378:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _send_min: [wreg-fsr0h+status,2+status,0]
  1294                           
  1295                           
  1296                           ;MAIN_PRO.c: 193:     switch (m){
  1297  0295  2ABD               	goto	l1394
  1298  0296                     l1380:
  1299                           
  1300                           ;MAIN_PRO.c: 195:              TXREG = (min_t+0x30);
  1301  0296  0822               	movf	_min_t,w
  1302  0297  3E30               	addlw	48
  1303  0298  0099               	movwf	25	;volatile
  1304  0299                     l194:	
  1305                           ;MAIN_PRO.c: 196:              while(!TXSTAbits.TRMT);
  1306                           
  1307  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1308  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1309  029B  1C98               	btfss	24,1	;volatile
  1310  029C  2A9E               	goto	u431
  1311  029D  2A9F               	goto	u430
  1312  029E                     u431:
  1313  029E  2A99               	goto	l194
  1314  029F                     u430:
  1315  029F                     l1382:
  1316                           
  1317                           ;MAIN_PRO.c: 197:              m++;
  1318  029F  3001               	movlw	1
  1319  02A0  00F3               	movwf	??_send_min
  1320  02A1  0873               	movf	??_send_min,w
  1321  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1322  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1323  02A4  07B4               	addwf	_m,f
  1324                           
  1325                           ;MAIN_PRO.c: 198:             break;
  1326  02A5  2AD2               	goto	l206
  1327  02A6                     l1384:
  1328                           
  1329                           ;MAIN_PRO.c: 200:              TXREG = (min_u +0x30);
  1330  02A6  0827               	movf	_min_u,w
  1331  02A7  3E30               	addlw	48
  1332  02A8  0099               	movwf	25	;volatile
  1333  02A9                     l199:	
  1334                           ;MAIN_PRO.c: 201:              while(!TXSTAbits.TRMT);
  1335                           
  1336  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1337  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1338  02AB  1C98               	btfss	24,1	;volatile
  1339  02AC  2AAE               	goto	u441
  1340  02AD  2AAF               	goto	u440
  1341  02AE                     u441:
  1342  02AE  2AA9               	goto	l199
  1343  02AF                     u440:
  1344  02AF  2A9F               	goto	l1382
  1345  02B0                     l1388:
  1346                           
  1347                           ;MAIN_PRO.c: 205:             TXREG = (0x03);
  1348  02B0  3003               	movlw	3
  1349  02B1  0099               	movwf	25	;volatile
  1350  02B2                     l203:	
  1351                           ;MAIN_PRO.c: 206:             while(!TXSTAbits.TRMT);
  1352                           
  1353  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1354  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1355  02B4  1C98               	btfss	24,1	;volatile
  1356  02B5  2AB7               	goto	u451
  1357  02B6  2AB8               	goto	u450
  1358  02B7                     u451:
  1359  02B7  2AB2               	goto	l203
  1360  02B8                     u450:
  1361  02B8                     l1390:
  1362                           
  1363                           ;MAIN_PRO.c: 207:             m=0;
  1364  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1365  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1366  02BA  01B4               	clrf	_m
  1367                           
  1368                           ;MAIN_PRO.c: 208:             b=0;
  1369  02BB  01B1               	clrf	_b
  1370                           
  1371                           ;MAIN_PRO.c: 209:             break;
  1372  02BC  2AD2               	goto	l206
  1373  02BD                     l1394:
  1374  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1375  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1376  02BF  0834               	movf	_m,w
  1377  02C0  00F3               	movwf	??_send_min
  1378  02C1  01F4               	clrf	??_send_min+1
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ; direct_byte           11     8 (fixed)
  1387                           ; jumptable            260     6 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389  02C2  0874               	movf	??_send_min+1,w
  1390  02C3  3A00               	xorlw	0	; case 0
  1391  02C4  1903               	skipnz
  1392  02C5  2AC7               	goto	l1916
  1393  02C6  2AD2               	goto	l206
  1394  02C7                     l1916:
  1395                           
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 3, Range of values is 0 to 2
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte           10     6 (average)
  1401                           ; direct_byte           17     8 (fixed)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404  02C7  0873               	movf	??_send_min,w
  1405  02C8  3A00               	xorlw	0	; case 0
  1406  02C9  1903               	skipnz
  1407  02CA  2A96               	goto	l1380
  1408  02CB  3A01               	xorlw	1	; case 1
  1409  02CC  1903               	skipnz
  1410  02CD  2AA6               	goto	l1384
  1411  02CE  3A03               	xorlw	3	; case 2
  1412  02CF  1903               	skipnz
  1413  02D0  2AB0               	goto	l1388
  1414  02D1  2AD2               	goto	l206
  1415  02D2                     l206:
  1416  02D2  0008               	return
  1417  02D3                     __end_of_send_min:
  1418                           
  1419                           	psect	text4
  1420  02D3                     __ptext4:	
  1421 ;; *************** function _send_hora *****************
  1422 ;; Defined at:
  1423 ;;		line 171 in file "MAIN_PRO.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          2       0       0       0       0
  1440 ;;      Totals:         2       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_first_send
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _send_hora
  1453  02D3                     _send_hora:
  1454  02D3                     l1400:	
  1455                           ;incstack = 0
  1456                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0]
  1457                           
  1458                           
  1459                           ;MAIN_PRO.c: 173:     switch (h){
  1460  02D3  2AFB               	goto	l1416
  1461  02D4                     l1402:
  1462                           
  1463                           ;MAIN_PRO.c: 175:             TXREG = (hor_t+0x30);
  1464  02D4  0823               	movf	_hor_t,w
  1465  02D5  3E30               	addlw	48
  1466  02D6  0099               	movwf	25	;volatile
  1467  02D7                     l177:	
  1468                           ;MAIN_PRO.c: 176:             while(!TXSTAbits.TRMT);
  1469                           
  1470  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1471  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1472  02D9  1C98               	btfss	24,1	;volatile
  1473  02DA  2ADC               	goto	u461
  1474  02DB  2ADD               	goto	u460
  1475  02DC                     u461:
  1476  02DC  2AD7               	goto	l177
  1477  02DD                     u460:
  1478  02DD                     l1404:
  1479                           
  1480                           ;MAIN_PRO.c: 177:             h++;
  1481  02DD  3001               	movlw	1
  1482  02DE  00F3               	movwf	??_send_hora
  1483  02DF  0873               	movf	??_send_hora,w
  1484  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1485  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1486  02E2  07B5               	addwf	_h,f
  1487                           
  1488                           ;MAIN_PRO.c: 178:             break;
  1489  02E3  2B10               	goto	l189
  1490  02E4                     l1406:
  1491                           
  1492                           ;MAIN_PRO.c: 180:             TXREG = (hor_u+0x30);
  1493  02E4  0828               	movf	_hor_u,w
  1494  02E5  3E30               	addlw	48
  1495  02E6  0099               	movwf	25	;volatile
  1496  02E7                     l182:	
  1497                           ;MAIN_PRO.c: 181:             while(!TXSTAbits.TRMT);
  1498                           
  1499  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1500  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1501  02E9  1C98               	btfss	24,1	;volatile
  1502  02EA  2AEC               	goto	u471
  1503  02EB  2AED               	goto	u470
  1504  02EC                     u471:
  1505  02EC  2AE7               	goto	l182
  1506  02ED                     u470:
  1507  02ED  2ADD               	goto	l1404
  1508  02EE                     l1410:
  1509                           
  1510                           ;MAIN_PRO.c: 185:             TXREG = (0x3A);
  1511  02EE  303A               	movlw	58
  1512  02EF  0099               	movwf	25	;volatile
  1513  02F0                     l186:	
  1514                           ;MAIN_PRO.c: 186:             while(!TXSTAbits.TRMT);
  1515                           
  1516  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1517  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1518  02F2  1C98               	btfss	24,1	;volatile
  1519  02F3  2AF5               	goto	u481
  1520  02F4  2AF6               	goto	u480
  1521  02F5                     u481:
  1522  02F5  2AF0               	goto	l186
  1523  02F6                     u480:
  1524  02F6                     l1412:
  1525                           
  1526                           ;MAIN_PRO.c: 187:             h=0;
  1527  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1528  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1529  02F8  01B5               	clrf	_h
  1530                           
  1531                           ;MAIN_PRO.c: 188:             g=0;
  1532  02F9  01B0               	clrf	_g
  1533                           
  1534                           ;MAIN_PRO.c: 189:             break;
  1535  02FA  2B10               	goto	l189
  1536  02FB                     l1416:
  1537  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1538  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1539  02FD  0835               	movf	_h,w
  1540  02FE  00F3               	movwf	??_send_hora
  1541  02FF  01F4               	clrf	??_send_hora+1
  1542                           
  1543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 1, Range of values is 0 to 0
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte            4     3 (average)
  1549                           ; direct_byte           11     8 (fixed)
  1550                           ; jumptable            260     6 (fixed)
  1551                           ;	Chosen strategy is simple_byte
  1552  0300  0874               	movf	??_send_hora+1,w
  1553  0301  3A00               	xorlw	0	; case 0
  1554  0302  1903               	skipnz
  1555  0303  2B05               	goto	l1918
  1556  0304  2B10               	goto	l189
  1557  0305                     l1918:
  1558                           
  1559                           ; Switch size 1, requested type "simple"
  1560                           ; Number of cases is 3, Range of values is 0 to 2
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte           10     6 (average)
  1564                           ; direct_byte           17     8 (fixed)
  1565                           ; jumptable            260     6 (fixed)
  1566                           ;	Chosen strategy is simple_byte
  1567  0305  0873               	movf	??_send_hora,w
  1568  0306  3A00               	xorlw	0	; case 0
  1569  0307  1903               	skipnz
  1570  0308  2AD4               	goto	l1402
  1571  0309  3A01               	xorlw	1	; case 1
  1572  030A  1903               	skipnz
  1573  030B  2AE4               	goto	l1406
  1574  030C  3A03               	xorlw	3	; case 2
  1575  030D  1903               	skipnz
  1576  030E  2AEE               	goto	l1410
  1577  030F  2B10               	goto	l189
  1578  0310                     l189:
  1579  0310  0008               	return
  1580  0311                     __end_of_send_hora:
  1581                           
  1582                           	psect	text5
  1583  034B                     __ptext5:	
  1584 ;; *************** function _Setup *****************
  1585 ;; Defined at:
  1586 ;;		line 103 in file "MAIN_PRO.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    2
  1607 ;; This function calls:
  1608 ;;		_SET_RXT
  1609 ;;		_SET_TXR
  1610 ;;		_initOsc
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _Setup
  1618  034B                     _Setup:
  1619  034B                     l1450:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1622                           
  1623                           
  1624                           ;MAIN_PRO.c: 105:     PORTA = 0;
  1625  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1626  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1627  034D  0185               	clrf	5	;volatile
  1628                           
  1629                           ;MAIN_PRO.c: 106:     PORTB = 0;
  1630  034E  0186               	clrf	6	;volatile
  1631                           
  1632                           ;MAIN_PRO.c: 107:     PORTC = 0;
  1633  034F  0187               	clrf	7	;volatile
  1634                           
  1635                           ;MAIN_PRO.c: 108:     PORTD = 0;
  1636  0350  0188               	clrf	8	;volatile
  1637                           
  1638                           ;MAIN_PRO.c: 109:     PORTE = 0;
  1639  0351  0189               	clrf	9	;volatile
  1640                           
  1641                           ;MAIN_PRO.c: 111:     TRISA = 0B00000000;
  1642  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0354  0185               	clrf	5	;volatile
  1645                           
  1646                           ;MAIN_PRO.c: 112:     TRISB = 0B00000000;
  1647  0355  0186               	clrf	6	;volatile
  1648                           
  1649                           ;MAIN_PRO.c: 113:     TRISC = 0B00000000;
  1650  0356  0187               	clrf	7	;volatile
  1651                           
  1652                           ;MAIN_PRO.c: 114:     TRISD = 0B00000000;
  1653  0357  0188               	clrf	8	;volatile
  1654                           
  1655                           ;MAIN_PRO.c: 115:     TRISE = 0B0000;
  1656  0358  0189               	clrf	9	;volatile
  1657                           
  1658                           ;MAIN_PRO.c: 117:     ANSEL = 0B00000000;
  1659  0359  1683               	bsf	3,5	;RP0=1, select bank3
  1660  035A  1703               	bsf	3,6	;RP1=1, select bank3
  1661  035B  0188               	clrf	8	;volatile
  1662                           
  1663                           ;MAIN_PRO.c: 118:     ANSELH = 0B00000000;
  1664  035C  0189               	clrf	9	;volatile
  1665  035D                     l1452:
  1666                           
  1667                           ;MAIN_PRO.c: 121:     INTCONbits.GIE=1;
  1668  035D  178B               	bsf	11,7	;volatile
  1669  035E                     l1454:
  1670                           
  1671                           ;MAIN_PRO.c: 122:     INTCONbits.PEIE=1;
  1672  035E  170B               	bsf	11,6	;volatile
  1673  035F                     l1456:
  1674                           
  1675                           ;MAIN_PRO.c: 123:     INTCONbits.TMR0IE=1;
  1676  035F  168B               	bsf	11,5	;volatile
  1677  0360                     l1458:
  1678                           
  1679                           ;MAIN_PRO.c: 124:     INTCONbits.TMR0IF=0;
  1680  0360  110B               	bcf	11,2	;volatile
  1681  0361                     l1460:
  1682                           
  1683                           ;MAIN_PRO.c: 125:     PIE1bits.RCIE = 1;
  1684  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0363  168C               	bsf	12,5	;volatile
  1687  0364                     l1462:
  1688                           
  1689                           ;MAIN_PRO.c: 126:     OPTION_REGbits.T0CS=0;
  1690  0364  1281               	bcf	1,5	;volatile
  1691  0365                     l1464:
  1692                           
  1693                           ;MAIN_PRO.c: 127:     OPTION_REGbits.T0SE=0;
  1694  0365  1201               	bcf	1,4	;volatile
  1695  0366                     l1466:
  1696                           
  1697                           ;MAIN_PRO.c: 128:     OPTION_REGbits.PSA=0;
  1698  0366  1181               	bcf	1,3	;volatile
  1699  0367                     l1468:
  1700                           
  1701                           ;MAIN_PRO.c: 130:     OPTION_REGbits.PS0=1;
  1702  0367  1401               	bsf	1,0	;volatile
  1703  0368                     l1470:
  1704                           
  1705                           ;MAIN_PRO.c: 131:     OPTION_REGbits.PS1=1;
  1706  0368  1481               	bsf	1,1	;volatile
  1707  0369                     l1472:
  1708                           
  1709                           ;MAIN_PRO.c: 132:     OPTION_REGbits.PS2=1;
  1710  0369  1501               	bsf	1,2	;volatile
  1711  036A                     l1474:
  1712                           
  1713                           ;MAIN_PRO.c: 134:     initOsc(6);
  1714  036A  3006               	movlw	6
  1715  036B  120A  118A  219B  120A  118A  	fcall	_initOsc
  1716  0370                     l1476:
  1717                           
  1718                           ;MAIN_PRO.c: 135:     SET_RXT();
  1719  0370  120A  118A  23EC  120A  118A  	fcall	_SET_RXT
  1720  0375                     l1478:
  1721                           
  1722                           ;MAIN_PRO.c: 136:     SET_TXR();
  1723  0375  120A  118A  23D0  120A  118A  	fcall	_SET_TXR
  1724  037A                     l160:
  1725  037A  0008               	return
  1726  037B                     __end_of_Setup:
  1727                           
  1728                           	psect	text6
  1729  019B                     __ptext6:	
  1730 ;; *************** function _initOsc *****************
  1731 ;; Defined at:
  1732 ;;		line 6 in file "Oscilador.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  IRCF            1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  IRCF            1    5[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         1       0       0       0       0
  1748 ;;      Temps:          2       0       0       0       0
  1749 ;;      Totals:         3       0       0       0       0
  1750 ;;Total ram usage:        3 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_Setup
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _initOsc
  1762  019B                     _initOsc:
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1766                           ;initOsc@IRCF stored from wreg
  1767  019B  00F5               	movwf	initOsc@IRCF
  1768  019C                     l1334:
  1769                           
  1770                           ;Oscilador.c: 7: switch (IRCF) {
  1771  019C  29D3               	goto	l1338
  1772  019D                     l253:	
  1773                           ;Oscilador.c: 8:             case 0:
  1774                           
  1775                           
  1776                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  1777  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1778  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1779  019F  130F               	bcf	15,6	;volatile
  1780                           
  1781                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  1782  01A0  128F               	bcf	15,5	;volatile
  1783                           
  1784                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  1785  01A1  120F               	bcf	15,4	;volatile
  1786                           
  1787                           ;Oscilador.c: 12:                 break;
  1788  01A2  29F5               	goto	l254
  1789  01A3                     l255:	
  1790                           ;Oscilador.c: 13:             case 1:
  1791                           
  1792                           
  1793                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  1794  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1795  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1796  01A5  130F               	bcf	15,6	;volatile
  1797                           
  1798                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  1799  01A6  128F               	bcf	15,5	;volatile
  1800                           
  1801                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  1802  01A7  160F               	bsf	15,4	;volatile
  1803                           
  1804                           ;Oscilador.c: 17:                 break;
  1805  01A8  29F5               	goto	l254
  1806  01A9                     l256:	
  1807                           ;Oscilador.c: 18:             case 2:
  1808                           
  1809                           
  1810                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  1811  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1812  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1813  01AB  130F               	bcf	15,6	;volatile
  1814                           
  1815                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  1816  01AC  168F               	bsf	15,5	;volatile
  1817                           
  1818                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  1819  01AD  120F               	bcf	15,4	;volatile
  1820                           
  1821                           ;Oscilador.c: 22:                 break;
  1822  01AE  29F5               	goto	l254
  1823  01AF                     l257:	
  1824                           ;Oscilador.c: 23:             case 3:
  1825                           
  1826                           
  1827                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  1828  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1829  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1830  01B1  130F               	bcf	15,6	;volatile
  1831                           
  1832                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  1833  01B2  168F               	bsf	15,5	;volatile
  1834                           
  1835                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  1836  01B3  160F               	bsf	15,4	;volatile
  1837                           
  1838                           ;Oscilador.c: 27:                 break;
  1839  01B4  29F5               	goto	l254
  1840  01B5                     l258:	
  1841                           ;Oscilador.c: 28:             case 4:
  1842                           
  1843                           
  1844                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  1845  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1846  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1847  01B7  170F               	bsf	15,6	;volatile
  1848                           
  1849                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  1850  01B8  128F               	bcf	15,5	;volatile
  1851                           
  1852                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  1853  01B9  120F               	bcf	15,4	;volatile
  1854                           
  1855                           ;Oscilador.c: 32:                 break;
  1856  01BA  29F5               	goto	l254
  1857  01BB                     l259:	
  1858                           ;Oscilador.c: 33:             case 5:
  1859                           
  1860                           
  1861                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  1862  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1863  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1864  01BD  170F               	bsf	15,6	;volatile
  1865                           
  1866                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  1867  01BE  128F               	bcf	15,5	;volatile
  1868                           
  1869                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  1870  01BF  160F               	bsf	15,4	;volatile
  1871                           
  1872                           ;Oscilador.c: 37:                 break;
  1873  01C0  29F5               	goto	l254
  1874  01C1                     l260:	
  1875                           ;Oscilador.c: 38:             case 6:
  1876                           
  1877                           
  1878                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  1879  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1880  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1881  01C3  170F               	bsf	15,6	;volatile
  1882                           
  1883                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  1884  01C4  168F               	bsf	15,5	;volatile
  1885                           
  1886                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  1887  01C5  120F               	bcf	15,4	;volatile
  1888                           
  1889                           ;Oscilador.c: 42:                 break;
  1890  01C6  29F5               	goto	l254
  1891  01C7                     l261:	
  1892                           ;Oscilador.c: 43:             case 7:
  1893                           
  1894                           
  1895                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  1896  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1897  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1898  01C9  170F               	bsf	15,6	;volatile
  1899                           
  1900                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  1901  01CA  168F               	bsf	15,5	;volatile
  1902                           
  1903                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  1904  01CB  160F               	bsf	15,4	;volatile
  1905                           
  1906                           ;Oscilador.c: 47:                 break;
  1907  01CC  29F5               	goto	l254
  1908  01CD                     l262:	
  1909                           ;Oscilador.c: 48:             default:
  1910                           
  1911                           
  1912                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  1913  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1914  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1915  01CF  170F               	bsf	15,6	;volatile
  1916                           
  1917                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  1918  01D0  168F               	bsf	15,5	;volatile
  1919                           
  1920                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  1921  01D1  120F               	bcf	15,4	;volatile
  1922                           
  1923                           ;Oscilador.c: 52:                 break;
  1924  01D2  29F5               	goto	l254
  1925  01D3                     l1338:
  1926  01D3  0875               	movf	initOsc@IRCF,w
  1927  01D4  00F3               	movwf	??_initOsc
  1928  01D5  01F4               	clrf	??_initOsc+1
  1929                           
  1930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1931                           ; Switch size 1, requested type "simple"
  1932                           ; Number of cases is 1, Range of values is 0 to 0
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte            4     3 (average)
  1936                           ; direct_byte           11     8 (fixed)
  1937                           ; jumptable            260     6 (fixed)
  1938                           ;	Chosen strategy is simple_byte
  1939  01D6  0874               	movf	??_initOsc+1,w
  1940  01D7  3A00               	xorlw	0	; case 0
  1941  01D8  1903               	skipnz
  1942  01D9  29DB               	goto	l1920
  1943  01DA  29CD               	goto	l262
  1944  01DB                     l1920:
  1945                           
  1946                           ; Switch size 1, requested type "simple"
  1947                           ; Number of cases is 8, Range of values is 0 to 7
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte           25    13 (average)
  1951                           ; direct_byte           32     8 (fixed)
  1952                           ; jumptable            260     6 (fixed)
  1953                           ;	Chosen strategy is simple_byte
  1954  01DB  0873               	movf	??_initOsc,w
  1955  01DC  3A00               	xorlw	0	; case 0
  1956  01DD  1903               	skipnz
  1957  01DE  299D               	goto	l253
  1958  01DF  3A01               	xorlw	1	; case 1
  1959  01E0  1903               	skipnz
  1960  01E1  29A3               	goto	l255
  1961  01E2  3A03               	xorlw	3	; case 2
  1962  01E3  1903               	skipnz
  1963  01E4  29A9               	goto	l256
  1964  01E5  3A01               	xorlw	1	; case 3
  1965  01E6  1903               	skipnz
  1966  01E7  29AF               	goto	l257
  1967  01E8  3A07               	xorlw	7	; case 4
  1968  01E9  1903               	skipnz
  1969  01EA  29B5               	goto	l258
  1970  01EB  3A01               	xorlw	1	; case 5
  1971  01EC  1903               	skipnz
  1972  01ED  29BB               	goto	l259
  1973  01EE  3A03               	xorlw	3	; case 6
  1974  01EF  1903               	skipnz
  1975  01F0  29C1               	goto	l260
  1976  01F1  3A01               	xorlw	1	; case 7
  1977  01F2  1903               	skipnz
  1978  01F3  29C7               	goto	l261
  1979  01F4  29CD               	goto	l262
  1980  01F5                     l254:
  1981                           
  1982                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  1983  01F5  140F               	bsf	15,0	;volatile
  1984  01F6                     l263:
  1985  01F6  0008               	return
  1986  01F7                     __end_of_initOsc:
  1987                           
  1988                           	psect	text7
  1989  03D0                     __ptext7:	
  1990 ;; *************** function _SET_TXR *****************
  1991 ;; Defined at:
  1992 ;;		line 3 in file "EUSART.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_Setup
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _SET_TXR
  2022  03D0                     _SET_TXR:
  2023  03D0                     l1346:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _SET_TXR: [wreg+status,2]
  2026                           
  2027                           
  2028                           ;EUSART.c: 4:     TXSTAbits.SYNC=0;
  2029  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2030  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2031  03D2  1218               	bcf	24,4	;volatile
  2032                           
  2033                           ;EUSART.c: 5:     TXSTAbits.TXEN=1;
  2034  03D3  1698               	bsf	24,5	;volatile
  2035                           
  2036                           ;EUSART.c: 6:     TXSTAbits.BRGH=1;
  2037  03D4  1518               	bsf	24,2	;volatile
  2038                           
  2039                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  2040  03D5  1318               	bcf	24,6	;volatile
  2041                           
  2042                           ;EUSART.c: 8:     BAUDCTLbits.BRG16=0;
  2043  03D6  1683               	bsf	3,5	;RP0=1, select bank3
  2044  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  2045  03D8  1187               	bcf	7,3	;volatile
  2046  03D9                     l1348:
  2047                           
  2048                           ;EUSART.c: 9:     SPBRG=25;
  2049  03D9  3019               	movlw	25
  2050  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2051  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2052  03DC  0099               	movwf	25	;volatile
  2053  03DD                     l1350:
  2054                           
  2055                           ;EUSART.c: 10:     SPBRGH=0;
  2056  03DD  019A               	clrf	26	;volatile
  2057  03DE                     l244:
  2058  03DE  0008               	return
  2059  03DF                     __end_of_SET_TXR:
  2060                           
  2061                           	psect	text8
  2062  03EC                     __ptext8:	
  2063 ;; *************** function _SET_RXT *****************
  2064 ;; Defined at:
  2065 ;;		line 13 in file "EUSART.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		None
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_Setup
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _SET_RXT
  2095  03EC                     _SET_RXT:
  2096  03EC                     l1344:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _SET_RXT: []
  2099                           
  2100                           
  2101                           ;EUSART.c: 14:     RCSTAbits.SPEN=1;
  2102  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2103  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2104  03EE  1798               	bsf	24,7	;volatile
  2105                           
  2106                           ;EUSART.c: 15:     RCSTAbits.CREN=1;
  2107  03EF  1618               	bsf	24,4	;volatile
  2108                           
  2109                           ;EUSART.c: 16:     RCSTAbits.FERR=0;
  2110  03F0  1118               	bcf	24,2	;volatile
  2111                           
  2112                           ;EUSART.c: 17:     RCSTAbits.OERR=0;
  2113  03F1  1098               	bcf	24,1	;volatile
  2114                           
  2115                           ;EUSART.c: 18:     RCSTAbits.RX9=0;
  2116  03F2  1318               	bcf	24,6	;volatile
  2117                           
  2118                           ;EUSART.c: 19:     PIE1bits.RCIE=1;
  2119  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2120  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2121  03F5  168C               	bsf	12,5	;volatile
  2122  03F6                     l247:
  2123  03F6  0008               	return
  2124  03F7                     __end_of_SET_RXT:
  2125                           
  2126                           	psect	text9
  2127  03F7                     __ptext9:	
  2128 ;; *************** function _I2C_Master_Write *****************
  2129 ;; Defined at:
  2130 ;;		line 54 in file "I2C.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  d               2    3[COMMON] unsigned int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         2       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         2       0       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    2
  2151 ;; This function calls:
  2152 ;;		_I2C_Master_Wait
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;;		_CARGA
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _I2C_Master_Write
  2161  03F7                     _I2C_Master_Write:
  2162  03F7                     l1762:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2165                           
  2166                           
  2167                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  2168  03F7  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2169  03FC                     l1764:
  2170                           
  2171                           ;I2C.c: 57:     SSPBUF = d;
  2172  03FC  0873               	movf	I2C_Master_Write@d,w
  2173  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2174  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2175  03FF  0093               	movwf	19	;volatile
  2176  0400                     l310:
  2177  0400  0008               	return
  2178  0401                     __end_of_I2C_Master_Write:
  2179                           
  2180                           	psect	text10
  2181  0401                     __ptext10:	
  2182 ;; *************** function _I2C_Master_Stop *****************
  2183 ;; Defined at:
  2184 ;;		line 44 in file "I2C.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    2
  2205 ;; This function calls:
  2206 ;;		_I2C_Master_Wait
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;;		_CARGA
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _I2C_Master_Stop
  2215  0401                     _I2C_Master_Stop:
  2216  0401                     l1786:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2219                           
  2220                           
  2221                           ;I2C.c: 46:     I2C_Master_Wait();
  2222  0401  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2223  0406                     l1788:
  2224                           
  2225                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  2226  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0408  1511               	bsf	17,2	;volatile
  2229  0409                     l307:
  2230  0409  0008               	return
  2231  040A                     __end_of_I2C_Master_Stop:
  2232                           
  2233                           	psect	text11
  2234  040A                     __ptext11:	
  2235 ;; *************** function _I2C_Master_Start *****************
  2236 ;; Defined at:
  2237 ;;		line 28 in file "I2C.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    2
  2258 ;; This function calls:
  2259 ;;		_I2C_Master_Wait
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;;		_CARGA
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _I2C_Master_Start
  2268  040A                     _I2C_Master_Start:
  2269  040A                     l1758:	
  2270                           ;incstack = 0
  2271                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2272                           
  2273                           
  2274                           ;I2C.c: 30:     I2C_Master_Wait();
  2275  040A  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2276  040F                     l1760:
  2277                           
  2278                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  2279  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2280  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2281  0411  1411               	bsf	17,0	;volatile
  2282  0412                     l301:
  2283  0412  0008               	return
  2284  0413                     __end_of_I2C_Master_Start:
  2285                           
  2286                           	psect	text12
  2287  0413                     __ptext12:	
  2288 ;; *************** function _I2C_Master_RepeatedStart *****************
  2289 ;; Defined at:
  2290 ;;		line 36 in file "I2C.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    2
  2311 ;; This function calls:
  2312 ;;		_I2C_Master_Wait
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           
  2319                           ;psect for function _I2C_Master_RepeatedStart
  2320  0413                     _I2C_Master_RepeatedStart:
  2321  0413                     l1766:	
  2322                           ;incstack = 0
  2323                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2324                           
  2325                           
  2326                           ;I2C.c: 38:     I2C_Master_Wait();
  2327  0413  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2328  0418                     l1768:
  2329                           
  2330                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  2331  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2333  041A  1491               	bsf	17,1	;volatile
  2334  041B                     l304:
  2335  041B  0008               	return
  2336  041C                     __end_of_I2C_Master_RepeatedStart:
  2337                           
  2338                           	psect	text13
  2339  037B                     __ptext13:	
  2340 ;; *************** function _I2C_Master_Read *****************
  2341 ;; Defined at:
  2342 ;;		line 63 in file "I2C.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  a               2    3[COMMON] unsigned short 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  temp            2    0[BANK0 ] unsigned short 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2    3[COMMON] unsigned short 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, pclath, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         2       0       0       0       0
  2357 ;;      Locals:         0       2       0       0       0
  2358 ;;      Temps:          2       0       0       0       0
  2359 ;;      Totals:         4       2       0       0       0
  2360 ;;Total ram usage:        6 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    2
  2363 ;; This function calls:
  2364 ;;		_I2C_Master_Wait
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function _I2C_Master_Read
  2372  037B                     _I2C_Master_Read:
  2373  037B                     l1770:	
  2374                           ;incstack = 0
  2375                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2376                           
  2377                           
  2378                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  2379  037B  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2380  0380                     l1772:
  2381                           
  2382                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2383  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0382  1591               	bsf	17,3	;volatile
  2386                           
  2387                           ;I2C.c: 68:     I2C_Master_Wait();
  2388  0383  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2389  0388                     l1774:
  2390                           
  2391                           ;I2C.c: 69:     temp = SSPBUF;
  2392  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2394  038A  0813               	movf	19,w	;volatile
  2395  038B  00F5               	movwf	??_I2C_Master_Read
  2396  038C  01F6               	clrf	??_I2C_Master_Read+1
  2397  038D  0875               	movf	??_I2C_Master_Read,w
  2398  038E  00BC               	movwf	I2C_Master_Read@temp
  2399  038F  0876               	movf	??_I2C_Master_Read+1,w
  2400  0390  00BD               	movwf	I2C_Master_Read@temp+1
  2401  0391                     l1776:
  2402                           
  2403                           ;I2C.c: 70:     I2C_Master_Wait();
  2404  0391  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2405  0396                     l1778:
  2406                           
  2407                           ;I2C.c: 71:     if(a == 1){
  2408  0396  0373               	decf	I2C_Master_Read@a,w
  2409  0397  0474               	iorwf	I2C_Master_Read@a+1,w
  2410  0398  1D03               	btfss	3,2
  2411  0399  2B9B               	goto	u881
  2412  039A  2B9C               	goto	u880
  2413  039B                     u881:
  2414  039B  2BA0               	goto	l313
  2415  039C                     u880:
  2416  039C                     l1780:
  2417                           
  2418                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  2419  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2420  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2421  039E  1291               	bcf	17,5	;volatile
  2422                           
  2423                           ;I2C.c: 73:     }else{
  2424  039F  2BA3               	goto	l314
  2425  03A0                     l313:
  2426                           
  2427                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  2428  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2429  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2430  03A2  1691               	bsf	17,5	;volatile
  2431  03A3                     l314:	
  2432                           ;I2C.c: 75:     }
  2433                           
  2434                           
  2435                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  2436  03A3  1611               	bsf	17,4	;volatile
  2437  03A4                     l1782:
  2438                           
  2439                           ;I2C.c: 77:     return temp;
  2440  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2441  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2442  03A6  083D               	movf	I2C_Master_Read@temp+1,w
  2443  03A7  00F4               	movwf	?_I2C_Master_Read+1
  2444  03A8  083C               	movf	I2C_Master_Read@temp,w
  2445  03A9  00F3               	movwf	?_I2C_Master_Read
  2446  03AA                     l315:
  2447  03AA  0008               	return
  2448  03AB                     __end_of_I2C_Master_Read:
  2449                           
  2450                           	psect	text14
  2451  03DF                     __ptext14:	
  2452 ;; *************** function _I2C_Master_Wait *****************
  2453 ;; Defined at:
  2454 ;;		line 21 in file "I2C.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_I2C_Master_Start
  2479 ;;		_I2C_Master_RepeatedStart
  2480 ;;		_I2C_Master_Stop
  2481 ;;		_I2C_Master_Write
  2482 ;;		_I2C_Master_Read
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function _I2C_Master_Wait
  2488  03DF                     _I2C_Master_Wait:
  2489  03DF                     l1718:	
  2490                           ;incstack = 0
  2491                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2492                           
  2493  03DF                     l295:	
  2494                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2495                           
  2496  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2497  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2498  03E1  1914               	btfsc	20,2	;volatile
  2499  03E2  2BE4               	goto	u781
  2500  03E3  2BE5               	goto	u780
  2501  03E4                     u781:
  2502  03E4  2BDF               	goto	l295
  2503  03E5                     u780:
  2504  03E5                     l1720:
  2505  03E5  0811               	movf	17,w	;volatile
  2506  03E6  391F               	andlw	31
  2507  03E7  1D03               	btfss	3,2
  2508  03E8  2BEA               	goto	u791
  2509  03E9  2BEB               	goto	u790
  2510  03EA                     u791:
  2511  03EA  2BDF               	goto	l295
  2512  03EB                     u790:
  2513  03EB                     l298:
  2514  03EB  0008               	return
  2515  03EC                     __end_of_I2C_Master_Wait:
  2516                           
  2517                           	psect	text15
  2518  0311                     __ptext15:	
  2519 ;; *************** function _I2C_Master_Init *****************
  2520 ;; Defined at:
  2521 ;;		line 5 in file "I2C.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  c               4   13[BANK0 ] const unsigned long 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0, pclath, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       4       0       0       0
  2536 ;;      Locals:         0       0       0       0       0
  2537 ;;      Temps:          4       0       0       0       0
  2538 ;;      Totals:         4       4       0       0       0
  2539 ;;Total ram usage:        8 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    2
  2542 ;; This function calls:
  2543 ;;		___lldiv
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _I2C_Master_Init
  2551  0311                     _I2C_Master_Init:
  2552  0311                     l1746:	
  2553                           ;incstack = 0
  2554                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2555                           
  2556                           
  2557                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  2558  0311  3028               	movlw	40
  2559  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0314  0094               	movwf	20	;volatile
  2562  0315                     l1748:
  2563                           
  2564                           ;I2C.c: 8:     SSPCON2 = 0;
  2565  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0317  0191               	clrf	17	;volatile
  2568  0318                     l1750:
  2569                           
  2570                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  2571  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2573  031A  0849               	movf	I2C_Master_Init@c,w
  2574  031B  00F4               	movwf	??_I2C_Master_Init
  2575  031C  084A               	movf	I2C_Master_Init@c+1,w
  2576  031D  00F5               	movwf	??_I2C_Master_Init+1
  2577  031E  084B               	movf	I2C_Master_Init@c+2,w
  2578  031F  00F6               	movwf	??_I2C_Master_Init+2
  2579  0320  084C               	movf	I2C_Master_Init@c+3,w
  2580  0321  00F7               	movwf	??_I2C_Master_Init+3
  2581  0322  3002               	movlw	2
  2582  0323                     u875:
  2583  0323  1003               	clrc
  2584  0324  0DF4               	rlf	??_I2C_Master_Init,f
  2585  0325  0DF5               	rlf	??_I2C_Master_Init+1,f
  2586  0326  0DF6               	rlf	??_I2C_Master_Init+2,f
  2587  0327  0DF7               	rlf	??_I2C_Master_Init+3,f
  2588  0328                     u870:
  2589  0328  3EFF               	addlw	-1
  2590  0329  1D03               	skipz
  2591  032A  2B23               	goto	u875
  2592  032B  0877               	movf	??_I2C_Master_Init+3,w
  2593  032C  00BF               	movwf	___lldiv@divisor+3
  2594  032D  0876               	movf	??_I2C_Master_Init+2,w
  2595  032E  00BE               	movwf	___lldiv@divisor+2
  2596  032F  0875               	movf	??_I2C_Master_Init+1,w
  2597  0330  00BD               	movwf	___lldiv@divisor+1
  2598  0331  0874               	movf	??_I2C_Master_Init,w
  2599  0332  00BC               	movwf	___lldiv@divisor
  2600  0333  3000               	movlw	0
  2601  0334  00C3               	movwf	___lldiv@dividend+3
  2602  0335  307A               	movlw	122
  2603  0336  00C2               	movwf	___lldiv@dividend+2
  2604  0337  3012               	movlw	18
  2605  0338  00C1               	movwf	___lldiv@dividend+1
  2606  0339  3000               	movlw	0
  2607  033A  00C0               	movwf	___lldiv@dividend
  2608  033B  120A  118A  20D6  120A  118A  	fcall	___lldiv
  2609  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0342  083C               	movf	?___lldiv,w
  2612  0343  3EFF               	addlw	255
  2613  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2615  0346  0093               	movwf	19	;volatile
  2616  0347                     l1752:
  2617                           
  2618                           ;I2C.c: 10:     SSPSTAT = 0;
  2619  0347  0194               	clrf	20	;volatile
  2620  0348                     l1754:
  2621                           
  2622                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  2623  0348  1587               	bsf	7,3	;volatile
  2624  0349                     l1756:
  2625                           
  2626                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  2627  0349  1607               	bsf	7,4	;volatile
  2628  034A                     l292:
  2629  034A  0008               	return
  2630  034B                     __end_of_I2C_Master_Init:
  2631                           
  2632                           	psect	text16
  2633  00D6                     __ptext16:	
  2634 ;; *************** function ___lldiv *****************
  2635 ;; Defined at:
  2636 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  divisor         4    0[BANK0 ] unsigned long 
  2639 ;;  dividend        4    4[BANK0 ] unsigned long 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  quotient        4    8[BANK0 ] unsigned long 
  2642 ;;  counter         1   12[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  4    0[BANK0 ] unsigned long 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       8       0       0       0
  2653 ;;      Locals:         0       5       0       0       0
  2654 ;;      Temps:          1       0       0       0       0
  2655 ;;      Totals:         1      13       0       0       0
  2656 ;;Total ram usage:       14 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_I2C_Master_Init
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function ___lldiv
  2668  00D6                     ___lldiv:
  2669  00D6                     l1722:	
  2670                           ;incstack = 0
  2671                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2672                           
  2673  00D6  3000               	movlw	0
  2674  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2675  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2676  00D9  00C7               	movwf	___lldiv@quotient+3
  2677  00DA  3000               	movlw	0
  2678  00DB  00C6               	movwf	___lldiv@quotient+2
  2679  00DC  3000               	movlw	0
  2680  00DD  00C5               	movwf	___lldiv@quotient+1
  2681  00DE  3000               	movlw	0
  2682  00DF  00C4               	movwf	___lldiv@quotient
  2683  00E0  083F               	movf	___lldiv@divisor+3,w
  2684  00E1  043E               	iorwf	___lldiv@divisor+2,w
  2685  00E2  043D               	iorwf	___lldiv@divisor+1,w
  2686  00E3  043C               	iorwf	___lldiv@divisor,w
  2687  00E4  1903               	skipnz
  2688  00E5  28E7               	goto	u801
  2689  00E6  28E8               	goto	u800
  2690  00E7                     u801:
  2691  00E7  2935               	goto	l1742
  2692  00E8                     u800:
  2693  00E8                     l1724:
  2694  00E8  01C8               	clrf	___lldiv@counter
  2695  00E9  0AC8               	incf	___lldiv@counter,f
  2696  00EA  28F8               	goto	l1728
  2697  00EB                     l1726:
  2698  00EB  3001               	movlw	1
  2699  00EC  00F3               	movwf	??___lldiv
  2700  00ED                     u815:
  2701  00ED  1003               	clrc
  2702  00EE  0DBC               	rlf	___lldiv@divisor,f
  2703  00EF  0DBD               	rlf	___lldiv@divisor+1,f
  2704  00F0  0DBE               	rlf	___lldiv@divisor+2,f
  2705  00F1  0DBF               	rlf	___lldiv@divisor+3,f
  2706  00F2  0BF3               	decfsz	??___lldiv,f
  2707  00F3  28ED               	goto	u815
  2708  00F4  3001               	movlw	1
  2709  00F5  00F3               	movwf	??___lldiv
  2710  00F6  0873               	movf	??___lldiv,w
  2711  00F7  07C8               	addwf	___lldiv@counter,f
  2712  00F8                     l1728:
  2713  00F8  1FBF               	btfss	___lldiv@divisor+3,7
  2714  00F9  28FB               	goto	u821
  2715  00FA  28FC               	goto	u820
  2716  00FB                     u821:
  2717  00FB  28EB               	goto	l1726
  2718  00FC                     u820:
  2719  00FC                     l1730:
  2720  00FC  3001               	movlw	1
  2721  00FD  00F3               	movwf	??___lldiv
  2722  00FE                     u835:
  2723  00FE  1003               	clrc
  2724  00FF  0DC4               	rlf	___lldiv@quotient,f
  2725  0100  0DC5               	rlf	___lldiv@quotient+1,f
  2726  0101  0DC6               	rlf	___lldiv@quotient+2,f
  2727  0102  0DC7               	rlf	___lldiv@quotient+3,f
  2728  0103  0BF3               	decfsz	??___lldiv,f
  2729  0104  28FE               	goto	u835
  2730  0105                     l1732:
  2731  0105  083F               	movf	___lldiv@divisor+3,w
  2732  0106  0243               	subwf	___lldiv@dividend+3,w
  2733  0107  1D03               	skipz
  2734  0108  2913               	goto	u845
  2735  0109  083E               	movf	___lldiv@divisor+2,w
  2736  010A  0242               	subwf	___lldiv@dividend+2,w
  2737  010B  1D03               	skipz
  2738  010C  2913               	goto	u845
  2739  010D  083D               	movf	___lldiv@divisor+1,w
  2740  010E  0241               	subwf	___lldiv@dividend+1,w
  2741  010F  1D03               	skipz
  2742  0110  2913               	goto	u845
  2743  0111  083C               	movf	___lldiv@divisor,w
  2744  0112  0240               	subwf	___lldiv@dividend,w
  2745  0113                     u845:
  2746  0113  1C03               	skipc
  2747  0114  2916               	goto	u841
  2748  0115  2917               	goto	u840
  2749  0116                     u841:
  2750  0116  2926               	goto	l1738
  2751  0117                     u840:
  2752  0117                     l1734:
  2753  0117  083C               	movf	___lldiv@divisor,w
  2754  0118  02C0               	subwf	___lldiv@dividend,f
  2755  0119  083D               	movf	___lldiv@divisor+1,w
  2756  011A  1C03               	skipc
  2757  011B  0F3D               	incfsz	___lldiv@divisor+1,w
  2758  011C  02C1               	subwf	___lldiv@dividend+1,f
  2759  011D  083E               	movf	___lldiv@divisor+2,w
  2760  011E  1C03               	skipc
  2761  011F  0F3E               	incfsz	___lldiv@divisor+2,w
  2762  0120  02C2               	subwf	___lldiv@dividend+2,f
  2763  0121  083F               	movf	___lldiv@divisor+3,w
  2764  0122  1C03               	skipc
  2765  0123  0F3F               	incfsz	___lldiv@divisor+3,w
  2766  0124  02C3               	subwf	___lldiv@dividend+3,f
  2767  0125                     l1736:
  2768  0125  1444               	bsf	___lldiv@quotient,0
  2769  0126                     l1738:
  2770  0126  3001               	movlw	1
  2771  0127                     u855:
  2772  0127  1003               	clrc
  2773  0128  0CBF               	rrf	___lldiv@divisor+3,f
  2774  0129  0CBE               	rrf	___lldiv@divisor+2,f
  2775  012A  0CBD               	rrf	___lldiv@divisor+1,f
  2776  012B  0CBC               	rrf	___lldiv@divisor,f
  2777  012C  3EFF               	addlw	-1
  2778  012D  1D03               	skipz
  2779  012E  2927               	goto	u855
  2780  012F                     l1740:
  2781  012F  3001               	movlw	1
  2782  0130  02C8               	subwf	___lldiv@counter,f
  2783  0131  1D03               	btfss	3,2
  2784  0132  2934               	goto	u861
  2785  0133  2935               	goto	u860
  2786  0134                     u861:
  2787  0134  28FC               	goto	l1730
  2788  0135                     u860:
  2789  0135                     l1742:
  2790  0135  0847               	movf	___lldiv@quotient+3,w
  2791  0136  00BF               	movwf	?___lldiv+3
  2792  0137  0846               	movf	___lldiv@quotient+2,w
  2793  0138  00BE               	movwf	?___lldiv+2
  2794  0139  0845               	movf	___lldiv@quotient+1,w
  2795  013A  00BD               	movwf	?___lldiv+1
  2796  013B  0844               	movf	___lldiv@quotient,w
  2797  013C  00BC               	movwf	?___lldiv
  2798  013D                     l440:
  2799  013D  0008               	return
  2800  013E                     __end_of___lldiv:
  2801                           
  2802                           	psect	text17
  2803  013E                     __ptext17:	
  2804 ;; *************** function _CONVET *****************
  2805 ;; Defined at:
  2806 ;;		line 141 in file "MAIN_PRO.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0
  2822 ;;      Temps:          2       0       0       0       0
  2823 ;;      Totals:         2       0       0       0       0
  2824 ;;Total ram usage:        2 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _CONVET
  2836  013E                     _CONVET:
  2837  013E                     l1524:	
  2838                           ;incstack = 0
  2839                           ; Regs used in _CONVET: [wreg+status,2+status,0]
  2840                           
  2841                           
  2842                           ;MAIN_PRO.c: 142:     mou_t = ((mou & 0b00010000)>>4);
  2843  013E  0879               	movf	_mou,w
  2844  013F  00F3               	movwf	??_CONVET
  2845  0140  3004               	movlw	4
  2846  0141                     u605:
  2847  0141  1003               	clrc
  2848  0142  0CF3               	rrf	??_CONVET,f
  2849  0143  3EFF               	addlw	-1
  2850  0144  1D03               	skipz
  2851  0145  2941               	goto	u605
  2852  0146  0873               	movf	??_CONVET,w
  2853  0147  3901               	andlw	1
  2854  0148  00F4               	movwf	??_CONVET+1
  2855  0149  0874               	movf	??_CONVET+1,w
  2856  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2857  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2858  014C  00A5               	movwf	_mou_t
  2859  014D                     l1526:
  2860                           
  2861                           ;MAIN_PRO.c: 143:     mou_u = (mou & 0b00001111);
  2862  014D  0879               	movf	_mou,w
  2863  014E  390F               	andlw	15
  2864  014F  00F3               	movwf	??_CONVET
  2865  0150  0873               	movf	??_CONVET,w
  2866  0151  00AA               	movwf	_mou_u
  2867  0152                     l1528:
  2868                           
  2869                           ;MAIN_PRO.c: 144:     day_t = ((day & 0b00110000)>>4);
  2870  0152  0878               	movf	_day,w
  2871  0153  00F3               	movwf	??_CONVET
  2872  0154  3004               	movlw	4
  2873  0155                     u615:
  2874  0155  1003               	clrc
  2875  0156  0CF3               	rrf	??_CONVET,f
  2876  0157  3EFF               	addlw	-1
  2877  0158  1D03               	skipz
  2878  0159  2955               	goto	u615
  2879  015A  0873               	movf	??_CONVET,w
  2880  015B  3903               	andlw	3
  2881  015C  00F4               	movwf	??_CONVET+1
  2882  015D  0874               	movf	??_CONVET+1,w
  2883  015E  00A4               	movwf	_day_t
  2884                           
  2885                           ;MAIN_PRO.c: 145:     day_u = (day & 0b00001111);
  2886  015F  0878               	movf	_day,w
  2887  0160  390F               	andlw	15
  2888  0161  00F3               	movwf	??_CONVET
  2889  0162  0873               	movf	??_CONVET,w
  2890  0163  00A9               	movwf	_day_u
  2891  0164                     l1530:
  2892                           
  2893                           ;MAIN_PRO.c: 146:     hor_t = ((hor & 0b00110000)>>4);
  2894  0164  082F               	movf	_hor,w
  2895  0165  00F3               	movwf	??_CONVET
  2896  0166  3004               	movlw	4
  2897  0167                     u625:
  2898  0167  1003               	clrc
  2899  0168  0CF3               	rrf	??_CONVET,f
  2900  0169  3EFF               	addlw	-1
  2901  016A  1D03               	skipz
  2902  016B  2967               	goto	u625
  2903  016C  0873               	movf	??_CONVET,w
  2904  016D  3903               	andlw	3
  2905  016E  00F4               	movwf	??_CONVET+1
  2906  016F  0874               	movf	??_CONVET+1,w
  2907  0170  00A3               	movwf	_hor_t
  2908  0171                     l1532:
  2909                           
  2910                           ;MAIN_PRO.c: 147:     hor_u = (hor & 0b00001111);
  2911  0171  082F               	movf	_hor,w
  2912  0172  390F               	andlw	15
  2913  0173  00F3               	movwf	??_CONVET
  2914  0174  0873               	movf	??_CONVET,w
  2915  0175  00A8               	movwf	_hor_u
  2916                           
  2917                           ;MAIN_PRO.c: 148:     min_t = ((min & 0b01110000)>>4);
  2918  0176  082E               	movf	_min,w
  2919  0177  00F3               	movwf	??_CONVET
  2920  0178  3004               	movlw	4
  2921  0179                     u635:
  2922  0179  1003               	clrc
  2923  017A  0CF3               	rrf	??_CONVET,f
  2924  017B  3EFF               	addlw	-1
  2925  017C  1D03               	skipz
  2926  017D  2979               	goto	u635
  2927  017E  0873               	movf	??_CONVET,w
  2928  017F  3907               	andlw	7
  2929  0180  00F4               	movwf	??_CONVET+1
  2930  0181  0874               	movf	??_CONVET+1,w
  2931  0182  00A2               	movwf	_min_t
  2932  0183                     l1534:
  2933                           
  2934                           ;MAIN_PRO.c: 149:     min_u = (min & 0b00001111);
  2935  0183  082E               	movf	_min,w
  2936  0184  390F               	andlw	15
  2937  0185  00F3               	movwf	??_CONVET
  2938  0186  0873               	movf	??_CONVET,w
  2939  0187  00A7               	movwf	_min_u
  2940  0188                     l1536:
  2941                           
  2942                           ;MAIN_PRO.c: 150:     seg_t = ((seg & 0b01110000)>>4);
  2943  0188  082D               	movf	_seg,w
  2944  0189  00F3               	movwf	??_CONVET
  2945  018A  3004               	movlw	4
  2946  018B                     u645:
  2947  018B  1003               	clrc
  2948  018C  0CF3               	rrf	??_CONVET,f
  2949  018D  3EFF               	addlw	-1
  2950  018E  1D03               	skipz
  2951  018F  298B               	goto	u645
  2952  0190  0873               	movf	??_CONVET,w
  2953  0191  3907               	andlw	7
  2954  0192  00F4               	movwf	??_CONVET+1
  2955  0193  0874               	movf	??_CONVET+1,w
  2956  0194  00A1               	movwf	_seg_t
  2957                           
  2958                           ;MAIN_PRO.c: 151:     seg_u = (seg & 0b00001111);
  2959  0195  082D               	movf	_seg,w
  2960  0196  390F               	andlw	15
  2961  0197  00F3               	movwf	??_CONVET
  2962  0198  0873               	movf	??_CONVET,w
  2963  0199  00A6               	movwf	_seg_u
  2964  019A                     l163:
  2965  019A  0008               	return
  2966  019B                     __end_of_CONVET:
  2967                           
  2968                           	psect	text18
  2969  01F7                     __ptext18:	
  2970 ;; *************** function _isr *****************
  2971 ;; Defined at:
  2972 ;;		line 48 in file "MAIN_PRO.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0
  2988 ;;      Temps:          3       0       0       0       0
  2989 ;;      Totals:         3       0       0       0       0
  2990 ;;Total ram usage:        3 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		Interrupt level 1
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _isr
  3001  01F7                     _isr:
  3002  01F7                     i1l1550:
  3003                           
  3004                           ;MAIN_PRO.c: 49:     if (PIR1bits.RCIF==1){
  3005  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3006  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3007  01F9  1E8C               	btfss	12,5	;volatile
  3008  01FA  29FC               	goto	u68_21
  3009  01FB  29FD               	goto	u68_20
  3010  01FC                     u68_21:
  3011  01FC  2A36               	goto	i1l139
  3012  01FD                     u68_20:
  3013  01FD                     i1l1552:
  3014                           
  3015                           ;MAIN_PRO.c: 50:         temp = 0;
  3016  01FD  01FA               	clrf	_temp
  3017  01FE                     i1l1554:
  3018                           
  3019                           ;MAIN_PRO.c: 51:         temp = RCREG;
  3020  01FE  081A               	movf	26,w	;volatile
  3021  01FF  00F0               	movwf	??_isr
  3022  0200  0870               	movf	??_isr,w
  3023  0201  00FA               	movwf	_temp
  3024  0202                     i1l1556:
  3025                           
  3026                           ;MAIN_PRO.c: 52:         if (temp == 0X30){PORTAbits.RA0=0;}
  3027  0202  3030               	movlw	48
  3028  0203  067A               	xorwf	_temp,w
  3029  0204  1D03               	btfss	3,2
  3030  0205  2A07               	goto	u69_21
  3031  0206  2A08               	goto	u69_20
  3032  0207                     u69_21:
  3033  0207  2A09               	goto	i1l1560
  3034  0208                     u69_20:
  3035  0208                     i1l1558:
  3036  0208  1005               	bcf	5,0	;volatile
  3037  0209                     i1l1560:
  3038                           
  3039                           ;MAIN_PRO.c: 53:         if (temp == 0X31){PORTAbits.RA0=1;}
  3040  0209  3031               	movlw	49
  3041  020A  067A               	xorwf	_temp,w
  3042  020B  1D03               	btfss	3,2
  3043  020C  2A0E               	goto	u70_21
  3044  020D  2A0F               	goto	u70_20
  3045  020E                     u70_21:
  3046  020E  2A10               	goto	i1l1564
  3047  020F                     u70_20:
  3048  020F                     i1l1562:
  3049  020F  1405               	bsf	5,0	;volatile
  3050  0210                     i1l1564:
  3051                           
  3052                           ;MAIN_PRO.c: 54:         if (temp == 0X32){PORTAbits.RA1=0;}
  3053  0210  3032               	movlw	50
  3054  0211  067A               	xorwf	_temp,w
  3055  0212  1D03               	btfss	3,2
  3056  0213  2A15               	goto	u71_21
  3057  0214  2A16               	goto	u71_20
  3058  0215                     u71_21:
  3059  0215  2A17               	goto	i1l1568
  3060  0216                     u71_20:
  3061  0216                     i1l1566:
  3062  0216  1085               	bcf	5,1	;volatile
  3063  0217                     i1l1568:
  3064                           
  3065                           ;MAIN_PRO.c: 55:         if (temp == 0X33){PORTAbits.RA1=1;}
  3066  0217  3033               	movlw	51
  3067  0218  067A               	xorwf	_temp,w
  3068  0219  1D03               	btfss	3,2
  3069  021A  2A1C               	goto	u72_21
  3070  021B  2A1D               	goto	u72_20
  3071  021C                     u72_21:
  3072  021C  2A1E               	goto	i1l1572
  3073  021D                     u72_20:
  3074  021D                     i1l1570:
  3075  021D  1485               	bsf	5,1	;volatile
  3076  021E                     i1l1572:
  3077                           
  3078                           ;MAIN_PRO.c: 56:         if (temp == 0X34){C=1;}
  3079  021E  3034               	movlw	52
  3080  021F  067A               	xorwf	_temp,w
  3081  0220  1D03               	btfss	3,2
  3082  0221  2A23               	goto	u73_21
  3083  0222  2A24               	goto	u73_20
  3084  0223                     u73_21:
  3085  0223  2A26               	goto	i1l1576
  3086  0224                     u73_20:
  3087  0224                     i1l1574:
  3088  0224  01B7               	clrf	_C
  3089  0225  0AB7               	incf	_C,f
  3090  0226                     i1l1576:
  3091                           
  3092                           ;MAIN_PRO.c: 57:         if (temp == 0X35){b=1;}
  3093  0226  3035               	movlw	53
  3094  0227  067A               	xorwf	_temp,w
  3095  0228  1D03               	btfss	3,2
  3096  0229  2A2B               	goto	u74_21
  3097  022A  2A2C               	goto	u74_20
  3098  022B                     u74_21:
  3099  022B  2A2E               	goto	i1l1580
  3100  022C                     u74_20:
  3101  022C                     i1l1578:
  3102  022C  01B1               	clrf	_b
  3103  022D  0AB1               	incf	_b,f
  3104  022E                     i1l1580:
  3105                           
  3106                           ;MAIN_PRO.c: 58:         if (temp == 0X36){g=1;}
  3107  022E  3036               	movlw	54
  3108  022F  067A               	xorwf	_temp,w
  3109  0230  1D03               	btfss	3,2
  3110  0231  2A33               	goto	u75_21
  3111  0232  2A34               	goto	u75_20
  3112  0233                     u75_21:
  3113  0233  2A36               	goto	i1l139
  3114  0234                     u75_20:
  3115  0234                     i1l1582:
  3116  0234  01B0               	clrf	_g
  3117  0235  0AB0               	incf	_g,f
  3118  0236                     i1l139:	
  3119                           ;MAIN_PRO.c: 59:     }
  3120                           
  3121                           
  3122                           ;MAIN_PRO.c: 60:     if (INTCONbits.TMR0IF==1){
  3123  0236  1D0B               	btfss	11,2	;volatile
  3124  0237  2A39               	goto	u76_21
  3125  0238  2A3A               	goto	u76_20
  3126  0239                     u76_21:
  3127  0239  2A48               	goto	i1l149
  3128  023A                     u76_20:
  3129  023A                     i1l1584:
  3130                           
  3131                           ;MAIN_PRO.c: 61:         TMR0=236;
  3132  023A  30EC               	movlw	236
  3133  023B  0081               	movwf	1	;volatile
  3134  023C                     i1l1586:
  3135                           
  3136                           ;MAIN_PRO.c: 62:         INTCONbits.TMR0IF=0;
  3137  023C  110B               	bcf	11,2	;volatile
  3138  023D                     i1l1588:
  3139                           
  3140                           ;MAIN_PRO.c: 63:         r++;
  3141  023D  3001               	movlw	1
  3142  023E  00F0               	movwf	??_isr
  3143  023F  0870               	movf	??_isr,w
  3144  0240  07B8               	addwf	_r,f
  3145  0241                     i1l1590:
  3146                           
  3147                           ;MAIN_PRO.c: 64:         if(r==10){
  3148  0241  300A               	movlw	10
  3149  0242  0638               	xorwf	_r,w
  3150  0243  1D03               	btfss	3,2
  3151  0244  2A46               	goto	u77_21
  3152  0245  2A47               	goto	u77_20
  3153  0246                     u77_21:
  3154  0246  2A48               	goto	i1l149
  3155  0247                     u77_20:
  3156  0247                     i1l1592:
  3157                           
  3158                           ;MAIN_PRO.c: 65:             r=0;
  3159  0247  01B8               	clrf	_r
  3160  0248                     i1l149:
  3161  0248  0872               	movf	??_isr+2,w
  3162  0249  008A               	movwf	10
  3163  024A  0E71               	swapf	??_isr+1,w
  3164  024B  0083               	movwf	3
  3165  024C  0EFE               	swapf	btemp,f
  3166  024D  0E7E               	swapf	btemp,w
  3167  024E  0009               	retfie
  3168  024F                     __end_of_isr:
  3169  007E                     btemp	set	126	;btemp
  3170  007E                     wtemp0	set	126
  3171                           
  3172                           	psect	intentry
  3173  0004                     __pintentry:	
  3174                           ;incstack = 0
  3175                           ; Regs used in _isr: [wreg+status,2+status,0]
  3176                           
  3177  0004                     interrupt_function:
  3178  007E                     saved_w	set	btemp
  3179  0004  00FE               	movwf	btemp
  3180  0005  0E03               	swapf	3,w
  3181  0006  00F1               	movwf	??_isr+1
  3182  0007  080A               	movf	10,w
  3183  0008  00F2               	movwf	??_isr+2
  3184  0009  120A  118A  29F7   	ljmp	_isr
  3185                           
  3186                           	psect	config
  3187                           
  3188                           ;Config register CONFIG1 @ 0x2007
  3189                           ;	Oscillator Selection bits
  3190                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3191                           ;	Watchdog Timer Enable bit
  3192                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3193                           ;	Power-up Timer Enable bit
  3194                           ;	PWRTE = OFF, PWRT disabled
  3195                           ;	RE3/MCLR pin function select bit
  3196                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3197                           ;	Code Protection bit
  3198                           ;	CP = OFF, Program memory code protection is disabled
  3199                           ;	Data Code Protection bit
  3200                           ;	CPD = OFF, Data memory code protection is disabled
  3201                           ;	Brown Out Reset Selection bits
  3202                           ;	BOREN = OFF, BOR disabled
  3203                           ;	Internal External Switchover bit
  3204                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3205                           ;	Fail-Safe Clock Monitor Enabled bit
  3206                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3207                           ;	Low Voltage Programming Enable bit
  3208                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3209                           ;	In-Circuit Debugger Mode bit
  3210                           ;	DEBUG = 0x1, unprogrammed default
  3211  2007                     	org	8199
  3212  2007  20D4               	dw	8404
  3213                           
  3214                           ;Config register CONFIG2 @ 0x2008
  3215                           ;	Brown-out Reset Selection bit
  3216                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3217                           ;	Flash Program Memory Self Write Enable bits
  3218                           ;	WRT = OFF, Write protection off
  3219  2008                     	org	8200
  3220  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     18      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _first_send->_send_hora
    _first_send->_send_min
    _first_send->_send_seg
    _Setup->_initOsc
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2370
                                             17 BANK0      1     1      0
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                         _first_send
 ---------------------------------------------------------------------------------
 (1) _first_send                                           0     0      0       0
                          _send_hora
                           _send_min
                           _send_seg
 ---------------------------------------------------------------------------------
 (2) _send_seg                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_min                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_hora                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      22
                            _SET_RXT
                            _SET_TXR
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _SET_RXT
     _SET_TXR
     _initOsc
   _first_send
     _send_hora
     _send_min
     _send_seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 23:45:28 2021

                                _C 0037                                  _L 003B  
                                _M 0032                                  _Z 003A  
                                _b 0031                                  _g 0030  
                                _h 0035                                  _m 0034  
                                _q 0036                                  _r 0038  
                                _s 0033                                  _z 0039  
                               fsr 0004                                l203 02B2  
                              l211 0253                                l220 0274  
                              l301 0412                                l310 0400  
                              l206 02D2                                l223 0294  
                              l304 041B                                l160 037A  
                              l216 0263                                l313 03A0  
                              l314 03A3                                l163 019A  
                              l315 03AA                                l307 0409  
                              l244 03DE                                l260 01C1  
                              l172 03CF                                l261 01C7  
                              l253 019D                                l262 01CD  
                              l254 01F5                                l182 02E7  
                              l247 03F6                                l263 01F6  
                              l255 01A3                                l440 013D  
                              l256 01A9                                l257 01AF  
                              l177 02D7                                l258 01B5  
                              l186 02F0                                l194 0299  
                              l259 01BB                                l292 034A  
                              l189 0310                                l295 03DF  
                              l199 02A9                                l298 03EB  
                              _GIE 005F                                u400 0259  
                              u401 0258                                u410 0269  
                              u411 0268                                u420 027A  
                              u421 0279                                u430 029F  
                              u431 029E                                u440 02AF  
                              u441 02AE                                u450 02B8  
                              u451 02B7                                u460 02DD  
                              u605 0141                                u461 02DC  
                              u470 02ED                                u615 0155  
                              u471 02EC                                u800 00E8  
                              u480 02F6                                u625 0167  
                              u801 00E7                                u481 02F5  
                              u650 03B2                                u635 0179  
                              u651 03B1                                u820 00FC  
                              u660 03BE                                u645 018B  
                              u821 00FB                                u661 03BD  
                              u670 03CA                                u815 00ED  
                              u671 03C9                                u840 0117  
                              u841 0116                                u835 00FE  
                              u860 0135                                u780 03E5  
                              u861 0134                                u845 0113  
                              u781 03E4                                u870 0328  
                              u790 03EB                                u855 0127  
                              u791 03EA                                u880 039C  
                              u881 039B                                u875 0323  
                              _day 0078                                _hor 002F  
                              _min 002E                                _isr 01F7  
                              _seg 002D                                _mou 0079  
                              indf 0000                               l1400 02D3  
                             l1410 02EE                               l1402 02D4  
                             l1412 02F6                               l1404 02DD  
                             l1350 03DD                               l1334 019C  
                             l1406 02E4                               l1344 03EC  
                             l1416 02FB                               l1360 0269  
                             l1352 024F                               l1530 0164  
                             l1346 03D0                               l1338 01D3  
                             l1450 034B                               l1362 026F  
                             l1354 0250                               l1532 0171  
                             l1524 013E                               l1348 03D9  
                             l1460 0361                               l1452 035D  
                             l1380 0296                               l1364 0270  
                             l1356 0259                               l1372 027F  
                             l1540 03B2                               l1534 0183  
                             l1526 014D                               l1470 0368  
                             l1462 0364                               l1454 035E  
                             l1390 02B8                               l1382 029F  
                             l1366 0272                               l1358 0260  
                             l1542 03B7                               l1536 0188  
                             l1528 0152                               l1720 03E5  
                             l1472 0369                               l1464 0365  
                             l1456 035F                               l1384 02A6  
                             l1368 027A                               l1544 03BE  
                             l1800 002A                               l1730 00FC  
                             l1722 00D6                               l1474 036A  
                             l1466 0366                               l1458 0360  
                             l1394 02BD                               l1378 0295  
                             l1546 03C3                               l1538 03AB  
                             l1810 0052                               l1802 0037  
                             l1740 012F                               l1732 0105  
                             l1724 00E8                               l1476 0370  
                             l1468 0367                               l1388 02B0  
                             l1548 03CA                               l1820 0097  
                             l1812 005B                               l1804 003C  
                             l1734 0117                               l1726 00EB  
                             l1742 0135                               l1750 0318  
                             l1718 03DF                               l1478 0375  
                             l1830 00CD                               l1822 00A6  
                             l1814 006A                               l1806 0045  
                             l1736 0125                               l1728 00F8  
                             l1752 0347                               l1760 040F  
                             l1920 01DB                               l1824 00B5  
                             l1816 0079                               l1808 004D  
                             l1738 0126                               l1754 0348  
                             l1746 0311                               l1770 037B  
                             l1762 03F7                               l1914 0289  
                             l1826 00C3                               l1818 0088  
                             l1756 0349                               l1748 0315  
                             l1780 039C                               l1772 0380  
                             l1764 03FC                               l1916 02C7  
                             l1828 00C8                               l1782 03A4  
                             l1774 0388                               l1766 0413  
                             l1758 040A                               l1918 0305  
                             l1790 001F                               l1776 0391  
                             l1768 0418                               l1792 0024  
                             l1778 0396                               l1786 0401  
                             l1794 0027                               l1788 0406  
                             l1796 0028                               l1798 0029  
                             ?_isr 0070                               _PEIE 005E  
                             _TMR0 0001                    __end_of_SET_RXT 03F7  
                  __end_of_SET_TXR 03DF   __end_of_I2C_Master_RepeatedStart 041C  
                             _main 001F                               _temp 007A  
                             _week 002C                               _year 002B  
                             btemp 007E                               start 000C  
                            ??_isr 0070                   ?_I2C_Master_Init 0049  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 013E  
                            i1l139 0236                              i1l149 0248  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u70_20 020F  
                            u70_21 020E                              u71_20 0216  
                            u71_21 0215                              u72_20 021D  
                            u72_21 021C                              u73_20 0224  
                            u73_21 0223                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u74_20 022C  
                            _SSPIF 0063                              u74_21 022B  
                            u75_20 0234                              u75_21 0233  
                            u76_20 023A                              u68_20 01FD  
                            u76_21 0239                              u68_21 01FC  
                            u77_20 0247                              u69_20 0208  
                            u77_21 0246                              u69_21 0207  
                            _TXREG 0019                              _Setup 034B  
                            _day_t 0024                              _day_u 0029  
                  __end_of_initOsc 01F7                              _hor_t 0023  
                            _hor_u 0028                              _min_t 0022  
                            _min_u 0027                              _seg_t 0021  
                            _seg_u 0026                              _mou_t 0025  
                            _mou_u 002A                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 000F                       __end_of_main 00D6  
                           ??_main 004D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                             ?_Setup 0070  
               ??_I2C_Master_Start 0073                          ??_SET_RXT 0073  
                        ??_SET_TXR 0073                 ??_I2C_Master_Write 0075  
                      initOsc@IRCF 0075                             _ANSELH 0189  
                           _CONVET 013E                             i1l1550 01F7  
                           i1l1560 0209                             i1l1552 01FD  
                           i1l1570 021D                             i1l1562 020F  
                           i1l1554 01FE                             i1l1580 022E  
                           i1l1572 021E                             i1l1564 0210  
                           i1l1556 0202                             i1l1590 0241  
                           i1l1582 0234                             i1l1574 0224  
                           i1l1566 0216                             i1l1558 0208  
                           i1l1592 0247                             i1l1584 023A  
                           i1l1576 0226                             i1l1568 0217  
                           i1l1586 023C                             i1l1578 022C  
                           i1l1588 023D                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0413  
                        ??___lldiv 0073                   __end_of_send_min 02D3  
                 __end_of_send_seg 0295                          ??_initOsc 0073  
                           saved_w 007E            __end_of__initialization 001B  
                   __pcstackCOMMON 0070                      __end_of_Setup 037B  
                   _OPTION_REGbits 0081                            ??_Setup 0076  
                          ?_CONVET 0070                         __pbssBANK0 0020  
                       __pmaintext 001F                         __pintentry 0004  
               __size_of_send_hora 003E                            _SET_RXT 03EC  
                          _SET_TXR 03D0                            _SSPCON2 0091  
                          _SSPSTAT 0094                    __size_of_CONVET 005D  
                       _first_send 03AB                          ?_send_min 0070  
                        ?_send_seg 0070                            ___lldiv 00D6  
                          __ptext1 03AB                            __ptext2 024F  
                          __ptext3 0295                            __ptext4 02D3  
                          __ptext5 034B                            __ptext6 019B  
                          __ptext7 03D0                            __ptext8 03EC  
                          __ptext9 03F7                            _initOsc 019B  
                     __size_of_isr 0058           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 041D  
             end_of_initialization 001B         ??_I2C_Master_RepeatedStart 0073  
                __end_of_send_hora 0311          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 003C  
                       ??_send_min 0073                         ??_send_seg 0073  
                  ___lldiv@counter 0048                          _RCSTAbits 0018  
                 I2C_Master_Init@c 0049                   I2C_Master_Read@a 0073  
                        _PORTAbits 0005                          _TRISCbits 0087  
                   __end_of_CONVET 019B                          _TXSTAbits 0098  
                      ?_first_send 0070                        _BAUDCTLbits 0187  
              start_initialization 000F                        __end_of_isr 024F  
                         ??_CONVET 0073                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073                        __pbssCOMMON 0078  
                        ___latbits 0002                __size_of_first_send 0025  
                    __pcstackBANK0 003C                           ?_SET_RXT 0070  
                         ?_SET_TXR 0070                   _I2C_Master_Start 040A  
                 _I2C_Master_Write 03F7                  __size_of_send_min 003E  
                __size_of_send_seg 0046                           ?___lldiv 003C  
                         ?_initOsc 0070                     __size_of_Setup 0030  
                interrupt_function 0004                          clear_ram0 041C  
                         _PIE1bits 008C                          _send_hora 02D3  
                         _PIR1bits 000C                I2C_Master_Read@temp 003C  
                 __size_of_SET_RXT 000B                   __size_of_SET_TXR 000F  
                     ??_first_send 0075                         ?_send_hora 0070  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                    _I2C_Master_Init 0311  
                  _I2C_Master_Read 037B                    _I2C_Master_Wait 03DF  
                  _I2C_Master_Stop 0401                   __size_of_initOsc 005C  
               __end_of_first_send 03D0                           __ptext10 0401  
                         __ptext11 040A                           __ptext12 0413  
                         __ptext13 037B                           __ptext14 03DF  
                         __ptext15 0311                           __ptext16 00D6  
                         __ptext17 013E                           __ptext18 01F7  
                    __size_of_main 00B7                           _send_min 0295  
                         _send_seg 024F                           _segundos 0020  
         __end_of_I2C_Master_Start 0413           __end_of_I2C_Master_Write 0401  
                       _INTCONbits 000B                           intlevel1 0000  
                 ___lldiv@dividend 0040                        ??_send_hora 0073  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 034B  
          __end_of_I2C_Master_Read 03AB            __end_of_I2C_Master_Wait 03EC  
          __end_of_I2C_Master_Stop 040A                   ___lldiv@quotient 0044  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
