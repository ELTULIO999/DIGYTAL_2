

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 18:46:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0018                     _RCSTAbits	set	24
   460  0019                     _TXREG	set	25
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0007                     _PORTC	set	7
   464  0006                     _PORTB	set	6
   465  0005                     _PORTA	set	5
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0005                     _PORTAbits	set	5
   469  001A                     _RCREG	set	26
   470  000C                     _PIR1bits	set	12
   471  0063                     _SSPIF	set	99
   472  005E                     _PEIE	set	94
   473  005F                     _GIE	set	95
   474  0091                     _SSPCON2bits	set	145
   475  0087                     _TRISCbits	set	135
   476  0094                     _SSPSTAT	set	148
   477  0093                     _SSPADD	set	147
   478  0091                     _SSPCON2	set	145
   479  008F                     _OSCCONbits	set	143
   480  009A                     _SPBRGH	set	154
   481  0099                     _SPBRG	set	153
   482  0098                     _TXSTAbits	set	152
   483  0081                     _OPTION_REGbits	set	129
   484  008C                     _PIE1bits	set	140
   485  0089                     _TRISE	set	137
   486  0088                     _TRISD	set	136
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	cinit
   498  000F                     start_initialization:	
   499                           ; #config settings
   500                           
   501  000F                     __initialization:
   502                           
   503                           ; Clear objects allocated to COMMON
   504  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   505  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   506  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  0012  1383               	bcf	3,7	;select IRP bank0
   510  0013  3020               	movlw	low __pbssBANK0
   511  0014  0084               	movwf	4
   512  0015  303F               	movlw	low (__pbssBANK0+31)
   513  0016  120A  118A  241A  120A  118A  	fcall	clear_ram0
   514  001B                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  001B                     __end_of__initialization:
   518  001B  0183               	clrf	3
   519  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0078                     __pbssCOMMON:
   523  0078                     _temp:
   524  0078                     	ds	1
   525  0079                     _M:
   526  0079                     	ds	1
   527  007A                     _C:
   528  007A                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0020                     __pbssBANK0:
   532  0020                     _H:
   533  0020                     	ds	2
   534  0022                     _segundos:
   535  0022                     	ds	1
   536  0023                     _seg_t:
   537  0023                     	ds	1
   538  0024                     _min_t:
   539  0024                     	ds	1
   540  0025                     _hor_t:
   541  0025                     	ds	1
   542  0026                     _day_t:
   543  0026                     	ds	1
   544  0027                     _mou_t:
   545  0027                     	ds	1
   546  0028                     _seg_u:
   547  0028                     	ds	1
   548  0029                     _min_u:
   549  0029                     	ds	1
   550  002A                     _hor_u:
   551  002A                     	ds	1
   552  002B                     _day_u:
   553  002B                     	ds	1
   554  002C                     _mou_u:
   555  002C                     	ds	1
   556  002D                     _year:
   557  002D                     	ds	1
   558  002E                     _week:
   559  002E                     	ds	1
   560  002F                     _seg:
   561  002F                     	ds	1
   562  0030                     _min:
   563  0030                     	ds	1
   564  0031                     _hor:
   565  0031                     	ds	1
   566  0032                     _day:
   567  0032                     	ds	1
   568  0033                     _mou:
   569  0033                     	ds	1
   570  0034                     _empty:
   571  0034                     	ds	1
   572  0035                     _g:
   573  0035                     	ds	1
   574  0036                     _b:
   575  0036                     	ds	1
   576  0037                     _s:
   577  0037                     	ds	1
   578  0038                     _m:
   579  0038                     	ds	1
   580  0039                     _h:
   581  0039                     	ds	1
   582  003A                     _q:
   583  003A                     	ds	1
   584  003B                     _r:
   585  003B                     	ds	1
   586  003C                     _z:
   587  003C                     	ds	1
   588  003D                     _Z:
   589  003D                     	ds	1
   590  003E                     _L:
   591  003E                     	ds	1
   592                           
   593                           	psect	clrtext
   594  041A                     clear_ram0:	
   595                           ;	Called with FSR containing the base address, and
   596                           ;	W with the last address+1
   597                           
   598  041A  0064               	clrwdt	;clear the watchdog before getting into this loop
   599  041B                     clrloop0:
   600  041B  0180               	clrf	0	;clear RAM location pointed to by FSR
   601  041C  0A84               	incf	4,f	;increment pointer
   602  041D  0604               	xorwf	4,w	;XOR with final address
   603  041E  1903               	btfsc	3,2	;have we reached the end yet?
   604  041F  3400               	retlw	0	;all done for this memory range, return
   605  0420  0604               	xorwf	4,w	;XOR again to restore value
   606  0421  2C1B               	goto	clrloop0	;do the next byte
   607                           
   608                           	psect	cstackCOMMON
   609  0070                     __pcstackCOMMON:
   610  0070                     ?_Setup:
   611  0070                     ?_I2C_Master_Start:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_I2C_Master_RepeatedStart:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_I2C_Master_Stop:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_CONVET:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_first_send:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_initOsc:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_SET_RXT:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_SET_TXR:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_send_seg:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_send_min:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_send_hora:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_isr:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_isr:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_main:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_I2C_Master_Wait:	
   654                           ; 1 bytes @ 0x0
   655                           
   656                           
   657                           ; 1 bytes @ 0x0
   658  0070                     	ds	3
   659  0073                     ??_I2C_Master_Start:
   660  0073                     ?_I2C_Master_Write:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_I2C_Master_RepeatedStart:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_I2C_Master_Stop:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??_CONVET:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ??_initOsc:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ??_SET_RXT:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ??_SET_TXR:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ??_send_seg:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ??_send_min:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     ??_send_hora:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ??_I2C_Master_Wait:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ??___lldiv:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     ?_I2C_Master_Read:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     I2C_Master_Write@d:	
   700                           ; 2 bytes @ 0x3
   701                           
   702  0073                     I2C_Master_Read@a:	
   703                           ; 2 bytes @ 0x3
   704                           
   705                           
   706                           ; 2 bytes @ 0x3
   707  0073                     	ds	1
   708  0074                     ??_I2C_Master_Init:
   709                           
   710                           ; 1 bytes @ 0x4
   711  0074                     	ds	1
   712  0075                     ??_I2C_Master_Write:
   713  0075                     ??_I2C_Master_Read:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     ??_first_send:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     initOsc@IRCF:	
   720                           ; 1 bytes @ 0x5
   721                           
   722                           
   723                           ; 1 bytes @ 0x5
   724  0075                     	ds	1
   725  0076                     ??_Setup:
   726                           
   727                           ; 1 bytes @ 0x6
   728  0076                     	ds	2
   729                           
   730                           	psect	cstackBANK0
   731  003F                     __pcstackBANK0:
   732  003F                     ?___lldiv:
   733  003F                     I2C_Master_Read@temp:	
   734                           ; 4 bytes @ 0x0
   735                           
   736  003F                     ___lldiv@divisor:	
   737                           ; 2 bytes @ 0x0
   738                           
   739                           
   740                           ; 4 bytes @ 0x0
   741  003F                     	ds	4
   742  0043                     ___lldiv@dividend:
   743                           
   744                           ; 4 bytes @ 0x4
   745  0043                     	ds	4
   746  0047                     ___lldiv@quotient:
   747                           
   748                           ; 4 bytes @ 0x8
   749  0047                     	ds	4
   750  004B                     ___lldiv@counter:
   751                           
   752                           ; 1 bytes @ 0xC
   753  004B                     	ds	1
   754  004C                     ?_I2C_Master_Init:
   755  004C                     I2C_Master_Init@c:	
   756                           ; 1 bytes @ 0xD
   757                           
   758                           
   759                           ; 4 bytes @ 0xD
   760  004C                     	ds	4
   761  0050                     ??_main:
   762                           
   763                           ; 1 bytes @ 0x11
   764  0050                     	ds	1
   765                           
   766                           	psect	maintext
   767  001F                     __pmaintext:	
   768 ;;
   769 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   770 ;;
   771 ;; *************** function _main *****************
   772 ;; Defined at:
   773 ;;		line 86 in file "MAIN_PRO.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : B00/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       1       0       0       0
   790 ;;      Totals:         0       1       0       0       0
   791 ;;Total ram usage:        1 bytes
   792 ;; Hardware stack levels required when called:    3
   793 ;; This function calls:
   794 ;;		_CONVET
   795 ;;		_I2C_Master_Init
   796 ;;		_I2C_Master_Read
   797 ;;		_I2C_Master_RepeatedStart
   798 ;;		_I2C_Master_Start
   799 ;;		_I2C_Master_Stop
   800 ;;		_I2C_Master_Write
   801 ;;		_Setup
   802 ;;		_first_send
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _main
   810  001F                     _main:
   811  001F                     l1877:	
   812                           ;incstack = 0
   813                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;MAIN_PRO.c: 87:     Setup();
   817  001F  120A  118A  234B  120A  118A  	fcall	_Setup
   818  0024                     l1879:
   819                           
   820                           ;MAIN_PRO.c: 88:     PORTAbits.RA0=1;
   821  0024  1283               	bcf	3,5	;RP0=0, select bank0
   822  0025  1303               	bcf	3,6	;RP1=0, select bank0
   823  0026  1405               	bsf	5,0	;volatile
   824  0027                     l1881:
   825                           
   826                           ;MAIN_PRO.c: 89:     PORTAbits.RA1=1;
   827  0027  1485               	bsf	5,1	;volatile
   828  0028                     l1883:
   829                           
   830                           ;MAIN_PRO.c: 90:     PORTAbits.RA0=0;
   831  0028  1005               	bcf	5,0	;volatile
   832  0029                     l1885:
   833                           
   834                           ;MAIN_PRO.c: 91:     PORTAbits.RA1=0;
   835  0029  1085               	bcf	5,1	;volatile
   836  002A                     l1887:
   837                           
   838                           ;MAIN_PRO.c: 92:     I2C_Master_Init(100000);
   839  002A  3000               	movlw	0
   840  002B  00CF               	movwf	I2C_Master_Init@c+3
   841  002C  3001               	movlw	1
   842  002D  00CE               	movwf	I2C_Master_Init@c+2
   843  002E  3086               	movlw	134
   844  002F  00CD               	movwf	I2C_Master_Init@c+1
   845  0030  30A0               	movlw	160
   846  0031  00CC               	movwf	I2C_Master_Init@c
   847  0032  120A  118A  2311  120A  118A  	fcall	_I2C_Master_Init
   848  0037                     l1889:
   849                           
   850                           ;MAIN_PRO.c: 97:         I2C_Master_Start();
   851  0037  120A  118A  2408  120A  118A  	fcall	_I2C_Master_Start
   852  003C                     l1891:
   853                           
   854                           ;MAIN_PRO.c: 98:         I2C_Master_Write(0xD0);
   855  003C  30D0               	movlw	208
   856  003D  00F3               	movwf	I2C_Master_Write@d
   857  003E  3000               	movlw	0
   858  003F  00F4               	movwf	I2C_Master_Write@d+1
   859  0040  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
   860  0045                     l1893:
   861                           
   862                           ;MAIN_PRO.c: 99:         I2C_Master_Write(0x00);
   863  0045  3000               	movlw	0
   864  0046  00F3               	movwf	I2C_Master_Write@d
   865  0047  00F4               	movwf	I2C_Master_Write@d+1
   866  0048  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
   867  004D                     l1895:
   868                           
   869                           ;MAIN_PRO.c: 100:         I2C_Master_RepeatedStart();
   870  004D  120A  118A  2411  120A  118A  	fcall	_I2C_Master_RepeatedStart
   871  0052                     l1897:
   872                           
   873                           ;MAIN_PRO.c: 101:         I2C_Master_Write(0xD1);
   874  0052  30D1               	movlw	209
   875  0053  00F3               	movwf	I2C_Master_Write@d
   876  0054  3000               	movlw	0
   877  0055  00F4               	movwf	I2C_Master_Write@d+1
   878  0056  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
   879  005B                     l1899:
   880                           
   881                           ;MAIN_PRO.c: 102:         seg = I2C_Master_Read(1);
   882  005B  3001               	movlw	1
   883  005C  00F3               	movwf	I2C_Master_Read@a
   884  005D  3000               	movlw	0
   885  005E  00F4               	movwf	I2C_Master_Read@a+1
   886  005F  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   887  0064  0873               	movf	?_I2C_Master_Read,w
   888  0065  1283               	bcf	3,5	;RP0=0, select bank0
   889  0066  1303               	bcf	3,6	;RP1=0, select bank0
   890  0067  00D0               	movwf	??_main
   891  0068  0850               	movf	??_main,w
   892  0069  00AF               	movwf	_seg
   893  006A                     l1901:
   894                           
   895                           ;MAIN_PRO.c: 103:         min = I2C_Master_Read(1);
   896  006A  3001               	movlw	1
   897  006B  00F3               	movwf	I2C_Master_Read@a
   898  006C  3000               	movlw	0
   899  006D  00F4               	movwf	I2C_Master_Read@a+1
   900  006E  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   901  0073  0873               	movf	?_I2C_Master_Read,w
   902  0074  1283               	bcf	3,5	;RP0=0, select bank0
   903  0075  1303               	bcf	3,6	;RP1=0, select bank0
   904  0076  00D0               	movwf	??_main
   905  0077  0850               	movf	??_main,w
   906  0078  00B0               	movwf	_min
   907  0079                     l1903:
   908                           
   909                           ;MAIN_PRO.c: 104:         hor = I2C_Master_Read(1);
   910  0079  3001               	movlw	1
   911  007A  00F3               	movwf	I2C_Master_Read@a
   912  007B  3000               	movlw	0
   913  007C  00F4               	movwf	I2C_Master_Read@a+1
   914  007D  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   915  0082  0873               	movf	?_I2C_Master_Read,w
   916  0083  1283               	bcf	3,5	;RP0=0, select bank0
   917  0084  1303               	bcf	3,6	;RP1=0, select bank0
   918  0085  00D0               	movwf	??_main
   919  0086  0850               	movf	??_main,w
   920  0087  00B1               	movwf	_hor
   921  0088                     l1905:
   922                           
   923                           ;MAIN_PRO.c: 105:         week = I2C_Master_Read(1);
   924  0088  3001               	movlw	1
   925  0089  00F3               	movwf	I2C_Master_Read@a
   926  008A  3000               	movlw	0
   927  008B  00F4               	movwf	I2C_Master_Read@a+1
   928  008C  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   929  0091  0873               	movf	?_I2C_Master_Read,w
   930  0092  1283               	bcf	3,5	;RP0=0, select bank0
   931  0093  1303               	bcf	3,6	;RP1=0, select bank0
   932  0094  00D0               	movwf	??_main
   933  0095  0850               	movf	??_main,w
   934  0096  00AE               	movwf	_week
   935  0097                     l1907:
   936                           
   937                           ;MAIN_PRO.c: 106:         day = I2C_Master_Read(1);
   938  0097  3001               	movlw	1
   939  0098  00F3               	movwf	I2C_Master_Read@a
   940  0099  3000               	movlw	0
   941  009A  00F4               	movwf	I2C_Master_Read@a+1
   942  009B  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   943  00A0  0873               	movf	?_I2C_Master_Read,w
   944  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   945  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   946  00A3  00D0               	movwf	??_main
   947  00A4  0850               	movf	??_main,w
   948  00A5  00B2               	movwf	_day
   949  00A6                     l1909:
   950                           
   951                           ;MAIN_PRO.c: 107:         mou = I2C_Master_Read(1);
   952  00A6  3001               	movlw	1
   953  00A7  00F3               	movwf	I2C_Master_Read@a
   954  00A8  3000               	movlw	0
   955  00A9  00F4               	movwf	I2C_Master_Read@a+1
   956  00AA  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   957  00AF  0873               	movf	?_I2C_Master_Read,w
   958  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   959  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   960  00B2  00D0               	movwf	??_main
   961  00B3  0850               	movf	??_main,w
   962  00B4  00B3               	movwf	_mou
   963  00B5                     l1911:
   964                           
   965                           ;MAIN_PRO.c: 108:         year= I2C_Master_Read(0);
   966  00B5  3000               	movlw	0
   967  00B6  00F3               	movwf	I2C_Master_Read@a
   968  00B7  00F4               	movwf	I2C_Master_Read@a+1
   969  00B8  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   970  00BD  0873               	movf	?_I2C_Master_Read,w
   971  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   972  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   973  00C0  00D0               	movwf	??_main
   974  00C1  0850               	movf	??_main,w
   975  00C2  00AD               	movwf	_year
   976  00C3                     l1913:
   977                           
   978                           ;MAIN_PRO.c: 109:         I2C_Master_Stop();
   979  00C3  120A  118A  23FF  120A  118A  	fcall	_I2C_Master_Stop
   980  00C8                     l1915:
   981                           
   982                           ;MAIN_PRO.c: 110:         CONVET();
   983  00C8  120A  118A  219E  120A  118A  	fcall	_CONVET
   984  00CD                     l1917:
   985                           
   986                           ;MAIN_PRO.c: 111:         first_send();
   987  00CD  120A  118A  23AB  120A  118A  	fcall	_first_send
   988  00D2  2837               	goto	l1889
   989  00D3  120A  118A  280C   	ljmp	start
   990  00D6                     __end_of_main:
   991                           
   992                           	psect	text1
   993  03AB                     __ptext1:	
   994 ;; *************** function _first_send *****************
   995 ;; Defined at:
   996 ;;		line 180 in file "MAIN_PRO.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    2
  1017 ;; This function calls:
  1018 ;;		_send_hora
  1019 ;;		_send_min
  1020 ;;		_send_seg
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _first_send
  1028  03AB                     _first_send:
  1029  03AB                     l1589:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _first_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1032                           
  1033                           
  1034                           ;MAIN_PRO.c: 181:     if (C==1){send_seg();}
  1035  03AB  037A               	decf	_C,w
  1036  03AC  1D03               	btfss	3,2
  1037  03AD  2BAF               	goto	u751
  1038  03AE  2BB0               	goto	u750
  1039  03AF                     u751:
  1040  03AF  2BB5               	goto	l1593
  1041  03B0                     u750:
  1042  03B0                     l1591:
  1043  03B0  120A  118A  2257  120A  118A  	fcall	_send_seg
  1044  03B5                     l1593:
  1045                           
  1046                           ;MAIN_PRO.c: 182:     if (b==1){send_min();}
  1047  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1048  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1049  03B7  0336               	decf	_b,w
  1050  03B8  1D03               	btfss	3,2
  1051  03B9  2BBB               	goto	u761
  1052  03BA  2BBC               	goto	u760
  1053  03BB                     u761:
  1054  03BB  2BC1               	goto	l1597
  1055  03BC                     u760:
  1056  03BC                     l1595:
  1057  03BC  120A  118A  2295  120A  118A  	fcall	_send_min
  1058  03C1                     l1597:
  1059                           
  1060                           ;MAIN_PRO.c: 183:     if (g==1){send_hora();}
  1061  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1062  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1063  03C3  0335               	decf	_g,w
  1064  03C4  1D03               	btfss	3,2
  1065  03C5  2BC7               	goto	u771
  1066  03C6  2BC8               	goto	u770
  1067  03C7                     u771:
  1068  03C7  2BCD               	goto	l177
  1069  03C8                     u770:
  1070  03C8                     l1599:
  1071  03C8  120A  118A  22D3  120A  118A  	fcall	_send_hora
  1072  03CD                     l177:
  1073  03CD  0008               	return
  1074  03CE                     __end_of_first_send:
  1075                           
  1076                           	psect	text2
  1077  0257                     __ptext2:	
  1078 ;; *************** function _send_seg *****************
  1079 ;; Defined at:
  1080 ;;		line 239 in file "MAIN_PRO.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0
  1096 ;;      Temps:          2       0       0       0       0
  1097 ;;      Totals:         2       0       0       0       0
  1098 ;;Total ram usage:        2 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_first_send
  1105 ;;		_forced_send
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _send_seg
  1111  0257                     _send_seg:
  1112  0257                     l1407:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _send_seg: [wreg-fsr0h+status,2+status,0]
  1115                           
  1116                           
  1117                           ;MAIN_PRO.c: 241:     switch (s){
  1118  0257  2A7F               	goto	l1423
  1119  0258                     l1409:
  1120                           
  1121                           ;MAIN_PRO.c: 243:             TXREG = (seg_t+0x30);
  1122  0258  0823               	movf	_seg_t,w
  1123  0259  3E30               	addlw	48
  1124  025A  0099               	movwf	25	;volatile
  1125  025B                     l222:	
  1126                           ;MAIN_PRO.c: 244:             while(!TXSTAbits.TRMT);
  1127                           
  1128  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1129  025C  1303               	bcf	3,6	;RP1=0, select bank1
  1130  025D  1C98               	btfss	24,1	;volatile
  1131  025E  2A60               	goto	u501
  1132  025F  2A61               	goto	u500
  1133  0260                     u501:
  1134  0260  2A5B               	goto	l222
  1135  0261                     u500:
  1136  0261                     l1411:
  1137                           
  1138                           ;MAIN_PRO.c: 245:             s++;
  1139  0261  3001               	movlw	1
  1140  0262  00F3               	movwf	??_send_seg
  1141  0263  0873               	movf	??_send_seg,w
  1142  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0266  07B7               	addwf	_s,f
  1145                           
  1146                           ;MAIN_PRO.c: 246:             break;
  1147  0267  2A94               	goto	l234
  1148  0268                     l1413:
  1149                           
  1150                           ;MAIN_PRO.c: 248:             TXREG = (seg_u+0x30);
  1151  0268  0828               	movf	_seg_u,w
  1152  0269  3E30               	addlw	48
  1153  026A  0099               	movwf	25	;volatile
  1154  026B                     l227:	
  1155                           ;MAIN_PRO.c: 249:             while(!TXSTAbits.TRMT);
  1156                           
  1157  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1158  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1159  026D  1C98               	btfss	24,1	;volatile
  1160  026E  2A70               	goto	u511
  1161  026F  2A71               	goto	u510
  1162  0270                     u511:
  1163  0270  2A6B               	goto	l227
  1164  0271                     u510:
  1165  0271                     l1415:
  1166                           
  1167                           ;MAIN_PRO.c: 251:             s=0;
  1168  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0273  01B7               	clrf	_s
  1171                           
  1172                           ;MAIN_PRO.c: 252:             C=0;
  1173  0274  01FA               	clrf	_C
  1174                           
  1175                           ;MAIN_PRO.c: 253:             break;
  1176  0275  2A94               	goto	l234
  1177  0276                     l1417:
  1178                           
  1179                           ;MAIN_PRO.c: 255:             TXREG = (0x03);
  1180  0276  3003               	movlw	3
  1181  0277  0099               	movwf	25	;volatile
  1182  0278                     l231:	
  1183                           ;MAIN_PRO.c: 256:             while(!TXSTAbits.TRMT);
  1184                           
  1185  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1187  027A  1C98               	btfss	24,1	;volatile
  1188  027B  2A7D               	goto	u521
  1189  027C  2A7E               	goto	u520
  1190  027D                     u521:
  1191  027D  2A78               	goto	l231
  1192  027E                     u520:
  1193  027E  2A71               	goto	l1415
  1194  027F                     l1423:
  1195  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0281  0837               	movf	_s,w
  1198  0282  00F3               	movwf	??_send_seg
  1199  0283  01F4               	clrf	??_send_seg+1
  1200                           
  1201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1202                           ; Switch size 1, requested type "simple"
  1203                           ; Number of cases is 1, Range of values is 0 to 0
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte            4     3 (average)
  1207                           ; direct_byte           11     8 (fixed)
  1208                           ; jumptable            260     6 (fixed)
  1209                           ;	Chosen strategy is simple_byte
  1210  0284  0874               	movf	??_send_seg+1,w
  1211  0285  3A00               	xorlw	0	; case 0
  1212  0286  1903               	skipnz
  1213  0287  2A89               	goto	l2001
  1214  0288  2A94               	goto	l234
  1215  0289                     l2001:
  1216                           
  1217                           ; Switch size 1, requested type "simple"
  1218                           ; Number of cases is 3, Range of values is 0 to 2
  1219                           ; switch strategies available:
  1220                           ; Name         Instructions Cycles
  1221                           ; simple_byte           10     6 (average)
  1222                           ; direct_byte           17     8 (fixed)
  1223                           ; jumptable            260     6 (fixed)
  1224                           ;	Chosen strategy is simple_byte
  1225  0289  0873               	movf	??_send_seg,w
  1226  028A  3A00               	xorlw	0	; case 0
  1227  028B  1903               	skipnz
  1228  028C  2A58               	goto	l1409
  1229  028D  3A01               	xorlw	1	; case 1
  1230  028E  1903               	skipnz
  1231  028F  2A68               	goto	l1413
  1232  0290  3A03               	xorlw	3	; case 2
  1233  0291  1903               	skipnz
  1234  0292  2A76               	goto	l1417
  1235  0293  2A94               	goto	l234
  1236  0294                     l234:
  1237  0294  0008               	return
  1238  0295                     __end_of_send_seg:
  1239                           
  1240                           	psect	text3
  1241  0295                     __ptext3:	
  1242 ;; *************** function _send_min *****************
  1243 ;; Defined at:
  1244 ;;		line 218 in file "MAIN_PRO.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0
  1260 ;;      Temps:          2       0       0       0       0
  1261 ;;      Totals:         2       0       0       0       0
  1262 ;;Total ram usage:        2 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    1
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_first_send
  1269 ;;		_forced_send
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           
  1274                           ;psect for function _send_min
  1275  0295                     _send_min:
  1276  0295                     l1429:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _send_min: [wreg-fsr0h+status,2+status,0]
  1279                           
  1280                           
  1281                           ;MAIN_PRO.c: 220:     switch (m){
  1282  0295  2ABD               	goto	l1445
  1283  0296                     l1431:
  1284                           
  1285                           ;MAIN_PRO.c: 222:              TXREG = (min_t+0x30);
  1286  0296  0824               	movf	_min_t,w
  1287  0297  3E30               	addlw	48
  1288  0298  0099               	movwf	25	;volatile
  1289  0299                     l205:	
  1290                           ;MAIN_PRO.c: 223:              while(!TXSTAbits.TRMT);
  1291                           
  1292  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1293  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1294  029B  1C98               	btfss	24,1	;volatile
  1295  029C  2A9E               	goto	u531
  1296  029D  2A9F               	goto	u530
  1297  029E                     u531:
  1298  029E  2A99               	goto	l205
  1299  029F                     u530:
  1300  029F                     l1433:
  1301                           
  1302                           ;MAIN_PRO.c: 224:              m++;
  1303  029F  3001               	movlw	1
  1304  02A0  00F3               	movwf	??_send_min
  1305  02A1  0873               	movf	??_send_min,w
  1306  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1307  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1308  02A4  07B8               	addwf	_m,f
  1309                           
  1310                           ;MAIN_PRO.c: 225:             break;
  1311  02A5  2AD2               	goto	l217
  1312  02A6                     l1435:
  1313                           
  1314                           ;MAIN_PRO.c: 227:              TXREG = (min_u +0x30);
  1315  02A6  0829               	movf	_min_u,w
  1316  02A7  3E30               	addlw	48
  1317  02A8  0099               	movwf	25	;volatile
  1318  02A9                     l210:	
  1319                           ;MAIN_PRO.c: 228:              while(!TXSTAbits.TRMT);
  1320                           
  1321  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1322  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1323  02AB  1C98               	btfss	24,1	;volatile
  1324  02AC  2AAE               	goto	u541
  1325  02AD  2AAF               	goto	u540
  1326  02AE                     u541:
  1327  02AE  2AA9               	goto	l210
  1328  02AF                     u540:
  1329  02AF  2A9F               	goto	l1433
  1330  02B0                     l1439:
  1331                           
  1332                           ;MAIN_PRO.c: 232:             TXREG = (0x03);
  1333  02B0  3003               	movlw	3
  1334  02B1  0099               	movwf	25	;volatile
  1335  02B2                     l214:	
  1336                           ;MAIN_PRO.c: 233:             while(!TXSTAbits.TRMT);
  1337                           
  1338  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1339  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1340  02B4  1C98               	btfss	24,1	;volatile
  1341  02B5  2AB7               	goto	u551
  1342  02B6  2AB8               	goto	u550
  1343  02B7                     u551:
  1344  02B7  2AB2               	goto	l214
  1345  02B8                     u550:
  1346  02B8                     l1441:
  1347                           
  1348                           ;MAIN_PRO.c: 234:             m=0;
  1349  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1350  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1351  02BA  01B8               	clrf	_m
  1352                           
  1353                           ;MAIN_PRO.c: 235:             b=0;
  1354  02BB  01B6               	clrf	_b
  1355                           
  1356                           ;MAIN_PRO.c: 236:             break;
  1357  02BC  2AD2               	goto	l217
  1358  02BD                     l1445:
  1359  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1360  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1361  02BF  0838               	movf	_m,w
  1362  02C0  00F3               	movwf	??_send_min
  1363  02C1  01F4               	clrf	??_send_min+1
  1364                           
  1365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1366                           ; Switch size 1, requested type "simple"
  1367                           ; Number of cases is 1, Range of values is 0 to 0
  1368                           ; switch strategies available:
  1369                           ; Name         Instructions Cycles
  1370                           ; simple_byte            4     3 (average)
  1371                           ; direct_byte           11     8 (fixed)
  1372                           ; jumptable            260     6 (fixed)
  1373                           ;	Chosen strategy is simple_byte
  1374  02C2  0874               	movf	??_send_min+1,w
  1375  02C3  3A00               	xorlw	0	; case 0
  1376  02C4  1903               	skipnz
  1377  02C5  2AC7               	goto	l2003
  1378  02C6  2AD2               	goto	l217
  1379  02C7                     l2003:
  1380                           
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 3, Range of values is 0 to 2
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte           10     6 (average)
  1386                           ; direct_byte           17     8 (fixed)
  1387                           ; jumptable            260     6 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389  02C7  0873               	movf	??_send_min,w
  1390  02C8  3A00               	xorlw	0	; case 0
  1391  02C9  1903               	skipnz
  1392  02CA  2A96               	goto	l1431
  1393  02CB  3A01               	xorlw	1	; case 1
  1394  02CC  1903               	skipnz
  1395  02CD  2AA6               	goto	l1435
  1396  02CE  3A03               	xorlw	3	; case 2
  1397  02CF  1903               	skipnz
  1398  02D0  2AB0               	goto	l1439
  1399  02D1  2AD2               	goto	l217
  1400  02D2                     l217:
  1401  02D2  0008               	return
  1402  02D3                     __end_of_send_min:
  1403                           
  1404                           	psect	text4
  1405  02D3                     __ptext4:	
  1406 ;; *************** function _send_hora *****************
  1407 ;; Defined at:
  1408 ;;		line 198 in file "MAIN_PRO.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          2       0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_first_send
  1433 ;;		_forced_send
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _send_hora
  1439  02D3                     _send_hora:
  1440  02D3                     l1451:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0]
  1443                           
  1444                           
  1445                           ;MAIN_PRO.c: 200:     switch (h){
  1446  02D3  2AFB               	goto	l1467
  1447  02D4                     l1453:
  1448                           
  1449                           ;MAIN_PRO.c: 202:             TXREG = (hor_t+0x30);
  1450  02D4  0825               	movf	_hor_t,w
  1451  02D5  3E30               	addlw	48
  1452  02D6  0099               	movwf	25	;volatile
  1453  02D7                     l188:	
  1454                           ;MAIN_PRO.c: 203:             while(!TXSTAbits.TRMT);
  1455                           
  1456  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1457  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1458  02D9  1C98               	btfss	24,1	;volatile
  1459  02DA  2ADC               	goto	u561
  1460  02DB  2ADD               	goto	u560
  1461  02DC                     u561:
  1462  02DC  2AD7               	goto	l188
  1463  02DD                     u560:
  1464  02DD                     l1455:
  1465                           
  1466                           ;MAIN_PRO.c: 204:             h++;
  1467  02DD  3001               	movlw	1
  1468  02DE  00F3               	movwf	??_send_hora
  1469  02DF  0873               	movf	??_send_hora,w
  1470  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1471  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1472  02E2  07B9               	addwf	_h,f
  1473                           
  1474                           ;MAIN_PRO.c: 205:             break;
  1475  02E3  2B10               	goto	l200
  1476  02E4                     l1457:
  1477                           
  1478                           ;MAIN_PRO.c: 207:             TXREG = (hor_u+0x30);
  1479  02E4  082A               	movf	_hor_u,w
  1480  02E5  3E30               	addlw	48
  1481  02E6  0099               	movwf	25	;volatile
  1482  02E7                     l193:	
  1483                           ;MAIN_PRO.c: 208:             while(!TXSTAbits.TRMT);
  1484                           
  1485  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1486  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1487  02E9  1C98               	btfss	24,1	;volatile
  1488  02EA  2AEC               	goto	u571
  1489  02EB  2AED               	goto	u570
  1490  02EC                     u571:
  1491  02EC  2AE7               	goto	l193
  1492  02ED                     u570:
  1493  02ED  2ADD               	goto	l1455
  1494  02EE                     l1461:
  1495                           
  1496                           ;MAIN_PRO.c: 212:             TXREG = (0x03);
  1497  02EE  3003               	movlw	3
  1498  02EF  0099               	movwf	25	;volatile
  1499  02F0                     l197:	
  1500                           ;MAIN_PRO.c: 213:             while(!TXSTAbits.TRMT);
  1501                           
  1502  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1503  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1504  02F2  1C98               	btfss	24,1	;volatile
  1505  02F3  2AF5               	goto	u581
  1506  02F4  2AF6               	goto	u580
  1507  02F5                     u581:
  1508  02F5  2AF0               	goto	l197
  1509  02F6                     u580:
  1510  02F6                     l1463:
  1511                           
  1512                           ;MAIN_PRO.c: 214:             h=0;
  1513  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1514  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1515  02F8  01B9               	clrf	_h
  1516                           
  1517                           ;MAIN_PRO.c: 215:             g=0;
  1518  02F9  01B5               	clrf	_g
  1519                           
  1520                           ;MAIN_PRO.c: 216:             break;
  1521  02FA  2B10               	goto	l200
  1522  02FB                     l1467:
  1523  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1524  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1525  02FD  0839               	movf	_h,w
  1526  02FE  00F3               	movwf	??_send_hora
  1527  02FF  01F4               	clrf	??_send_hora+1
  1528                           
  1529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 1, Range of values is 0 to 0
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte            4     3 (average)
  1535                           ; direct_byte           11     8 (fixed)
  1536                           ; jumptable            260     6 (fixed)
  1537                           ;	Chosen strategy is simple_byte
  1538  0300  0874               	movf	??_send_hora+1,w
  1539  0301  3A00               	xorlw	0	; case 0
  1540  0302  1903               	skipnz
  1541  0303  2B05               	goto	l2005
  1542  0304  2B10               	goto	l200
  1543  0305                     l2005:
  1544                           
  1545                           ; Switch size 1, requested type "simple"
  1546                           ; Number of cases is 3, Range of values is 0 to 2
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte           10     6 (average)
  1550                           ; direct_byte           17     8 (fixed)
  1551                           ; jumptable            260     6 (fixed)
  1552                           ;	Chosen strategy is simple_byte
  1553  0305  0873               	movf	??_send_hora,w
  1554  0306  3A00               	xorlw	0	; case 0
  1555  0307  1903               	skipnz
  1556  0308  2AD4               	goto	l1453
  1557  0309  3A01               	xorlw	1	; case 1
  1558  030A  1903               	skipnz
  1559  030B  2AE4               	goto	l1457
  1560  030C  3A03               	xorlw	3	; case 2
  1561  030D  1903               	skipnz
  1562  030E  2AEE               	goto	l1461
  1563  030F  2B10               	goto	l200
  1564  0310                     l200:
  1565  0310  0008               	return
  1566  0311                     __end_of_send_hora:
  1567                           
  1568                           	psect	text5
  1569  034B                     __ptext5:	
  1570 ;; *************** function _Setup *****************
  1571 ;; Defined at:
  1572 ;;		line 116 in file "MAIN_PRO.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    2
  1593 ;; This function calls:
  1594 ;;		_SET_RXT
  1595 ;;		_SET_TXR
  1596 ;;		_initOsc
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _Setup
  1604  034B                     _Setup:
  1605  034B                     l1501:	
  1606                           ;incstack = 0
  1607                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1608                           
  1609                           
  1610                           ;MAIN_PRO.c: 118:     PORTA = 0;
  1611  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1612  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1613  034D  0185               	clrf	5	;volatile
  1614                           
  1615                           ;MAIN_PRO.c: 119:     PORTB = 0;
  1616  034E  0186               	clrf	6	;volatile
  1617                           
  1618                           ;MAIN_PRO.c: 120:     PORTC = 0;
  1619  034F  0187               	clrf	7	;volatile
  1620                           
  1621                           ;MAIN_PRO.c: 121:     PORTD = 0;
  1622  0350  0188               	clrf	8	;volatile
  1623                           
  1624                           ;MAIN_PRO.c: 122:     PORTE = 0;
  1625  0351  0189               	clrf	9	;volatile
  1626                           
  1627                           ;MAIN_PRO.c: 124:     TRISA = 0B00000000;
  1628  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1630  0354  0185               	clrf	5	;volatile
  1631                           
  1632                           ;MAIN_PRO.c: 125:     TRISB = 0B00000000;
  1633  0355  0186               	clrf	6	;volatile
  1634                           
  1635                           ;MAIN_PRO.c: 126:     TRISC = 0B00000000;
  1636  0356  0187               	clrf	7	;volatile
  1637                           
  1638                           ;MAIN_PRO.c: 127:     TRISD = 0B00000000;
  1639  0357  0188               	clrf	8	;volatile
  1640                           
  1641                           ;MAIN_PRO.c: 128:     TRISE = 0B0000;
  1642  0358  0189               	clrf	9	;volatile
  1643                           
  1644                           ;MAIN_PRO.c: 130:     ANSEL = 0B00000000;
  1645  0359  1683               	bsf	3,5	;RP0=1, select bank3
  1646  035A  1703               	bsf	3,6	;RP1=1, select bank3
  1647  035B  0188               	clrf	8	;volatile
  1648                           
  1649                           ;MAIN_PRO.c: 131:     ANSELH = 0B00000000;
  1650  035C  0189               	clrf	9	;volatile
  1651  035D                     l1503:
  1652                           
  1653                           ;MAIN_PRO.c: 134:     INTCONbits.GIE=1;
  1654  035D  178B               	bsf	11,7	;volatile
  1655  035E                     l1505:
  1656                           
  1657                           ;MAIN_PRO.c: 135:     INTCONbits.PEIE=1;
  1658  035E  170B               	bsf	11,6	;volatile
  1659  035F                     l1507:
  1660                           
  1661                           ;MAIN_PRO.c: 136:     INTCONbits.TMR0IE=1;
  1662  035F  168B               	bsf	11,5	;volatile
  1663  0360                     l1509:
  1664                           
  1665                           ;MAIN_PRO.c: 137:     INTCONbits.TMR0IF=0;
  1666  0360  110B               	bcf	11,2	;volatile
  1667  0361                     l1511:
  1668                           
  1669                           ;MAIN_PRO.c: 139:     PIE1bits.RCIE = 1;
  1670  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0363  168C               	bsf	12,5	;volatile
  1673  0364                     l1513:
  1674                           
  1675                           ;MAIN_PRO.c: 140:     OPTION_REGbits.T0CS=0;
  1676  0364  1281               	bcf	1,5	;volatile
  1677  0365                     l1515:
  1678                           
  1679                           ;MAIN_PRO.c: 141:     OPTION_REGbits.T0SE=0;
  1680  0365  1201               	bcf	1,4	;volatile
  1681  0366                     l1517:
  1682                           
  1683                           ;MAIN_PRO.c: 142:     OPTION_REGbits.PSA=0;
  1684  0366  1181               	bcf	1,3	;volatile
  1685  0367                     l1519:
  1686                           
  1687                           ;MAIN_PRO.c: 144:     OPTION_REGbits.PS0=1;
  1688  0367  1401               	bsf	1,0	;volatile
  1689  0368                     l1521:
  1690                           
  1691                           ;MAIN_PRO.c: 145:     OPTION_REGbits.PS1=1;
  1692  0368  1481               	bsf	1,1	;volatile
  1693  0369                     l1523:
  1694                           
  1695                           ;MAIN_PRO.c: 146:     OPTION_REGbits.PS2=1;
  1696  0369  1501               	bsf	1,2	;volatile
  1697  036A                     l1525:
  1698                           
  1699                           ;MAIN_PRO.c: 148:     initOsc(6);
  1700  036A  3006               	movlw	6
  1701  036B  120A  118A  21FB  120A  118A  	fcall	_initOsc
  1702  0370                     l1527:
  1703                           
  1704                           ;MAIN_PRO.c: 149:     SET_RXT();
  1705  0370  120A  118A  23EA  120A  118A  	fcall	_SET_RXT
  1706  0375                     l1529:
  1707                           
  1708                           ;MAIN_PRO.c: 150:     SET_TXR();
  1709  0375  120A  118A  23CE  120A  118A  	fcall	_SET_TXR
  1710  037A                     l165:
  1711  037A  0008               	return
  1712  037B                     __end_of_Setup:
  1713                           
  1714                           	psect	text6
  1715  01FB                     __ptext6:	
  1716 ;; *************** function _initOsc *****************
  1717 ;; Defined at:
  1718 ;;		line 6 in file "Oscilador.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  IRCF            1    wreg     unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  IRCF            1    5[COMMON] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0
  1734 ;;      Temps:          2       0       0       0       0
  1735 ;;      Totals:         3       0       0       0       0
  1736 ;;Total ram usage:        3 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_Setup
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _initOsc
  1748  01FB                     _initOsc:
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1752                           ;initOsc@IRCF stored from wreg
  1753  01FB  00F5               	movwf	initOsc@IRCF
  1754  01FC                     l1389:
  1755                           
  1756                           ;Oscilador.c: 7: switch (IRCF) {
  1757  01FC  2A33               	goto	l1393
  1758  01FD                     l264:	
  1759                           ;Oscilador.c: 8:             case 0:
  1760                           
  1761                           
  1762                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  1763  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1764  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1765  01FF  130F               	bcf	15,6	;volatile
  1766                           
  1767                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  1768  0200  128F               	bcf	15,5	;volatile
  1769                           
  1770                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  1771  0201  120F               	bcf	15,4	;volatile
  1772                           
  1773                           ;Oscilador.c: 12:                 break;
  1774  0202  2A55               	goto	l265
  1775  0203                     l266:	
  1776                           ;Oscilador.c: 13:             case 1:
  1777                           
  1778                           
  1779                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  1780  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0205  130F               	bcf	15,6	;volatile
  1783                           
  1784                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  1785  0206  128F               	bcf	15,5	;volatile
  1786                           
  1787                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  1788  0207  160F               	bsf	15,4	;volatile
  1789                           
  1790                           ;Oscilador.c: 17:                 break;
  1791  0208  2A55               	goto	l265
  1792  0209                     l267:	
  1793                           ;Oscilador.c: 18:             case 2:
  1794                           
  1795                           
  1796                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  1797  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1798  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1799  020B  130F               	bcf	15,6	;volatile
  1800                           
  1801                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  1802  020C  168F               	bsf	15,5	;volatile
  1803                           
  1804                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  1805  020D  120F               	bcf	15,4	;volatile
  1806                           
  1807                           ;Oscilador.c: 22:                 break;
  1808  020E  2A55               	goto	l265
  1809  020F                     l268:	
  1810                           ;Oscilador.c: 23:             case 3:
  1811                           
  1812                           
  1813                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  1814  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1816  0211  130F               	bcf	15,6	;volatile
  1817                           
  1818                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  1819  0212  168F               	bsf	15,5	;volatile
  1820                           
  1821                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  1822  0213  160F               	bsf	15,4	;volatile
  1823                           
  1824                           ;Oscilador.c: 27:                 break;
  1825  0214  2A55               	goto	l265
  1826  0215                     l269:	
  1827                           ;Oscilador.c: 28:             case 4:
  1828                           
  1829                           
  1830                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  1831  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0217  170F               	bsf	15,6	;volatile
  1834                           
  1835                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  1836  0218  128F               	bcf	15,5	;volatile
  1837                           
  1838                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  1839  0219  120F               	bcf	15,4	;volatile
  1840                           
  1841                           ;Oscilador.c: 32:                 break;
  1842  021A  2A55               	goto	l265
  1843  021B                     l270:	
  1844                           ;Oscilador.c: 33:             case 5:
  1845                           
  1846                           
  1847                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  1848  021B  1683               	bsf	3,5	;RP0=1, select bank1
  1849  021C  1303               	bcf	3,6	;RP1=0, select bank1
  1850  021D  170F               	bsf	15,6	;volatile
  1851                           
  1852                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  1853  021E  128F               	bcf	15,5	;volatile
  1854                           
  1855                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  1856  021F  160F               	bsf	15,4	;volatile
  1857                           
  1858                           ;Oscilador.c: 37:                 break;
  1859  0220  2A55               	goto	l265
  1860  0221                     l271:	
  1861                           ;Oscilador.c: 38:             case 6:
  1862                           
  1863                           
  1864                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  1865  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0223  170F               	bsf	15,6	;volatile
  1868                           
  1869                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  1870  0224  168F               	bsf	15,5	;volatile
  1871                           
  1872                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  1873  0225  120F               	bcf	15,4	;volatile
  1874                           
  1875                           ;Oscilador.c: 42:                 break;
  1876  0226  2A55               	goto	l265
  1877  0227                     l272:	
  1878                           ;Oscilador.c: 43:             case 7:
  1879                           
  1880                           
  1881                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  1882  0227  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0228  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0229  170F               	bsf	15,6	;volatile
  1885                           
  1886                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  1887  022A  168F               	bsf	15,5	;volatile
  1888                           
  1889                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  1890  022B  160F               	bsf	15,4	;volatile
  1891                           
  1892                           ;Oscilador.c: 47:                 break;
  1893  022C  2A55               	goto	l265
  1894  022D                     l273:	
  1895                           ;Oscilador.c: 48:             default:
  1896                           
  1897                           
  1898                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  1899  022D  1683               	bsf	3,5	;RP0=1, select bank1
  1900  022E  1303               	bcf	3,6	;RP1=0, select bank1
  1901  022F  170F               	bsf	15,6	;volatile
  1902                           
  1903                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  1904  0230  168F               	bsf	15,5	;volatile
  1905                           
  1906                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  1907  0231  120F               	bcf	15,4	;volatile
  1908                           
  1909                           ;Oscilador.c: 52:                 break;
  1910  0232  2A55               	goto	l265
  1911  0233                     l1393:
  1912  0233  0875               	movf	initOsc@IRCF,w
  1913  0234  00F3               	movwf	??_initOsc
  1914  0235  01F4               	clrf	??_initOsc+1
  1915                           
  1916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1917                           ; Switch size 1, requested type "simple"
  1918                           ; Number of cases is 1, Range of values is 0 to 0
  1919                           ; switch strategies available:
  1920                           ; Name         Instructions Cycles
  1921                           ; simple_byte            4     3 (average)
  1922                           ; direct_byte           11     8 (fixed)
  1923                           ; jumptable            260     6 (fixed)
  1924                           ;	Chosen strategy is simple_byte
  1925  0236  0874               	movf	??_initOsc+1,w
  1926  0237  3A00               	xorlw	0	; case 0
  1927  0238  1903               	skipnz
  1928  0239  2A3B               	goto	l2007
  1929  023A  2A2D               	goto	l273
  1930  023B                     l2007:
  1931                           
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 8, Range of values is 0 to 7
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           25    13 (average)
  1937                           ; direct_byte           32     8 (fixed)
  1938                           ; jumptable            260     6 (fixed)
  1939                           ;	Chosen strategy is simple_byte
  1940  023B  0873               	movf	??_initOsc,w
  1941  023C  3A00               	xorlw	0	; case 0
  1942  023D  1903               	skipnz
  1943  023E  29FD               	goto	l264
  1944  023F  3A01               	xorlw	1	; case 1
  1945  0240  1903               	skipnz
  1946  0241  2A03               	goto	l266
  1947  0242  3A03               	xorlw	3	; case 2
  1948  0243  1903               	skipnz
  1949  0244  2A09               	goto	l267
  1950  0245  3A01               	xorlw	1	; case 3
  1951  0246  1903               	skipnz
  1952  0247  2A0F               	goto	l268
  1953  0248  3A07               	xorlw	7	; case 4
  1954  0249  1903               	skipnz
  1955  024A  2A15               	goto	l269
  1956  024B  3A01               	xorlw	1	; case 5
  1957  024C  1903               	skipnz
  1958  024D  2A1B               	goto	l270
  1959  024E  3A03               	xorlw	3	; case 6
  1960  024F  1903               	skipnz
  1961  0250  2A21               	goto	l271
  1962  0251  3A01               	xorlw	1	; case 7
  1963  0252  1903               	skipnz
  1964  0253  2A27               	goto	l272
  1965  0254  2A2D               	goto	l273
  1966  0255                     l265:
  1967                           
  1968                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  1969  0255  140F               	bsf	15,0	;volatile
  1970  0256                     l274:
  1971  0256  0008               	return
  1972  0257                     __end_of_initOsc:
  1973                           
  1974                           	psect	text7
  1975  03CE                     __ptext7:	
  1976 ;; *************** function _SET_TXR *****************
  1977 ;; Defined at:
  1978 ;;		line 3 in file "EUSART.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         0       0       0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_Setup
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _SET_TXR
  2008  03CE                     _SET_TXR:
  2009  03CE                     l1401:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _SET_TXR: [wreg+status,2]
  2012                           
  2013                           
  2014                           ;EUSART.c: 4:     TXSTAbits.SYNC=0;
  2015  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2016  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2017  03D0  1218               	bcf	24,4	;volatile
  2018                           
  2019                           ;EUSART.c: 5:     TXSTAbits.TXEN=1;
  2020  03D1  1698               	bsf	24,5	;volatile
  2021                           
  2022                           ;EUSART.c: 6:     TXSTAbits.BRGH=1;
  2023  03D2  1518               	bsf	24,2	;volatile
  2024                           
  2025                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  2026  03D3  1318               	bcf	24,6	;volatile
  2027                           
  2028                           ;EUSART.c: 8:     BAUDCTLbits.BRG16=0;
  2029  03D4  1683               	bsf	3,5	;RP0=1, select bank3
  2030  03D5  1703               	bsf	3,6	;RP1=1, select bank3
  2031  03D6  1187               	bcf	7,3	;volatile
  2032  03D7                     l1403:
  2033                           
  2034                           ;EUSART.c: 9:     SPBRG=25;
  2035  03D7  3019               	movlw	25
  2036  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2037  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2038  03DA  0099               	movwf	25	;volatile
  2039  03DB                     l1405:
  2040                           
  2041                           ;EUSART.c: 10:     SPBRGH=0;
  2042  03DB  019A               	clrf	26	;volatile
  2043  03DC                     l255:
  2044  03DC  0008               	return
  2045  03DD                     __end_of_SET_TXR:
  2046                           
  2047                           	psect	text8
  2048  03EA                     __ptext8:	
  2049 ;; *************** function _SET_RXT *****************
  2050 ;; Defined at:
  2051 ;;		line 13 in file "EUSART.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		None
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_Setup
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _SET_RXT
  2081  03EA                     _SET_RXT:
  2082  03EA                     l1399:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _SET_RXT: []
  2085                           
  2086                           
  2087                           ;EUSART.c: 14:     RCSTAbits.SPEN=1;
  2088  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2089  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2090  03EC  1798               	bsf	24,7	;volatile
  2091                           
  2092                           ;EUSART.c: 15:     RCSTAbits.CREN=1;
  2093  03ED  1618               	bsf	24,4	;volatile
  2094                           
  2095                           ;EUSART.c: 16:     RCSTAbits.FERR=0;
  2096  03EE  1118               	bcf	24,2	;volatile
  2097                           
  2098                           ;EUSART.c: 17:     RCSTAbits.OERR=0;
  2099  03EF  1098               	bcf	24,1	;volatile
  2100                           
  2101                           ;EUSART.c: 18:     RCSTAbits.RX9=0;
  2102  03F0  1318               	bcf	24,6	;volatile
  2103                           
  2104                           ;EUSART.c: 19:     PIE1bits.RCIE=1;
  2105  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2106  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2107  03F3  168C               	bsf	12,5	;volatile
  2108  03F4                     l258:
  2109  03F4  0008               	return
  2110  03F5                     __end_of_SET_RXT:
  2111                           
  2112                           	psect	text9
  2113  03F5                     __ptext9:	
  2114 ;; *************** function _I2C_Master_Write *****************
  2115 ;; Defined at:
  2116 ;;		line 54 in file "I2C.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  d               2    3[COMMON] unsigned int 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         2       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         2       0       0       0       0
  2134 ;;Total ram usage:        2 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    2
  2137 ;; This function calls:
  2138 ;;		_I2C_Master_Wait
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;;		_CARGA
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _I2C_Master_Write
  2147  03F5                     _I2C_Master_Write:
  2148  03F5                     l1849:	
  2149                           ;incstack = 0
  2150                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2151                           
  2152                           
  2153                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  2154  03F5  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2155  03FA                     l1851:
  2156                           
  2157                           ;I2C.c: 57:     SSPBUF = d;
  2158  03FA  0873               	movf	I2C_Master_Write@d,w
  2159  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2160  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2161  03FD  0093               	movwf	19	;volatile
  2162  03FE                     l321:
  2163  03FE  0008               	return
  2164  03FF                     __end_of_I2C_Master_Write:
  2165                           
  2166                           	psect	text10
  2167  03FF                     __ptext10:	
  2168 ;; *************** function _I2C_Master_Stop *****************
  2169 ;; Defined at:
  2170 ;;		line 44 in file "I2C.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0
  2187 ;;      Totals:         0       0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    2
  2191 ;; This function calls:
  2192 ;;		_I2C_Master_Wait
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;;		_CARGA
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _I2C_Master_Stop
  2201  03FF                     _I2C_Master_Stop:
  2202  03FF                     l1873:	
  2203                           ;incstack = 0
  2204                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2205                           
  2206                           
  2207                           ;I2C.c: 46:     I2C_Master_Wait();
  2208  03FF  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2209  0404                     l1875:
  2210                           
  2211                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  2212  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2213  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2214  0406  1511               	bsf	17,2	;volatile
  2215  0407                     l318:
  2216  0407  0008               	return
  2217  0408                     __end_of_I2C_Master_Stop:
  2218                           
  2219                           	psect	text11
  2220  0408                     __ptext11:	
  2221 ;; *************** function _I2C_Master_Start *****************
  2222 ;; Defined at:
  2223 ;;		line 28 in file "I2C.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0
  2240 ;;      Totals:         0       0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    2
  2244 ;; This function calls:
  2245 ;;		_I2C_Master_Wait
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;;		_CARGA
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _I2C_Master_Start
  2254  0408                     _I2C_Master_Start:
  2255  0408                     l1845:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2258                           
  2259                           
  2260                           ;I2C.c: 30:     I2C_Master_Wait();
  2261  0408  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2262  040D                     l1847:
  2263                           
  2264                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  2265  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2266  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2267  040F  1411               	bsf	17,0	;volatile
  2268  0410                     l312:
  2269  0410  0008               	return
  2270  0411                     __end_of_I2C_Master_Start:
  2271                           
  2272                           	psect	text12
  2273  0411                     __ptext12:	
  2274 ;; *************** function _I2C_Master_RepeatedStart *****************
  2275 ;; Defined at:
  2276 ;;		line 36 in file "I2C.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2290 ;;      Params:         0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    2
  2297 ;; This function calls:
  2298 ;;		_I2C_Master_Wait
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _I2C_Master_RepeatedStart
  2306  0411                     _I2C_Master_RepeatedStart:
  2307  0411                     l1853:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2310                           
  2311                           
  2312                           ;I2C.c: 38:     I2C_Master_Wait();
  2313  0411  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2314  0416                     l1855:
  2315                           
  2316                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  2317  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2318  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2319  0418  1491               	bsf	17,1	;volatile
  2320  0419                     l315:
  2321  0419  0008               	return
  2322  041A                     __end_of_I2C_Master_RepeatedStart:
  2323                           
  2324                           	psect	text13
  2325  037B                     __ptext13:	
  2326 ;; *************** function _I2C_Master_Read *****************
  2327 ;; Defined at:
  2328 ;;		line 63 in file "I2C.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  a               2    3[COMMON] unsigned short 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  temp            2    0[BANK0 ] unsigned short 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  2    3[COMMON] unsigned short 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         2       0       0       0       0
  2343 ;;      Locals:         0       2       0       0       0
  2344 ;;      Temps:          2       0       0       0       0
  2345 ;;      Totals:         4       2       0       0       0
  2346 ;;Total ram usage:        6 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		_I2C_Master_Wait
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _I2C_Master_Read
  2358  037B                     _I2C_Master_Read:
  2359  037B                     l1857:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2362                           
  2363                           
  2364                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  2365  037B  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2366  0380                     l1859:
  2367                           
  2368                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2369  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0382  1591               	bsf	17,3	;volatile
  2372                           
  2373                           ;I2C.c: 68:     I2C_Master_Wait();
  2374  0383  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2375  0388                     l1861:
  2376                           
  2377                           ;I2C.c: 69:     temp = SSPBUF;
  2378  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2380  038A  0813               	movf	19,w	;volatile
  2381  038B  00F5               	movwf	??_I2C_Master_Read
  2382  038C  01F6               	clrf	??_I2C_Master_Read+1
  2383  038D  0875               	movf	??_I2C_Master_Read,w
  2384  038E  00BF               	movwf	I2C_Master_Read@temp
  2385  038F  0876               	movf	??_I2C_Master_Read+1,w
  2386  0390  00C0               	movwf	I2C_Master_Read@temp+1
  2387  0391                     l1863:
  2388                           
  2389                           ;I2C.c: 70:     I2C_Master_Wait();
  2390  0391  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Wait
  2391  0396                     l1865:
  2392                           
  2393                           ;I2C.c: 71:     if(a == 1){
  2394  0396  0373               	decf	I2C_Master_Read@a,w
  2395  0397  0474               	iorwf	I2C_Master_Read@a+1,w
  2396  0398  1D03               	btfss	3,2
  2397  0399  2B9B               	goto	u1081
  2398  039A  2B9C               	goto	u1080
  2399  039B                     u1081:
  2400  039B  2BA0               	goto	l324
  2401  039C                     u1080:
  2402  039C                     l1867:
  2403                           
  2404                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  2405  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2406  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2407  039E  1291               	bcf	17,5	;volatile
  2408                           
  2409                           ;I2C.c: 73:     }else{
  2410  039F  2BA3               	goto	l325
  2411  03A0                     l324:
  2412                           
  2413                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  2414  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2415  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2416  03A2  1691               	bsf	17,5	;volatile
  2417  03A3                     l325:	
  2418                           ;I2C.c: 75:     }
  2419                           
  2420                           
  2421                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  2422  03A3  1611               	bsf	17,4	;volatile
  2423  03A4                     l1869:
  2424                           
  2425                           ;I2C.c: 77:     return temp;
  2426  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2427  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2428  03A6  0840               	movf	I2C_Master_Read@temp+1,w
  2429  03A7  00F4               	movwf	?_I2C_Master_Read+1
  2430  03A8  083F               	movf	I2C_Master_Read@temp,w
  2431  03A9  00F3               	movwf	?_I2C_Master_Read
  2432  03AA                     l326:
  2433  03AA  0008               	return
  2434  03AB                     __end_of_I2C_Master_Read:
  2435                           
  2436                           	psect	text14
  2437  03DD                     __ptext14:	
  2438 ;; *************** function _I2C_Master_Wait *****************
  2439 ;; Defined at:
  2440 ;;		line 21 in file "I2C.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2454 ;;      Params:         0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    1
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_I2C_Master_Start
  2465 ;;		_I2C_Master_RepeatedStart
  2466 ;;		_I2C_Master_Stop
  2467 ;;		_I2C_Master_Write
  2468 ;;		_I2C_Master_Read
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _I2C_Master_Wait
  2474  03DD                     _I2C_Master_Wait:
  2475  03DD                     l1805:	
  2476                           ;incstack = 0
  2477                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2478                           
  2479  03DD                     l306:	
  2480                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2481                           
  2482  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2483  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2484  03DF  1914               	btfsc	20,2	;volatile
  2485  03E0  2BE2               	goto	u981
  2486  03E1  2BE3               	goto	u980
  2487  03E2                     u981:
  2488  03E2  2BDD               	goto	l306
  2489  03E3                     u980:
  2490  03E3                     l1807:
  2491  03E3  0811               	movf	17,w	;volatile
  2492  03E4  391F               	andlw	31
  2493  03E5  1D03               	btfss	3,2
  2494  03E6  2BE8               	goto	u991
  2495  03E7  2BE9               	goto	u990
  2496  03E8                     u991:
  2497  03E8  2BDD               	goto	l306
  2498  03E9                     u990:
  2499  03E9                     l309:
  2500  03E9  0008               	return
  2501  03EA                     __end_of_I2C_Master_Wait:
  2502                           
  2503                           	psect	text15
  2504  0311                     __ptext15:	
  2505 ;; *************** function _I2C_Master_Init *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "I2C.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  c               4   13[BANK0 ] const unsigned long 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       4       0       0       0
  2522 ;;      Locals:         0       0       0       0       0
  2523 ;;      Temps:          4       0       0       0       0
  2524 ;;      Totals:         4       4       0       0       0
  2525 ;;Total ram usage:        8 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    2
  2528 ;; This function calls:
  2529 ;;		___lldiv
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _I2C_Master_Init
  2537  0311                     _I2C_Master_Init:
  2538  0311                     l1833:	
  2539                           ;incstack = 0
  2540                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2541                           
  2542                           
  2543                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  2544  0311  3028               	movlw	40
  2545  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0314  0094               	movwf	20	;volatile
  2548  0315                     l1835:
  2549                           
  2550                           ;I2C.c: 8:     SSPCON2 = 0;
  2551  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0317  0191               	clrf	17	;volatile
  2554  0318                     l1837:
  2555                           
  2556                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  2557  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2559  031A  084C               	movf	I2C_Master_Init@c,w
  2560  031B  00F4               	movwf	??_I2C_Master_Init
  2561  031C  084D               	movf	I2C_Master_Init@c+1,w
  2562  031D  00F5               	movwf	??_I2C_Master_Init+1
  2563  031E  084E               	movf	I2C_Master_Init@c+2,w
  2564  031F  00F6               	movwf	??_I2C_Master_Init+2
  2565  0320  084F               	movf	I2C_Master_Init@c+3,w
  2566  0321  00F7               	movwf	??_I2C_Master_Init+3
  2567  0322  3002               	movlw	2
  2568  0323                     u1075:
  2569  0323  1003               	clrc
  2570  0324  0DF4               	rlf	??_I2C_Master_Init,f
  2571  0325  0DF5               	rlf	??_I2C_Master_Init+1,f
  2572  0326  0DF6               	rlf	??_I2C_Master_Init+2,f
  2573  0327  0DF7               	rlf	??_I2C_Master_Init+3,f
  2574  0328                     u1070:
  2575  0328  3EFF               	addlw	-1
  2576  0329  1D03               	skipz
  2577  032A  2B23               	goto	u1075
  2578  032B  0877               	movf	??_I2C_Master_Init+3,w
  2579  032C  00C2               	movwf	___lldiv@divisor+3
  2580  032D  0876               	movf	??_I2C_Master_Init+2,w
  2581  032E  00C1               	movwf	___lldiv@divisor+2
  2582  032F  0875               	movf	??_I2C_Master_Init+1,w
  2583  0330  00C0               	movwf	___lldiv@divisor+1
  2584  0331  0874               	movf	??_I2C_Master_Init,w
  2585  0332  00BF               	movwf	___lldiv@divisor
  2586  0333  3000               	movlw	0
  2587  0334  00C6               	movwf	___lldiv@dividend+3
  2588  0335  307A               	movlw	122
  2589  0336  00C5               	movwf	___lldiv@dividend+2
  2590  0337  3012               	movlw	18
  2591  0338  00C4               	movwf	___lldiv@dividend+1
  2592  0339  3000               	movlw	0
  2593  033A  00C3               	movwf	___lldiv@dividend
  2594  033B  120A  118A  20D6  120A  118A  	fcall	___lldiv
  2595  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0342  083F               	movf	?___lldiv,w
  2598  0343  3EFF               	addlw	255
  2599  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2601  0346  0093               	movwf	19	;volatile
  2602  0347                     l1839:
  2603                           
  2604                           ;I2C.c: 10:     SSPSTAT = 0;
  2605  0347  0194               	clrf	20	;volatile
  2606  0348                     l1841:
  2607                           
  2608                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  2609  0348  1587               	bsf	7,3	;volatile
  2610  0349                     l1843:
  2611                           
  2612                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  2613  0349  1607               	bsf	7,4	;volatile
  2614  034A                     l303:
  2615  034A  0008               	return
  2616  034B                     __end_of_I2C_Master_Init:
  2617                           
  2618                           	psect	text16
  2619  00D6                     __ptext16:	
  2620 ;; *************** function ___lldiv *****************
  2621 ;; Defined at:
  2622 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  divisor         4    0[BANK0 ] unsigned long 
  2625 ;;  dividend        4    4[BANK0 ] unsigned long 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  quotient        4    8[BANK0 ] unsigned long 
  2628 ;;  counter         1   12[BANK0 ] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  4    0[BANK0 ] unsigned long 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       8       0       0       0
  2639 ;;      Locals:         0       5       0       0       0
  2640 ;;      Temps:          1       0       0       0       0
  2641 ;;      Totals:         1      13       0       0       0
  2642 ;;Total ram usage:       14 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_I2C_Master_Init
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function ___lldiv
  2654  00D6                     ___lldiv:
  2655  00D6                     l1809:	
  2656                           ;incstack = 0
  2657                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2658                           
  2659  00D6  3000               	movlw	0
  2660  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2661  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2662  00D9  00CA               	movwf	___lldiv@quotient+3
  2663  00DA  3000               	movlw	0
  2664  00DB  00C9               	movwf	___lldiv@quotient+2
  2665  00DC  3000               	movlw	0
  2666  00DD  00C8               	movwf	___lldiv@quotient+1
  2667  00DE  3000               	movlw	0
  2668  00DF  00C7               	movwf	___lldiv@quotient
  2669  00E0  0842               	movf	___lldiv@divisor+3,w
  2670  00E1  0441               	iorwf	___lldiv@divisor+2,w
  2671  00E2  0440               	iorwf	___lldiv@divisor+1,w
  2672  00E3  043F               	iorwf	___lldiv@divisor,w
  2673  00E4  1903               	skipnz
  2674  00E5  28E7               	goto	u1001
  2675  00E6  28E8               	goto	u1000
  2676  00E7                     u1001:
  2677  00E7  2935               	goto	l1829
  2678  00E8                     u1000:
  2679  00E8                     l1811:
  2680  00E8  01CB               	clrf	___lldiv@counter
  2681  00E9  0ACB               	incf	___lldiv@counter,f
  2682  00EA  28F8               	goto	l1815
  2683  00EB                     l1813:
  2684  00EB  3001               	movlw	1
  2685  00EC  00F3               	movwf	??___lldiv
  2686  00ED                     u1015:
  2687  00ED  1003               	clrc
  2688  00EE  0DBF               	rlf	___lldiv@divisor,f
  2689  00EF  0DC0               	rlf	___lldiv@divisor+1,f
  2690  00F0  0DC1               	rlf	___lldiv@divisor+2,f
  2691  00F1  0DC2               	rlf	___lldiv@divisor+3,f
  2692  00F2  0BF3               	decfsz	??___lldiv,f
  2693  00F3  28ED               	goto	u1015
  2694  00F4  3001               	movlw	1
  2695  00F5  00F3               	movwf	??___lldiv
  2696  00F6  0873               	movf	??___lldiv,w
  2697  00F7  07CB               	addwf	___lldiv@counter,f
  2698  00F8                     l1815:
  2699  00F8  1FC2               	btfss	___lldiv@divisor+3,7
  2700  00F9  28FB               	goto	u1021
  2701  00FA  28FC               	goto	u1020
  2702  00FB                     u1021:
  2703  00FB  28EB               	goto	l1813
  2704  00FC                     u1020:
  2705  00FC                     l1817:
  2706  00FC  3001               	movlw	1
  2707  00FD  00F3               	movwf	??___lldiv
  2708  00FE                     u1035:
  2709  00FE  1003               	clrc
  2710  00FF  0DC7               	rlf	___lldiv@quotient,f
  2711  0100  0DC8               	rlf	___lldiv@quotient+1,f
  2712  0101  0DC9               	rlf	___lldiv@quotient+2,f
  2713  0102  0DCA               	rlf	___lldiv@quotient+3,f
  2714  0103  0BF3               	decfsz	??___lldiv,f
  2715  0104  28FE               	goto	u1035
  2716  0105                     l1819:
  2717  0105  0842               	movf	___lldiv@divisor+3,w
  2718  0106  0246               	subwf	___lldiv@dividend+3,w
  2719  0107  1D03               	skipz
  2720  0108  2913               	goto	u1045
  2721  0109  0841               	movf	___lldiv@divisor+2,w
  2722  010A  0245               	subwf	___lldiv@dividend+2,w
  2723  010B  1D03               	skipz
  2724  010C  2913               	goto	u1045
  2725  010D  0840               	movf	___lldiv@divisor+1,w
  2726  010E  0244               	subwf	___lldiv@dividend+1,w
  2727  010F  1D03               	skipz
  2728  0110  2913               	goto	u1045
  2729  0111  083F               	movf	___lldiv@divisor,w
  2730  0112  0243               	subwf	___lldiv@dividend,w
  2731  0113                     u1045:
  2732  0113  1C03               	skipc
  2733  0114  2916               	goto	u1041
  2734  0115  2917               	goto	u1040
  2735  0116                     u1041:
  2736  0116  2926               	goto	l1825
  2737  0117                     u1040:
  2738  0117                     l1821:
  2739  0117  083F               	movf	___lldiv@divisor,w
  2740  0118  02C3               	subwf	___lldiv@dividend,f
  2741  0119  0840               	movf	___lldiv@divisor+1,w
  2742  011A  1C03               	skipc
  2743  011B  0F40               	incfsz	___lldiv@divisor+1,w
  2744  011C  02C4               	subwf	___lldiv@dividend+1,f
  2745  011D  0841               	movf	___lldiv@divisor+2,w
  2746  011E  1C03               	skipc
  2747  011F  0F41               	incfsz	___lldiv@divisor+2,w
  2748  0120  02C5               	subwf	___lldiv@dividend+2,f
  2749  0121  0842               	movf	___lldiv@divisor+3,w
  2750  0122  1C03               	skipc
  2751  0123  0F42               	incfsz	___lldiv@divisor+3,w
  2752  0124  02C6               	subwf	___lldiv@dividend+3,f
  2753  0125                     l1823:
  2754  0125  1447               	bsf	___lldiv@quotient,0
  2755  0126                     l1825:
  2756  0126  3001               	movlw	1
  2757  0127                     u1055:
  2758  0127  1003               	clrc
  2759  0128  0CC2               	rrf	___lldiv@divisor+3,f
  2760  0129  0CC1               	rrf	___lldiv@divisor+2,f
  2761  012A  0CC0               	rrf	___lldiv@divisor+1,f
  2762  012B  0CBF               	rrf	___lldiv@divisor,f
  2763  012C  3EFF               	addlw	-1
  2764  012D  1D03               	skipz
  2765  012E  2927               	goto	u1055
  2766  012F                     l1827:
  2767  012F  3001               	movlw	1
  2768  0130  02CB               	subwf	___lldiv@counter,f
  2769  0131  1D03               	btfss	3,2
  2770  0132  2934               	goto	u1061
  2771  0133  2935               	goto	u1060
  2772  0134                     u1061:
  2773  0134  28FC               	goto	l1817
  2774  0135                     u1060:
  2775  0135                     l1829:
  2776  0135  084A               	movf	___lldiv@quotient+3,w
  2777  0136  00C2               	movwf	?___lldiv+3
  2778  0137  0849               	movf	___lldiv@quotient+2,w
  2779  0138  00C1               	movwf	?___lldiv+2
  2780  0139  0848               	movf	___lldiv@quotient+1,w
  2781  013A  00C0               	movwf	?___lldiv+1
  2782  013B  0847               	movf	___lldiv@quotient,w
  2783  013C  00BF               	movwf	?___lldiv
  2784  013D                     l451:
  2785  013D  0008               	return
  2786  013E                     __end_of___lldiv:
  2787                           
  2788                           	psect	text17
  2789  019E                     __ptext17:	
  2790 ;; *************** function _CONVET *****************
  2791 ;; Defined at:
  2792 ;;		line 155 in file "MAIN_PRO.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0
  2808 ;;      Temps:          2       0       0       0       0
  2809 ;;      Totals:         2       0       0       0       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function _CONVET
  2822  019E                     _CONVET:
  2823  019E                     l1575:	
  2824                           ;incstack = 0
  2825                           ; Regs used in _CONVET: [wreg+status,2+status,0]
  2826                           
  2827                           
  2828                           ;MAIN_PRO.c: 156:     mou_t = ((mou & 0b00010000)>>4);
  2829  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2830  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2831  01A0  0833               	movf	_mou,w
  2832  01A1  00F3               	movwf	??_CONVET
  2833  01A2  3004               	movlw	4
  2834  01A3                     u705:
  2835  01A3  1003               	clrc
  2836  01A4  0CF3               	rrf	??_CONVET,f
  2837  01A5  3EFF               	addlw	-1
  2838  01A6  1D03               	skipz
  2839  01A7  29A3               	goto	u705
  2840  01A8  0873               	movf	??_CONVET,w
  2841  01A9  3901               	andlw	1
  2842  01AA  00F4               	movwf	??_CONVET+1
  2843  01AB  0874               	movf	??_CONVET+1,w
  2844  01AC  00A7               	movwf	_mou_t
  2845  01AD                     l1577:
  2846                           
  2847                           ;MAIN_PRO.c: 157:     mou_u = (mou & 0b00001111);
  2848  01AD  0833               	movf	_mou,w
  2849  01AE  390F               	andlw	15
  2850  01AF  00F3               	movwf	??_CONVET
  2851  01B0  0873               	movf	??_CONVET,w
  2852  01B1  00AC               	movwf	_mou_u
  2853  01B2                     l1579:
  2854                           
  2855                           ;MAIN_PRO.c: 158:     day_t = ((day & 0b00110000)>>4);
  2856  01B2  0832               	movf	_day,w
  2857  01B3  00F3               	movwf	??_CONVET
  2858  01B4  3004               	movlw	4
  2859  01B5                     u715:
  2860  01B5  1003               	clrc
  2861  01B6  0CF3               	rrf	??_CONVET,f
  2862  01B7  3EFF               	addlw	-1
  2863  01B8  1D03               	skipz
  2864  01B9  29B5               	goto	u715
  2865  01BA  0873               	movf	??_CONVET,w
  2866  01BB  3903               	andlw	3
  2867  01BC  00F4               	movwf	??_CONVET+1
  2868  01BD  0874               	movf	??_CONVET+1,w
  2869  01BE  00A6               	movwf	_day_t
  2870                           
  2871                           ;MAIN_PRO.c: 159:     day_u = (day & 0b00001111);
  2872  01BF  0832               	movf	_day,w
  2873  01C0  390F               	andlw	15
  2874  01C1  00F3               	movwf	??_CONVET
  2875  01C2  0873               	movf	??_CONVET,w
  2876  01C3  00AB               	movwf	_day_u
  2877  01C4                     l1581:
  2878                           
  2879                           ;MAIN_PRO.c: 160:     hor_t = ((hor & 0b00110000)>>4);
  2880  01C4  0831               	movf	_hor,w
  2881  01C5  00F3               	movwf	??_CONVET
  2882  01C6  3004               	movlw	4
  2883  01C7                     u725:
  2884  01C7  1003               	clrc
  2885  01C8  0CF3               	rrf	??_CONVET,f
  2886  01C9  3EFF               	addlw	-1
  2887  01CA  1D03               	skipz
  2888  01CB  29C7               	goto	u725
  2889  01CC  0873               	movf	??_CONVET,w
  2890  01CD  3903               	andlw	3
  2891  01CE  00F4               	movwf	??_CONVET+1
  2892  01CF  0874               	movf	??_CONVET+1,w
  2893  01D0  00A5               	movwf	_hor_t
  2894  01D1                     l1583:
  2895                           
  2896                           ;MAIN_PRO.c: 161:     hor_u = (hor & 0b00001111);
  2897  01D1  0831               	movf	_hor,w
  2898  01D2  390F               	andlw	15
  2899  01D3  00F3               	movwf	??_CONVET
  2900  01D4  0873               	movf	??_CONVET,w
  2901  01D5  00AA               	movwf	_hor_u
  2902                           
  2903                           ;MAIN_PRO.c: 162:     min_t = ((min & 0b01110000)>>4);
  2904  01D6  0830               	movf	_min,w
  2905  01D7  00F3               	movwf	??_CONVET
  2906  01D8  3004               	movlw	4
  2907  01D9                     u735:
  2908  01D9  1003               	clrc
  2909  01DA  0CF3               	rrf	??_CONVET,f
  2910  01DB  3EFF               	addlw	-1
  2911  01DC  1D03               	skipz
  2912  01DD  29D9               	goto	u735
  2913  01DE  0873               	movf	??_CONVET,w
  2914  01DF  3907               	andlw	7
  2915  01E0  00F4               	movwf	??_CONVET+1
  2916  01E1  0874               	movf	??_CONVET+1,w
  2917  01E2  00A4               	movwf	_min_t
  2918  01E3                     l1585:
  2919                           
  2920                           ;MAIN_PRO.c: 163:     min_u = (min & 0b00001111);
  2921  01E3  0830               	movf	_min,w
  2922  01E4  390F               	andlw	15
  2923  01E5  00F3               	movwf	??_CONVET
  2924  01E6  0873               	movf	??_CONVET,w
  2925  01E7  00A9               	movwf	_min_u
  2926  01E8                     l1587:
  2927                           
  2928                           ;MAIN_PRO.c: 164:     seg_t = ((seg & 0b01110000)>>4);
  2929  01E8  082F               	movf	_seg,w
  2930  01E9  00F3               	movwf	??_CONVET
  2931  01EA  3004               	movlw	4
  2932  01EB                     u745:
  2933  01EB  1003               	clrc
  2934  01EC  0CF3               	rrf	??_CONVET,f
  2935  01ED  3EFF               	addlw	-1
  2936  01EE  1D03               	skipz
  2937  01EF  29EB               	goto	u745
  2938  01F0  0873               	movf	??_CONVET,w
  2939  01F1  3907               	andlw	7
  2940  01F2  00F4               	movwf	??_CONVET+1
  2941  01F3  0874               	movf	??_CONVET+1,w
  2942  01F4  00A3               	movwf	_seg_t
  2943                           
  2944                           ;MAIN_PRO.c: 165:     seg_u = (seg & 0b00001111);
  2945  01F5  082F               	movf	_seg,w
  2946  01F6  390F               	andlw	15
  2947  01F7  00F3               	movwf	??_CONVET
  2948  01F8  0873               	movf	??_CONVET,w
  2949  01F9  00A8               	movwf	_seg_u
  2950  01FA                     l168:
  2951  01FA  0008               	return
  2952  01FB                     __end_of_CONVET:
  2953                           
  2954                           	psect	text18
  2955  013E                     __ptext18:	
  2956 ;; *************** function _isr *****************
  2957 ;; Defined at:
  2958 ;;		line 60 in file "MAIN_PRO.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0
  2974 ;;      Temps:          3       0       0       0       0
  2975 ;;      Totals:         3       0       0       0       0
  2976 ;;Total ram usage:        3 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		Interrupt level 1
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _isr
  2987  013E                     _isr:
  2988  013E                     i1l1601:
  2989                           
  2990                           ;MAIN_PRO.c: 61:     if (PIR1bits.RCIF==1){
  2991  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2992  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0140  1E8C               	btfss	12,5	;volatile
  2994  0141  2943               	goto	u78_21
  2995  0142  2944               	goto	u78_20
  2996  0143                     u78_21:
  2997  0143  2985               	goto	i1l143
  2998  0144                     u78_20:
  2999  0144                     i1l1603:
  3000                           
  3001                           ;MAIN_PRO.c: 62:         temp = 0;
  3002  0144  01F8               	clrf	_temp
  3003  0145                     i1l1605:
  3004                           
  3005                           ;MAIN_PRO.c: 63:         temp = RCREG;
  3006  0145  081A               	movf	26,w	;volatile
  3007  0146  00F0               	movwf	??_isr
  3008  0147  0870               	movf	??_isr,w
  3009  0148  00F8               	movwf	_temp
  3010  0149                     i1l1607:
  3011                           
  3012                           ;MAIN_PRO.c: 64:         if (temp == 0X30){PORTAbits.RA1=0;}
  3013  0149  3030               	movlw	48
  3014  014A  0678               	xorwf	_temp,w
  3015  014B  1D03               	btfss	3,2
  3016  014C  294E               	goto	u79_21
  3017  014D  294F               	goto	u79_20
  3018  014E                     u79_21:
  3019  014E  2950               	goto	i1l1611
  3020  014F                     u79_20:
  3021  014F                     i1l1609:
  3022  014F  1085               	bcf	5,1	;volatile
  3023  0150                     i1l1611:
  3024                           
  3025                           ;MAIN_PRO.c: 65:         if (temp == 0X31){PORTAbits.RA1=1;}
  3026  0150  3031               	movlw	49
  3027  0151  0678               	xorwf	_temp,w
  3028  0152  1D03               	btfss	3,2
  3029  0153  2955               	goto	u80_21
  3030  0154  2956               	goto	u80_20
  3031  0155                     u80_21:
  3032  0155  2957               	goto	i1l1615
  3033  0156                     u80_20:
  3034  0156                     i1l1613:
  3035  0156  1485               	bsf	5,1	;volatile
  3036  0157                     i1l1615:
  3037                           
  3038                           ;MAIN_PRO.c: 66:         if (temp == 0X32){PORTAbits.RA0=0;}
  3039  0157  3032               	movlw	50
  3040  0158  0678               	xorwf	_temp,w
  3041  0159  1D03               	btfss	3,2
  3042  015A  295C               	goto	u81_21
  3043  015B  295D               	goto	u81_20
  3044  015C                     u81_21:
  3045  015C  295E               	goto	i1l1619
  3046  015D                     u81_20:
  3047  015D                     i1l1617:
  3048  015D  1005               	bcf	5,0	;volatile
  3049  015E                     i1l1619:
  3050                           
  3051                           ;MAIN_PRO.c: 67:         if (temp == 0X33){PORTAbits.RA0=1;}
  3052  015E  3033               	movlw	51
  3053  015F  0678               	xorwf	_temp,w
  3054  0160  1D03               	btfss	3,2
  3055  0161  2963               	goto	u82_21
  3056  0162  2964               	goto	u82_20
  3057  0163                     u82_21:
  3058  0163  2965               	goto	i1l1623
  3059  0164                     u82_20:
  3060  0164                     i1l1621:
  3061  0164  1405               	bsf	5,0	;volatile
  3062  0165                     i1l1623:
  3063                           
  3064                           ;MAIN_PRO.c: 68:         if (temp == 0X34){C=1;}
  3065  0165  3034               	movlw	52
  3066  0166  0678               	xorwf	_temp,w
  3067  0167  1D03               	btfss	3,2
  3068  0168  296A               	goto	u83_21
  3069  0169  296B               	goto	u83_20
  3070  016A                     u83_21:
  3071  016A  296D               	goto	i1l1627
  3072  016B                     u83_20:
  3073  016B                     i1l1625:
  3074  016B  01FA               	clrf	_C
  3075  016C  0AFA               	incf	_C,f
  3076  016D                     i1l1627:
  3077                           
  3078                           ;MAIN_PRO.c: 69:         if (temp == 0X35){b=1;}
  3079  016D  3035               	movlw	53
  3080  016E  0678               	xorwf	_temp,w
  3081  016F  1D03               	btfss	3,2
  3082  0170  2972               	goto	u84_21
  3083  0171  2973               	goto	u84_20
  3084  0172                     u84_21:
  3085  0172  2975               	goto	i1l1631
  3086  0173                     u84_20:
  3087  0173                     i1l1629:
  3088  0173  01B6               	clrf	_b
  3089  0174  0AB6               	incf	_b,f
  3090  0175                     i1l1631:
  3091                           
  3092                           ;MAIN_PRO.c: 70:         if (temp == 0X36){g=1;}
  3093  0175  3036               	movlw	54
  3094  0176  0678               	xorwf	_temp,w
  3095  0177  1D03               	btfss	3,2
  3096  0178  297A               	goto	u85_21
  3097  0179  297B               	goto	u85_20
  3098  017A                     u85_21:
  3099  017A  297D               	goto	i1l1635
  3100  017B                     u85_20:
  3101  017B                     i1l1633:
  3102  017B  01B5               	clrf	_g
  3103  017C  0AB5               	incf	_g,f
  3104  017D                     i1l1635:
  3105                           
  3106                           ;MAIN_PRO.c: 71:         if (temp == 0X37){empty=1;}
  3107  017D  3037               	movlw	55
  3108  017E  0678               	xorwf	_temp,w
  3109  017F  1D03               	btfss	3,2
  3110  0180  2982               	goto	u86_21
  3111  0181  2983               	goto	u86_20
  3112  0182                     u86_21:
  3113  0182  2985               	goto	i1l143
  3114  0183                     u86_20:
  3115  0183                     i1l1637:
  3116  0183  01B4               	clrf	_empty
  3117  0184  0AB4               	incf	_empty,f
  3118  0185                     i1l143:	
  3119                           ;MAIN_PRO.c: 73:     }
  3120                           
  3121                           
  3122                           ;MAIN_PRO.c: 74:     if (INTCONbits.TMR0IF==1){
  3123  0185  1D0B               	btfss	11,2	;volatile
  3124  0186  2988               	goto	u87_21
  3125  0187  2989               	goto	u87_20
  3126  0188                     u87_21:
  3127  0188  2997               	goto	i1l154
  3128  0189                     u87_20:
  3129  0189                     i1l1639:
  3130                           
  3131                           ;MAIN_PRO.c: 75:         TMR0=236;
  3132  0189  30EC               	movlw	236
  3133  018A  0081               	movwf	1	;volatile
  3134  018B                     i1l1641:
  3135                           
  3136                           ;MAIN_PRO.c: 76:         INTCONbits.TMR0IF=0;
  3137  018B  110B               	bcf	11,2	;volatile
  3138  018C                     i1l1643:
  3139                           
  3140                           ;MAIN_PRO.c: 77:         r++;
  3141  018C  3001               	movlw	1
  3142  018D  00F0               	movwf	??_isr
  3143  018E  0870               	movf	??_isr,w
  3144  018F  07BB               	addwf	_r,f
  3145  0190                     i1l1645:
  3146                           
  3147                           ;MAIN_PRO.c: 78:         if(r==10){
  3148  0190  300A               	movlw	10
  3149  0191  063B               	xorwf	_r,w
  3150  0192  1D03               	btfss	3,2
  3151  0193  2995               	goto	u88_21
  3152  0194  2996               	goto	u88_20
  3153  0195                     u88_21:
  3154  0195  2997               	goto	i1l154
  3155  0196                     u88_20:
  3156  0196                     i1l1647:
  3157                           
  3158                           ;MAIN_PRO.c: 79:             r=0;
  3159  0196  01BB               	clrf	_r
  3160  0197                     i1l154:
  3161  0197  0872               	movf	??_isr+2,w
  3162  0198  008A               	movwf	10
  3163  0199  0E71               	swapf	??_isr+1,w
  3164  019A  0083               	movwf	3
  3165  019B  0EFE               	swapf	btemp,f
  3166  019C  0E7E               	swapf	btemp,w
  3167  019D  0009               	retfie
  3168  019E                     __end_of_isr:
  3169  007E                     btemp	set	126	;btemp
  3170  007E                     wtemp0	set	126
  3171                           
  3172                           	psect	intentry
  3173  0004                     __pintentry:	
  3174                           ;incstack = 0
  3175                           ; Regs used in _isr: [wreg+status,2+status,0]
  3176                           
  3177  0004                     interrupt_function:
  3178  007E                     saved_w	set	btemp
  3179  0004  00FE               	movwf	btemp
  3180  0005  0E03               	swapf	3,w
  3181  0006  00F1               	movwf	??_isr+1
  3182  0007  080A               	movf	10,w
  3183  0008  00F2               	movwf	??_isr+2
  3184  0009  120A  118A  293E   	ljmp	_isr
  3185                           
  3186                           	psect	config
  3187                           
  3188                           ;Config register CONFIG1 @ 0x2007
  3189                           ;	Oscillator Selection bits
  3190                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3191                           ;	Watchdog Timer Enable bit
  3192                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3193                           ;	Power-up Timer Enable bit
  3194                           ;	PWRTE = OFF, PWRT disabled
  3195                           ;	RE3/MCLR pin function select bit
  3196                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3197                           ;	Code Protection bit
  3198                           ;	CP = OFF, Program memory code protection is disabled
  3199                           ;	Data Code Protection bit
  3200                           ;	CPD = OFF, Data memory code protection is disabled
  3201                           ;	Brown Out Reset Selection bits
  3202                           ;	BOREN = OFF, BOR disabled
  3203                           ;	Internal External Switchover bit
  3204                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3205                           ;	Fail-Safe Clock Monitor Enabled bit
  3206                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3207                           ;	Low Voltage Programming Enable bit
  3208                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3209                           ;	In-Circuit Debugger Mode bit
  3210                           ;	DEBUG = 0x1, unprogrammed default
  3211  2007                     	org	8199
  3212  2007  20D4               	dw	8404
  3213                           
  3214                           ;Config register CONFIG2 @ 0x2008
  3215                           ;	Brown-out Reset Selection bit
  3216                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3217                           ;	Flash Program Memory Self Write Enable bits
  3218                           ;	WRT = OFF, Write protection off
  3219  2008                     	org	8200
  3220  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     18      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _first_send->_send_hora
    _first_send->_send_min
    _first_send->_send_seg
    _Setup->_initOsc
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2370
                                             17 BANK0      1     1      0
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                         _first_send
 ---------------------------------------------------------------------------------
 (1) _first_send                                           0     0      0       0
                          _send_hora
                           _send_min
                           _send_seg
 ---------------------------------------------------------------------------------
 (2) _send_seg                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_min                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_hora                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      22
                            _SET_RXT
                            _SET_TXR
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _SET_RXT
     _SET_TXR
     _initOsc
   _first_send
     _send_hora
     _send_min
     _send_seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 18:46:56 2021

                                _C 007A                                  _H 0020  
                                _L 003E                                  _M 0079  
                                _Z 003D                                  _b 0036  
                                _g 0035                                  _h 0039  
                                _m 0038                                  _q 003A  
                                _r 003B                                  _s 0037  
                                _z 003C                                 fsr 0004  
                              l200 0310                                l210 02A9  
                              l205 0299                                l214 02B2  
                              l222 025B                                l303 034A  
                              l231 0278                                l312 0410  
                              l321 03FE                                l217 02D2  
                              l306 03DD                                l234 0294  
                              l315 0419                                l227 026B  
                              l324 03A0                                l309 03E9  
                              l325 03A3                                l165 037A  
                              l326 03AA                                l318 0407  
                              l270 021B                                l255 03DC  
                              l271 0221                                l168 01FA  
                              l272 0227                                l264 01FD  
                              l273 022D                                l265 0255  
                              l193 02E7                                l177 03CD  
                              l258 03F4                                l274 0256  
                              l266 0203                                l451 013D  
                              l267 0209                                l268 020F  
                              l188 02D7                                l269 0215  
                              l197 02F0                                _GIE 005F  
                              u500 0261                                u501 0260  
                              u510 0271                                u511 0270  
                              u520 027E                                u521 027D  
                              u530 029F                                u531 029E  
                              u540 02AF                                u541 02AE  
                              u550 02B8                                u551 02B7  
                              u560 02DD                                u705 01A3  
                              u561 02DC                                u570 02ED  
                              u715 01B5                                u571 02EC  
                              u580 02F6                                u725 01C7  
                              u581 02F5                                u750 03B0  
                              u735 01D9                                u751 03AF  
                              u760 03BC                                u745 01EB  
                              u761 03BB                                u770 03C8  
                              u771 03C7                                u980 03E3  
                              u981 03E2                                u990 03E9  
                              u991 03E8                                _day 0032  
                              _hor 0031                                _min 0030  
                              _isr 013E                                _seg 002F  
                              _mou 0033                                indf 0000  
                             l2001 0289                               l2003 02C7  
                             l2005 0305                               l2007 023B  
                             l1401 03CE                               l1403 03D7  
                             l1411 0261                               l1405 03DB  
                             l1501 034B                               l1413 0268  
                             l1511 0361                               l1503 035D  
                             l1431 0296                               l1415 0271  
                             l1423 027F                               l1407 0257  
                             l1521 0368                               l1513 0364  
                             l1505 035E                               l1441 02B8  
                             l1433 029F                               l1417 0276  
                             l1409 0258                               l1523 0369  
                             l1515 0365                               l1507 035F  
                             l1451 02D3                               l1435 02A6  
                             l1525 036A                               l1517 0366  
                             l1509 0360                               l1461 02EE  
                             l1453 02D4                               l1445 02BD  
                             l1429 0295                               l1527 0370  
                             l1519 0367                               l1463 02F6  
                             l1455 02DD                               l1439 02B0  
                             l1393 0233                               l1529 0375  
                             l1457 02E4                               l1811 00E8  
                             l1467 02FB                               l1581 01C4  
                             l1821 0117                               l1813 00EB  
                             l1805 03DD                               l1389 01FC  
                             l1901 006A                               l1583 01D1  
                             l1575 019E                               l1823 0125  
                             l1815 00F8                               l1807 03E3  
                             l1399 03EA                               l1591 03B0  
                             l1911 00B5                               l1903 0079  
                             l1585 01E3                               l1577 01AD  
                             l1825 0126                               l1817 00FC  
                             l1809 00D6                               l1841 0348  
                             l1833 0311                               l1593 03B5  
                             l1913 00C3                               l1905 0088  
                             l1587 01E8                               l1579 01B2  
                             l1827 012F                               l1819 0105  
                             l1843 0349                               l1835 0315  
                             l1851 03FA                               l1595 03BC  
                             l1915 00C8                               l1907 0097  
                             l1829 0135                               l1837 0318  
                             l1861 0388                               l1853 0411  
                             l1845 0408                               l1597 03C1  
                             l1589 03AB                               l1917 00CD  
                             l1909 00A6                               l1839 0347  
                             l1863 0391                               l1855 0416  
                             l1847 040D                               l1599 03C8  
                             l1865 0396                               l1857 037B  
                             l1873 03FF                               l1849 03F5  
                             l1881 0027                               l1867 039C  
                             l1859 0380                               l1875 0404  
                             l1891 003C                               l1883 0028  
                             l1869 03A4                               l1893 0045  
                             l1885 0029                               l1877 001F  
                             l1895 004D                               l1887 002A  
                             l1879 0024                               l1897 0052  
                             l1889 0037                               l1899 005B  
                             ?_isr 0070                               u1000 00E8  
                             u1001 00E7                               u1020 00FC  
                             u1021 00FB                               u1015 00ED  
                             u1040 0117                               u1041 0116  
                             u1035 00FE                               u1060 0135  
                             u1061 0134                               u1045 0113  
                             u1070 0328                               u1055 0127  
                             u1080 039C                               u1081 039B  
                             u1075 0323                               _PEIE 005E  
                             _TMR0 0001                    __end_of_SET_RXT 03F5  
                  __end_of_SET_TXR 03DD   __end_of_I2C_Master_RepeatedStart 041A  
                             _main 001F                               _temp 0078  
                             _week 002E                               _year 002D  
                             btemp 007E                               start 000C  
                            ??_isr 0070                   ?_I2C_Master_Init 004C  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 013E  
                            i1l143 0185                              i1l154 0197  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u80_20 0156  
                            u80_21 0155                              u81_20 015D  
                            u81_21 015C                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u82_20 0164  
                            _SSPIF 0063                              u82_21 0163  
                            u83_20 016B                              u83_21 016A  
                            u84_20 0173                              u84_21 0172  
                            u85_20 017B                              u85_21 017A  
                            u86_20 0183                              u78_20 0144  
                            u86_21 0182                              u78_21 0143  
                            u87_20 0189                              u79_20 014F  
                            u87_21 0188                              u79_21 014E  
                            u88_20 0196                              u88_21 0195  
                            _TXREG 0019                              _Setup 034B  
                            _day_t 0026                              _day_u 002B  
                  __end_of_initOsc 0257                              _empty 0034  
                            _hor_t 0025                              _hor_u 002A  
                            _min_t 0024                              _min_u 0029  
                            _seg_t 0023                              _seg_u 0028  
                            _mou_t 0027                              _mou_u 002C  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 00D6                             ??_main 0050  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
                           ?_Setup 0070                 ??_I2C_Master_Start 0073  
                        ??_SET_RXT 0073                          ??_SET_TXR 0073  
               ??_I2C_Master_Write 0075                        initOsc@IRCF 0075  
                           _ANSELH 0189                             _CONVET 019E  
                           i1l1601 013E                             i1l1611 0150  
                           i1l1603 0144                             i1l1621 0164  
                           i1l1613 0156                             i1l1605 0145  
                           i1l1631 0175                             i1l1623 0165  
                           i1l1615 0157                             i1l1607 0149  
                           i1l1641 018B                             i1l1633 017B  
                           i1l1625 016B                             i1l1617 015D  
                           i1l1609 014F                             i1l1643 018C  
                           i1l1635 017D                             i1l1627 016D  
                           i1l1619 015E                             i1l1645 0190  
                           i1l1637 0183                             i1l1629 0173  
                           i1l1647 0196                             i1l1639 0189  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0411                          ??___lldiv 0073  
                 __end_of_send_min 02D3                   __end_of_send_seg 0295  
                        ??_initOsc 0073                             saved_w 007E  
          __end_of__initialization 001B                     __pcstackCOMMON 0070  
                    __end_of_Setup 037B                     _OPTION_REGbits 0081  
                          ??_Setup 0076                            ?_CONVET 0070  
                       __pbssBANK0 0020                         __pmaintext 001F  
                       __pintentry 0004                 __size_of_send_hora 003E  
                          _SET_RXT 03EA                            _SET_TXR 03CE  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                  __size_of_CONVET 005D                         _first_send 03AB  
                        ?_send_min 0070                          ?_send_seg 0070  
                          ___lldiv 00D6                            __ptext1 03AB  
                          __ptext2 0257                            __ptext3 0295  
                          __ptext4 02D3                            __ptext5 034B  
                          __ptext6 01FB                            __ptext7 03CE  
                          __ptext8 03EA                            __ptext9 03F5  
                          _initOsc 01FB                       __size_of_isr 0060  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          clrloop0 041B               end_of_initialization 001B  
       ??_I2C_Master_RepeatedStart 0073                  __end_of_send_hora 0311  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 003F                         ??_send_min 0073  
                       ??_send_seg 0073                    ___lldiv@counter 004B  
                        _RCSTAbits 0018                   I2C_Master_Init@c 004C  
                 I2C_Master_Read@a 0073                          _PORTAbits 0005  
                        _TRISCbits 0087                     __end_of_CONVET 01FB  
                        _TXSTAbits 0098                        ?_first_send 0070  
                      _BAUDCTLbits 0187                start_initialization 000F  
                      __end_of_isr 019E                           ??_CONVET 0073  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                      __pbssCOMMON 0078                          ___latbits 0002  
              __size_of_first_send 0023                      __pcstackBANK0 003F  
                         ?_SET_RXT 0070                           ?_SET_TXR 0070  
                 _I2C_Master_Start 0408                   _I2C_Master_Write 03F5  
                __size_of_send_min 003E                  __size_of_send_seg 003E  
                         ?___lldiv 003F                           ?_initOsc 0070  
                   __size_of_Setup 0030                  interrupt_function 0004  
                        clear_ram0 041A                           _PIE1bits 008C  
                        _send_hora 02D3                           _PIR1bits 000C  
              I2C_Master_Read@temp 003F                   __size_of_SET_RXT 000B  
                 __size_of_SET_TXR 000F                       ??_first_send 0075  
                       ?_send_hora 0070  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                  _I2C_Master_Init 0311                    _I2C_Master_Read 037B  
                  _I2C_Master_Wait 03DD                    _I2C_Master_Stop 03FF  
                 __size_of_initOsc 005C                 __end_of_first_send 03CE  
                         __ptext10 03FF                           __ptext11 0408  
                         __ptext12 0411                           __ptext13 037B  
                         __ptext14 03DD                           __ptext15 0311  
                         __ptext16 00D6                           __ptext17 019E  
                         __ptext18 013E                      __size_of_main 00B7  
                         _send_min 0295                           _send_seg 0257  
                         _segundos 0022           __end_of_I2C_Master_Start 0411  
         __end_of_I2C_Master_Write 03FF                         _INTCONbits 000B  
                         intlevel1 0000                   ___lldiv@dividend 0043  
                      ??_send_hora 0073                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 034B            __end_of_I2C_Master_Read 03AB  
          __end_of_I2C_Master_Wait 03EA            __end_of_I2C_Master_Stop 0408  
                 ___lldiv@quotient 0047                  I2C_Master_Write@d 0073  
                      _SSPCON2bits 0091  
