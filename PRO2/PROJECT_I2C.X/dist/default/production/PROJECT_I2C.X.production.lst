

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 02:14:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0018                     _RCSTAbits	set	24
   460  0019                     _TXREG	set	25
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0007                     _PORTC	set	7
   464  0006                     _PORTB	set	6
   465  0005                     _PORTA	set	5
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0005                     _PORTAbits	set	5
   469  001A                     _RCREG	set	26
   470  000C                     _PIR1bits	set	12
   471  0063                     _SSPIF	set	99
   472  005E                     _PEIE	set	94
   473  005F                     _GIE	set	95
   474  0091                     _SSPCON2bits	set	145
   475  0087                     _TRISCbits	set	135
   476  0094                     _SSPSTAT	set	148
   477  0093                     _SSPADD	set	147
   478  0091                     _SSPCON2	set	145
   479  008F                     _OSCCONbits	set	143
   480  009A                     _SPBRGH	set	154
   481  0099                     _SPBRG	set	153
   482  0098                     _TXSTAbits	set	152
   483  0081                     _OPTION_REGbits	set	129
   484  008C                     _PIE1bits	set	140
   485  0089                     _TRISE	set	137
   486  0088                     _TRISD	set	136
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	cinit
   498  000F                     start_initialization:	
   499                           ; #config settings
   500                           
   501  000F                     __initialization:
   502                           
   503                           ; Clear objects allocated to COMMON
   504  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   505  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   506  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  0012  1383               	bcf	3,7	;select IRP bank0
   510  0013  3020               	movlw	low __pbssBANK0
   511  0014  0084               	movwf	4
   512  0015  303C               	movlw	low (__pbssBANK0+28)
   513  0016  120A  118A  244A  120A  118A  	fcall	clear_ram0
   514  001B                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  001B                     __end_of__initialization:
   518  001B  0183               	clrf	3
   519  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0078                     __pbssCOMMON:
   523  0078                     _temp:
   524  0078                     	ds	1
   525  0079                     _M:
   526  0079                     	ds	1
   527  007A                     _C:
   528  007A                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0020                     __pbssBANK0:
   532  0020                     _H:
   533  0020                     	ds	2
   534  0022                     _seg_t:
   535  0022                     	ds	1
   536  0023                     _min_t:
   537  0023                     	ds	1
   538  0024                     _hor_t:
   539  0024                     	ds	1
   540  0025                     _day_t:
   541  0025                     	ds	1
   542  0026                     _mou_t:
   543  0026                     	ds	1
   544  0027                     _seg_u:
   545  0027                     	ds	1
   546  0028                     _min_u:
   547  0028                     	ds	1
   548  0029                     _hor_u:
   549  0029                     	ds	1
   550  002A                     _day_u:
   551  002A                     	ds	1
   552  002B                     _mou_u:
   553  002B                     	ds	1
   554  002C                     _year:
   555  002C                     	ds	1
   556  002D                     _week:
   557  002D                     	ds	1
   558  002E                     _seg:
   559  002E                     	ds	1
   560  002F                     _min:
   561  002F                     	ds	1
   562  0030                     _hor:
   563  0030                     	ds	1
   564  0031                     _day:
   565  0031                     	ds	1
   566  0032                     _mou:
   567  0032                     	ds	1
   568  0033                     _s:
   569  0033                     	ds	1
   570  0034                     _m:
   571  0034                     	ds	1
   572  0035                     _h:
   573  0035                     	ds	1
   574  0036                     _q:
   575  0036                     	ds	1
   576  0037                     _r:
   577  0037                     	ds	1
   578  0038                     _z:
   579  0038                     	ds	1
   580  0039                     _Z:
   581  0039                     	ds	1
   582  003A                     _b:
   583  003A                     	ds	1
   584  003B                     _L:
   585  003B                     	ds	1
   586                           
   587                           	psect	clrtext
   588  044A                     clear_ram0:	
   589                           ;	Called with FSR containing the base address, and
   590                           ;	W with the last address+1
   591                           
   592  044A  0064               	clrwdt	;clear the watchdog before getting into this loop
   593  044B                     clrloop0:
   594  044B  0180               	clrf	0	;clear RAM location pointed to by FSR
   595  044C  0A84               	incf	4,f	;increment pointer
   596  044D  0604               	xorwf	4,w	;XOR with final address
   597  044E  1903               	btfsc	3,2	;have we reached the end yet?
   598  044F  3400               	retlw	0	;all done for this memory range, return
   599  0450  0604               	xorwf	4,w	;XOR again to restore value
   600  0451  2C4B               	goto	clrloop0	;do the next byte
   601                           
   602                           	psect	cstackCOMMON
   603  0070                     __pcstackCOMMON:
   604  0070                     ?_Setup:
   605  0070                     ?_I2C_Master_Start:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_I2C_Master_RepeatedStart:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_I2C_Master_Stop:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_CONVET:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_forced_send:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_initOsc:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_SET_RXT:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_SET_TXR:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_send_seg:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_send_min:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_send_hora:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_isr:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_isr:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650                           
   651                           ; 1 bytes @ 0x0
   652  0070                     	ds	3
   653  0073                     ??_I2C_Master_Start:
   654  0073                     ?_I2C_Master_Write:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ??_I2C_Master_RepeatedStart:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_I2C_Master_Stop:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_CONVET:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_initOsc:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??_SET_RXT:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ??_SET_TXR:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ??_send_seg:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ??_send_min:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ??_send_hora:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ??_I2C_Master_Wait:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     ??___lldiv:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ?_I2C_Master_Read:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     I2C_Master_Write@d:	
   694                           ; 2 bytes @ 0x3
   695                           
   696  0073                     I2C_Master_Read@a:	
   697                           ; 2 bytes @ 0x3
   698                           
   699                           
   700                           ; 2 bytes @ 0x3
   701  0073                     	ds	1
   702  0074                     ??_I2C_Master_Init:
   703                           
   704                           ; 1 bytes @ 0x4
   705  0074                     	ds	1
   706  0075                     ??_I2C_Master_Write:
   707  0075                     ??_I2C_Master_Read:	
   708                           ; 1 bytes @ 0x5
   709                           
   710  0075                     ??_forced_send:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     initOsc@IRCF:	
   714                           ; 1 bytes @ 0x5
   715                           
   716                           
   717                           ; 1 bytes @ 0x5
   718  0075                     	ds	1
   719  0076                     ??_Setup:
   720                           
   721                           ; 1 bytes @ 0x6
   722  0076                     	ds	2
   723                           
   724                           	psect	cstackBANK0
   725  003C                     __pcstackBANK0:
   726  003C                     ?___lldiv:
   727  003C                     I2C_Master_Read@temp:	
   728                           ; 4 bytes @ 0x0
   729                           
   730  003C                     ___lldiv@divisor:	
   731                           ; 2 bytes @ 0x0
   732                           
   733                           
   734                           ; 4 bytes @ 0x0
   735  003C                     	ds	4
   736  0040                     ___lldiv@dividend:
   737                           
   738                           ; 4 bytes @ 0x4
   739  0040                     	ds	4
   740  0044                     ___lldiv@quotient:
   741                           
   742                           ; 4 bytes @ 0x8
   743  0044                     	ds	4
   744  0048                     ___lldiv@counter:
   745                           
   746                           ; 1 bytes @ 0xC
   747  0048                     	ds	1
   748  0049                     ?_I2C_Master_Init:
   749  0049                     I2C_Master_Init@c:	
   750                           ; 1 bytes @ 0xD
   751                           
   752                           
   753                           ; 4 bytes @ 0xD
   754  0049                     	ds	4
   755  004D                     ??_main:
   756                           
   757                           ; 1 bytes @ 0x11
   758  004D                     	ds	1
   759                           
   760                           	psect	maintext
   761  001F                     __pmaintext:	
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 81 in file "MAIN_PRO.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : B00/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       1       0       0       0
   784 ;;      Totals:         0       1       0       0       0
   785 ;;Total ram usage:        1 bytes
   786 ;; Hardware stack levels required when called:    3
   787 ;; This function calls:
   788 ;;		_CONVET
   789 ;;		_I2C_Master_Init
   790 ;;		_I2C_Master_Read
   791 ;;		_I2C_Master_RepeatedStart
   792 ;;		_I2C_Master_Start
   793 ;;		_I2C_Master_Stop
   794 ;;		_I2C_Master_Write
   795 ;;		_Setup
   796 ;;		_forced_send
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _main
   804  001F                     _main:
   805  001F                     l1835:	
   806                           ;incstack = 0
   807                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   808                           
   809                           
   810                           ;MAIN_PRO.c: 82:     Setup();
   811  001F  120A  118A  239E  120A  118A  	fcall	_Setup
   812  0024                     l1837:
   813                           
   814                           ;MAIN_PRO.c: 83:     PORTAbits.RA0=1;
   815  0024  1283               	bcf	3,5	;RP0=0, select bank0
   816  0025  1303               	bcf	3,6	;RP1=0, select bank0
   817  0026  1405               	bsf	5,0	;volatile
   818  0027                     l1839:
   819                           
   820                           ;MAIN_PRO.c: 84:     PORTAbits.RA1=1;
   821  0027  1485               	bsf	5,1	;volatile
   822  0028                     l1841:
   823                           
   824                           ;MAIN_PRO.c: 85:     PORTAbits.RA0=0;
   825  0028  1005               	bcf	5,0	;volatile
   826  0029                     l1843:
   827                           
   828                           ;MAIN_PRO.c: 86:     PORTAbits.RA1=0;
   829  0029  1085               	bcf	5,1	;volatile
   830  002A                     l1845:
   831                           
   832                           ;MAIN_PRO.c: 87:     I2C_Master_Init(100000);
   833  002A  3000               	movlw	0
   834  002B  00CC               	movwf	I2C_Master_Init@c+3
   835  002C  3001               	movlw	1
   836  002D  00CB               	movwf	I2C_Master_Init@c+2
   837  002E  3086               	movlw	134
   838  002F  00CA               	movwf	I2C_Master_Init@c+1
   839  0030  30A0               	movlw	160
   840  0031  00C9               	movwf	I2C_Master_Init@c
   841  0032  120A  118A  2364  120A  118A  	fcall	_I2C_Master_Init
   842  0037                     l1847:
   843                           
   844                           ;MAIN_PRO.c: 92:         I2C_Master_Start();
   845  0037  120A  118A  2438  120A  118A  	fcall	_I2C_Master_Start
   846  003C                     l1849:
   847                           
   848                           ;MAIN_PRO.c: 93:         I2C_Master_Write(0xD0);
   849  003C  30D0               	movlw	208
   850  003D  00F3               	movwf	I2C_Master_Write@d
   851  003E  3000               	movlw	0
   852  003F  00F4               	movwf	I2C_Master_Write@d+1
   853  0040  120A  118A  2425  120A  118A  	fcall	_I2C_Master_Write
   854  0045                     l1851:
   855                           
   856                           ;MAIN_PRO.c: 94:         I2C_Master_Write(0x00);
   857  0045  3000               	movlw	0
   858  0046  00F3               	movwf	I2C_Master_Write@d
   859  0047  00F4               	movwf	I2C_Master_Write@d+1
   860  0048  120A  118A  2425  120A  118A  	fcall	_I2C_Master_Write
   861  004D                     l1853:
   862                           
   863                           ;MAIN_PRO.c: 95:         I2C_Master_RepeatedStart();
   864  004D  120A  118A  2441  120A  118A  	fcall	_I2C_Master_RepeatedStart
   865  0052                     l1855:
   866                           
   867                           ;MAIN_PRO.c: 96:         I2C_Master_Write(0xD1);
   868  0052  30D1               	movlw	209
   869  0053  00F3               	movwf	I2C_Master_Write@d
   870  0054  3000               	movlw	0
   871  0055  00F4               	movwf	I2C_Master_Write@d+1
   872  0056  120A  118A  2425  120A  118A  	fcall	_I2C_Master_Write
   873  005B                     l1857:
   874                           
   875                           ;MAIN_PRO.c: 97:         seg = I2C_Master_Read(1);
   876  005B  3001               	movlw	1
   877  005C  00F3               	movwf	I2C_Master_Read@a
   878  005D  3000               	movlw	0
   879  005E  00F4               	movwf	I2C_Master_Read@a+1
   880  005F  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   881  0064  0873               	movf	?_I2C_Master_Read,w
   882  0065  1283               	bcf	3,5	;RP0=0, select bank0
   883  0066  1303               	bcf	3,6	;RP1=0, select bank0
   884  0067  00CD               	movwf	??_main
   885  0068  084D               	movf	??_main,w
   886  0069  00AE               	movwf	_seg
   887  006A                     l1859:
   888                           
   889                           ;MAIN_PRO.c: 98:         min = I2C_Master_Read(1);
   890  006A  3001               	movlw	1
   891  006B  00F3               	movwf	I2C_Master_Read@a
   892  006C  3000               	movlw	0
   893  006D  00F4               	movwf	I2C_Master_Read@a+1
   894  006E  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   895  0073  0873               	movf	?_I2C_Master_Read,w
   896  0074  1283               	bcf	3,5	;RP0=0, select bank0
   897  0075  1303               	bcf	3,6	;RP1=0, select bank0
   898  0076  00CD               	movwf	??_main
   899  0077  084D               	movf	??_main,w
   900  0078  00AF               	movwf	_min
   901  0079                     l1861:
   902                           
   903                           ;MAIN_PRO.c: 99:         hor = I2C_Master_Read(1);
   904  0079  3001               	movlw	1
   905  007A  00F3               	movwf	I2C_Master_Read@a
   906  007B  3000               	movlw	0
   907  007C  00F4               	movwf	I2C_Master_Read@a+1
   908  007D  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   909  0082  0873               	movf	?_I2C_Master_Read,w
   910  0083  1283               	bcf	3,5	;RP0=0, select bank0
   911  0084  1303               	bcf	3,6	;RP1=0, select bank0
   912  0085  00CD               	movwf	??_main
   913  0086  084D               	movf	??_main,w
   914  0087  00B0               	movwf	_hor
   915  0088                     l1863:
   916                           
   917                           ;MAIN_PRO.c: 100:         week = I2C_Master_Read(1);
   918  0088  3001               	movlw	1
   919  0089  00F3               	movwf	I2C_Master_Read@a
   920  008A  3000               	movlw	0
   921  008B  00F4               	movwf	I2C_Master_Read@a+1
   922  008C  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   923  0091  0873               	movf	?_I2C_Master_Read,w
   924  0092  1283               	bcf	3,5	;RP0=0, select bank0
   925  0093  1303               	bcf	3,6	;RP1=0, select bank0
   926  0094  00CD               	movwf	??_main
   927  0095  084D               	movf	??_main,w
   928  0096  00AD               	movwf	_week
   929  0097                     l1865:
   930                           
   931                           ;MAIN_PRO.c: 101:         day = I2C_Master_Read(1);
   932  0097  3001               	movlw	1
   933  0098  00F3               	movwf	I2C_Master_Read@a
   934  0099  3000               	movlw	0
   935  009A  00F4               	movwf	I2C_Master_Read@a+1
   936  009B  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   937  00A0  0873               	movf	?_I2C_Master_Read,w
   938  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   939  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   940  00A3  00CD               	movwf	??_main
   941  00A4  084D               	movf	??_main,w
   942  00A5  00B1               	movwf	_day
   943  00A6                     l1867:
   944                           
   945                           ;MAIN_PRO.c: 102:         mou = I2C_Master_Read(1);
   946  00A6  3001               	movlw	1
   947  00A7  00F3               	movwf	I2C_Master_Read@a
   948  00A8  3000               	movlw	0
   949  00A9  00F4               	movwf	I2C_Master_Read@a+1
   950  00AA  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   951  00AF  0873               	movf	?_I2C_Master_Read,w
   952  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   953  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   954  00B2  00CD               	movwf	??_main
   955  00B3  084D               	movf	??_main,w
   956  00B4  00B2               	movwf	_mou
   957  00B5                     l1869:
   958                           
   959                           ;MAIN_PRO.c: 103:         year= I2C_Master_Read(0);
   960  00B5  3000               	movlw	0
   961  00B6  00F3               	movwf	I2C_Master_Read@a
   962  00B7  00F4               	movwf	I2C_Master_Read@a+1
   963  00B8  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Read
   964  00BD  0873               	movf	?_I2C_Master_Read,w
   965  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   966  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   967  00C0  00CD               	movwf	??_main
   968  00C1  084D               	movf	??_main,w
   969  00C2  00AC               	movwf	_year
   970  00C3                     l1871:
   971                           
   972                           ;MAIN_PRO.c: 104:         I2C_Master_Stop();
   973  00C3  120A  118A  242F  120A  118A  	fcall	_I2C_Master_Stop
   974  00C8                     l1873:
   975                           
   976                           ;MAIN_PRO.c: 105:         CONVET();
   977  00C8  120A  118A  21A1  120A  118A  	fcall	_CONVET
   978  00CD                     l1875:
   979                           
   980                           ;MAIN_PRO.c: 106:         forced_send();
   981  00CD  120A  118A  213E  120A  118A  	fcall	_forced_send
   982  00D2  2837               	goto	l1847
   983  00D3  120A  118A  280C   	ljmp	start
   984  00D6                     __end_of_main:
   985                           
   986                           	psect	text1
   987  013E                     __ptext1:	
   988 ;; *************** function _forced_send *****************
   989 ;; Defined at:
   990 ;;		line 183 in file "MAIN_PRO.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          1       0       0       0       0
  1007 ;;      Totals:         1       0       0       0       0
  1008 ;;Total ram usage:        1 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    2
  1011 ;; This function calls:
  1012 ;;		_send_hora
  1013 ;;		_send_min
  1014 ;;		_send_seg
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function _forced_send
  1022  013E                     _forced_send:
  1023  013E                     l1563:	
  1024                           ;incstack = 0
  1025                           ; Regs used in _forced_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1026                           
  1027                           
  1028                           ;MAIN_PRO.c: 184:     if (C==1 && M <=19 && H < 1199){
  1029  013E  037A               	decf	_C,w
  1030  013F  1D03               	btfss	3,2
  1031  0140  2942               	goto	u711
  1032  0141  2943               	goto	u710
  1033  0142                     u711:
  1034  0142  295D               	goto	l1573
  1035  0143                     u710:
  1036  0143                     l1565:
  1037  0143  3014               	movlw	20
  1038  0144  0279               	subwf	_M,w
  1039  0145  1803               	skipnc
  1040  0146  2948               	goto	u721
  1041  0147  2949               	goto	u720
  1042  0148                     u721:
  1043  0148  295D               	goto	l1573
  1044  0149                     u720:
  1045  0149                     l1567:
  1046  0149  3004               	movlw	4
  1047  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1048  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1049  014C  0221               	subwf	_H+1,w
  1050  014D  30AF               	movlw	175
  1051  014E  1903               	skipnz
  1052  014F  0220               	subwf	_H,w
  1053  0150  1803               	skipnc
  1054  0151  2953               	goto	u731
  1055  0152  2954               	goto	u730
  1056  0153                     u731:
  1057  0153  295D               	goto	l1573
  1058  0154                     u730:
  1059  0154                     l1569:
  1060                           
  1061                           ;MAIN_PRO.c: 185:         send_seg();
  1062  0154  120A  118A  22AA  120A  118A  	fcall	_send_seg
  1063  0159                     l1571:
  1064                           
  1065                           ;MAIN_PRO.c: 186:         M++;}
  1066  0159  3001               	movlw	1
  1067  015A  00F5               	movwf	??_forced_send
  1068  015B  0875               	movf	??_forced_send,w
  1069  015C  07F9               	addwf	_M,f
  1070  015D                     l1573:
  1071                           
  1072                           ;MAIN_PRO.c: 187:     if (C==1 && M==19 && H < 1199){
  1073  015D  037A               	decf	_C,w
  1074  015E  1D03               	btfss	3,2
  1075  015F  2961               	goto	u741
  1076  0160  2962               	goto	u740
  1077  0161                     u741:
  1078  0161  2981               	goto	l1585
  1079  0162                     u740:
  1080  0162                     l1575:
  1081  0162  3013               	movlw	19
  1082  0163  0679               	xorwf	_M,w
  1083  0164  1D03               	btfss	3,2
  1084  0165  2967               	goto	u751
  1085  0166  2968               	goto	u750
  1086  0167                     u751:
  1087  0167  2981               	goto	l1585
  1088  0168                     u750:
  1089  0168                     l1577:
  1090  0168  3004               	movlw	4
  1091  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1092  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1093  016B  0221               	subwf	_H+1,w
  1094  016C  30AF               	movlw	175
  1095  016D  1903               	skipnz
  1096  016E  0220               	subwf	_H,w
  1097  016F  1803               	skipnc
  1098  0170  2972               	goto	u761
  1099  0171  2973               	goto	u760
  1100  0172                     u761:
  1101  0172  2981               	goto	l1585
  1102  0173                     u760:
  1103  0173                     l1579:
  1104                           
  1105                           ;MAIN_PRO.c: 188:         send_min();
  1106  0173  120A  118A  22E8  120A  118A  	fcall	_send_min
  1107  0178                     l1581:
  1108                           
  1109                           ;MAIN_PRO.c: 189:         M=0;
  1110  0178  01F9               	clrf	_M
  1111  0179                     l1583:
  1112                           
  1113                           ;MAIN_PRO.c: 190:         H++;}
  1114  0179  3001               	movlw	1
  1115  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1116  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1117  017C  07A0               	addwf	_H,f
  1118  017D  1803               	skipnc
  1119  017E  0AA1               	incf	_H+1,f
  1120  017F  3000               	movlw	0
  1121  0180  07A1               	addwf	_H+1,f
  1122  0181                     l1585:
  1123                           
  1124                           ;MAIN_PRO.c: 191:     if (C==1 && M==19 && H==1199){
  1125  0181  037A               	decf	_C,w
  1126  0182  1D03               	btfss	3,2
  1127  0183  2985               	goto	u771
  1128  0184  2986               	goto	u770
  1129  0185                     u771:
  1130  0185  29A0               	goto	l173
  1131  0186                     u770:
  1132  0186                     l1587:
  1133  0186  3013               	movlw	19
  1134  0187  0679               	xorwf	_M,w
  1135  0188  1D03               	btfss	3,2
  1136  0189  298B               	goto	u781
  1137  018A  298C               	goto	u780
  1138  018B                     u781:
  1139  018B  29A0               	goto	l173
  1140  018C                     u780:
  1141  018C                     l1589:
  1142  018C  30AF               	movlw	175
  1143  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1144  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1145  018F  0620               	xorwf	_H,w
  1146  0190  3004               	movlw	4
  1147  0191  1903               	skipnz
  1148  0192  0621               	xorwf	_H+1,w
  1149  0193  1D03               	btfss	3,2
  1150  0194  2996               	goto	u791
  1151  0195  2997               	goto	u790
  1152  0196                     u791:
  1153  0196  29A0               	goto	l173
  1154  0197                     u790:
  1155  0197                     l1591:
  1156                           
  1157                           ;MAIN_PRO.c: 192:         send_hora();
  1158  0197  120A  118A  2326  120A  118A  	fcall	_send_hora
  1159  019C                     l1593:
  1160                           
  1161                           ;MAIN_PRO.c: 193:         H=0;}
  1162  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1163  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1164  019E  01A0               	clrf	_H
  1165  019F  01A1               	clrf	_H+1
  1166  01A0                     l173:
  1167  01A0  0008               	return
  1168  01A1                     __end_of_forced_send:
  1169                           
  1170                           	psect	text2
  1171  02AA                     __ptext2:	
  1172 ;; *************** function _send_seg *****************
  1173 ;; Defined at:
  1174 ;;		line 237 in file "MAIN_PRO.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0
  1190 ;;      Temps:          2       0       0       0       0
  1191 ;;      Totals:         2       0       0       0       0
  1192 ;;Total ram usage:        2 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_forced_send
  1199 ;;		_first_send
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _send_seg
  1205  02AA                     _send_seg:
  1206  02AA                     l1381:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _send_seg: [wreg-fsr0h+status,2+status,0]
  1209                           
  1210                           
  1211                           ;MAIN_PRO.c: 239:     switch (s){
  1212  02AA  2AD2               	goto	l1397
  1213  02AB                     l1383:
  1214                           
  1215                           ;MAIN_PRO.c: 241:             TXREG = (seg_t+0x30);
  1216  02AB  0822               	movf	_seg_t,w
  1217  02AC  3E30               	addlw	48
  1218  02AD  0099               	movwf	25	;volatile
  1219  02AE                     l212:	
  1220                           ;MAIN_PRO.c: 242:             while(!TXSTAbits.TRMT);
  1221                           
  1222  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1223  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1224  02B0  1C98               	btfss	24,1	;volatile
  1225  02B1  2AB3               	goto	u461
  1226  02B2  2AB4               	goto	u460
  1227  02B3                     u461:
  1228  02B3  2AAE               	goto	l212
  1229  02B4                     u460:
  1230  02B4                     l1385:
  1231                           
  1232                           ;MAIN_PRO.c: 243:             s++;
  1233  02B4  3001               	movlw	1
  1234  02B5  00F3               	movwf	??_send_seg
  1235  02B6  0873               	movf	??_send_seg,w
  1236  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1237  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1238  02B9  07B3               	addwf	_s,f
  1239                           
  1240                           ;MAIN_PRO.c: 244:             break;
  1241  02BA  2AE7               	goto	l224
  1242  02BB                     l1387:
  1243                           
  1244                           ;MAIN_PRO.c: 246:             TXREG = (seg_u+0x30);
  1245  02BB  0827               	movf	_seg_u,w
  1246  02BC  3E30               	addlw	48
  1247  02BD  0099               	movwf	25	;volatile
  1248  02BE                     l217:	
  1249                           ;MAIN_PRO.c: 247:             while(!TXSTAbits.TRMT);
  1250                           
  1251  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  1252  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  1253  02C0  1C98               	btfss	24,1	;volatile
  1254  02C1  2AC3               	goto	u471
  1255  02C2  2AC4               	goto	u470
  1256  02C3                     u471:
  1257  02C3  2ABE               	goto	l217
  1258  02C4                     u470:
  1259  02C4  2AB4               	goto	l1385
  1260  02C5                     l1391:
  1261                           
  1262                           ;MAIN_PRO.c: 251:             TXREG = (0x3A);
  1263  02C5  303A               	movlw	58
  1264  02C6  0099               	movwf	25	;volatile
  1265  02C7                     l221:	
  1266                           ;MAIN_PRO.c: 252:             while(!TXSTAbits.TRMT);
  1267                           
  1268  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1269  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1270  02C9  1C98               	btfss	24,1	;volatile
  1271  02CA  2ACC               	goto	u481
  1272  02CB  2ACD               	goto	u480
  1273  02CC                     u481:
  1274  02CC  2AC7               	goto	l221
  1275  02CD                     u480:
  1276  02CD                     l1393:
  1277                           
  1278                           ;MAIN_PRO.c: 253:             s=0;
  1279  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1280  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1281  02CF  01B3               	clrf	_s
  1282                           
  1283                           ;MAIN_PRO.c: 254:             C=0;
  1284  02D0  01FA               	clrf	_C
  1285                           
  1286                           ;MAIN_PRO.c: 255:             break;
  1287  02D1  2AE7               	goto	l224
  1288  02D2                     l1397:
  1289  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1290  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1291  02D4  0833               	movf	_s,w
  1292  02D5  00F3               	movwf	??_send_seg
  1293  02D6  01F4               	clrf	??_send_seg+1
  1294                           
  1295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1296                           ; Switch size 1, requested type "simple"
  1297                           ; Number of cases is 1, Range of values is 0 to 0
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte            4     3 (average)
  1301                           ; direct_byte           11     8 (fixed)
  1302                           ; jumptable            260     6 (fixed)
  1303                           ;	Chosen strategy is simple_byte
  1304  02D7  0874               	movf	??_send_seg+1,w
  1305  02D8  3A00               	xorlw	0	; case 0
  1306  02D9  1903               	skipnz
  1307  02DA  2ADC               	goto	l1959
  1308  02DB  2AE7               	goto	l224
  1309  02DC                     l1959:
  1310                           
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 3, Range of values is 0 to 2
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte           10     6 (average)
  1316                           ; direct_byte           17     8 (fixed)
  1317                           ; jumptable            260     6 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319  02DC  0873               	movf	??_send_seg,w
  1320  02DD  3A00               	xorlw	0	; case 0
  1321  02DE  1903               	skipnz
  1322  02DF  2AAB               	goto	l1383
  1323  02E0  3A01               	xorlw	1	; case 1
  1324  02E1  1903               	skipnz
  1325  02E2  2ABB               	goto	l1387
  1326  02E3  3A03               	xorlw	3	; case 2
  1327  02E4  1903               	skipnz
  1328  02E5  2AC5               	goto	l1391
  1329  02E6  2AE7               	goto	l224
  1330  02E7                     l224:
  1331  02E7  0008               	return
  1332  02E8                     __end_of_send_seg:
  1333                           
  1334                           	psect	text3
  1335  02E8                     __ptext3:	
  1336 ;; *************** function _send_min *****************
  1337 ;; Defined at:
  1338 ;;		line 216 in file "MAIN_PRO.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          2       0       0       0       0
  1355 ;;      Totals:         2       0       0       0       0
  1356 ;;Total ram usage:        2 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_forced_send
  1363 ;;		_first_send
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _send_min
  1369  02E8                     _send_min:
  1370  02E8                     l1403:	
  1371                           ;incstack = 0
  1372                           ; Regs used in _send_min: [wreg-fsr0h+status,2+status,0]
  1373                           
  1374                           
  1375                           ;MAIN_PRO.c: 218:     switch (m){
  1376  02E8  2B10               	goto	l1419
  1377  02E9                     l1405:
  1378                           
  1379                           ;MAIN_PRO.c: 220:              TXREG = (min_t+0x30);
  1380  02E9  0823               	movf	_min_t,w
  1381  02EA  3E30               	addlw	48
  1382  02EB  0099               	movwf	25	;volatile
  1383  02EC                     l195:	
  1384                           ;MAIN_PRO.c: 221:              while(!TXSTAbits.TRMT);
  1385                           
  1386  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1387  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  1388  02EE  1C98               	btfss	24,1	;volatile
  1389  02EF  2AF1               	goto	u491
  1390  02F0  2AF2               	goto	u490
  1391  02F1                     u491:
  1392  02F1  2AEC               	goto	l195
  1393  02F2                     u490:
  1394  02F2                     l1407:
  1395                           
  1396                           ;MAIN_PRO.c: 222:              m++;
  1397  02F2  3001               	movlw	1
  1398  02F3  00F3               	movwf	??_send_min
  1399  02F4  0873               	movf	??_send_min,w
  1400  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1401  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1402  02F7  07B4               	addwf	_m,f
  1403                           
  1404                           ;MAIN_PRO.c: 223:             break;
  1405  02F8  2B25               	goto	l207
  1406  02F9                     l1409:
  1407                           
  1408                           ;MAIN_PRO.c: 225:              TXREG = (min_u +0x30);
  1409  02F9  0828               	movf	_min_u,w
  1410  02FA  3E30               	addlw	48
  1411  02FB  0099               	movwf	25	;volatile
  1412  02FC                     l200:	
  1413                           ;MAIN_PRO.c: 226:              while(!TXSTAbits.TRMT);
  1414                           
  1415  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1416  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1417  02FE  1C98               	btfss	24,1	;volatile
  1418  02FF  2B01               	goto	u501
  1419  0300  2B02               	goto	u500
  1420  0301                     u501:
  1421  0301  2AFC               	goto	l200
  1422  0302                     u500:
  1423  0302  2AF2               	goto	l1407
  1424  0303                     l1413:
  1425                           
  1426                           ;MAIN_PRO.c: 230:             TXREG = (0x3A);
  1427  0303  303A               	movlw	58
  1428  0304  0099               	movwf	25	;volatile
  1429  0305                     l204:	
  1430                           ;MAIN_PRO.c: 231:             while(!TXSTAbits.TRMT);
  1431                           
  1432  0305  1683               	bsf	3,5	;RP0=1, select bank1
  1433  0306  1303               	bcf	3,6	;RP1=0, select bank1
  1434  0307  1C98               	btfss	24,1	;volatile
  1435  0308  2B0A               	goto	u511
  1436  0309  2B0B               	goto	u510
  1437  030A                     u511:
  1438  030A  2B05               	goto	l204
  1439  030B                     u510:
  1440  030B                     l1415:
  1441                           
  1442                           ;MAIN_PRO.c: 232:             m=0;
  1443  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1444  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1445  030D  01B4               	clrf	_m
  1446                           
  1447                           ;MAIN_PRO.c: 233:             C=0;
  1448  030E  01FA               	clrf	_C
  1449                           
  1450                           ;MAIN_PRO.c: 234:             break;
  1451  030F  2B25               	goto	l207
  1452  0310                     l1419:
  1453  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0312  0834               	movf	_m,w
  1456  0313  00F3               	movwf	??_send_min
  1457  0314  01F4               	clrf	??_send_min+1
  1458                           
  1459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1460                           ; Switch size 1, requested type "simple"
  1461                           ; Number of cases is 1, Range of values is 0 to 0
  1462                           ; switch strategies available:
  1463                           ; Name         Instructions Cycles
  1464                           ; simple_byte            4     3 (average)
  1465                           ; direct_byte           11     8 (fixed)
  1466                           ; jumptable            260     6 (fixed)
  1467                           ;	Chosen strategy is simple_byte
  1468  0315  0874               	movf	??_send_min+1,w
  1469  0316  3A00               	xorlw	0	; case 0
  1470  0317  1903               	skipnz
  1471  0318  2B1A               	goto	l1961
  1472  0319  2B25               	goto	l207
  1473  031A                     l1961:
  1474                           
  1475                           ; Switch size 1, requested type "simple"
  1476                           ; Number of cases is 3, Range of values is 0 to 2
  1477                           ; switch strategies available:
  1478                           ; Name         Instructions Cycles
  1479                           ; simple_byte           10     6 (average)
  1480                           ; direct_byte           17     8 (fixed)
  1481                           ; jumptable            260     6 (fixed)
  1482                           ;	Chosen strategy is simple_byte
  1483  031A  0873               	movf	??_send_min,w
  1484  031B  3A00               	xorlw	0	; case 0
  1485  031C  1903               	skipnz
  1486  031D  2AE9               	goto	l1405
  1487  031E  3A01               	xorlw	1	; case 1
  1488  031F  1903               	skipnz
  1489  0320  2AF9               	goto	l1409
  1490  0321  3A03               	xorlw	3	; case 2
  1491  0322  1903               	skipnz
  1492  0323  2B03               	goto	l1413
  1493  0324  2B25               	goto	l207
  1494  0325                     l207:
  1495  0325  0008               	return
  1496  0326                     __end_of_send_min:
  1497                           
  1498                           	psect	text4
  1499  0326                     __ptext4:	
  1500 ;; *************** function _send_hora *****************
  1501 ;; Defined at:
  1502 ;;		line 196 in file "MAIN_PRO.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0
  1518 ;;      Temps:          2       0       0       0       0
  1519 ;;      Totals:         2       0       0       0       0
  1520 ;;Total ram usage:        2 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_forced_send
  1527 ;;		_first_send
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _send_hora
  1533  0326                     _send_hora:
  1534  0326                     l1425:	
  1535                           ;incstack = 0
  1536                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0]
  1537                           
  1538                           
  1539                           ;MAIN_PRO.c: 198:     switch (h){
  1540  0326  2B4E               	goto	l1441
  1541  0327                     l1427:
  1542                           
  1543                           ;MAIN_PRO.c: 200:             TXREG = (hor_t+0x30);
  1544  0327  0824               	movf	_hor_t,w
  1545  0328  3E30               	addlw	48
  1546  0329  0099               	movwf	25	;volatile
  1547  032A                     l178:	
  1548                           ;MAIN_PRO.c: 201:             while(!TXSTAbits.TRMT);
  1549                           
  1550  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1551  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1552  032C  1C98               	btfss	24,1	;volatile
  1553  032D  2B2F               	goto	u521
  1554  032E  2B30               	goto	u520
  1555  032F                     u521:
  1556  032F  2B2A               	goto	l178
  1557  0330                     u520:
  1558  0330                     l1429:
  1559                           
  1560                           ;MAIN_PRO.c: 202:             h++;
  1561  0330  3001               	movlw	1
  1562  0331  00F3               	movwf	??_send_hora
  1563  0332  0873               	movf	??_send_hora,w
  1564  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0335  07B5               	addwf	_h,f
  1567                           
  1568                           ;MAIN_PRO.c: 203:             break;
  1569  0336  2B63               	goto	l190
  1570  0337                     l1431:
  1571                           
  1572                           ;MAIN_PRO.c: 205:             TXREG = (hor_u+0x30);
  1573  0337  0829               	movf	_hor_u,w
  1574  0338  3E30               	addlw	48
  1575  0339  0099               	movwf	25	;volatile
  1576  033A                     l183:	
  1577                           ;MAIN_PRO.c: 206:             while(!TXSTAbits.TRMT);
  1578                           
  1579  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1580  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1581  033C  1C98               	btfss	24,1	;volatile
  1582  033D  2B3F               	goto	u531
  1583  033E  2B40               	goto	u530
  1584  033F                     u531:
  1585  033F  2B3A               	goto	l183
  1586  0340                     u530:
  1587  0340  2B30               	goto	l1429
  1588  0341                     l1435:
  1589                           
  1590                           ;MAIN_PRO.c: 210:             TXREG = (0x3A);
  1591  0341  303A               	movlw	58
  1592  0342  0099               	movwf	25	;volatile
  1593  0343                     l187:	
  1594                           ;MAIN_PRO.c: 211:             while(!TXSTAbits.TRMT);
  1595                           
  1596  0343  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0344  1303               	bcf	3,6	;RP1=0, select bank1
  1598  0345  1C98               	btfss	24,1	;volatile
  1599  0346  2B48               	goto	u541
  1600  0347  2B49               	goto	u540
  1601  0348                     u541:
  1602  0348  2B43               	goto	l187
  1603  0349                     u540:
  1604  0349                     l1437:
  1605                           
  1606                           ;MAIN_PRO.c: 212:             h=0;
  1607  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1608  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1609  034B  01B5               	clrf	_h
  1610                           
  1611                           ;MAIN_PRO.c: 213:             C=0;
  1612  034C  01FA               	clrf	_C
  1613                           
  1614                           ;MAIN_PRO.c: 214:             break;
  1615  034D  2B63               	goto	l190
  1616  034E                     l1441:
  1617  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1618  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0350  0835               	movf	_h,w
  1620  0351  00F3               	movwf	??_send_hora
  1621  0352  01F4               	clrf	??_send_hora+1
  1622                           
  1623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1624                           ; Switch size 1, requested type "simple"
  1625                           ; Number of cases is 1, Range of values is 0 to 0
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte            4     3 (average)
  1629                           ; direct_byte           11     8 (fixed)
  1630                           ; jumptable            260     6 (fixed)
  1631                           ;	Chosen strategy is simple_byte
  1632  0353  0874               	movf	??_send_hora+1,w
  1633  0354  3A00               	xorlw	0	; case 0
  1634  0355  1903               	skipnz
  1635  0356  2B58               	goto	l1963
  1636  0357  2B63               	goto	l190
  1637  0358                     l1963:
  1638                           
  1639                           ; Switch size 1, requested type "simple"
  1640                           ; Number of cases is 3, Range of values is 0 to 2
  1641                           ; switch strategies available:
  1642                           ; Name         Instructions Cycles
  1643                           ; simple_byte           10     6 (average)
  1644                           ; direct_byte           17     8 (fixed)
  1645                           ; jumptable            260     6 (fixed)
  1646                           ;	Chosen strategy is simple_byte
  1647  0358  0873               	movf	??_send_hora,w
  1648  0359  3A00               	xorlw	0	; case 0
  1649  035A  1903               	skipnz
  1650  035B  2B27               	goto	l1427
  1651  035C  3A01               	xorlw	1	; case 1
  1652  035D  1903               	skipnz
  1653  035E  2B37               	goto	l1431
  1654  035F  3A03               	xorlw	3	; case 2
  1655  0360  1903               	skipnz
  1656  0361  2B41               	goto	l1435
  1657  0362  2B63               	goto	l190
  1658  0363                     l190:
  1659  0363  0008               	return
  1660  0364                     __end_of_send_hora:
  1661                           
  1662                           	psect	text5
  1663  039E                     __ptext5:	
  1664 ;; *************** function _Setup *****************
  1665 ;; Defined at:
  1666 ;;		line 111 in file "MAIN_PRO.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    2
  1687 ;; This function calls:
  1688 ;;		_SET_RXT
  1689 ;;		_SET_TXR
  1690 ;;		_initOsc
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _Setup
  1698  039E                     _Setup:
  1699  039E                     l1475:	
  1700                           ;incstack = 0
  1701                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1702                           
  1703                           
  1704                           ;MAIN_PRO.c: 113:     PORTA = 0;
  1705  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1706  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1707  03A0  0185               	clrf	5	;volatile
  1708                           
  1709                           ;MAIN_PRO.c: 114:     PORTB = 0;
  1710  03A1  0186               	clrf	6	;volatile
  1711                           
  1712                           ;MAIN_PRO.c: 115:     PORTC = 0;
  1713  03A2  0187               	clrf	7	;volatile
  1714                           
  1715                           ;MAIN_PRO.c: 116:     PORTD = 0;
  1716  03A3  0188               	clrf	8	;volatile
  1717                           
  1718                           ;MAIN_PRO.c: 117:     PORTE = 0;
  1719  03A4  0189               	clrf	9	;volatile
  1720                           
  1721                           ;MAIN_PRO.c: 119:     TRISA = 0B00000000;
  1722  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  1723  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  1724  03A7  0185               	clrf	5	;volatile
  1725                           
  1726                           ;MAIN_PRO.c: 120:     TRISB = 0B00000000;
  1727  03A8  0186               	clrf	6	;volatile
  1728                           
  1729                           ;MAIN_PRO.c: 121:     TRISC = 0B00000000;
  1730  03A9  0187               	clrf	7	;volatile
  1731                           
  1732                           ;MAIN_PRO.c: 122:     TRISD = 0B00000000;
  1733  03AA  0188               	clrf	8	;volatile
  1734                           
  1735                           ;MAIN_PRO.c: 123:     TRISE = 0B0000;
  1736  03AB  0189               	clrf	9	;volatile
  1737                           
  1738                           ;MAIN_PRO.c: 125:     ANSEL = 0B00000000;
  1739  03AC  1683               	bsf	3,5	;RP0=1, select bank3
  1740  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  1741  03AE  0188               	clrf	8	;volatile
  1742                           
  1743                           ;MAIN_PRO.c: 126:     ANSELH = 0B00000000;
  1744  03AF  0189               	clrf	9	;volatile
  1745  03B0                     l1477:
  1746                           
  1747                           ;MAIN_PRO.c: 129:     INTCONbits.GIE=1;
  1748  03B0  178B               	bsf	11,7	;volatile
  1749  03B1                     l1479:
  1750                           
  1751                           ;MAIN_PRO.c: 130:     INTCONbits.PEIE=1;
  1752  03B1  170B               	bsf	11,6	;volatile
  1753  03B2                     l1481:
  1754                           
  1755                           ;MAIN_PRO.c: 131:     INTCONbits.TMR0IE=1;
  1756  03B2  168B               	bsf	11,5	;volatile
  1757  03B3                     l1483:
  1758                           
  1759                           ;MAIN_PRO.c: 132:     INTCONbits.TMR0IF=0;
  1760  03B3  110B               	bcf	11,2	;volatile
  1761  03B4                     l1485:
  1762                           
  1763                           ;MAIN_PRO.c: 134:     PIE1bits.RCIE = 1;
  1764  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1765  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  1766  03B6  168C               	bsf	12,5	;volatile
  1767  03B7                     l1487:
  1768                           
  1769                           ;MAIN_PRO.c: 135:     OPTION_REGbits.T0CS=0;
  1770  03B7  1281               	bcf	1,5	;volatile
  1771  03B8                     l1489:
  1772                           
  1773                           ;MAIN_PRO.c: 136:     OPTION_REGbits.T0SE=0;
  1774  03B8  1201               	bcf	1,4	;volatile
  1775  03B9                     l1491:
  1776                           
  1777                           ;MAIN_PRO.c: 137:     OPTION_REGbits.PSA=0;
  1778  03B9  1181               	bcf	1,3	;volatile
  1779  03BA                     l1493:
  1780                           
  1781                           ;MAIN_PRO.c: 139:     OPTION_REGbits.PS0=1;
  1782  03BA  1401               	bsf	1,0	;volatile
  1783  03BB                     l1495:
  1784                           
  1785                           ;MAIN_PRO.c: 140:     OPTION_REGbits.PS1=1;
  1786  03BB  1481               	bsf	1,1	;volatile
  1787  03BC                     l1497:
  1788                           
  1789                           ;MAIN_PRO.c: 141:     OPTION_REGbits.PS2=1;
  1790  03BC  1501               	bsf	1,2	;volatile
  1791  03BD                     l1499:
  1792                           
  1793                           ;MAIN_PRO.c: 143:     initOsc(6);
  1794  03BD  3006               	movlw	6
  1795  03BE  120A  118A  21FE  120A  118A  	fcall	_initOsc
  1796  03C3                     l1501:
  1797                           
  1798                           ;MAIN_PRO.c: 144:     SET_RXT();
  1799  03C3  120A  118A  241A  120A  118A  	fcall	_SET_RXT
  1800  03C8                     l1503:
  1801                           
  1802                           ;MAIN_PRO.c: 145:     SET_TXR();
  1803  03C8  120A  118A  23FE  120A  118A  	fcall	_SET_TXR
  1804  03CD                     l157:
  1805  03CD  0008               	return
  1806  03CE                     __end_of_Setup:
  1807                           
  1808                           	psect	text6
  1809  01FE                     __ptext6:	
  1810 ;; *************** function _initOsc *****************
  1811 ;; Defined at:
  1812 ;;		line 6 in file "Oscilador.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  IRCF            1    wreg     unsigned char 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  IRCF            1    5[COMMON] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         1       0       0       0       0
  1828 ;;      Temps:          2       0       0       0       0
  1829 ;;      Totals:         3       0       0       0       0
  1830 ;;Total ram usage:        3 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_Setup
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _initOsc
  1842  01FE                     _initOsc:
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1846                           ;initOsc@IRCF stored from wreg
  1847  01FE  00F5               	movwf	initOsc@IRCF
  1848  01FF                     l1363:
  1849                           
  1850                           ;Oscilador.c: 7: switch (IRCF) {
  1851  01FF  2A36               	goto	l1367
  1852  0200                     l254:	
  1853                           ;Oscilador.c: 8:             case 0:
  1854                           
  1855                           
  1856                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  1857  0200  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0201  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0202  130F               	bcf	15,6	;volatile
  1860                           
  1861                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  1862  0203  128F               	bcf	15,5	;volatile
  1863                           
  1864                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  1865  0204  120F               	bcf	15,4	;volatile
  1866                           
  1867                           ;Oscilador.c: 12:                 break;
  1868  0205  2A58               	goto	l255
  1869  0206                     l256:	
  1870                           ;Oscilador.c: 13:             case 1:
  1871                           
  1872                           
  1873                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  1874  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1876  0208  130F               	bcf	15,6	;volatile
  1877                           
  1878                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  1879  0209  128F               	bcf	15,5	;volatile
  1880                           
  1881                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  1882  020A  160F               	bsf	15,4	;volatile
  1883                           
  1884                           ;Oscilador.c: 17:                 break;
  1885  020B  2A58               	goto	l255
  1886  020C                     l257:	
  1887                           ;Oscilador.c: 18:             case 2:
  1888                           
  1889                           
  1890                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  1891  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1892  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1893  020E  130F               	bcf	15,6	;volatile
  1894                           
  1895                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  1896  020F  168F               	bsf	15,5	;volatile
  1897                           
  1898                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  1899  0210  120F               	bcf	15,4	;volatile
  1900                           
  1901                           ;Oscilador.c: 22:                 break;
  1902  0211  2A58               	goto	l255
  1903  0212                     l258:	
  1904                           ;Oscilador.c: 23:             case 3:
  1905                           
  1906                           
  1907                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  1908  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0214  130F               	bcf	15,6	;volatile
  1911                           
  1912                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  1913  0215  168F               	bsf	15,5	;volatile
  1914                           
  1915                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  1916  0216  160F               	bsf	15,4	;volatile
  1917                           
  1918                           ;Oscilador.c: 27:                 break;
  1919  0217  2A58               	goto	l255
  1920  0218                     l259:	
  1921                           ;Oscilador.c: 28:             case 4:
  1922                           
  1923                           
  1924                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  1925  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1927  021A  170F               	bsf	15,6	;volatile
  1928                           
  1929                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  1930  021B  128F               	bcf	15,5	;volatile
  1931                           
  1932                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  1933  021C  120F               	bcf	15,4	;volatile
  1934                           
  1935                           ;Oscilador.c: 32:                 break;
  1936  021D  2A58               	goto	l255
  1937  021E                     l260:	
  1938                           ;Oscilador.c: 33:             case 5:
  1939                           
  1940                           
  1941                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  1942  021E  1683               	bsf	3,5	;RP0=1, select bank1
  1943  021F  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0220  170F               	bsf	15,6	;volatile
  1945                           
  1946                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  1947  0221  128F               	bcf	15,5	;volatile
  1948                           
  1949                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  1950  0222  160F               	bsf	15,4	;volatile
  1951                           
  1952                           ;Oscilador.c: 37:                 break;
  1953  0223  2A58               	goto	l255
  1954  0224                     l261:	
  1955                           ;Oscilador.c: 38:             case 6:
  1956                           
  1957                           
  1958                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  1959  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0226  170F               	bsf	15,6	;volatile
  1962                           
  1963                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  1964  0227  168F               	bsf	15,5	;volatile
  1965                           
  1966                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  1967  0228  120F               	bcf	15,4	;volatile
  1968                           
  1969                           ;Oscilador.c: 42:                 break;
  1970  0229  2A58               	goto	l255
  1971  022A                     l262:	
  1972                           ;Oscilador.c: 43:             case 7:
  1973                           
  1974                           
  1975                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  1976  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1977  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1978  022C  170F               	bsf	15,6	;volatile
  1979                           
  1980                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  1981  022D  168F               	bsf	15,5	;volatile
  1982                           
  1983                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  1984  022E  160F               	bsf	15,4	;volatile
  1985                           
  1986                           ;Oscilador.c: 47:                 break;
  1987  022F  2A58               	goto	l255
  1988  0230                     l263:	
  1989                           ;Oscilador.c: 48:             default:
  1990                           
  1991                           
  1992                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  1993  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1994  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1995  0232  170F               	bsf	15,6	;volatile
  1996                           
  1997                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  1998  0233  168F               	bsf	15,5	;volatile
  1999                           
  2000                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  2001  0234  120F               	bcf	15,4	;volatile
  2002                           
  2003                           ;Oscilador.c: 52:                 break;
  2004  0235  2A58               	goto	l255
  2005  0236                     l1367:
  2006  0236  0875               	movf	initOsc@IRCF,w
  2007  0237  00F3               	movwf	??_initOsc
  2008  0238  01F4               	clrf	??_initOsc+1
  2009                           
  2010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 1, Range of values is 0 to 0
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte            4     3 (average)
  2016                           ; direct_byte           11     8 (fixed)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019  0239  0874               	movf	??_initOsc+1,w
  2020  023A  3A00               	xorlw	0	; case 0
  2021  023B  1903               	skipnz
  2022  023C  2A3E               	goto	l1965
  2023  023D  2A30               	goto	l263
  2024  023E                     l1965:
  2025                           
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 8, Range of values is 0 to 7
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte           25    13 (average)
  2031                           ; direct_byte           32     8 (fixed)
  2032                           ; jumptable            260     6 (fixed)
  2033                           ;	Chosen strategy is simple_byte
  2034  023E  0873               	movf	??_initOsc,w
  2035  023F  3A00               	xorlw	0	; case 0
  2036  0240  1903               	skipnz
  2037  0241  2A00               	goto	l254
  2038  0242  3A01               	xorlw	1	; case 1
  2039  0243  1903               	skipnz
  2040  0244  2A06               	goto	l256
  2041  0245  3A03               	xorlw	3	; case 2
  2042  0246  1903               	skipnz
  2043  0247  2A0C               	goto	l257
  2044  0248  3A01               	xorlw	1	; case 3
  2045  0249  1903               	skipnz
  2046  024A  2A12               	goto	l258
  2047  024B  3A07               	xorlw	7	; case 4
  2048  024C  1903               	skipnz
  2049  024D  2A18               	goto	l259
  2050  024E  3A01               	xorlw	1	; case 5
  2051  024F  1903               	skipnz
  2052  0250  2A1E               	goto	l260
  2053  0251  3A03               	xorlw	3	; case 6
  2054  0252  1903               	skipnz
  2055  0253  2A24               	goto	l261
  2056  0254  3A01               	xorlw	1	; case 7
  2057  0255  1903               	skipnz
  2058  0256  2A2A               	goto	l262
  2059  0257  2A30               	goto	l263
  2060  0258                     l255:
  2061                           
  2062                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  2063  0258  140F               	bsf	15,0	;volatile
  2064  0259                     l264:
  2065  0259  0008               	return
  2066  025A                     __end_of_initOsc:
  2067                           
  2068                           	psect	text7
  2069  03FE                     __ptext7:	
  2070 ;; *************** function _SET_TXR *****************
  2071 ;; Defined at:
  2072 ;;		line 3 in file "EUSART.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_Setup
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _SET_TXR
  2102  03FE                     _SET_TXR:
  2103  03FE                     l1375:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _SET_TXR: [wreg+status,2]
  2106                           
  2107                           
  2108                           ;EUSART.c: 4:     TXSTAbits.SYNC=0;
  2109  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2110  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2111  0400  1218               	bcf	24,4	;volatile
  2112                           
  2113                           ;EUSART.c: 5:     TXSTAbits.TXEN=1;
  2114  0401  1698               	bsf	24,5	;volatile
  2115                           
  2116                           ;EUSART.c: 6:     TXSTAbits.BRGH=1;
  2117  0402  1518               	bsf	24,2	;volatile
  2118                           
  2119                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  2120  0403  1318               	bcf	24,6	;volatile
  2121                           
  2122                           ;EUSART.c: 8:     BAUDCTLbits.BRG16=0;
  2123  0404  1683               	bsf	3,5	;RP0=1, select bank3
  2124  0405  1703               	bsf	3,6	;RP1=1, select bank3
  2125  0406  1187               	bcf	7,3	;volatile
  2126  0407                     l1377:
  2127                           
  2128                           ;EUSART.c: 9:     SPBRG=25;
  2129  0407  3019               	movlw	25
  2130  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0409  1303               	bcf	3,6	;RP1=0, select bank1
  2132  040A  0099               	movwf	25	;volatile
  2133  040B                     l1379:
  2134                           
  2135                           ;EUSART.c: 10:     SPBRGH=0;
  2136  040B  019A               	clrf	26	;volatile
  2137  040C                     l245:
  2138  040C  0008               	return
  2139  040D                     __end_of_SET_TXR:
  2140                           
  2141                           	psect	text8
  2142  041A                     __ptext8:	
  2143 ;; *************** function _SET_RXT *****************
  2144 ;; Defined at:
  2145 ;;		line 13 in file "EUSART.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		None
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_Setup
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _SET_RXT
  2175  041A                     _SET_RXT:
  2176  041A                     l1373:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _SET_RXT: []
  2179                           
  2180                           
  2181                           ;EUSART.c: 14:     RCSTAbits.SPEN=1;
  2182  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2183  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2184  041C  1798               	bsf	24,7	;volatile
  2185                           
  2186                           ;EUSART.c: 15:     RCSTAbits.CREN=1;
  2187  041D  1618               	bsf	24,4	;volatile
  2188                           
  2189                           ;EUSART.c: 16:     RCSTAbits.FERR=0;
  2190  041E  1118               	bcf	24,2	;volatile
  2191                           
  2192                           ;EUSART.c: 17:     RCSTAbits.OERR=0;
  2193  041F  1098               	bcf	24,1	;volatile
  2194                           
  2195                           ;EUSART.c: 18:     RCSTAbits.RX9=0;
  2196  0420  1318               	bcf	24,6	;volatile
  2197                           
  2198                           ;EUSART.c: 19:     PIE1bits.RCIE=1;
  2199  0421  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0422  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0423  168C               	bsf	12,5	;volatile
  2202  0424                     l248:
  2203  0424  0008               	return
  2204  0425                     __end_of_SET_RXT:
  2205                           
  2206                           	psect	text9
  2207  0425                     __ptext9:	
  2208 ;; *************** function _I2C_Master_Write *****************
  2209 ;; Defined at:
  2210 ;;		line 54 in file "I2C.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  d               2    3[COMMON] unsigned int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         2       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         2       0       0       0       0
  2228 ;;Total ram usage:        2 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    2
  2231 ;; This function calls:
  2232 ;;		_I2C_Master_Wait
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;;		_CARGA
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _I2C_Master_Write
  2241  0425                     _I2C_Master_Write:
  2242  0425                     l1807:	
  2243                           ;incstack = 0
  2244                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2245                           
  2246                           
  2247                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  2248  0425  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2249  042A                     l1809:
  2250                           
  2251                           ;I2C.c: 57:     SSPBUF = d;
  2252  042A  0873               	movf	I2C_Master_Write@d,w
  2253  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2254  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2255  042D  0093               	movwf	19	;volatile
  2256  042E                     l311:
  2257  042E  0008               	return
  2258  042F                     __end_of_I2C_Master_Write:
  2259                           
  2260                           	psect	text10
  2261  042F                     __ptext10:	
  2262 ;; *************** function _I2C_Master_Stop *****************
  2263 ;; Defined at:
  2264 ;;		line 44 in file "I2C.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, pclath, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    2
  2285 ;; This function calls:
  2286 ;;		_I2C_Master_Wait
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;;		_CARGA
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _I2C_Master_Stop
  2295  042F                     _I2C_Master_Stop:
  2296  042F                     l1831:	
  2297                           ;incstack = 0
  2298                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2299                           
  2300                           
  2301                           ;I2C.c: 46:     I2C_Master_Wait();
  2302  042F  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2303  0434                     l1833:
  2304                           
  2305                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  2306  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0436  1511               	bsf	17,2	;volatile
  2309  0437                     l308:
  2310  0437  0008               	return
  2311  0438                     __end_of_I2C_Master_Stop:
  2312                           
  2313                           	psect	text11
  2314  0438                     __ptext11:	
  2315 ;; *************** function _I2C_Master_Start *****************
  2316 ;; Defined at:
  2317 ;;		line 28 in file "I2C.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    2
  2338 ;; This function calls:
  2339 ;;		_I2C_Master_Wait
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;;		_CARGA
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _I2C_Master_Start
  2348  0438                     _I2C_Master_Start:
  2349  0438                     l1803:	
  2350                           ;incstack = 0
  2351                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2352                           
  2353                           
  2354                           ;I2C.c: 30:     I2C_Master_Wait();
  2355  0438  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2356  043D                     l1805:
  2357                           
  2358                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  2359  043D  1683               	bsf	3,5	;RP0=1, select bank1
  2360  043E  1303               	bcf	3,6	;RP1=0, select bank1
  2361  043F  1411               	bsf	17,0	;volatile
  2362  0440                     l302:
  2363  0440  0008               	return
  2364  0441                     __end_of_I2C_Master_Start:
  2365                           
  2366                           	psect	text12
  2367  0441                     __ptext12:	
  2368 ;; *************** function _I2C_Master_RepeatedStart *****************
  2369 ;; Defined at:
  2370 ;;		line 36 in file "I2C.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    2
  2391 ;; This function calls:
  2392 ;;		_I2C_Master_Wait
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _I2C_Master_RepeatedStart
  2400  0441                     _I2C_Master_RepeatedStart:
  2401  0441                     l1811:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2404                           
  2405                           
  2406                           ;I2C.c: 38:     I2C_Master_Wait();
  2407  0441  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2408  0446                     l1813:
  2409                           
  2410                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  2411  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2412  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2413  0448  1491               	bsf	17,1	;volatile
  2414  0449                     l305:
  2415  0449  0008               	return
  2416  044A                     __end_of_I2C_Master_RepeatedStart:
  2417                           
  2418                           	psect	text13
  2419  03CE                     __ptext13:	
  2420 ;; *************** function _I2C_Master_Read *****************
  2421 ;; Defined at:
  2422 ;;		line 63 in file "I2C.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  a               2    3[COMMON] unsigned short 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  temp            2    0[BANK0 ] unsigned short 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  2    3[COMMON] unsigned short 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         2       0       0       0       0
  2437 ;;      Locals:         0       2       0       0       0
  2438 ;;      Temps:          2       0       0       0       0
  2439 ;;      Totals:         4       2       0       0       0
  2440 ;;Total ram usage:        6 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		_I2C_Master_Wait
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _I2C_Master_Read
  2452  03CE                     _I2C_Master_Read:
  2453  03CE                     l1815:	
  2454                           ;incstack = 0
  2455                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2456                           
  2457                           
  2458                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  2459  03CE  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2460  03D3                     l1817:
  2461                           
  2462                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2463  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2464  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2465  03D5  1591               	bsf	17,3	;volatile
  2466                           
  2467                           ;I2C.c: 68:     I2C_Master_Wait();
  2468  03D6  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2469  03DB                     l1819:
  2470                           
  2471                           ;I2C.c: 69:     temp = SSPBUF;
  2472  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2473  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2474  03DD  0813               	movf	19,w	;volatile
  2475  03DE  00F5               	movwf	??_I2C_Master_Read
  2476  03DF  01F6               	clrf	??_I2C_Master_Read+1
  2477  03E0  0875               	movf	??_I2C_Master_Read,w
  2478  03E1  00BC               	movwf	I2C_Master_Read@temp
  2479  03E2  0876               	movf	??_I2C_Master_Read+1,w
  2480  03E3  00BD               	movwf	I2C_Master_Read@temp+1
  2481  03E4                     l1821:
  2482                           
  2483                           ;I2C.c: 70:     I2C_Master_Wait();
  2484  03E4  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Wait
  2485  03E9                     l1823:
  2486                           
  2487                           ;I2C.c: 71:     if(a == 1){
  2488  03E9  0373               	decf	I2C_Master_Read@a,w
  2489  03EA  0474               	iorwf	I2C_Master_Read@a+1,w
  2490  03EB  1D03               	btfss	3,2
  2491  03EC  2BEE               	goto	u1001
  2492  03ED  2BEF               	goto	u1000
  2493  03EE                     u1001:
  2494  03EE  2BF3               	goto	l314
  2495  03EF                     u1000:
  2496  03EF                     l1825:
  2497                           
  2498                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  2499  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2500  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2501  03F1  1291               	bcf	17,5	;volatile
  2502                           
  2503                           ;I2C.c: 73:     }else{
  2504  03F2  2BF6               	goto	l315
  2505  03F3                     l314:
  2506                           
  2507                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  2508  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2509  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2510  03F5  1691               	bsf	17,5	;volatile
  2511  03F6                     l315:	
  2512                           ;I2C.c: 75:     }
  2513                           
  2514                           
  2515                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  2516  03F6  1611               	bsf	17,4	;volatile
  2517  03F7                     l1827:
  2518                           
  2519                           ;I2C.c: 77:     return temp;
  2520  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2521  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2522  03F9  083D               	movf	I2C_Master_Read@temp+1,w
  2523  03FA  00F4               	movwf	?_I2C_Master_Read+1
  2524  03FB  083C               	movf	I2C_Master_Read@temp,w
  2525  03FC  00F3               	movwf	?_I2C_Master_Read
  2526  03FD                     l316:
  2527  03FD  0008               	return
  2528  03FE                     __end_of_I2C_Master_Read:
  2529                           
  2530                           	psect	text14
  2531  040D                     __ptext14:	
  2532 ;; *************** function _I2C_Master_Wait *****************
  2533 ;; Defined at:
  2534 ;;		line 21 in file "I2C.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_I2C_Master_Start
  2559 ;;		_I2C_Master_RepeatedStart
  2560 ;;		_I2C_Master_Stop
  2561 ;;		_I2C_Master_Write
  2562 ;;		_I2C_Master_Read
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _I2C_Master_Wait
  2568  040D                     _I2C_Master_Wait:
  2569  040D                     l1763:	
  2570                           ;incstack = 0
  2571                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2572                           
  2573  040D                     l296:	
  2574                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2575                           
  2576  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2577  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2578  040F  1914               	btfsc	20,2	;volatile
  2579  0410  2C12               	goto	u901
  2580  0411  2C13               	goto	u900
  2581  0412                     u901:
  2582  0412  2C0D               	goto	l296
  2583  0413                     u900:
  2584  0413                     l1765:
  2585  0413  0811               	movf	17,w	;volatile
  2586  0414  391F               	andlw	31
  2587  0415  1D03               	btfss	3,2
  2588  0416  2C18               	goto	u911
  2589  0417  2C19               	goto	u910
  2590  0418                     u911:
  2591  0418  2C0D               	goto	l296
  2592  0419                     u910:
  2593  0419                     l299:
  2594  0419  0008               	return
  2595  041A                     __end_of_I2C_Master_Wait:
  2596                           
  2597                           	psect	text15
  2598  0364                     __ptext15:	
  2599 ;; *************** function _I2C_Master_Init *****************
  2600 ;; Defined at:
  2601 ;;		line 5 in file "I2C.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  c               4   13[BANK0 ] const unsigned long 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       4       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          4       0       0       0       0
  2618 ;;      Totals:         4       4       0       0       0
  2619 ;;Total ram usage:        8 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    2
  2622 ;; This function calls:
  2623 ;;		___lldiv
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _I2C_Master_Init
  2631  0364                     _I2C_Master_Init:
  2632  0364                     l1791:	
  2633                           ;incstack = 0
  2634                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2635                           
  2636                           
  2637                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  2638  0364  3028               	movlw	40
  2639  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0367  0094               	movwf	20	;volatile
  2642  0368                     l1793:
  2643                           
  2644                           ;I2C.c: 8:     SSPCON2 = 0;
  2645  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2647  036A  0191               	clrf	17	;volatile
  2648  036B                     l1795:
  2649                           
  2650                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  2651  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2652  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2653  036D  0849               	movf	I2C_Master_Init@c,w
  2654  036E  00F4               	movwf	??_I2C_Master_Init
  2655  036F  084A               	movf	I2C_Master_Init@c+1,w
  2656  0370  00F5               	movwf	??_I2C_Master_Init+1
  2657  0371  084B               	movf	I2C_Master_Init@c+2,w
  2658  0372  00F6               	movwf	??_I2C_Master_Init+2
  2659  0373  084C               	movf	I2C_Master_Init@c+3,w
  2660  0374  00F7               	movwf	??_I2C_Master_Init+3
  2661  0375  3002               	movlw	2
  2662  0376                     u995:
  2663  0376  1003               	clrc
  2664  0377  0DF4               	rlf	??_I2C_Master_Init,f
  2665  0378  0DF5               	rlf	??_I2C_Master_Init+1,f
  2666  0379  0DF6               	rlf	??_I2C_Master_Init+2,f
  2667  037A  0DF7               	rlf	??_I2C_Master_Init+3,f
  2668  037B                     u990:
  2669  037B  3EFF               	addlw	-1
  2670  037C  1D03               	skipz
  2671  037D  2B76               	goto	u995
  2672  037E  0877               	movf	??_I2C_Master_Init+3,w
  2673  037F  00BF               	movwf	___lldiv@divisor+3
  2674  0380  0876               	movf	??_I2C_Master_Init+2,w
  2675  0381  00BE               	movwf	___lldiv@divisor+2
  2676  0382  0875               	movf	??_I2C_Master_Init+1,w
  2677  0383  00BD               	movwf	___lldiv@divisor+1
  2678  0384  0874               	movf	??_I2C_Master_Init,w
  2679  0385  00BC               	movwf	___lldiv@divisor
  2680  0386  3000               	movlw	0
  2681  0387  00C3               	movwf	___lldiv@dividend+3
  2682  0388  307A               	movlw	122
  2683  0389  00C2               	movwf	___lldiv@dividend+2
  2684  038A  3012               	movlw	18
  2685  038B  00C1               	movwf	___lldiv@dividend+1
  2686  038C  3000               	movlw	0
  2687  038D  00C0               	movwf	___lldiv@dividend
  2688  038E  120A  118A  20D6  120A  118A  	fcall	___lldiv
  2689  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0395  083C               	movf	?___lldiv,w
  2692  0396  3EFF               	addlw	255
  2693  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2695  0399  0093               	movwf	19	;volatile
  2696  039A                     l1797:
  2697                           
  2698                           ;I2C.c: 10:     SSPSTAT = 0;
  2699  039A  0194               	clrf	20	;volatile
  2700  039B                     l1799:
  2701                           
  2702                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  2703  039B  1587               	bsf	7,3	;volatile
  2704  039C                     l1801:
  2705                           
  2706                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  2707  039C  1607               	bsf	7,4	;volatile
  2708  039D                     l293:
  2709  039D  0008               	return
  2710  039E                     __end_of_I2C_Master_Init:
  2711                           
  2712                           	psect	text16
  2713  00D6                     __ptext16:	
  2714 ;; *************** function ___lldiv *****************
  2715 ;; Defined at:
  2716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  divisor         4    0[BANK0 ] unsigned long 
  2719 ;;  dividend        4    4[BANK0 ] unsigned long 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  quotient        4    8[BANK0 ] unsigned long 
  2722 ;;  counter         1   12[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  4    0[BANK0 ] unsigned long 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       8       0       0       0
  2733 ;;      Locals:         0       5       0       0       0
  2734 ;;      Temps:          1       0       0       0       0
  2735 ;;      Totals:         1      13       0       0       0
  2736 ;;Total ram usage:       14 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_I2C_Master_Init
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function ___lldiv
  2748  00D6                     ___lldiv:
  2749  00D6                     l1767:	
  2750                           ;incstack = 0
  2751                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2752                           
  2753  00D6  3000               	movlw	0
  2754  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2755  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2756  00D9  00C7               	movwf	___lldiv@quotient+3
  2757  00DA  3000               	movlw	0
  2758  00DB  00C6               	movwf	___lldiv@quotient+2
  2759  00DC  3000               	movlw	0
  2760  00DD  00C5               	movwf	___lldiv@quotient+1
  2761  00DE  3000               	movlw	0
  2762  00DF  00C4               	movwf	___lldiv@quotient
  2763  00E0  083F               	movf	___lldiv@divisor+3,w
  2764  00E1  043E               	iorwf	___lldiv@divisor+2,w
  2765  00E2  043D               	iorwf	___lldiv@divisor+1,w
  2766  00E3  043C               	iorwf	___lldiv@divisor,w
  2767  00E4  1903               	skipnz
  2768  00E5  28E7               	goto	u921
  2769  00E6  28E8               	goto	u920
  2770  00E7                     u921:
  2771  00E7  2935               	goto	l1787
  2772  00E8                     u920:
  2773  00E8                     l1769:
  2774  00E8  01C8               	clrf	___lldiv@counter
  2775  00E9  0AC8               	incf	___lldiv@counter,f
  2776  00EA  28F8               	goto	l1773
  2777  00EB                     l1771:
  2778  00EB  3001               	movlw	1
  2779  00EC  00F3               	movwf	??___lldiv
  2780  00ED                     u935:
  2781  00ED  1003               	clrc
  2782  00EE  0DBC               	rlf	___lldiv@divisor,f
  2783  00EF  0DBD               	rlf	___lldiv@divisor+1,f
  2784  00F0  0DBE               	rlf	___lldiv@divisor+2,f
  2785  00F1  0DBF               	rlf	___lldiv@divisor+3,f
  2786  00F2  0BF3               	decfsz	??___lldiv,f
  2787  00F3  28ED               	goto	u935
  2788  00F4  3001               	movlw	1
  2789  00F5  00F3               	movwf	??___lldiv
  2790  00F6  0873               	movf	??___lldiv,w
  2791  00F7  07C8               	addwf	___lldiv@counter,f
  2792  00F8                     l1773:
  2793  00F8  1FBF               	btfss	___lldiv@divisor+3,7
  2794  00F9  28FB               	goto	u941
  2795  00FA  28FC               	goto	u940
  2796  00FB                     u941:
  2797  00FB  28EB               	goto	l1771
  2798  00FC                     u940:
  2799  00FC                     l1775:
  2800  00FC  3001               	movlw	1
  2801  00FD  00F3               	movwf	??___lldiv
  2802  00FE                     u955:
  2803  00FE  1003               	clrc
  2804  00FF  0DC4               	rlf	___lldiv@quotient,f
  2805  0100  0DC5               	rlf	___lldiv@quotient+1,f
  2806  0101  0DC6               	rlf	___lldiv@quotient+2,f
  2807  0102  0DC7               	rlf	___lldiv@quotient+3,f
  2808  0103  0BF3               	decfsz	??___lldiv,f
  2809  0104  28FE               	goto	u955
  2810  0105                     l1777:
  2811  0105  083F               	movf	___lldiv@divisor+3,w
  2812  0106  0243               	subwf	___lldiv@dividend+3,w
  2813  0107  1D03               	skipz
  2814  0108  2913               	goto	u965
  2815  0109  083E               	movf	___lldiv@divisor+2,w
  2816  010A  0242               	subwf	___lldiv@dividend+2,w
  2817  010B  1D03               	skipz
  2818  010C  2913               	goto	u965
  2819  010D  083D               	movf	___lldiv@divisor+1,w
  2820  010E  0241               	subwf	___lldiv@dividend+1,w
  2821  010F  1D03               	skipz
  2822  0110  2913               	goto	u965
  2823  0111  083C               	movf	___lldiv@divisor,w
  2824  0112  0240               	subwf	___lldiv@dividend,w
  2825  0113                     u965:
  2826  0113  1C03               	skipc
  2827  0114  2916               	goto	u961
  2828  0115  2917               	goto	u960
  2829  0116                     u961:
  2830  0116  2926               	goto	l1783
  2831  0117                     u960:
  2832  0117                     l1779:
  2833  0117  083C               	movf	___lldiv@divisor,w
  2834  0118  02C0               	subwf	___lldiv@dividend,f
  2835  0119  083D               	movf	___lldiv@divisor+1,w
  2836  011A  1C03               	skipc
  2837  011B  0F3D               	incfsz	___lldiv@divisor+1,w
  2838  011C  02C1               	subwf	___lldiv@dividend+1,f
  2839  011D  083E               	movf	___lldiv@divisor+2,w
  2840  011E  1C03               	skipc
  2841  011F  0F3E               	incfsz	___lldiv@divisor+2,w
  2842  0120  02C2               	subwf	___lldiv@dividend+2,f
  2843  0121  083F               	movf	___lldiv@divisor+3,w
  2844  0122  1C03               	skipc
  2845  0123  0F3F               	incfsz	___lldiv@divisor+3,w
  2846  0124  02C3               	subwf	___lldiv@dividend+3,f
  2847  0125                     l1781:
  2848  0125  1444               	bsf	___lldiv@quotient,0
  2849  0126                     l1783:
  2850  0126  3001               	movlw	1
  2851  0127                     u975:
  2852  0127  1003               	clrc
  2853  0128  0CBF               	rrf	___lldiv@divisor+3,f
  2854  0129  0CBE               	rrf	___lldiv@divisor+2,f
  2855  012A  0CBD               	rrf	___lldiv@divisor+1,f
  2856  012B  0CBC               	rrf	___lldiv@divisor,f
  2857  012C  3EFF               	addlw	-1
  2858  012D  1D03               	skipz
  2859  012E  2927               	goto	u975
  2860  012F                     l1785:
  2861  012F  3001               	movlw	1
  2862  0130  02C8               	subwf	___lldiv@counter,f
  2863  0131  1D03               	btfss	3,2
  2864  0132  2934               	goto	u981
  2865  0133  2935               	goto	u980
  2866  0134                     u981:
  2867  0134  28FC               	goto	l1775
  2868  0135                     u980:
  2869  0135                     l1787:
  2870  0135  0847               	movf	___lldiv@quotient+3,w
  2871  0136  00BF               	movwf	?___lldiv+3
  2872  0137  0846               	movf	___lldiv@quotient+2,w
  2873  0138  00BE               	movwf	?___lldiv+2
  2874  0139  0845               	movf	___lldiv@quotient+1,w
  2875  013A  00BD               	movwf	?___lldiv+1
  2876  013B  0844               	movf	___lldiv@quotient,w
  2877  013C  00BC               	movwf	?___lldiv
  2878  013D                     l441:
  2879  013D  0008               	return
  2880  013E                     __end_of___lldiv:
  2881                           
  2882                           	psect	text17
  2883  01A1                     __ptext17:	
  2884 ;; *************** function _CONVET *****************
  2885 ;; Defined at:
  2886 ;;		line 150 in file "MAIN_PRO.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0
  2902 ;;      Temps:          2       0       0       0       0
  2903 ;;      Totals:         2       0       0       0       0
  2904 ;;Total ram usage:        2 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function _CONVET
  2916  01A1                     _CONVET:
  2917  01A1                     l1549:	
  2918                           ;incstack = 0
  2919                           ; Regs used in _CONVET: [wreg+status,2+status,0]
  2920                           
  2921                           
  2922                           ;MAIN_PRO.c: 151:     mou_t = ((mou & 0b00010000)>>4);
  2923  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2924  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2925  01A3  0832               	movf	_mou,w
  2926  01A4  00F3               	movwf	??_CONVET
  2927  01A5  3004               	movlw	4
  2928  01A6                     u665:
  2929  01A6  1003               	clrc
  2930  01A7  0CF3               	rrf	??_CONVET,f
  2931  01A8  3EFF               	addlw	-1
  2932  01A9  1D03               	skipz
  2933  01AA  29A6               	goto	u665
  2934  01AB  0873               	movf	??_CONVET,w
  2935  01AC  3901               	andlw	1
  2936  01AD  00F4               	movwf	??_CONVET+1
  2937  01AE  0874               	movf	??_CONVET+1,w
  2938  01AF  00A6               	movwf	_mou_t
  2939  01B0                     l1551:
  2940                           
  2941                           ;MAIN_PRO.c: 152:     mou_u = (mou & 0b00001111);
  2942  01B0  0832               	movf	_mou,w
  2943  01B1  390F               	andlw	15
  2944  01B2  00F3               	movwf	??_CONVET
  2945  01B3  0873               	movf	??_CONVET,w
  2946  01B4  00AB               	movwf	_mou_u
  2947  01B5                     l1553:
  2948                           
  2949                           ;MAIN_PRO.c: 153:     day_t = ((day & 0b00110000)>>4);
  2950  01B5  0831               	movf	_day,w
  2951  01B6  00F3               	movwf	??_CONVET
  2952  01B7  3004               	movlw	4
  2953  01B8                     u675:
  2954  01B8  1003               	clrc
  2955  01B9  0CF3               	rrf	??_CONVET,f
  2956  01BA  3EFF               	addlw	-1
  2957  01BB  1D03               	skipz
  2958  01BC  29B8               	goto	u675
  2959  01BD  0873               	movf	??_CONVET,w
  2960  01BE  3903               	andlw	3
  2961  01BF  00F4               	movwf	??_CONVET+1
  2962  01C0  0874               	movf	??_CONVET+1,w
  2963  01C1  00A5               	movwf	_day_t
  2964                           
  2965                           ;MAIN_PRO.c: 154:     day_u = (day & 0b00001111);
  2966  01C2  0831               	movf	_day,w
  2967  01C3  390F               	andlw	15
  2968  01C4  00F3               	movwf	??_CONVET
  2969  01C5  0873               	movf	??_CONVET,w
  2970  01C6  00AA               	movwf	_day_u
  2971  01C7                     l1555:
  2972                           
  2973                           ;MAIN_PRO.c: 155:     hor_t = ((hor & 0b00110000)>>4);
  2974  01C7  0830               	movf	_hor,w
  2975  01C8  00F3               	movwf	??_CONVET
  2976  01C9  3004               	movlw	4
  2977  01CA                     u685:
  2978  01CA  1003               	clrc
  2979  01CB  0CF3               	rrf	??_CONVET,f
  2980  01CC  3EFF               	addlw	-1
  2981  01CD  1D03               	skipz
  2982  01CE  29CA               	goto	u685
  2983  01CF  0873               	movf	??_CONVET,w
  2984  01D0  3903               	andlw	3
  2985  01D1  00F4               	movwf	??_CONVET+1
  2986  01D2  0874               	movf	??_CONVET+1,w
  2987  01D3  00A4               	movwf	_hor_t
  2988  01D4                     l1557:
  2989                           
  2990                           ;MAIN_PRO.c: 156:     hor_u = (hor & 0b00001111);
  2991  01D4  0830               	movf	_hor,w
  2992  01D5  390F               	andlw	15
  2993  01D6  00F3               	movwf	??_CONVET
  2994  01D7  0873               	movf	??_CONVET,w
  2995  01D8  00A9               	movwf	_hor_u
  2996                           
  2997                           ;MAIN_PRO.c: 157:     min_t = ((min & 0b01110000)>>4);
  2998  01D9  082F               	movf	_min,w
  2999  01DA  00F3               	movwf	??_CONVET
  3000  01DB  3004               	movlw	4
  3001  01DC                     u695:
  3002  01DC  1003               	clrc
  3003  01DD  0CF3               	rrf	??_CONVET,f
  3004  01DE  3EFF               	addlw	-1
  3005  01DF  1D03               	skipz
  3006  01E0  29DC               	goto	u695
  3007  01E1  0873               	movf	??_CONVET,w
  3008  01E2  3907               	andlw	7
  3009  01E3  00F4               	movwf	??_CONVET+1
  3010  01E4  0874               	movf	??_CONVET+1,w
  3011  01E5  00A3               	movwf	_min_t
  3012  01E6                     l1559:
  3013                           
  3014                           ;MAIN_PRO.c: 158:     min_u = (min & 0b00001111);
  3015  01E6  082F               	movf	_min,w
  3016  01E7  390F               	andlw	15
  3017  01E8  00F3               	movwf	??_CONVET
  3018  01E9  0873               	movf	??_CONVET,w
  3019  01EA  00A8               	movwf	_min_u
  3020  01EB                     l1561:
  3021                           
  3022                           ;MAIN_PRO.c: 159:     seg_t = ((seg & 0b01110000)>>4);
  3023  01EB  082E               	movf	_seg,w
  3024  01EC  00F3               	movwf	??_CONVET
  3025  01ED  3004               	movlw	4
  3026  01EE                     u705:
  3027  01EE  1003               	clrc
  3028  01EF  0CF3               	rrf	??_CONVET,f
  3029  01F0  3EFF               	addlw	-1
  3030  01F1  1D03               	skipz
  3031  01F2  29EE               	goto	u705
  3032  01F3  0873               	movf	??_CONVET,w
  3033  01F4  3907               	andlw	7
  3034  01F5  00F4               	movwf	??_CONVET+1
  3035  01F6  0874               	movf	??_CONVET+1,w
  3036  01F7  00A2               	movwf	_seg_t
  3037                           
  3038                           ;MAIN_PRO.c: 160:     seg_u = (seg & 0b00001111);
  3039  01F8  082E               	movf	_seg,w
  3040  01F9  390F               	andlw	15
  3041  01FA  00F3               	movwf	??_CONVET
  3042  01FB  0873               	movf	??_CONVET,w
  3043  01FC  00A7               	movwf	_seg_u
  3044  01FD                     l160:
  3045  01FD  0008               	return
  3046  01FE                     __end_of_CONVET:
  3047                           
  3048                           	psect	text18
  3049  025A                     __ptext18:	
  3050 ;; *************** function _isr *****************
  3051 ;; Defined at:
  3052 ;;		line 58 in file "MAIN_PRO.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          3       0       0       0       0
  3069 ;;      Totals:         3       0       0       0       0
  3070 ;;Total ram usage:        3 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		Interrupt level 1
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _isr
  3081  025A                     _isr:
  3082  025A                     i1l1595:
  3083                           
  3084                           ;MAIN_PRO.c: 59:     if (PIR1bits.RCIF==1){
  3085  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3086  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3087  025C  1E8C               	btfss	12,5	;volatile
  3088  025D  2A5F               	goto	u80_21
  3089  025E  2A60               	goto	u80_20
  3090  025F                     u80_21:
  3091  025F  2A91               	goto	i1l137
  3092  0260                     u80_20:
  3093  0260                     i1l1597:
  3094                           
  3095                           ;MAIN_PRO.c: 60:         temp = 0;
  3096  0260  01F8               	clrf	_temp
  3097  0261                     i1l1599:
  3098                           
  3099                           ;MAIN_PRO.c: 61:         temp = RCREG;
  3100  0261  081A               	movf	26,w	;volatile
  3101  0262  00F0               	movwf	??_isr
  3102  0263  0870               	movf	??_isr,w
  3103  0264  00F8               	movwf	_temp
  3104  0265                     i1l1601:
  3105                           
  3106                           ;MAIN_PRO.c: 62:         if (temp == 0X30){PORTAbits.RA1=0;}
  3107  0265  3030               	movlw	48
  3108  0266  0678               	xorwf	_temp,w
  3109  0267  1D03               	btfss	3,2
  3110  0268  2A6A               	goto	u81_21
  3111  0269  2A6B               	goto	u81_20
  3112  026A                     u81_21:
  3113  026A  2A6C               	goto	i1l1605
  3114  026B                     u81_20:
  3115  026B                     i1l1603:
  3116  026B  1085               	bcf	5,1	;volatile
  3117  026C                     i1l1605:
  3118                           
  3119                           ;MAIN_PRO.c: 63:         if (temp == 0X31){PORTAbits.RA1=1;}
  3120  026C  3031               	movlw	49
  3121  026D  0678               	xorwf	_temp,w
  3122  026E  1D03               	btfss	3,2
  3123  026F  2A71               	goto	u82_21
  3124  0270  2A72               	goto	u82_20
  3125  0271                     u82_21:
  3126  0271  2A73               	goto	i1l1609
  3127  0272                     u82_20:
  3128  0272                     i1l1607:
  3129  0272  1485               	bsf	5,1	;volatile
  3130  0273                     i1l1609:
  3131                           
  3132                           ;MAIN_PRO.c: 64:         if (temp == 0X32){PORTAbits.RA0=0;}
  3133  0273  3032               	movlw	50
  3134  0274  0678               	xorwf	_temp,w
  3135  0275  1D03               	btfss	3,2
  3136  0276  2A78               	goto	u83_21
  3137  0277  2A79               	goto	u83_20
  3138  0278                     u83_21:
  3139  0278  2A7A               	goto	i1l1613
  3140  0279                     u83_20:
  3141  0279                     i1l1611:
  3142  0279  1005               	bcf	5,0	;volatile
  3143  027A                     i1l1613:
  3144                           
  3145                           ;MAIN_PRO.c: 65:         if (temp == 0X33){PORTAbits.RA0=1;}
  3146  027A  3033               	movlw	51
  3147  027B  0678               	xorwf	_temp,w
  3148  027C  1D03               	btfss	3,2
  3149  027D  2A7F               	goto	u84_21
  3150  027E  2A80               	goto	u84_20
  3151  027F                     u84_21:
  3152  027F  2A81               	goto	i1l1617
  3153  0280                     u84_20:
  3154  0280                     i1l1615:
  3155  0280  1405               	bsf	5,0	;volatile
  3156  0281                     i1l1617:
  3157                           
  3158                           ;MAIN_PRO.c: 66:         if (temp == 0X34){C=1;}
  3159  0281  3034               	movlw	52
  3160  0282  0678               	xorwf	_temp,w
  3161  0283  1D03               	btfss	3,2
  3162  0284  2A86               	goto	u85_21
  3163  0285  2A87               	goto	u85_20
  3164  0286                     u85_21:
  3165  0286  2A89               	goto	i1l1621
  3166  0287                     u85_20:
  3167  0287                     i1l1619:
  3168  0287  01FA               	clrf	_C
  3169  0288  0AFA               	incf	_C,f
  3170  0289                     i1l1621:
  3171                           
  3172                           ;MAIN_PRO.c: 67:         if (temp == 0X35){b=1;}
  3173  0289  3035               	movlw	53
  3174  028A  0678               	xorwf	_temp,w
  3175  028B  1D03               	btfss	3,2
  3176  028C  2A8E               	goto	u86_21
  3177  028D  2A8F               	goto	u86_20
  3178  028E                     u86_21:
  3179  028E  2A91               	goto	i1l137
  3180  028F                     u86_20:
  3181  028F                     i1l1623:
  3182  028F  01BA               	clrf	_b
  3183  0290  0ABA               	incf	_b,f
  3184  0291                     i1l137:	
  3185                           ;MAIN_PRO.c: 68:     }
  3186                           
  3187                           
  3188                           ;MAIN_PRO.c: 69:     if (INTCONbits.TMR0IF==1){
  3189  0291  1D0B               	btfss	11,2	;volatile
  3190  0292  2A94               	goto	u87_21
  3191  0293  2A95               	goto	u87_20
  3192  0294                     u87_21:
  3193  0294  2AA3               	goto	i1l146
  3194  0295                     u87_20:
  3195  0295                     i1l1625:
  3196                           
  3197                           ;MAIN_PRO.c: 70:         TMR0=236;
  3198  0295  30EC               	movlw	236
  3199  0296  0081               	movwf	1	;volatile
  3200  0297                     i1l1627:
  3201                           
  3202                           ;MAIN_PRO.c: 71:         INTCONbits.TMR0IF=0;
  3203  0297  110B               	bcf	11,2	;volatile
  3204  0298                     i1l1629:
  3205                           
  3206                           ;MAIN_PRO.c: 72:         r++;
  3207  0298  3001               	movlw	1
  3208  0299  00F0               	movwf	??_isr
  3209  029A  0870               	movf	??_isr,w
  3210  029B  07B7               	addwf	_r,f
  3211  029C                     i1l1631:
  3212                           
  3213                           ;MAIN_PRO.c: 73:         if(r==10){
  3214  029C  300A               	movlw	10
  3215  029D  0637               	xorwf	_r,w
  3216  029E  1D03               	btfss	3,2
  3217  029F  2AA1               	goto	u88_21
  3218  02A0  2AA2               	goto	u88_20
  3219  02A1                     u88_21:
  3220  02A1  2AA3               	goto	i1l146
  3221  02A2                     u88_20:
  3222  02A2                     i1l1633:
  3223                           
  3224                           ;MAIN_PRO.c: 74:             r=0;
  3225  02A2  01B7               	clrf	_r
  3226  02A3                     i1l146:
  3227  02A3  0872               	movf	??_isr+2,w
  3228  02A4  008A               	movwf	10
  3229  02A5  0E71               	swapf	??_isr+1,w
  3230  02A6  0083               	movwf	3
  3231  02A7  0EFE               	swapf	btemp,f
  3232  02A8  0E7E               	swapf	btemp,w
  3233  02A9  0009               	retfie
  3234  02AA                     __end_of_isr:
  3235  007E                     btemp	set	126	;btemp
  3236  007E                     wtemp0	set	126
  3237                           
  3238                           	psect	intentry
  3239  0004                     __pintentry:	
  3240                           ;incstack = 0
  3241                           ; Regs used in _isr: [wreg+status,2+status,0]
  3242                           
  3243  0004                     interrupt_function:
  3244  007E                     saved_w	set	btemp
  3245  0004  00FE               	movwf	btemp
  3246  0005  0E03               	swapf	3,w
  3247  0006  00F1               	movwf	??_isr+1
  3248  0007  080A               	movf	10,w
  3249  0008  00F2               	movwf	??_isr+2
  3250  0009  120A  118A  2A5A   	ljmp	_isr
  3251                           
  3252                           	psect	config
  3253                           
  3254                           ;Config register CONFIG1 @ 0x2007
  3255                           ;	Oscillator Selection bits
  3256                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3257                           ;	Watchdog Timer Enable bit
  3258                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3259                           ;	Power-up Timer Enable bit
  3260                           ;	PWRTE = OFF, PWRT disabled
  3261                           ;	RE3/MCLR pin function select bit
  3262                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3263                           ;	Code Protection bit
  3264                           ;	CP = OFF, Program memory code protection is disabled
  3265                           ;	Data Code Protection bit
  3266                           ;	CPD = OFF, Data memory code protection is disabled
  3267                           ;	Brown Out Reset Selection bits
  3268                           ;	BOREN = OFF, BOR disabled
  3269                           ;	Internal External Switchover bit
  3270                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3271                           ;	Fail-Safe Clock Monitor Enabled bit
  3272                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3273                           ;	Low Voltage Programming Enable bit
  3274                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3275                           ;	In-Circuit Debugger Mode bit
  3276                           ;	DEBUG = 0x1, unprogrammed default
  3277  2007                     	org	8199
  3278  2007  20D4               	dw	8404
  3279                           
  3280                           ;Config register CONFIG2 @ 0x2008
  3281                           ;	Brown-out Reset Selection bit
  3282                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3283                           ;	Flash Program Memory Self Write Enable bits
  3284                           ;	WRT = OFF, Write protection off
  3285  2008                     	org	8200
  3286  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     18      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _forced_send->_send_hora
    _forced_send->_send_min
    _forced_send->_send_seg
    _Setup->_initOsc
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2370
                                             17 BANK0      1     1      0
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                        _forced_send
 ---------------------------------------------------------------------------------
 (1) _forced_send                                          1     1      0       0
                                              5 COMMON     1     1      0
                          _send_hora
                           _send_min
                           _send_seg
 ---------------------------------------------------------------------------------
 (2) _send_seg                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_min                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_hora                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      22
                            _SET_RXT
                            _SET_TXR
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _SET_RXT
     _SET_TXR
     _initOsc
   _forced_send
     _send_hora
     _send_min
     _send_seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 02:14:14 2021

                                _C 007A                                  _H 0020  
                                _L 003B                                  _M 0079  
                                _Z 0039                                  _b 003A  
                                _h 0035                                  _m 0034  
                                _q 0036                                  _r 0037  
                                _s 0033                                  _z 0038  
                               fsr 0004                                l200 02FC  
                              l204 0305                                l212 02AE  
                              l221 02C7                                l302 0440  
                              l311 042E                                l207 0325  
                              l160 01FD                                l224 02E7  
                              l305 0449                                l217 02BE  
                              l314 03F3                                l315 03F6  
                              l316 03FD                                l308 0437  
                              l260 021E                                l245 040C  
                              l261 0224                                l157 03CD  
                              l173 01A0                                l262 022A  
                              l254 0200                                l190 0363  
                              l263 0230                                l255 0258  
                              l183 033A                                l248 0424  
                              l264 0259                                l256 0206  
                              l441 013D                                l257 020C  
                              l258 0212                                l178 032A  
                              l259 0218                                l187 0343  
                              l195 02EC                                l293 039D  
                              l296 040D                                l299 0419  
                              _GIE 005F                                u500 0302  
                              u501 0301                                u510 030B  
                              u511 030A                                u520 0330  
                              u521 032F                                u530 0340  
                              u531 033F                                u540 0349  
                              u460 02B4                                u541 0348  
                              u461 02B3                                u470 02C4  
                              u710 0143                                u471 02C3  
                              u711 0142                                u480 02CD  
                              u720 0149                                u705 01EE  
                              u481 02CC                                u721 0148  
                              u490 02F2                                u730 0154  
                              u491 02F1                                u731 0153  
                              u900 0413                                u740 0162  
                              u901 0412                                u741 0161  
                              u910 0419                                u750 0168  
                              u911 0418                                u751 0167  
                              u920 00E8                                u760 0173  
                              u665 01A6                                u921 00E7  
                              u761 0172                                u770 0186  
                              u675 01B8                                u771 0185  
                              u940 00FC                                u780 018C  
                              u685 01CA                                u941 00FB  
                              u781 018B                                u790 0197  
                              u695 01DC                                u935 00ED  
                              u791 0196                                u960 0117  
                              u961 0116                                u955 00FE  
                              u980 0135                                u981 0134  
                              u965 0113                                u990 037B  
                              u975 0127                                u995 0376  
                              _day 0031                                _hor 0030  
                              _min 002F                                _isr 025A  
                              _seg 002E                                _mou 0032  
                              indf 0000                               l1403 02E8  
                             l1501 03C3                               l1413 0303  
                             l1405 02E9                               l1503 03C8  
                             l1431 0337                               l1415 030B  
                             l1407 02F2                               l1441 034E  
                             l1425 0326                               l1409 02F9  
                             l1363 01FF                               l1435 0341  
                             l1427 0327                               l1419 0310  
                             l1373 041A                               l1437 0349  
                             l1429 0330                               l1381 02AA  
                             l1551 01B0                               l1375 03FE  
                             l1367 0236                               l1391 02C5  
                             l1383 02AB                               l1561 01EB  
                             l1553 01B5                               l1801 039C  
                             l1377 0407                               l1481 03B2  
                             l1393 02CD                               l1385 02B4  
                             l1555 01C7                               l1811 0441  
                             l1803 0438                               l1379 040B  
                             l1491 03B9                               l1483 03B3  
                             l1475 039E                               l1387 02BB  
                             l1571 0159                               l1563 013E  
                             l1557 01D4                               l1549 01A1  
                             l1821 03E4                               l1813 0446  
                             l1805 043D                               l1493 03BA  
                             l1485 03B4                               l1477 03B0  
                             l1397 02D2                               l1581 0178  
                             l1565 0143                               l1573 015D  
                             l1559 01E6                               l1823 03E9  
                             l1815 03CE                               l1831 042F  
                             l1807 0425                               l1495 03BB  
                             l1487 03B7                               l1479 03B1  
                             l1591 0197                               l1583 0179  
                             l1575 0162                               l1567 0149  
                             l1825 03EF                               l1817 03D3  
                             l1833 0434                               l1809 042A  
                             l1497 03BC                               l1489 03B8  
                             l1593 019C                               l1577 0168  
                             l1585 0181                               l1569 0154  
                             l1841 0028                               l1771 00EB  
                             l1763 040D                               l1827 03F7  
                             l1819 03DB                               l1499 03BD  
                             l1587 0186                               l1579 0173  
                             l1851 0045                               l1843 0029  
                             l1835 001F                               l1781 0125  
                             l1773 00F8                               l1765 0413  
                             l1589 018C                               l1861 0079  
                             l1853 004D                               l1845 002A  
                             l1837 0024                               l1783 0126  
                             l1775 00FC                               l1767 00D6  
                             l1791 0364                               l1871 00C3  
                             l1863 0088                               l1855 0052  
                             l1847 0037                               l1839 0027  
                             l1785 012F                               l1777 0105  
                             l1769 00E8                               l1793 0368  
                             l1961 031A                               l1873 00C8  
                             l1865 0097                               l1857 005B  
                             l1849 003C                               l1779 0117  
                             l1787 0135                               l1795 036B  
                             l1963 0358                               l1875 00CD  
                             l1867 00A6                               l1859 006A  
                             l1797 039A                               l1965 023E  
                             l1869 00B5                               l1799 039B  
                             l1959 02DC                               ?_isr 0070  
                             u1000 03EF                               u1001 03EE  
                             _PEIE 005E                               _TMR0 0001  
                  __end_of_SET_RXT 0425                    __end_of_SET_TXR 040D  
 __end_of_I2C_Master_RepeatedStart 044A                               _main 001F  
                     ?_forced_send 0070                               _temp 0078  
                             _week 002D                               _year 002C  
                             btemp 007E                               start 000C  
                            ??_isr 0070                   ?_I2C_Master_Init 0049  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 013E  
                            i1l137 0291                              i1l146 02A3  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u80_20 0260  
                            u80_21 025F                              u81_20 026B  
                            u81_21 026A                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u82_20 0272  
                            _SSPIF 0063                              u82_21 0271  
                            u83_20 0279                              u83_21 0278  
                            u84_20 0280                              u84_21 027F  
                            u85_20 0287                              u85_21 0286  
                            u86_20 028F                              u86_21 028E  
                            u87_20 0295                              u87_21 0294  
                            u88_20 02A2                              u88_21 02A1  
                            _TXREG 0019                              _Setup 039E  
                            _day_t 0025                              _day_u 002A  
                  __end_of_initOsc 025A                              _hor_t 0024  
                            _hor_u 0029                              _min_t 0023  
                            _min_u 0028                              _seg_t 0022  
                            _seg_u 0027                              _mou_t 0026  
                            _mou_u 002B                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 000F                       __end_of_main 00D6  
                           ??_main 004D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                             ?_Setup 0070  
               ??_I2C_Master_Start 0073                          ??_SET_RXT 0073  
                        ??_SET_TXR 0073                 ??_I2C_Master_Write 0075  
                      initOsc@IRCF 0075                             _ANSELH 0189  
                           _CONVET 01A1                             i1l1601 0265  
                           i1l1611 0279                             i1l1603 026B  
                           i1l1621 0289                             i1l1613 027A  
                           i1l1605 026C                             i1l1631 029C  
                           i1l1623 028F                             i1l1615 0280  
                           i1l1607 0272                             i1l1633 02A2  
                           i1l1625 0295                             i1l1617 0281  
                           i1l1609 0273                             i1l1627 0297  
                           i1l1619 0287                             i1l1629 0298  
                           i1l1595 025A                             i1l1597 0260  
                           i1l1599 0261                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0441  
                        ??___lldiv 0073                   __end_of_send_min 0326  
                 __end_of_send_seg 02E8                          ??_initOsc 0073  
                           saved_w 007E            __end_of__initialization 001B  
             __size_of_forced_send 0063                     __pcstackCOMMON 0070  
                    __end_of_Setup 03CE                     _OPTION_REGbits 0081  
                          ??_Setup 0076                            ?_CONVET 0070  
                       __pbssBANK0 0020                         __pmaintext 001F  
                       __pintentry 0004                 __size_of_send_hora 003E  
                          _SET_RXT 041A                            _SET_TXR 03FE  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                  __size_of_CONVET 005D                          ?_send_min 0070  
                        ?_send_seg 0070                            ___lldiv 00D6  
                          __ptext1 013E                            __ptext2 02AA  
                          __ptext3 02E8                            __ptext4 0326  
                          __ptext5 039E                            __ptext6 01FE  
                          __ptext7 03FE                            __ptext8 041A  
                          __ptext9 0425                            _initOsc 01FE  
                     __size_of_isr 0050           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 044B  
             end_of_initialization 001B         ??_I2C_Master_RepeatedStart 0073  
                __end_of_send_hora 0364          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 003C  
                       ??_send_min 0073                         ??_send_seg 0073  
                  ___lldiv@counter 0048                          _RCSTAbits 0018  
                 I2C_Master_Init@c 0049                   I2C_Master_Read@a 0073  
                        _PORTAbits 0005                          _TRISCbits 0087  
                   __end_of_CONVET 01FE                          _TXSTAbits 0098  
                      _BAUDCTLbits 0187                start_initialization 000F  
                      __end_of_isr 02AA                           ??_CONVET 0073  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                      ??_forced_send 0075  
                ??_I2C_Master_Stop 0073                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 003C  
                         ?_SET_RXT 0070                           ?_SET_TXR 0070  
                 _I2C_Master_Start 0438                   _I2C_Master_Write 0425  
              __end_of_forced_send 01A1                  __size_of_send_min 003E  
                __size_of_send_seg 003E                           ?___lldiv 003C  
                         ?_initOsc 0070                     __size_of_Setup 0030  
                interrupt_function 0004                          clear_ram0 044A  
                         _PIE1bits 008C                          _send_hora 0326  
                         _PIR1bits 000C                I2C_Master_Read@temp 003C  
                 __size_of_SET_RXT 000B                   __size_of_SET_TXR 000F  
                      _forced_send 013E                         ?_send_hora 0070  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                    _I2C_Master_Init 0364  
                  _I2C_Master_Read 03CE                    _I2C_Master_Wait 040D  
                  _I2C_Master_Stop 042F                   __size_of_initOsc 005C  
                         __ptext10 042F                           __ptext11 0438  
                         __ptext12 0441                           __ptext13 03CE  
                         __ptext14 040D                           __ptext15 0364  
                         __ptext16 00D6                           __ptext17 01A1  
                         __ptext18 025A                      __size_of_main 00B7  
                         _send_min 02E8                           _send_seg 02AA  
         __end_of_I2C_Master_Start 0441           __end_of_I2C_Master_Write 042F  
                       _INTCONbits 000B                           intlevel1 0000  
                 ___lldiv@dividend 0040                        ??_send_hora 0073  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 039E  
          __end_of_I2C_Master_Read 03FE            __end_of_I2C_Master_Wait 041A  
          __end_of_I2C_Master_Stop 0438                   ___lldiv@quotient 0044  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
