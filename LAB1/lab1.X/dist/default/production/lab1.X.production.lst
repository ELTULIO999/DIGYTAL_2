

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 25 19:43:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.31
    18                           ; Generated 13/10/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0008                     _PORTDbits	set	8
   209  0007                     _PORTCbits	set	7
   210  0009                     _PORTEbits	set	9
   211  0009                     _PORTE	set	9
   212  0008                     _PORTD	set	8
   213  0007                     _PORTC	set	7
   214  0005                     _PORTA	set	5
   215  0005                     _PORTAbits	set	5
   216  0085                     _TRISAbits	set	133
   217  0089                     _TRISE	set	137
   218  0088                     _TRISD	set	136
   219  0087                     _TRISC	set	135
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  07F5                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07F5                     __initialization:
   228                           
   229                           ; Clear objects allocated to COMMON
   230  07F5  01F0               	clrf	__pbssCOMMON& (0+127)
   231  07F6  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   232  07F7  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   233  07F8  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   234  07F9  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   235  07FA  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   236  07FB  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   237  07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  07FC                     __end_of__initialization:
   241  07FC  0183               	clrf	3
   242  07FD  120A  118A  2ED4   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245  0070                     __pbssCOMMON:
   246  0070                     _E:
   247  0070                     	ds	1
   248  0071                     _w:
   249  0071                     	ds	1
   250  0072                     _W:
   251  0072                     	ds	1
   252  0073                     _m:
   253  0073                     	ds	1
   254  0074                     _M:
   255  0074                     	ds	1
   256  0075                     _l:
   257  0075                     	ds	1
   258  0076                     _L:
   259  0076                     	ds	1
   260                           
   261                           	psect	cstackCOMMON
   262  0077                     __pcstackCOMMON:
   263  0077                     ?_Setup:
   264  0077                     ??_Setup:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0077                     ?_push_E:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0077                     ??_push_E:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0077                     ?_push_C:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0077                     ??_push_C:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0077                     ?_led_C:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0077                     ??_led_C:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0077                     ?_push_D:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0077                     ??_push_D:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0077                     ?_led_D:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0077                     ??_led_D:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0077                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0077                     led_C@n:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0077                     led_D@n:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0077                     	ds	1
   309  0078                     push_C@n:
   310  0078                     push_D@n:	
   311                           ; 1 bytes @ 0x1
   312                           
   313                           
   314                           ; 1 bytes @ 0x1
   315  0078                     	ds	1
   316  0079                     push_E@n:
   317                           
   318                           ; 1 bytes @ 0x2
   319  0079                     	ds	1
   320  007A                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x3
   323  007A                     	ds	1
   324                           
   325                           	psect	maintext
   326  06D4                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 57 in file "juego_de_carreras.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0
   348 ;;      Temps:          1       0       0       0       0
   349 ;;      Totals:         1       0       0       0       0
   350 ;;Total ram usage:        1 bytes
   351 ;; Hardware stack levels required when called:    1
   352 ;; This function calls:
   353 ;;		_Setup
   354 ;;		_led_C
   355 ;;		_led_D
   356 ;;		_push_C
   357 ;;		_push_D
   358 ;;		_push_E
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _main
   366  06D4                     _main:
   367  06D4                     l862:	
   368                           ;incstack = 0
   369                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   370                           
   371                           
   372                           ;juego_de_carreras.c: 58:     Setup();
   373  06D4  120A  118A  2698  120A  118A  	fcall	_Setup
   374  06D9                     l864:
   375                           
   376                           ;juego_de_carreras.c: 63:          push_E (PORTAbits.RA0);
   377  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   378  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   379  06DB  0805               	movf	5,w	;volatile
   380  06DC  3901               	andlw	1
   381  06DD  120A  118A  270C  120A  118A  	fcall	_push_E
   382                           
   383                           ;juego_de_carreras.c: 64:          while (E==1){
   384  06E2  2F03               	goto	l872
   385  06E3                     l866:
   386                           
   387                           ;juego_de_carreras.c: 65:              push_C (PORTAbits.RA1);
   388  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   389  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   390  06E5  0C05               	rrf	5,w	;volatile
   391  06E6  3901               	andlw	1
   392  06E7  120A  118A  26AC  120A  118A  	fcall	_push_C
   393  06EC                     l868:
   394                           
   395                           ;juego_de_carreras.c: 66:              led_C (L);
   396  06EC  0876               	movf	_L,w
   397  06ED  120A  118A  2747  120A  118A  	fcall	_led_C
   398  06F2                     l870:
   399                           
   400                           ;juego_de_carreras.c: 67:              push_D (PORTAbits.RA2);
   401  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   402  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   403  06F4  0C05               	rrf	5,w	;volatile
   404  06F5  00FA               	movwf	??_main
   405  06F6  0C7A               	rrf	??_main,w
   406  06F7  3901               	andlw	1
   407  06F8  120A  118A  26C0  120A  118A  	fcall	_push_D
   408                           
   409                           ;juego_de_carreras.c: 68:              led_D ( l );
   410  06FD  0875               	movf	_l,w
   411  06FE  120A  118A  279E  120A  118A  	fcall	_led_D
   412  0703                     l872:
   413                           
   414                           ;juego_de_carreras.c: 64:          while (E==1){
   415  0703  0370               	decf	_E,w
   416  0704  1903               	btfsc	3,2
   417  0705  2F07               	goto	u71
   418  0706  2F08               	goto	u70
   419  0707                     u71:
   420  0707  2EE3               	goto	l866
   421  0708                     u70:
   422  0708  2ED9               	goto	l864
   423  0709  120A  118A  2800   	ljmp	start
   424  070C                     __end_of_main:
   425                           
   426                           	psect	text1
   427  070C                     __ptext1:	
   428 ;; *************** function _push_E *****************
   429 ;; Defined at:
   430 ;;		line 103 in file "juego_de_carreras.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;  n               1    wreg     unsigned char 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  n               1    2[COMMON] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         1       0       0       0       0
   446 ;;      Temps:          2       0       0       0       0
   447 ;;      Totals:         3       0       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _push_E
   459  070C                     _push_E:
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _push_E: [wreg+status,2+status,0]
   463                           ;push_E@n stored from wreg
   464  070C  00F9               	movwf	push_E@n
   465  070D                     l726:
   466                           
   467                           ;juego_de_carreras.c: 104:     if (n==1){
   468  070D  0379               	decf	push_E@n,w
   469  070E  1D03               	btfss	3,2
   470  070F  2F11               	goto	u11
   471  0710  2F12               	goto	u10
   472  0711                     u11:
   473  0711  2F15               	goto	l730
   474  0712                     u10:
   475  0712                     l728:
   476                           
   477                           ;juego_de_carreras.c: 105:         m=1;}
   478  0712  01F3               	clrf	_m
   479  0713  0AF3               	incf	_m,f
   480  0714  2F46               	goto	l84
   481  0715                     l730:
   482                           
   483                           ;juego_de_carreras.c: 107:         if(m==1){
   484  0715  0373               	decf	_m,w
   485  0716  1D03               	btfss	3,2
   486  0717  2F19               	goto	u21
   487  0718  2F1A               	goto	u20
   488  0719                     u21:
   489  0719  2F46               	goto	l84
   490  071A                     u20:
   491  071A                     l732:
   492                           
   493                           ;juego_de_carreras.c: 108:             PORTE=0;
   494  071A  1283               	bcf	3,5	;RP0=0, select bank0
   495  071B  1303               	bcf	3,6	;RP1=0, select bank0
   496  071C  0189               	clrf	9	;volatile
   497  071D                     l734:
   498                           
   499                           ;juego_de_carreras.c: 109:             PORTEbits.RE0 = 1;
   500  071D  1409               	bsf	9,0	;volatile
   501  071E                     l736:
   502                           
   503                           ;juego_de_carreras.c: 110:             _delay((unsigned long)((50)*(8000000/4000.0)));
   504  071E  3082               	movlw	130
   505  071F  00F8               	movwf	??_push_E+1
   506  0720  30DD               	movlw	221
   507  0721  00F7               	movwf	??_push_E
   508  0722                     u107:
   509  0722  0BF7               	decfsz	??_push_E,f
   510  0723  2F22               	goto	u107
   511  0724  0BF8               	decfsz	??_push_E+1,f
   512  0725  2F22               	goto	u107
   513  0726  2F27               	nop2
   514  0727                     l738:
   515                           
   516                           ;juego_de_carreras.c: 111:             PORTE=0;
   517  0727  1283               	bcf	3,5	;RP0=0, select bank0
   518  0728  1303               	bcf	3,6	;RP1=0, select bank0
   519  0729  0189               	clrf	9	;volatile
   520  072A                     l740:
   521                           
   522                           ;juego_de_carreras.c: 112:             PORTEbits.RE1 = 1;
   523  072A  1489               	bsf	9,1	;volatile
   524                           
   525                           ;juego_de_carreras.c: 113:             _delay((unsigned long)((50)*(8000000/4000.0)));
   526  072B  3082               	movlw	130
   527  072C  00F8               	movwf	??_push_E+1
   528  072D  30DD               	movlw	221
   529  072E  00F7               	movwf	??_push_E
   530  072F                     u117:
   531  072F  0BF7               	decfsz	??_push_E,f
   532  0730  2F2F               	goto	u117
   533  0731  0BF8               	decfsz	??_push_E+1,f
   534  0732  2F2F               	goto	u117
   535  0733  2F34               	nop2
   536  0734                     l742:
   537                           
   538                           ;juego_de_carreras.c: 114:             PORTE=0;
   539  0734  1283               	bcf	3,5	;RP0=0, select bank0
   540  0735  1303               	bcf	3,6	;RP1=0, select bank0
   541  0736  0189               	clrf	9	;volatile
   542  0737                     l744:
   543                           
   544                           ;juego_de_carreras.c: 115:             PORTEbits.RE2 = 1;
   545  0737  1509               	bsf	9,2	;volatile
   546  0738                     l746:
   547                           
   548                           ;juego_de_carreras.c: 116:             _delay((unsigned long)((50)*(8000000/4000.0)));
   549  0738  3082               	movlw	130
   550  0739  00F8               	movwf	??_push_E+1
   551  073A  30DD               	movlw	221
   552  073B  00F7               	movwf	??_push_E
   553  073C                     u127:
   554  073C  0BF7               	decfsz	??_push_E,f
   555  073D  2F3C               	goto	u127
   556  073E  0BF8               	decfsz	??_push_E+1,f
   557  073F  2F3C               	goto	u127
   558  0740  2F41               	nop2
   559                           
   560                           ;juego_de_carreras.c: 117:             PORTE=0;
   561  0741  1283               	bcf	3,5	;RP0=0, select bank0
   562  0742  1303               	bcf	3,6	;RP1=0, select bank0
   563  0743  0189               	clrf	9	;volatile
   564  0744                     l748:
   565                           
   566                           ;juego_de_carreras.c: 118:             E=1;}
   567  0744  01F0               	clrf	_E
   568  0745  0AF0               	incf	_E,f
   569  0746                     l84:
   570  0746  0008               	return
   571  0747                     __end_of_push_E:
   572                           
   573                           	psect	text2
   574  06C0                     __ptext2:	
   575 ;; *************** function _push_D *****************
   576 ;; Defined at:
   577 ;;		line 131 in file "juego_de_carreras.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  n               1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  n               1    1[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          1       0       0       0       0
   594 ;;      Totals:         2       0       0       0       0
   595 ;;Total ram usage:        2 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _push_D
   606  06C0                     _push_D:
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _push_D: [wreg+status,2+status,0]
   610                           ;push_D@n stored from wreg
   611  06C0  00F8               	movwf	push_D@n
   612  06C1                     l806:
   613                           
   614                           ;juego_de_carreras.c: 132:     if (n==1){
   615  06C1  0378               	decf	push_D@n,w
   616  06C2  1D03               	btfss	3,2
   617  06C3  2EC5               	goto	u51
   618  06C4  2EC6               	goto	u50
   619  06C5                     u51:
   620  06C5  2EC9               	goto	l810
   621  06C6                     u50:
   622  06C6                     l808:
   623                           
   624                           ;juego_de_carreras.c: 133:         w=1;}
   625  06C6  01F1               	clrf	_w
   626  06C7  0AF1               	incf	_w,f
   627  06C8  2ED3               	goto	l96
   628  06C9                     l810:
   629                           
   630                           ;juego_de_carreras.c: 135:         if(w==1){
   631  06C9  0371               	decf	_w,w
   632  06CA  1D03               	btfss	3,2
   633  06CB  2ECD               	goto	u61
   634  06CC  2ECE               	goto	u60
   635  06CD                     u61:
   636  06CD  2ED3               	goto	l96
   637  06CE                     u60:
   638  06CE                     l812:
   639                           
   640                           ;juego_de_carreras.c: 136:         w=0;
   641  06CE  01F1               	clrf	_w
   642  06CF                     l814:
   643                           
   644                           ;juego_de_carreras.c: 137:         l++;
   645  06CF  3001               	movlw	1
   646  06D0  00F7               	movwf	??_push_D
   647  06D1  0877               	movf	??_push_D,w
   648  06D2  07F5               	addwf	_l,f
   649  06D3                     l96:
   650  06D3  0008               	return
   651  06D4                     __end_of_push_D:
   652                           
   653                           	psect	text3
   654  06AC                     __ptext3:	
   655 ;; *************** function _push_C *****************
   656 ;; Defined at:
   657 ;;		line 121 in file "juego_de_carreras.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  n               1    wreg     unsigned char 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  n               1    1[COMMON] unsigned char 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         1       0       0       0       0
   673 ;;      Temps:          1       0       0       0       0
   674 ;;      Totals:         2       0       0       0       0
   675 ;;Total ram usage:        2 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _push_C
   686  06AC                     _push_C:
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _push_C: [wreg+status,2+status,0]
   690                           ;push_C@n stored from wreg
   691  06AC  00F8               	movwf	push_C@n
   692  06AD                     l750:
   693                           
   694                           ;juego_de_carreras.c: 122:     if (n==1){
   695  06AD  0378               	decf	push_C@n,w
   696  06AE  1D03               	btfss	3,2
   697  06AF  2EB1               	goto	u31
   698  06B0  2EB2               	goto	u30
   699  06B1                     u31:
   700  06B1  2EB5               	goto	l754
   701  06B2                     u30:
   702  06B2                     l752:
   703                           
   704                           ;juego_de_carreras.c: 123:         W=1;}
   705  06B2  01F2               	clrf	_W
   706  06B3  0AF2               	incf	_W,f
   707  06B4  2EBF               	goto	l90
   708  06B5                     l754:
   709                           
   710                           ;juego_de_carreras.c: 125:         if(W==1){
   711  06B5  0372               	decf	_W,w
   712  06B6  1D03               	btfss	3,2
   713  06B7  2EB9               	goto	u41
   714  06B8  2EBA               	goto	u40
   715  06B9                     u41:
   716  06B9  2EBF               	goto	l90
   717  06BA                     u40:
   718  06BA                     l756:
   719                           
   720                           ;juego_de_carreras.c: 126:         W=0;
   721  06BA  01F2               	clrf	_W
   722  06BB                     l758:
   723                           
   724                           ;juego_de_carreras.c: 127:         L++;
   725  06BB  3001               	movlw	1
   726  06BC  00F7               	movwf	??_push_C
   727  06BD  0877               	movf	??_push_C,w
   728  06BE  07F6               	addwf	_L,f
   729  06BF                     l90:
   730  06BF  0008               	return
   731  06C0                     __end_of_push_C:
   732                           
   733                           	psect	text4
   734  079E                     __ptext4:	
   735 ;; *************** function _led_D *****************
   736 ;; Defined at:
   737 ;;		line 186 in file "juego_de_carreras.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  n               1    wreg     unsigned char 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  n               1    0[COMMON] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          2       0       0       0       0
   754 ;;      Totals:         2       0       0       0       0
   755 ;;Total ram usage:        2 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _led_D
   766  079E                     _led_D:
   767  079E                     l816:	
   768                           ;incstack = 0
   769                           ; Regs used in _led_D: [wreg-fsr0h+status,2+status,0]
   770                           
   771                           
   772                           ;juego_de_carreras.c: 187:         switch (l) {
   773  079E  2FCF               	goto	l856
   774  079F                     l818:
   775                           
   776                           ;juego_de_carreras.c: 189:                 PORTD=0;
   777  079F  1283               	bcf	3,5	;RP0=0, select bank0
   778  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   779  07A1  0188               	clrf	8	;volatile
   780                           
   781                           ;juego_de_carreras.c: 190:                 break;
   782  07A2  2FF4               	goto	l126
   783  07A3                     l820:
   784                           
   785                           ;juego_de_carreras.c: 192:                 PORTD=0;
   786  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   787  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   788  07A5  0188               	clrf	8	;volatile
   789  07A6                     l822:
   790                           
   791                           ;juego_de_carreras.c: 193:                 PORTDbits.RD0 = 1;
   792  07A6  1408               	bsf	8,0	;volatile
   793                           
   794                           ;juego_de_carreras.c: 194:                 break;
   795  07A7  2FF4               	goto	l126
   796  07A8                     l824:
   797                           
   798                           ;juego_de_carreras.c: 196:                 PORTD=0;
   799  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   800  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   801  07AA  0188               	clrf	8	;volatile
   802  07AB                     l826:
   803                           
   804                           ;juego_de_carreras.c: 197:                 PORTDbits.RD1 = 1;
   805  07AB  1488               	bsf	8,1	;volatile
   806                           
   807                           ;juego_de_carreras.c: 198:                 break;
   808  07AC  2FF4               	goto	l126
   809  07AD                     l828:
   810                           
   811                           ;juego_de_carreras.c: 200:                 PORTD=0;
   812  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   813  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   814  07AF  0188               	clrf	8	;volatile
   815  07B0                     l830:
   816                           
   817                           ;juego_de_carreras.c: 201:                 PORTDbits.RD2 = 1;
   818  07B0  1508               	bsf	8,2	;volatile
   819                           
   820                           ;juego_de_carreras.c: 202:                 break;
   821  07B1  2FF4               	goto	l126
   822  07B2                     l832:
   823                           
   824                           ;juego_de_carreras.c: 204:                 PORTD=0;
   825  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   826  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   827  07B4  0188               	clrf	8	;volatile
   828  07B5                     l834:
   829                           
   830                           ;juego_de_carreras.c: 205:                 PORTDbits.RD3 = 1;
   831  07B5  1588               	bsf	8,3	;volatile
   832                           
   833                           ;juego_de_carreras.c: 206:                 break;
   834  07B6  2FF4               	goto	l126
   835  07B7                     l836:
   836                           
   837                           ;juego_de_carreras.c: 208:                 PORTD=0;
   838  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   839  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   840  07B9  0188               	clrf	8	;volatile
   841  07BA                     l838:
   842                           
   843                           ;juego_de_carreras.c: 209:                 PORTDbits.RD4 = 1;
   844  07BA  1608               	bsf	8,4	;volatile
   845                           
   846                           ;juego_de_carreras.c: 210:                 break;
   847  07BB  2FF4               	goto	l126
   848  07BC                     l840:
   849                           
   850                           ;juego_de_carreras.c: 212:                 PORTD=0;
   851  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   852  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   853  07BE  0188               	clrf	8	;volatile
   854  07BF                     l842:
   855                           
   856                           ;juego_de_carreras.c: 213:                 PORTDbits.RD5 = 1;
   857  07BF  1688               	bsf	8,5	;volatile
   858                           
   859                           ;juego_de_carreras.c: 214:                 break;
   860  07C0  2FF4               	goto	l126
   861  07C1                     l844:
   862                           
   863                           ;juego_de_carreras.c: 216:                 PORTD=0;
   864  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   865  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   866  07C3  0188               	clrf	8	;volatile
   867  07C4                     l846:
   868                           
   869                           ;juego_de_carreras.c: 217:                 PORTDbits.RD6 = 1;
   870  07C4  1708               	bsf	8,6	;volatile
   871                           
   872                           ;juego_de_carreras.c: 218:                 break;
   873  07C5  2FF4               	goto	l126
   874  07C6                     l848:
   875                           
   876                           ;juego_de_carreras.c: 220:                 PORTD=0;
   877  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   878  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   879  07C8  0188               	clrf	8	;volatile
   880  07C9                     l850:
   881                           
   882                           ;juego_de_carreras.c: 221:                 PORTDbits.RD3 = 1;
   883  07C9  1588               	bsf	8,3	;volatile
   884                           
   885                           ;juego_de_carreras.c: 222:                 break;
   886  07CA  2FF4               	goto	l126
   887  07CB                     l852:
   888                           
   889                           ;juego_de_carreras.c: 225:                 l=0;
   890  07CB  01F5               	clrf	_l
   891                           
   892                           ;juego_de_carreras.c: 226:                 E=0;
   893  07CC  01F0               	clrf	_E
   894                           
   895                           ;juego_de_carreras.c: 227:                 m=0;
   896  07CD  01F3               	clrf	_m
   897                           
   898                           ;juego_de_carreras.c: 228:                 break;
   899  07CE  2FF4               	goto	l126
   900  07CF                     l856:
   901  07CF  0875               	movf	_l,w
   902  07D0  00F7               	movwf	??_led_D
   903  07D1  01F8               	clrf	??_led_D+1
   904                           
   905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   906                           ; Switch size 1, requested type "simple"
   907                           ; Number of cases is 1, Range of values is 0 to 0
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte            4     3 (average)
   911                           ; direct_byte           11     8 (fixed)
   912                           ; jumptable            260     6 (fixed)
   913                           ;	Chosen strategy is simple_byte
   914  07D2  0878               	movf	??_led_D+1,w
   915  07D3  3A00               	xorlw	0	; case 0
   916  07D4  1903               	skipnz
   917  07D5  2FD7               	goto	l928
   918  07D6  2FCB               	goto	l852
   919  07D7                     l928:
   920                           
   921                           ; Switch size 1, requested type "simple"
   922                           ; Number of cases is 9, Range of values is 0 to 8
   923                           ; switch strategies available:
   924                           ; Name         Instructions Cycles
   925                           ; simple_byte           28    15 (average)
   926                           ; direct_byte           35     8 (fixed)
   927                           ; jumptable            260     6 (fixed)
   928                           ;	Chosen strategy is simple_byte
   929  07D7  0877               	movf	??_led_D,w
   930  07D8  3A00               	xorlw	0	; case 0
   931  07D9  1903               	skipnz
   932  07DA  2F9F               	goto	l818
   933  07DB  3A01               	xorlw	1	; case 1
   934  07DC  1903               	skipnz
   935  07DD  2FA3               	goto	l820
   936  07DE  3A03               	xorlw	3	; case 2
   937  07DF  1903               	skipnz
   938  07E0  2FA8               	goto	l824
   939  07E1  3A01               	xorlw	1	; case 3
   940  07E2  1903               	skipnz
   941  07E3  2FAD               	goto	l828
   942  07E4  3A07               	xorlw	7	; case 4
   943  07E5  1903               	skipnz
   944  07E6  2FB2               	goto	l832
   945  07E7  3A01               	xorlw	1	; case 5
   946  07E8  1903               	skipnz
   947  07E9  2FB7               	goto	l836
   948  07EA  3A03               	xorlw	3	; case 6
   949  07EB  1903               	skipnz
   950  07EC  2FBC               	goto	l840
   951  07ED  3A01               	xorlw	1	; case 7
   952  07EE  1903               	skipnz
   953  07EF  2FC1               	goto	l844
   954  07F0  3A0F               	xorlw	15	; case 8
   955  07F1  1903               	skipnz
   956  07F2  2FC6               	goto	l848
   957  07F3  2FCB               	goto	l852
   958  07F4                     l126:
   959  07F4  0008               	return
   960  07F5                     __end_of_led_D:
   961                           
   962                           	psect	text5
   963  0747                     __ptext5:	
   964 ;; *************** function _led_C *****************
   965 ;; Defined at:
   966 ;;		line 141 in file "juego_de_carreras.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  n               1    wreg     unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  n               1    0[COMMON] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0
   982 ;;      Temps:          2       0       0       0       0
   983 ;;      Totals:         2       0       0       0       0
   984 ;;Total ram usage:        2 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _led_C
   995  0747                     _led_C:
   996  0747                     l760:	
   997                           ;incstack = 0
   998                           ; Regs used in _led_C: [wreg-fsr0h+status,2+status,0]
   999                           
  1000                           
  1001                           ;juego_de_carreras.c: 142:         switch (L) {
  1002  0747  2F78               	goto	l800
  1003  0748                     l762:
  1004                           
  1005                           ;juego_de_carreras.c: 144:                 PORTC=0;
  1006  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1008  074A  0187               	clrf	7	;volatile
  1009                           
  1010                           ;juego_de_carreras.c: 145:                 break;
  1011  074B  2F9D               	goto	l111
  1012  074C                     l764:
  1013                           
  1014                           ;juego_de_carreras.c: 147:                 PORTC=0;
  1015  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1016  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1017  074E  0187               	clrf	7	;volatile
  1018  074F                     l766:
  1019                           
  1020                           ;juego_de_carreras.c: 148:                 PORTCbits.RC0 = 1;
  1021  074F  1407               	bsf	7,0	;volatile
  1022                           
  1023                           ;juego_de_carreras.c: 149:                 break;
  1024  0750  2F9D               	goto	l111
  1025  0751                     l768:
  1026                           
  1027                           ;juego_de_carreras.c: 151:                 PORTC=0;
  1028  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0753  0187               	clrf	7	;volatile
  1031  0754                     l770:
  1032                           
  1033                           ;juego_de_carreras.c: 152:                 PORTCbits.RC1 = 1;
  1034  0754  1487               	bsf	7,1	;volatile
  1035                           
  1036                           ;juego_de_carreras.c: 153:                 break;
  1037  0755  2F9D               	goto	l111
  1038  0756                     l772:
  1039                           
  1040                           ;juego_de_carreras.c: 155:                 PORTC=0;
  1041  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0758  0187               	clrf	7	;volatile
  1044  0759                     l774:
  1045                           
  1046                           ;juego_de_carreras.c: 156:                 PORTCbits.RC2 = 1;
  1047  0759  1507               	bsf	7,2	;volatile
  1048                           
  1049                           ;juego_de_carreras.c: 157:                 break;
  1050  075A  2F9D               	goto	l111
  1051  075B                     l776:
  1052                           
  1053                           ;juego_de_carreras.c: 159:                 PORTC=0;
  1054  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1055  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1056  075D  0187               	clrf	7	;volatile
  1057  075E                     l778:
  1058                           
  1059                           ;juego_de_carreras.c: 160:                 PORTCbits.RC3 = 1;
  1060  075E  1587               	bsf	7,3	;volatile
  1061                           
  1062                           ;juego_de_carreras.c: 161:                 break;
  1063  075F  2F9D               	goto	l111
  1064  0760                     l780:
  1065                           
  1066                           ;juego_de_carreras.c: 163:                 PORTC=0;
  1067  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0762  0187               	clrf	7	;volatile
  1070  0763                     l782:
  1071                           
  1072                           ;juego_de_carreras.c: 164:                 PORTCbits.RC4 = 1;
  1073  0763  1607               	bsf	7,4	;volatile
  1074                           
  1075                           ;juego_de_carreras.c: 165:                 break;
  1076  0764  2F9D               	goto	l111
  1077  0765                     l784:
  1078                           
  1079                           ;juego_de_carreras.c: 167:                 PORTC=0;
  1080  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0767  0187               	clrf	7	;volatile
  1083  0768                     l786:
  1084                           
  1085                           ;juego_de_carreras.c: 168:                 PORTCbits.RC5 = 1;
  1086  0768  1687               	bsf	7,5	;volatile
  1087                           
  1088                           ;juego_de_carreras.c: 169:                 break;
  1089  0769  2F9D               	goto	l111
  1090  076A                     l788:
  1091                           
  1092                           ;juego_de_carreras.c: 171:                 PORTC=0;
  1093  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1094  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1095  076C  0187               	clrf	7	;volatile
  1096  076D                     l790:
  1097                           
  1098                           ;juego_de_carreras.c: 172:                 PORTCbits.RC6 = 1;
  1099  076D  1707               	bsf	7,6	;volatile
  1100                           
  1101                           ;juego_de_carreras.c: 173:                 break;
  1102  076E  2F9D               	goto	l111
  1103  076F                     l792:
  1104                           
  1105                           ;juego_de_carreras.c: 175:                 PORTC=0;
  1106  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0771  0187               	clrf	7	;volatile
  1109  0772                     l794:
  1110                           
  1111                           ;juego_de_carreras.c: 176:                 PORTCbits.RC7 = 1;
  1112  0772  1787               	bsf	7,7	;volatile
  1113                           
  1114                           ;juego_de_carreras.c: 177:                 break;
  1115  0773  2F9D               	goto	l111
  1116  0774                     l796:
  1117                           
  1118                           ;juego_de_carreras.c: 180:                 L =0;
  1119  0774  01F6               	clrf	_L
  1120                           
  1121                           ;juego_de_carreras.c: 181:                 E=0;
  1122  0775  01F0               	clrf	_E
  1123                           
  1124                           ;juego_de_carreras.c: 182:                 m=0;
  1125  0776  01F3               	clrf	_m
  1126                           
  1127                           ;juego_de_carreras.c: 183:                 break;
  1128  0777  2F9D               	goto	l111
  1129  0778                     l800:
  1130  0778  0876               	movf	_L,w
  1131  0779  00F7               	movwf	??_led_C
  1132  077A  01F8               	clrf	??_led_C+1
  1133                           
  1134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1135                           ; Switch size 1, requested type "simple"
  1136                           ; Number of cases is 1, Range of values is 0 to 0
  1137                           ; switch strategies available:
  1138                           ; Name         Instructions Cycles
  1139                           ; simple_byte            4     3 (average)
  1140                           ; direct_byte           11     8 (fixed)
  1141                           ; jumptable            260     6 (fixed)
  1142                           ;	Chosen strategy is simple_byte
  1143  077B  0878               	movf	??_led_C+1,w
  1144  077C  3A00               	xorlw	0	; case 0
  1145  077D  1903               	skipnz
  1146  077E  2F80               	goto	l930
  1147  077F  2F74               	goto	l796
  1148  0780                     l930:
  1149                           
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 9, Range of values is 0 to 8
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte           28    15 (average)
  1155                           ; direct_byte           35     8 (fixed)
  1156                           ; jumptable            260     6 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158  0780  0877               	movf	??_led_C,w
  1159  0781  3A00               	xorlw	0	; case 0
  1160  0782  1903               	skipnz
  1161  0783  2F48               	goto	l762
  1162  0784  3A01               	xorlw	1	; case 1
  1163  0785  1903               	skipnz
  1164  0786  2F4C               	goto	l764
  1165  0787  3A03               	xorlw	3	; case 2
  1166  0788  1903               	skipnz
  1167  0789  2F51               	goto	l768
  1168  078A  3A01               	xorlw	1	; case 3
  1169  078B  1903               	skipnz
  1170  078C  2F56               	goto	l772
  1171  078D  3A07               	xorlw	7	; case 4
  1172  078E  1903               	skipnz
  1173  078F  2F5B               	goto	l776
  1174  0790  3A01               	xorlw	1	; case 5
  1175  0791  1903               	skipnz
  1176  0792  2F60               	goto	l780
  1177  0793  3A03               	xorlw	3	; case 6
  1178  0794  1903               	skipnz
  1179  0795  2F65               	goto	l784
  1180  0796  3A01               	xorlw	1	; case 7
  1181  0797  1903               	skipnz
  1182  0798  2F6A               	goto	l788
  1183  0799  3A0F               	xorlw	15	; case 8
  1184  079A  1903               	skipnz
  1185  079B  2F6F               	goto	l792
  1186  079C  2F74               	goto	l796
  1187  079D                     l111:
  1188  079D  0008               	return
  1189  079E                     __end_of_led_C:
  1190                           
  1191                           	psect	text6
  1192  0698                     __ptext6:	
  1193 ;; *************** function _Setup *****************
  1194 ;; Defined at:
  1195 ;;		line 75 in file "juego_de_carreras.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		status,2
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _Setup
  1224  0698                     _Setup:
  1225  0698                     l718:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _Setup: [status,2]
  1228                           
  1229                           
  1230                           ;juego_de_carreras.c: 76:     PORTA = 0;
  1231  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1233  069A  0185               	clrf	5	;volatile
  1234                           
  1235                           ;juego_de_carreras.c: 77:     PORTC = 0;
  1236  069B  0187               	clrf	7	;volatile
  1237                           
  1238                           ;juego_de_carreras.c: 78:     PORTD = 0;
  1239  069C  0188               	clrf	8	;volatile
  1240                           
  1241                           ;juego_de_carreras.c: 79:     PORTE = 0;
  1242  069D  0189               	clrf	9	;volatile
  1243                           
  1244                           ;juego_de_carreras.c: 80:     ANSEL = 0;
  1245  069E  1683               	bsf	3,5	;RP0=1, select bank3
  1246  069F  1703               	bsf	3,6	;RP1=1, select bank3
  1247  06A0  0188               	clrf	8	;volatile
  1248                           
  1249                           ;juego_de_carreras.c: 81:     ANSELH = 0;
  1250  06A1  0189               	clrf	9	;volatile
  1251                           
  1252                           ;juego_de_carreras.c: 82:     TRISC = 0;
  1253  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1254  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1255  06A4  0187               	clrf	7	;volatile
  1256                           
  1257                           ;juego_de_carreras.c: 83:     TRISD = 0;
  1258  06A5  0188               	clrf	8	;volatile
  1259                           
  1260                           ;juego_de_carreras.c: 84:     TRISE = 0;
  1261  06A6  0189               	clrf	9	;volatile
  1262  06A7                     l720:
  1263                           
  1264                           ;juego_de_carreras.c: 85:     TRISAbits.TRISA0 = 1;
  1265  06A7  1405               	bsf	5,0	;volatile
  1266  06A8                     l722:
  1267                           
  1268                           ;juego_de_carreras.c: 86:     TRISAbits.TRISA1 = 1;
  1269  06A8  1485               	bsf	5,1	;volatile
  1270  06A9                     l724:
  1271                           
  1272                           ;juego_de_carreras.c: 87:     TRISAbits.TRISA2 = 1;
  1273  06A9  1505               	bsf	5,2	;volatile
  1274                           
  1275                           ;juego_de_carreras.c: 88:     L=0;
  1276  06AA  01F6               	clrf	_L
  1277  06AB                     l70:
  1278  06AB  0008               	return
  1279  06AC                     __end_of_Setup:
  1280  007E                     btemp	set	126	;btemp
  1281  007E                     wtemp0	set	126
  1282                           
  1283                           	psect	config
  1284                           
  1285                           ;Config register CONFIG1 @ 0x2007
  1286                           ;	Oscillator Selection bits
  1287                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1288                           ;	Watchdog Timer Enable bit
  1289                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1290                           ;	Power-up Timer Enable bit
  1291                           ;	PWRTE = OFF, PWRT disabled
  1292                           ;	RE3/MCLR pin function select bit
  1293                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1294                           ;	Code Protection bit
  1295                           ;	CP = OFF, Program memory code protection is disabled
  1296                           ;	Data Code Protection bit
  1297                           ;	CPD = OFF, Data memory code protection is disabled
  1298                           ;	Brown Out Reset Selection bits
  1299                           ;	BOREN = OFF, BOR disabled
  1300                           ;	Internal External Switchover bit
  1301                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1302                           ;	Fail-Safe Clock Monitor Enabled bit
  1303                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1304                           ;	Low Voltage Programming Enable bit
  1305                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1306                           ;	In-Circuit Debugger Mode bit
  1307                           ;	DEBUG = 0x1, unprogrammed default
  1308  2007                     	org	8199
  1309  2007  20D1               	dw	8401
  1310                           
  1311                           ;Config register CONFIG2 @ 0x2008
  1312                           ;	Brown-out Reset Selection bit
  1313                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1314                           ;	Flash Program Memory Self Write Enable bits
  1315                           ;	WRT = OFF, Write protection off
  1316  2008                     	org	8200
  1317  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_push_E

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              3 COMMON     1     1      0
                              _Setup
                              _led_C
                              _led_D
                             _push_C
                             _push_D
                             _push_E
 ---------------------------------------------------------------------------------
 (1) _push_E                                               3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _push_D                                               2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _push_C                                               2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _led_D                                                3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _led_C                                                3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _led_C
   _led_D
   _push_C
   _push_D
   _push_E

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 25 19:43:49 2021

                      _E 0070                        _L 0076                        _M 0074  
                      _W 0072                        _l 0075                        _m 0073  
                      _w 0071                       l70 06AB                       l90 06BF  
                     l84 0746                       l96 06D3                       u10 0712  
                     u11 0711                       u20 071A                       u21 0719  
                     u30 06B2                       u31 06B1                       u40 06BA  
                     u41 06B9                       u50 06C6                       u51 06C5  
                     u60 06CE                       u61 06CD                       u70 0708  
                     u71 0707                      l111 079D                      l126 07F4  
                    l720 06A7                      l800 0778                      l722 06A8  
                    l810 06C9                      l730 0715                      l724 06A9  
                    l820 07A3                      l812 06CE                      l740 072A  
                    l732 071A                      l718 0698                      l830 07B0  
                    l822 07A6                      l750 06AD                      l814 06CF  
                    l806 06C1                      l742 0734                      l734 071D  
                    l726 070D                      l760 0747                      l840 07BC  
                    l832 07B2                      l824 07A8                      l816 079E  
                    l752 06B2                      l808 06C6                      l744 0737  
                    l736 071E                      l728 0712                      l930 0780  
                    l770 0754                      l762 0748                      l850 07C9  
                    l842 07BF                      l834 07B5                      l826 07AB  
                    l818 079F                      l754 06B5                      l746 0738  
                    l738 0727                      l780 0760                      l772 0756  
                    l764 074C                      l852 07CB                      l844 07C1  
                    l836 07B7                      l828 07AD                      l756 06BA  
                    l748 0744                      l790 076D                      l782 0763  
                    l774 0759                      l766 074F                      l846 07C4  
                    l838 07BA                      l758 06BB                      l870 06F2  
                    l862 06D4                      l792 076F                      l784 0765  
                    l776 075B                      l768 0751                      l928 07D7  
                    l848 07C6                      l856 07CF                      l872 0703  
                    l864 06D9                      l794 0772                      l786 0768  
                    l778 075E                      l866 06E3                      l796 0774  
                    l788 076A                      l868 06EC                      u107 0722  
                    u117 072F                      u127 073C                     _main 06D4  
                   btemp 007E                     start 0000                    ?_main 0077  
                  _ANSEL 0188                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _Setup 0698  
                  _led_C 0747                    _led_D 079E                    status 0003  
                  wtemp0 007E          __initialization 07F5             __end_of_main 070C  
                 ??_main 007A                   ?_Setup 0077                   ?_led_C 0077  
                 ?_led_D 0077                   _ANSELH 0189                   led_C@n 0077  
                 led_D@n 0077                   _push_C 06AC                   _push_D 06C0  
                 _push_E 070C  __end_of__initialization 07FC           __pcstackCOMMON 0077  
          __end_of_Setup 06AC            __end_of_led_C 079E            __end_of_led_D 07F5  
                ??_Setup 0077                  ??_led_C 0077                  ??_led_D 0077  
             __pmaintext 06D4                  ?_push_C 0077                  ?_push_D 0077  
                ?_push_E 0077                  __ptext1 070C                  __ptext2 06C0  
                __ptext3 06AC                  __ptext4 079E                  __ptext5 0747  
                __ptext6 0698          __size_of_push_C 0014          __size_of_push_D 0014  
        __size_of_push_E 003B     end_of_initialization 07FC                  push_C@n 0078  
                push_D@n 0078                  push_E@n 0079                _PORTAbits 0005  
              _PORTCbits 0007                _PORTDbits 0008                _PORTEbits 0009  
              _TRISAbits 0085           __end_of_push_C 06C0           __end_of_push_D 06D4  
         __end_of_push_E 0747      start_initialization 07F5                 ??_push_C 0077  
               ??_push_D 0077                 ??_push_E 0077              __pbssCOMMON 0070  
              ___latbits 0002           __size_of_Setup 0014           __size_of_led_C 0057  
         __size_of_led_D 0057            __size_of_main 0038  
