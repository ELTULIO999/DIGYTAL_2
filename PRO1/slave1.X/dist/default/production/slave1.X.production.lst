

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 18:51:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000B                     _INTCONbits	set	11
   368  0009                     _PORTE	set	9
   369  0008                     _PORTD	set	8
   370  0007                     _PORTC	set	7
   371  0005                     _PORTA	set	5
   372  0006                     _PORTB	set	6
   373  001F                     _ADCON0bits	set	31
   374  000C                     _PIR1bits	set	12
   375  001E                     _ADRESH	set	30
   376  0063                     _SSPIF	set	99
   377  0066                     _ADIF	set	102
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  009F                     _ADCON1	set	159
   381  0089                     _TRISE	set	137
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  008C                     _PIE1bits	set	140
   386  043B                     _TRISC3	set	1083
   387  043D                     _TRISC5	set	1085
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	cinit
   391  000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394  000F                     __initialization:
   395                           
   396                           ; Clear objects allocated to COMMON
   397  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   398  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   399  0011                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  0011                     __end_of__initialization:
   403  0011  0183               	clrf	3
   404  0012  120A  118A  2930   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMMON
   407  0078                     __pbssCOMMON:
   408  0078                     _L:
   409  0078                     	ds	1
   410  0079                     _ADCGO:
   411  0079                     	ds	1
   412                           
   413                           	psect	cstackCOMMON
   414  0070                     __pcstackCOMMON:
   415  0070                     ?_spiWrite:
   416  0070                     ??_spiWrite:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Setup:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_ADCG:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_isr:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_main:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     spiWrite@dat:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 1 bytes @ 0x0
   436  0070                     	ds	1
   437  0071                     ??_isr:
   438                           
   439                           ; 1 bytes @ 0x1
   440  0071                     	ds	3
   441  0074                     ?_spiInit:
   442  0074                     ??_ADCG:	
   443                           ; 1 bytes @ 0x4
   444                           
   445  0074                     ?_ADC_CHS_CLKS:	
   446                           ; 1 bytes @ 0x4
   447                           
   448  0074                     ADC_CHS_CLKS@S:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0074                     spiInit@sDataSample:	
   452                           ; 1 bytes @ 0x4
   453                           
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	1
   457  0075                     ??_ADC_CHS_CLKS:
   458  0075                     spiInit@sClockIdle:	
   459                           ; 1 bytes @ 0x5
   460                           
   461                           
   462                           ; 1 bytes @ 0x5
   463  0075                     	ds	1
   464  0076                     spiInit@sTransmitEdge:
   465                           
   466                           ; 1 bytes @ 0x6
   467  0076                     	ds	1
   468  0077                     ??_spiInit:
   469  0077                     ADC_CHS_CLKS@C:	
   470                           ; 1 bytes @ 0x7
   471                           
   472  0077                     spiInit@sType:	
   473                           ; 1 bytes @ 0x7
   474                           
   475                           
   476                           ; 1 bytes @ 0x7
   477  0077                     	ds	1
   478                           
   479                           	psect	cstackBANK0
   480  0020                     __pcstackBANK0:
   481  0020                     ??_Setup:
   482                           
   483                           ; 1 bytes @ 0x0
   484  0020                     	ds	1
   485  0021                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x1
   488  0021                     	ds	1
   489                           
   490                           	psect	maintext
   491  0130                     __pmaintext:	
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 52 in file "slave1.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       1       0       0       0
   514 ;;      Totals:         0       1       0       0       0
   515 ;;Total ram usage:        1 bytes
   516 ;; Hardware stack levels required when called:    4
   517 ;; This function calls:
   518 ;;		_ADCG
   519 ;;		_Setup
   520 ;;		_spiInit
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  0130                     _main:
   529  0130                     l1037:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;slave1.c: 53:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW, SPI
      +                          _IDLE_2_ACTIVE);
   535  0130  3080               	movlw	128
   536  0131  1283               	bcf	3,5	;RP0=0, select bank0
   537  0132  1303               	bcf	3,6	;RP1=0, select bank0
   538  0133  00A1               	movwf	??_main
   539  0134  0821               	movf	??_main,w
   540  0135  00F4               	movwf	spiInit@sDataSample
   541  0136  01F5               	clrf	spiInit@sClockIdle
   542  0137  01F6               	clrf	spiInit@sTransmitEdge
   543  0138  3024               	movlw	36
   544  0139  120A  118A  214C  120A  118A  	fcall	_spiInit
   545  013E                     l1039:
   546                           
   547                           ;slave1.c: 54:     Setup();
   548  013E  120A  118A  20E2  120A  118A  	fcall	_Setup
   549  0143                     l1041:
   550                           
   551                           ;slave1.c: 59:      ADCG();
   552  0143  120A  118A  2162  120A  118A  	fcall	_ADCG
   553  0148  2943               	goto	l1041
   554  0149  120A  118A  280C   	ljmp	start
   555  014C                     __end_of_main:
   556                           
   557                           	psect	text1
   558  014C                     __ptext1:	
   559 ;; *************** function _spiInit *****************
   560 ;; Defined at:
   561 ;;		line 6 in file "SSSPI.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;  sType           1    wreg     enum E1264
   564 ;;  sDataSample     1    4[COMMON] enum E1272
   565 ;;  sClockIdle      1    5[COMMON] enum E1276
   566 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  sType           1    7[COMMON] enum E1264
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         3       0       0       0       0
   579 ;;      Locals:         1       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0
   581 ;;      Totals:         4       0       0       0       0
   582 ;;Total ram usage:        4 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    2
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _spiInit
   594  014C                     _spiInit:
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   598                           ;spiInit@sType stored from wreg
   599  014C  00F7               	movwf	spiInit@sType
   600  014D                     l929:
   601                           
   602                           ;SSSPI.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSSPI.c: 7: {;SSSPI.c: 8:     TRISC5 = 0;
   603  014D  1683               	bsf	3,5	;RP0=1, select bank1
   604  014E  1303               	bcf	3,6	;RP1=0, select bank1
   605  014F  1287               	bcf	7,5	;volatile
   606                           
   607                           ;SSSPI.c: 9:     if(sType & 0b00000100)
   608  0150  1D77               	btfss	spiInit@sType,2
   609  0151  2953               	goto	u61
   610  0152  2954               	goto	u60
   611  0153                     u61:
   612  0153  2958               	goto	l935
   613  0154                     u60:
   614  0154                     l931:
   615                           
   616                           ;SSSPI.c: 10:     {;SSSPI.c: 11:         SSPSTAT = sTransmitEdge;
   617  0154  0876               	movf	spiInit@sTransmitEdge,w
   618  0155  0094               	movwf	20	;volatile
   619  0156                     l933:
   620                           
   621                           ;SSSPI.c: 12:         TRISC3 = 1;
   622  0156  1587               	bsf	7,3	;volatile
   623                           
   624                           ;SSSPI.c: 13:     }
   625  0157  295C               	goto	l117
   626  0158                     l935:
   627                           
   628                           ;SSSPI.c: 15:     {;SSSPI.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
   629  0158  0874               	movf	spiInit@sDataSample,w
   630  0159  0476               	iorwf	spiInit@sTransmitEdge,w
   631  015A  0094               	movwf	20	;volatile
   632  015B                     l937:
   633                           
   634                           ;SSSPI.c: 17:         TRISC3 = 0;
   635  015B  1187               	bcf	7,3	;volatile
   636  015C                     l117:	
   637                           ;SSSPI.c: 18:     }
   638                           
   639                           
   640                           ;SSSPI.c: 20:     SSPCON = sType | sClockIdle;
   641  015C  0877               	movf	spiInit@sType,w
   642  015D  0475               	iorwf	spiInit@sClockIdle,w
   643  015E  1283               	bcf	3,5	;RP0=0, select bank0
   644  015F  1303               	bcf	3,6	;RP1=0, select bank0
   645  0160  0094               	movwf	20	;volatile
   646  0161                     l118:
   647  0161  0008               	return
   648  0162                     __end_of_spiInit:
   649                           
   650                           	psect	text2
   651  00E2                     __ptext2:	
   652 ;; *************** function _Setup *****************
   653 ;; Defined at:
   654 ;;		line 65 in file "slave1.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       1       0       0       0
   671 ;;      Totals:         0       1       0       0       0
   672 ;;Total ram usage:        1 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    3
   675 ;; This function calls:
   676 ;;		_ADC_CHS_CLKS
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _Setup
   684  00E2                     _Setup:
   685  00E2                     l1001:	
   686                           ;incstack = 0
   687                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   688                           
   689                           
   690                           ;slave1.c: 66:     ADC_CHS_CLKS (0,2);
   691  00E2  3002               	movlw	2
   692  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   693  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   694  00E5  00A0               	movwf	??_Setup
   695  00E6  0820               	movf	??_Setup,w
   696  00E7  00F4               	movwf	ADC_CHS_CLKS@S
   697  00E8  3000               	movlw	0
   698  00E9  120A  118A  2015  120A  118A  	fcall	_ADC_CHS_CLKS
   699  00EE                     l1003:
   700                           
   701                           ;slave1.c: 67:     PIE1bits.ADIE=1;
   702  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   703  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   704  00F0  170C               	bsf	12,6	;volatile
   705  00F1                     l1005:
   706                           
   707                           ;slave1.c: 69:     PORTA = 0;
   708  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   709  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   710  00F3  0185               	clrf	5	;volatile
   711  00F4                     l1007:
   712                           
   713                           ;slave1.c: 70:     PORTB = 0;
   714  00F4  0186               	clrf	6	;volatile
   715  00F5                     l1009:
   716                           
   717                           ;slave1.c: 71:     PORTC = 0;
   718  00F5  0187               	clrf	7	;volatile
   719  00F6                     l1011:
   720                           
   721                           ;slave1.c: 72:     PORTD = 0;
   722  00F6  0188               	clrf	8	;volatile
   723  00F7                     l1013:
   724                           
   725                           ;slave1.c: 73:     PORTE = 0;
   726  00F7  0189               	clrf	9	;volatile
   727  00F8                     l1015:
   728                           
   729                           ;slave1.c: 75:     TRISA = 0B00100001;
   730  00F8  3021               	movlw	33
   731  00F9  1683               	bsf	3,5	;RP0=1, select bank1
   732  00FA  1303               	bcf	3,6	;RP1=0, select bank1
   733  00FB  0085               	movwf	5	;volatile
   734  00FC                     l1017:
   735                           
   736                           ;slave1.c: 76:     TRISB = 0B00000000;
   737  00FC  0186               	clrf	6	;volatile
   738  00FD                     l1019:
   739                           
   740                           ;slave1.c: 77:     TRISD = 0B00000000;
   741  00FD  0188               	clrf	8	;volatile
   742  00FE                     l1021:
   743                           
   744                           ;slave1.c: 78:     TRISE = 0B0000;
   745  00FE  0189               	clrf	9	;volatile
   746  00FF                     l1023:
   747                           
   748                           ;slave1.c: 80:     ANSEL = 0B00000001;
   749  00FF  3001               	movlw	1
   750  0100  1683               	bsf	3,5	;RP0=1, select bank3
   751  0101  1703               	bsf	3,6	;RP1=1, select bank3
   752  0102  0088               	movwf	8	;volatile
   753  0103                     l1025:
   754                           
   755                           ;slave1.c: 83:     INTCONbits.GIE=1;
   756  0103  178B               	bsf	11,7	;volatile
   757  0104                     l1027:
   758                           
   759                           ;slave1.c: 84:     INTCONbits.PEIE=1;
   760  0104  170B               	bsf	11,6	;volatile
   761  0105                     l1029:
   762                           
   763                           ;slave1.c: 85:      PIR1bits.ADIF=0;
   764  0105  1283               	bcf	3,5	;RP0=0, select bank0
   765  0106  1303               	bcf	3,6	;RP1=0, select bank0
   766  0107  130C               	bcf	12,6	;volatile
   767  0108                     l1031:
   768                           
   769                           ;slave1.c: 86:     PIR1bits.ADIF=0;
   770  0108  130C               	bcf	12,6	;volatile
   771  0109                     l1033:
   772                           
   773                           ;slave1.c: 87:     PIR1bits.SSPIF = 0;
   774  0109  118C               	bcf	12,3	;volatile
   775  010A                     l1035:
   776                           
   777                           ;slave1.c: 88:     PIE1bits.SSPIE = 1;
   778  010A  1683               	bsf	3,5	;RP0=1, select bank1
   779  010B  1303               	bcf	3,6	;RP1=0, select bank1
   780  010C  158C               	bsf	12,3	;volatile
   781  010D                     l66:
   782  010D  0008               	return
   783  010E                     __end_of_Setup:
   784                           
   785                           	psect	text3
   786  0015                     __ptext3:	
   787 ;; *************** function _ADC_CHS_CLKS *****************
   788 ;; Defined at:
   789 ;;		line 4 in file "ADC.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  C               1    wreg     unsigned char 
   792 ;;  S               1    4[COMMON] unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  C               1    7[COMMON] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         1       0       0       0       0
   805 ;;      Locals:         1       0       0       0       0
   806 ;;      Temps:          2       0       0       0       0
   807 ;;      Totals:         4       0       0       0       0
   808 ;;Total ram usage:        4 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    2
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_Setup
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _ADC_CHS_CLKS
   820  0015                     _ADC_CHS_CLKS:
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _ADC_CHS_CLKS: [wreg-fsr0h+status,2+status,0]
   824                           ;ADC_CHS_CLKS@C stored from wreg
   825  0015  00F7               	movwf	ADC_CHS_CLKS@C
   826  0016                     l883:
   827                           
   828                           ;ADC.c: 5: switch (C) {
   829  0016  28AA               	goto	l923
   830  0017                     l78:	
   831                           ;ADC.c: 8:     case 0:
   832                           
   833                           
   834                           ;ADC.c: 9:         ADCON0bits.CHS3 = 0;
   835  0017  1283               	bcf	3,5	;RP0=0, select bank0
   836  0018  1303               	bcf	3,6	;RP1=0, select bank0
   837  0019  129F               	bcf	31,5	;volatile
   838                           
   839                           ;ADC.c: 10:         ADCON0bits.CHS2 = 0;
   840  001A  121F               	bcf	31,4	;volatile
   841                           
   842                           ;ADC.c: 11:         ADCON0bits.CHS1 = 0;
   843  001B  119F               	bcf	31,3	;volatile
   844                           
   845                           ;ADC.c: 12:         ADCON0bits.CHS0 = 0;
   846  001C  111F               	bcf	31,2	;volatile
   847                           
   848                           ;ADC.c: 13:         ADCON0bits.ADON = 1;
   849  001D  141F               	bsf	31,0	;volatile
   850                           
   851                           ;ADC.c: 14:         ADCON0bits.GO = 1;
   852  001E  149F               	bsf	31,1	;volatile
   853  001F                     l885:
   854                           
   855                           ;ADC.c: 15:         ADCON1 = 0;
   856  001F  1683               	bsf	3,5	;RP0=1, select bank1
   857  0020  1303               	bcf	3,6	;RP1=0, select bank1
   858  0021  019F               	clrf	31	;volatile
   859                           
   860                           ;ADC.c: 16:     break;
   861  0022  28E1               	goto	l101
   862  0023                     l80:	
   863                           ;ADC.c: 17:     case 1:
   864                           
   865                           
   866                           ;ADC.c: 18:         ADCON0bits.CHS3=0;
   867  0023  1283               	bcf	3,5	;RP0=0, select bank0
   868  0024  1303               	bcf	3,6	;RP1=0, select bank0
   869  0025  129F               	bcf	31,5	;volatile
   870                           
   871                           ;ADC.c: 19:         ADCON0bits.CHS2=0;
   872  0026  121F               	bcf	31,4	;volatile
   873                           
   874                           ;ADC.c: 20:         ADCON0bits.CHS1=0;
   875  0027  119F               	bcf	31,3	;volatile
   876                           
   877                           ;ADC.c: 21:         ADCON0bits.CHS0=1;
   878  0028  151F               	bsf	31,2	;volatile
   879                           
   880                           ;ADC.c: 22:         ADCON0bits.ADON = 1;
   881  0029  141F               	bsf	31,0	;volatile
   882                           
   883                           ;ADC.c: 23:         ADCON0bits.GO = 1;
   884  002A  149F               	bsf	31,1	;volatile
   885  002B  281F               	goto	l885
   886  002C                     l81:	
   887                           ;ADC.c: 26:     case 2:
   888                           
   889                           
   890                           ;ADC.c: 27:         ADCON0bits.CHS3=0;
   891  002C  1283               	bcf	3,5	;RP0=0, select bank0
   892  002D  1303               	bcf	3,6	;RP1=0, select bank0
   893  002E  129F               	bcf	31,5	;volatile
   894                           
   895                           ;ADC.c: 28:         ADCON0bits.CHS2=0;
   896  002F  121F               	bcf	31,4	;volatile
   897                           
   898                           ;ADC.c: 29:         ADCON0bits.CHS1=1;
   899  0030  159F               	bsf	31,3	;volatile
   900                           
   901                           ;ADC.c: 30:         ADCON0bits.CHS0=0;
   902  0031  111F               	bcf	31,2	;volatile
   903                           
   904                           ;ADC.c: 31:         ADCON0bits.ADON = 1;
   905  0032  141F               	bsf	31,0	;volatile
   906                           
   907                           ;ADC.c: 32:         ADCON0bits.GO = 1;
   908  0033  149F               	bsf	31,1	;volatile
   909  0034  281F               	goto	l885
   910  0035                     l82:	
   911                           ;ADC.c: 35:     case 3:
   912                           
   913                           
   914                           ;ADC.c: 36:         ADCON0bits.CHS3=0;
   915  0035  1283               	bcf	3,5	;RP0=0, select bank0
   916  0036  1303               	bcf	3,6	;RP1=0, select bank0
   917  0037  129F               	bcf	31,5	;volatile
   918                           
   919                           ;ADC.c: 37:         ADCON0bits.CHS2=0;
   920  0038  121F               	bcf	31,4	;volatile
   921                           
   922                           ;ADC.c: 38:         ADCON0bits.CHS1=1;
   923  0039  159F               	bsf	31,3	;volatile
   924                           
   925                           ;ADC.c: 39:         ADCON0bits.CHS0=1;
   926  003A  151F               	bsf	31,2	;volatile
   927                           
   928                           ;ADC.c: 40:         ADCON0bits.ADON = 1;
   929  003B  141F               	bsf	31,0	;volatile
   930                           
   931                           ;ADC.c: 41:         ADCON0bits.GO = 1;
   932  003C  149F               	bsf	31,1	;volatile
   933  003D  281F               	goto	l885
   934  003E                     l83:	
   935                           ;ADC.c: 44:     case 4:
   936                           
   937                           
   938                           ;ADC.c: 45:         ADCON0bits.CHS3=0;
   939  003E  1283               	bcf	3,5	;RP0=0, select bank0
   940  003F  1303               	bcf	3,6	;RP1=0, select bank0
   941  0040  129F               	bcf	31,5	;volatile
   942                           
   943                           ;ADC.c: 46:         ADCON0bits.CHS2=1;
   944  0041  161F               	bsf	31,4	;volatile
   945                           
   946                           ;ADC.c: 47:         ADCON0bits.CHS1=0;
   947  0042  119F               	bcf	31,3	;volatile
   948                           
   949                           ;ADC.c: 48:         ADCON0bits.CHS0=0;
   950  0043  111F               	bcf	31,2	;volatile
   951                           
   952                           ;ADC.c: 49:         ADCON0bits.ADON = 1;
   953  0044  141F               	bsf	31,0	;volatile
   954                           
   955                           ;ADC.c: 50:         ADCON0bits.GO = 1;
   956  0045  149F               	bsf	31,1	;volatile
   957  0046  281F               	goto	l885
   958  0047                     l84:	
   959                           ;ADC.c: 53:     case 5:
   960                           
   961                           
   962                           ;ADC.c: 54:         ADCON0bits.CHS3=0;
   963  0047  1283               	bcf	3,5	;RP0=0, select bank0
   964  0048  1303               	bcf	3,6	;RP1=0, select bank0
   965  0049  129F               	bcf	31,5	;volatile
   966                           
   967                           ;ADC.c: 55:         ADCON0bits.CHS2=1;
   968  004A  161F               	bsf	31,4	;volatile
   969                           
   970                           ;ADC.c: 56:         ADCON0bits.CHS1=0;
   971  004B  119F               	bcf	31,3	;volatile
   972                           
   973                           ;ADC.c: 57:         ADCON0bits.CHS0=1;
   974  004C  151F               	bsf	31,2	;volatile
   975                           
   976                           ;ADC.c: 58:         ADCON0bits.ADON = 1;
   977  004D  141F               	bsf	31,0	;volatile
   978                           
   979                           ;ADC.c: 59:         ADCON0bits.GO = 1;
   980  004E  149F               	bsf	31,1	;volatile
   981  004F  281F               	goto	l885
   982  0050                     l85:	
   983                           ;ADC.c: 62:     case 6:
   984                           
   985                           
   986                           ;ADC.c: 63:         ADCON0bits.CHS3=0;
   987  0050  1283               	bcf	3,5	;RP0=0, select bank0
   988  0051  1303               	bcf	3,6	;RP1=0, select bank0
   989  0052  129F               	bcf	31,5	;volatile
   990                           
   991                           ;ADC.c: 64:         ADCON0bits.CHS2=1;
   992  0053  161F               	bsf	31,4	;volatile
   993                           
   994                           ;ADC.c: 65:         ADCON0bits.CHS1=1;
   995  0054  159F               	bsf	31,3	;volatile
   996                           
   997                           ;ADC.c: 66:         ADCON0bits.CHS0=0;
   998  0055  111F               	bcf	31,2	;volatile
   999                           
  1000                           ;ADC.c: 67:         ADCON0bits.ADON = 1;
  1001  0056  141F               	bsf	31,0	;volatile
  1002                           
  1003                           ;ADC.c: 68:         ADCON0bits.GO = 1;
  1004  0057  149F               	bsf	31,1	;volatile
  1005  0058  281F               	goto	l885
  1006  0059                     l86:	
  1007                           ;ADC.c: 71:     case 7:
  1008                           
  1009                           
  1010                           ;ADC.c: 72:         ADCON0bits.CHS3=0;
  1011  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1012  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1013  005B  129F               	bcf	31,5	;volatile
  1014                           
  1015                           ;ADC.c: 73:         ADCON0bits.CHS2=1;
  1016  005C  161F               	bsf	31,4	;volatile
  1017                           
  1018                           ;ADC.c: 74:         ADCON0bits.CHS1=1;
  1019  005D  159F               	bsf	31,3	;volatile
  1020                           
  1021                           ;ADC.c: 75:         ADCON0bits.CHS0=1;
  1022  005E  151F               	bsf	31,2	;volatile
  1023                           
  1024                           ;ADC.c: 76:         ADCON0bits.ADON = 1;
  1025  005F  141F               	bsf	31,0	;volatile
  1026                           
  1027                           ;ADC.c: 77:         ADCON0bits.GO = 1;
  1028  0060  149F               	bsf	31,1	;volatile
  1029  0061  281F               	goto	l885
  1030  0062                     l87:	
  1031                           ;ADC.c: 80:     case 8:
  1032                           
  1033                           
  1034                           ;ADC.c: 81:         ADCON0bits.CHS3=1;
  1035  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0064  169F               	bsf	31,5	;volatile
  1038                           
  1039                           ;ADC.c: 82:         ADCON0bits.CHS2=0;
  1040  0065  121F               	bcf	31,4	;volatile
  1041                           
  1042                           ;ADC.c: 83:         ADCON0bits.CHS1=0;
  1043  0066  119F               	bcf	31,3	;volatile
  1044                           
  1045                           ;ADC.c: 84:         ADCON0bits.CHS0=0;
  1046  0067  111F               	bcf	31,2	;volatile
  1047                           
  1048                           ;ADC.c: 85:         ADCON0bits.ADON = 1;
  1049  0068  141F               	bsf	31,0	;volatile
  1050                           
  1051                           ;ADC.c: 86:         ADCON0bits.GO = 1;
  1052  0069  149F               	bsf	31,1	;volatile
  1053  006A  281F               	goto	l885
  1054  006B                     l88:	
  1055                           ;ADC.c: 89:     case 9:
  1056                           
  1057                           
  1058                           ;ADC.c: 90:         ADCON0bits.CHS3=1;
  1059  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1060  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1061  006D  169F               	bsf	31,5	;volatile
  1062                           
  1063                           ;ADC.c: 91:         ADCON0bits.CHS2=0;
  1064  006E  121F               	bcf	31,4	;volatile
  1065                           
  1066                           ;ADC.c: 92:         ADCON0bits.CHS1=0;
  1067  006F  119F               	bcf	31,3	;volatile
  1068                           
  1069                           ;ADC.c: 93:         ADCON0bits.CHS0=1;
  1070  0070  151F               	bsf	31,2	;volatile
  1071                           
  1072                           ;ADC.c: 94:         ADCON0bits.ADON = 1;
  1073  0071  141F               	bsf	31,0	;volatile
  1074                           
  1075                           ;ADC.c: 95:         ADCON0bits.GO = 1;
  1076  0072  149F               	bsf	31,1	;volatile
  1077  0073  281F               	goto	l885
  1078  0074                     l89:	
  1079                           ;ADC.c: 98:     case 10:
  1080                           
  1081                           
  1082                           ;ADC.c: 99:         ADCON0bits.CHS3=1;
  1083  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0076  169F               	bsf	31,5	;volatile
  1086                           
  1087                           ;ADC.c: 100:         ADCON0bits.CHS2=0;
  1088  0077  121F               	bcf	31,4	;volatile
  1089                           
  1090                           ;ADC.c: 101:         ADCON0bits.CHS1=1;
  1091  0078  159F               	bsf	31,3	;volatile
  1092                           
  1093                           ;ADC.c: 102:         ADCON0bits.CHS0=0;
  1094  0079  111F               	bcf	31,2	;volatile
  1095                           
  1096                           ;ADC.c: 103:         ADCON0bits.ADON = 1;
  1097  007A  141F               	bsf	31,0	;volatile
  1098                           
  1099                           ;ADC.c: 104:         ADCON0bits.GO = 1;
  1100  007B  149F               	bsf	31,1	;volatile
  1101  007C  281F               	goto	l885
  1102  007D                     l90:	
  1103                           ;ADC.c: 107:     case 11:
  1104                           
  1105                           
  1106                           ;ADC.c: 108:         ADCON0bits.CHS3=1;
  1107  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1108  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1109  007F  169F               	bsf	31,5	;volatile
  1110                           
  1111                           ;ADC.c: 109:         ADCON0bits.CHS2=0;
  1112  0080  121F               	bcf	31,4	;volatile
  1113                           
  1114                           ;ADC.c: 110:         ADCON0bits.CHS1=1;
  1115  0081  159F               	bsf	31,3	;volatile
  1116                           
  1117                           ;ADC.c: 111:         ADCON0bits.CHS0=1;
  1118  0082  151F               	bsf	31,2	;volatile
  1119                           
  1120                           ;ADC.c: 112:         ADCON0bits.ADON = 1;
  1121  0083  141F               	bsf	31,0	;volatile
  1122                           
  1123                           ;ADC.c: 113:         ADCON0bits.GO = 1;
  1124  0084  149F               	bsf	31,1	;volatile
  1125  0085  281F               	goto	l885
  1126  0086                     l91:	
  1127                           ;ADC.c: 116:     case 12:
  1128                           
  1129                           
  1130                           ;ADC.c: 117:         ADCON0bits.CHS3=1;
  1131  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0088  169F               	bsf	31,5	;volatile
  1134                           
  1135                           ;ADC.c: 118:         ADCON0bits.CHS2=1;
  1136  0089  161F               	bsf	31,4	;volatile
  1137                           
  1138                           ;ADC.c: 119:         ADCON0bits.CHS1=0;
  1139  008A  119F               	bcf	31,3	;volatile
  1140                           
  1141                           ;ADC.c: 120:         ADCON0bits.CHS0=0;
  1142  008B  111F               	bcf	31,2	;volatile
  1143                           
  1144                           ;ADC.c: 121:         ADCON0bits.ADON = 1;
  1145  008C  141F               	bsf	31,0	;volatile
  1146                           
  1147                           ;ADC.c: 122:         ADCON0bits.GO = 1;
  1148  008D  149F               	bsf	31,1	;volatile
  1149  008E  281F               	goto	l885
  1150  008F                     l92:	
  1151                           ;ADC.c: 125:     case 13:
  1152                           
  1153                           
  1154                           ;ADC.c: 126:         ADCON0bits.CHS3=1;
  1155  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0091  169F               	bsf	31,5	;volatile
  1158                           
  1159                           ;ADC.c: 127:         ADCON0bits.CHS2=1;
  1160  0092  161F               	bsf	31,4	;volatile
  1161                           
  1162                           ;ADC.c: 128:         ADCON0bits.CHS1=0;
  1163  0093  119F               	bcf	31,3	;volatile
  1164                           
  1165                           ;ADC.c: 129:         ADCON0bits.CHS0=1;
  1166  0094  151F               	bsf	31,2	;volatile
  1167                           
  1168                           ;ADC.c: 130:         ADCON0bits.ADON = 1;
  1169  0095  141F               	bsf	31,0	;volatile
  1170                           
  1171                           ;ADC.c: 131:         ADCON0bits.GO = 1;
  1172  0096  149F               	bsf	31,1	;volatile
  1173  0097  281F               	goto	l885
  1174  0098                     l93:	
  1175                           ;ADC.c: 134:     case 14:
  1176                           
  1177                           
  1178                           ;ADC.c: 135:         ADCON0bits.CHS3=1;
  1179  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1181  009A  169F               	bsf	31,5	;volatile
  1182                           
  1183                           ;ADC.c: 136:         ADCON0bits.CHS2=1;
  1184  009B  161F               	bsf	31,4	;volatile
  1185                           
  1186                           ;ADC.c: 137:         ADCON0bits.CHS1=1;
  1187  009C  159F               	bsf	31,3	;volatile
  1188                           
  1189                           ;ADC.c: 138:         ADCON0bits.CHS0=0;
  1190  009D  111F               	bcf	31,2	;volatile
  1191                           
  1192                           ;ADC.c: 139:         ADCON0bits.ADON = 1;
  1193  009E  141F               	bsf	31,0	;volatile
  1194                           
  1195                           ;ADC.c: 140:         ADCON0bits.GO = 1;
  1196  009F  149F               	bsf	31,1	;volatile
  1197  00A0  281F               	goto	l885
  1198  00A1                     l94:	
  1199                           ;ADC.c: 143:     default:
  1200                           
  1201                           
  1202                           ;ADC.c: 144:         ADCON0bits.CHS3=1;
  1203  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1204  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1205  00A3  169F               	bsf	31,5	;volatile
  1206                           
  1207                           ;ADC.c: 145:         ADCON0bits.CHS2=1;
  1208  00A4  161F               	bsf	31,4	;volatile
  1209                           
  1210                           ;ADC.c: 146:         ADCON0bits.CHS1=1;
  1211  00A5  159F               	bsf	31,3	;volatile
  1212                           
  1213                           ;ADC.c: 147:         ADCON0bits.CHS0=1;
  1214  00A6  151F               	bsf	31,2	;volatile
  1215                           
  1216                           ;ADC.c: 148:         ADCON0bits.ADON = 1;
  1217  00A7  141F               	bsf	31,0	;volatile
  1218                           
  1219                           ;ADC.c: 149:         ADCON0bits.GO = 1;
  1220  00A8  149F               	bsf	31,1	;volatile
  1221  00A9  281F               	goto	l885
  1222  00AA                     l923:
  1223  00AA  0877               	movf	ADC_CHS_CLKS@C,w
  1224  00AB  00F5               	movwf	??_ADC_CHS_CLKS
  1225  00AC  01F6               	clrf	??_ADC_CHS_CLKS+1
  1226                           
  1227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 1, Range of values is 0 to 0
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte            4     3 (average)
  1233                           ; direct_byte           11     8 (fixed)
  1234                           ; jumptable            260     6 (fixed)
  1235                           ;	Chosen strategy is simple_byte
  1236  00AD  0876               	movf	??_ADC_CHS_CLKS+1,w
  1237  00AE  3A00               	xorlw	0	; case 0
  1238  00AF  1903               	skipnz
  1239  00B0  28B2               	goto	l1063
  1240  00B1  28A1               	goto	l94
  1241  00B2                     l1063:
  1242                           
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 15, Range of values is 0 to 14
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte           46    24 (average)
  1248                           ; direct_byte           53     8 (fixed)
  1249                           ; jumptable            260     6 (fixed)
  1250                           ;	Chosen strategy is simple_byte
  1251  00B2  0875               	movf	??_ADC_CHS_CLKS,w
  1252  00B3  3A00               	xorlw	0	; case 0
  1253  00B4  1903               	skipnz
  1254  00B5  2817               	goto	l78
  1255  00B6  3A01               	xorlw	1	; case 1
  1256  00B7  1903               	skipnz
  1257  00B8  2823               	goto	l80
  1258  00B9  3A03               	xorlw	3	; case 2
  1259  00BA  1903               	skipnz
  1260  00BB  282C               	goto	l81
  1261  00BC  3A01               	xorlw	1	; case 3
  1262  00BD  1903               	skipnz
  1263  00BE  2835               	goto	l82
  1264  00BF  3A07               	xorlw	7	; case 4
  1265  00C0  1903               	skipnz
  1266  00C1  283E               	goto	l83
  1267  00C2  3A01               	xorlw	1	; case 5
  1268  00C3  1903               	skipnz
  1269  00C4  2847               	goto	l84
  1270  00C5  3A03               	xorlw	3	; case 6
  1271  00C6  1903               	skipnz
  1272  00C7  2850               	goto	l85
  1273  00C8  3A01               	xorlw	1	; case 7
  1274  00C9  1903               	skipnz
  1275  00CA  2859               	goto	l86
  1276  00CB  3A0F               	xorlw	15	; case 8
  1277  00CC  1903               	skipnz
  1278  00CD  2862               	goto	l87
  1279  00CE  3A01               	xorlw	1	; case 9
  1280  00CF  1903               	skipnz
  1281  00D0  286B               	goto	l88
  1282  00D1  3A03               	xorlw	3	; case 10
  1283  00D2  1903               	skipnz
  1284  00D3  2874               	goto	l89
  1285  00D4  3A01               	xorlw	1	; case 11
  1286  00D5  1903               	skipnz
  1287  00D6  287D               	goto	l90
  1288  00D7  3A07               	xorlw	7	; case 12
  1289  00D8  1903               	skipnz
  1290  00D9  2886               	goto	l91
  1291  00DA  3A01               	xorlw	1	; case 13
  1292  00DB  1903               	skipnz
  1293  00DC  288F               	goto	l92
  1294  00DD  3A03               	xorlw	3	; case 14
  1295  00DE  1903               	skipnz
  1296  00DF  2898               	goto	l93
  1297  00E0  28A1               	goto	l94
  1298  00E1                     l101:
  1299  00E1  0008               	return
  1300  00E2                     __end_of_ADC_CHS_CLKS:
  1301                           
  1302                           	psect	text4
  1303  0162                     __ptext4:	
  1304 ;; *************** function _ADCG *****************
  1305 ;; Defined at:
  1306 ;;		line 94 in file "slave1.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    2
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _ADCG
  1336  0162                     _ADCG:
  1337  0162                     l821:	
  1338                           ;incstack = 0
  1339                           ; Regs used in _ADCG: [wreg+status,2]
  1340                           
  1341                           
  1342                           ;slave1.c: 95:     if(ADCGO > 20){
  1343  0162  3015               	movlw	21
  1344  0163  0279               	subwf	_ADCGO,w
  1345  0164  1C03               	skipc
  1346  0165  2967               	goto	u21
  1347  0166  2968               	goto	u20
  1348  0167                     u21:
  1349  0167  296C               	goto	l70
  1350  0168                     u20:
  1351  0168                     l823:
  1352                           
  1353                           ;slave1.c: 96:         ADCGO = 0;
  1354  0168  01F9               	clrf	_ADCGO
  1355  0169                     l825:
  1356                           
  1357                           ;slave1.c: 97:         ADCON0bits.GO_nDONE = 1;
  1358  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1359  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1360  016B  149F               	bsf	31,1	;volatile
  1361  016C                     l70:
  1362  016C  0008               	return
  1363  016D                     __end_of_ADCG:
  1364                           
  1365                           	psect	text5
  1366  010E                     __ptext5:	
  1367 ;; *************** function _isr *****************
  1368 ;; Defined at:
  1369 ;;		line 38 in file "slave1.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0
  1385 ;;      Temps:          3       0       0       0       0
  1386 ;;      Totals:         3       0       0       0       0
  1387 ;;Total ram usage:        3 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    1
  1390 ;; This function calls:
  1391 ;;		_spiWrite
  1392 ;; This function is called by:
  1393 ;;		Interrupt level 1
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _isr
  1399  010E                     _isr:
  1400  010E                     i1l829:
  1401                           
  1402                           ;slave1.c: 39:     if (ADIF==1){
  1403  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1404  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0110  1F0C               	btfss	12,6	;volatile
  1406  0111  2913               	goto	u4_21
  1407  0112  2914               	goto	u4_20
  1408  0113                     u4_21:
  1409  0113  291A               	goto	i1l837
  1410  0114                     u4_20:
  1411  0114                     i1l831:
  1412                           
  1413                           ;slave1.c: 40:         L=ADRESH;
  1414  0114  081E               	movf	30,w	;volatile
  1415  0115  00F1               	movwf	??_isr
  1416  0116  0871               	movf	??_isr,w
  1417  0117  00F8               	movwf	_L
  1418  0118                     i1l833:
  1419                           
  1420                           ;slave1.c: 41:         PIR1bits.ADIF=0;
  1421  0118  130C               	bcf	12,6	;volatile
  1422  0119                     i1l835:
  1423                           
  1424                           ;slave1.c: 42:         ADCON0bits.GO=1;}
  1425  0119  149F               	bsf	31,1	;volatile
  1426  011A                     i1l837:
  1427                           
  1428                           ;slave1.c: 43:     if(SSPIF == 1){
  1429  011A  1D8C               	btfss	12,3	;volatile
  1430  011B  291D               	goto	u5_21
  1431  011C  291E               	goto	u5_20
  1432  011D                     u5_21:
  1433  011D  2929               	goto	i1l55
  1434  011E                     u5_20:
  1435  011E                     i1l839:
  1436                           
  1437                           ;slave1.c: 44:         PORTB=L;
  1438  011E  0878               	movf	_L,w
  1439  011F  0086               	movwf	6	;volatile
  1440  0120                     i1l841:
  1441                           
  1442                           ;slave1.c: 45:         spiWrite(L);
  1443  0120  0878               	movf	_L,w
  1444  0121  120A  118A  216D  120A  118A  	fcall	_spiWrite
  1445  0126                     i1l843:
  1446                           
  1447                           ;slave1.c: 46:         SSPIF = 0;
  1448  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0128  118C               	bcf	12,3	;volatile
  1451  0129                     i1l55:
  1452  0129  0873               	movf	??_isr+2,w
  1453  012A  008A               	movwf	10
  1454  012B  0E72               	swapf	??_isr+1,w
  1455  012C  0083               	movwf	3
  1456  012D  0EFE               	swapf	btemp,f
  1457  012E  0E7E               	swapf	btemp,w
  1458  012F  0009               	retfie
  1459  0130                     __end_of_isr:
  1460                           
  1461                           	psect	intentry
  1462  0004                     __pintentry:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1465                           
  1466  0004                     interrupt_function:
  1467  007E                     saved_w	set	btemp
  1468  0004  00FE               	movwf	btemp
  1469  0005  0E03               	swapf	3,w
  1470  0006  00F2               	movwf	??_isr+1
  1471  0007  080A               	movf	10,w
  1472  0008  00F3               	movwf	??_isr+2
  1473  0009  120A  118A  290E   	ljmp	_isr
  1474                           
  1475                           	psect	text6
  1476  016D                     __ptext6:	
  1477 ;; *************** function _spiWrite *****************
  1478 ;; Defined at:
  1479 ;;		line 28 in file "SSSPI.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  dat             1    wreg     unsigned char 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  dat             1    0[COMMON] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       0       0       0       0
  1494 ;;      Locals:         1       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0
  1496 ;;      Totals:         1       0       0       0       0
  1497 ;;Total ram usage:        1 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_isr
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _spiWrite
  1508  016D                     _spiWrite:
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _spiWrite: [wreg]
  1512                           ;spiWrite@dat stored from wreg
  1513  016D  00F0               	movwf	spiWrite@dat
  1514  016E                     i1l773:
  1515                           
  1516                           ;SSSPI.c: 28: void spiWrite(char dat);SSSPI.c: 29: {;SSSPI.c: 30:     SSPBUF = dat;
  1517  016E  0870               	movf	spiWrite@dat,w
  1518  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0171  0093               	movwf	19	;volatile
  1521  0172                     i1l127:
  1522  0172  0008               	return
  1523  0173                     __end_of_spiWrite:
  1524  007E                     btemp	set	126	;btemp
  1525  007E                     wtemp0	set	126
  1526                           
  1527                           	psect	config
  1528                           
  1529                           ;Config register CONFIG1 @ 0x2007
  1530                           ;	Oscillator Selection bits
  1531                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1532                           ;	Watchdog Timer Enable bit
  1533                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1534                           ;	Power-up Timer Enable bit
  1535                           ;	PWRTE = OFF, PWRT disabled
  1536                           ;	RE3/MCLR pin function select bit
  1537                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1538                           ;	Code Protection bit
  1539                           ;	CP = OFF, Program memory code protection is disabled
  1540                           ;	Data Code Protection bit
  1541                           ;	CPD = OFF, Data memory code protection is disabled
  1542                           ;	Brown Out Reset Selection bits
  1543                           ;	BOREN = OFF, BOR disabled
  1544                           ;	Internal External Switchover bit
  1545                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1546                           ;	Fail-Safe Clock Monitor Enabled bit
  1547                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1548                           ;	Low Voltage Programming Enable bit
  1549                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1550                           ;	In-Circuit Debugger Mode bit
  1551                           ;	DEBUG = 0x1, unprogrammed default
  1552  2007                     	org	8199
  1553  2007  20D4               	dw	8404
  1554                           
  1555                           ;Config register CONFIG2 @ 0x2008
  1556                           ;	Brown-out Reset Selection bit
  1557                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1558                           ;	Flash Program Memory Self Write Enable bits
  1559                           ;	WRT = OFF, Write protection off
  1560  2008                     	org	8200
  1561  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit
    _Setup->_ADC_CHS_CLKS

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_Setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     480
                                              1 BANK0      1     1      0
                               _ADCG
                              _Setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0     120
                                              0 BANK0      1     1      0
                       _ADC_CHS_CLKS
 ---------------------------------------------------------------------------------
 (2) _ADC_CHS_CLKS                                         4     3      1     120
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADCG                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCG
   _Setup
     _ADC_CHS_CLKS
   _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 18:51:39 2021

                      _L 0078    __size_of_ADC_CHS_CLKS 00CD              _SSPSTATbits 0094  
                     l70 016C                       l80 0023                       l81 002C  
                     l90 007D                       l82 0035                       l66 010D  
                     l91 0086                       l83 003E                       l92 008F  
                     l84 0047                       l93 0098                       l85 0050  
                     l94 00A1                       l86 0059                       l78 0017  
                     l87 0062                       l88 006B                       l89 0074  
                     u20 0168                       u21 0167                       u60 0154  
                     u61 0153                      l101 00E1                      l117 015C  
                    l118 0161                      l821 0162                      l823 0168  
                    l825 0169                      l923 00AA                      l931 0154  
                    l933 0156                      l935 0158                      l937 015B  
                    l929 014D                      l883 0016                      l885 001F  
                    _isr 010E                     l1001 00E2                     l1011 00F6  
                   l1003 00EE                     l1021 00FE                     l1013 00F7  
                   l1005 00F1                     l1031 0108                     l1023 00FF  
                   l1015 00F8                     l1007 00F4                     l1033 0109  
                   l1025 0103                     l1017 00FC                     l1009 00F5  
                   l1041 0143                     l1035 010A                     l1027 0104  
                   l1019 00FD                     l1029 0105                     l1037 0130  
                   l1063 00B2                     l1039 013E                     _ADCG 0162  
                   _ADIF 0066                     ?_isr 0070                     i1l55 0129  
                   u4_20 0114                     u4_21 0113                     u5_20 011E  
                   u5_21 011D                     _main 0130                     btemp 007E  
                   start 000C             _ADC_CHS_CLKS 0015                    ?_ADCG 0070  
                  ??_isr 0071                    _ADCGO 0079                    ?_main 0070  
                  _ANSEL 0188                    i1l127 0172                    i1l831 0114  
                  i1l841 0120                    i1l833 0118                    i1l843 0126  
                  i1l835 0119                    i1l773 016E                    i1l837 011A  
                  i1l829 010E                    i1l839 011E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _Setup 00E2                    pclath 000A          __end_of_spiInit 0162  
                  status 0003                    wtemp0 007E             __end_of_ADCG 016D  
        __initialization 000F             __end_of_main 014C                   ??_ADCG 0074  
                 ??_main 0021                   ?_Setup 0070                   _ADCON1 009F  
                 _ADRESH 001E                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 0173                ??_spiInit 0077  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_Setup 010E                  ??_Setup 0020  
             __pmaintext 0130               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 014C                  __ptext2 00E2  
                __ptext3 0015                  __ptext4 0162                  __ptext5 010E  
                __ptext6 016D             __size_of_isr 0022                  _spiInit 014C  
   end_of_initialization 0011               ??_spiWrite 0070            ADC_CHS_CLKS@C 0077  
          ADC_CHS_CLKS@S 0074              spiWrite@dat 0070      start_initialization 000F  
            __end_of_isr 0130            ?_ADC_CHS_CLKS 0074              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020           ??_ADC_CHS_CLKS 0075  
      __size_of_spiWrite 0006                 ?_spiInit 0074           __size_of_Setup 002C  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
   __end_of_ADC_CHS_CLKS 00E2         __size_of_spiInit 0016            __size_of_ADCG 000B  
          __size_of_main 001C                 _spiWrite 016D             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
