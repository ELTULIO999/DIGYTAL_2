

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 13:42:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  000B                     _INTCONbits	set	11
   367  0009                     _PORTE	set	9
   368  0008                     _PORTD	set	8
   369  0007                     _PORTC	set	7
   370  0005                     _PORTA	set	5
   371  001F                     _ADCON0bits	set	31
   372  000C                     _PIR1bits	set	12
   373  001E                     _ADRESH	set	30
   374  0006                     _PORTB	set	6
   375  0063                     _SSPIF	set	99
   376  0066                     _ADIF	set	102
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  009F                     _ADCON1	set	159
   380  0089                     _TRISE	set	137
   381  0088                     _TRISD	set	136
   382  0087                     _TRISC	set	135
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  008C                     _PIE1bits	set	140
   386  043B                     _TRISC3	set	1083
   387  043D                     _TRISC5	set	1085
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	cinit
   391  000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394  000F                     __initialization:
   395                           
   396                           ; Clear objects allocated to COMMON
   397  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   398  0010                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401  0010                     __end_of__initialization:
   402  0010  0183               	clrf	3
   403  0011  120A  118A  2926   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0078                     __pbssCOMMON:
   407  0078                     _ADCGO:
   408  0078                     	ds	1
   409                           
   410                           	psect	cstackCOMMON
   411  0070                     __pcstackCOMMON:
   412  0070                     ?_spiWrite:
   413  0070                     ??_spiWrite:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Setup:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_ADCG:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_isr:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_main:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     spiWrite@dat:	
   429                           ; 1 bytes @ 0x0
   430                           
   431                           
   432                           ; 1 bytes @ 0x0
   433  0070                     	ds	1
   434  0071                     ??_isr:
   435                           
   436                           ; 1 bytes @ 0x1
   437  0071                     	ds	2
   438  0073                     ?_spiInit:
   439  0073                     ??_ADCG:	
   440                           ; 1 bytes @ 0x3
   441                           
   442  0073                     ?_ADC_CHS_CLKS:	
   443                           ; 1 bytes @ 0x3
   444                           
   445  0073                     ADC_CHS_CLKS@S:	
   446                           ; 1 bytes @ 0x3
   447                           
   448  0073                     spiInit@sDataSample:	
   449                           ; 1 bytes @ 0x3
   450                           
   451                           
   452                           ; 1 bytes @ 0x3
   453  0073                     	ds	1
   454  0074                     ??_ADC_CHS_CLKS:
   455  0074                     spiInit@sClockIdle:	
   456                           ; 1 bytes @ 0x4
   457                           
   458                           
   459                           ; 1 bytes @ 0x4
   460  0074                     	ds	1
   461  0075                     spiInit@sTransmitEdge:
   462                           
   463                           ; 1 bytes @ 0x5
   464  0075                     	ds	1
   465  0076                     ??_spiInit:
   466  0076                     ADC_CHS_CLKS@C:	
   467                           ; 1 bytes @ 0x6
   468                           
   469  0076                     spiInit@sType:	
   470                           ; 1 bytes @ 0x6
   471                           
   472                           
   473                           ; 1 bytes @ 0x6
   474  0076                     	ds	1
   475  0077                     ??_Setup:
   476                           
   477                           ; 1 bytes @ 0x7
   478  0077                     	ds	1
   479  0078                     ??_main:
   480                           
   481                           	psect	maintext
   482  0126                     __pmaintext:	
   483                           ; 1 bytes @ 0x8
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 51 in file "slave1.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B00/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels required when called:    4
   509 ;; This function calls:
   510 ;;		_ADCG
   511 ;;		_Setup
   512 ;;		_spiInit
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _main
   520  0126                     _main:
   521  0126                     l965:	
   522                           ;incstack = 0
   523                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   524                           
   525                           
   526                           ;slave1.c: 52:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   527  0126  01F3               	clrf	spiInit@sDataSample
   528  0127  01F4               	clrf	spiInit@sClockIdle
   529  0128  01F5               	clrf	spiInit@sTransmitEdge
   530  0129  3024               	movlw	36
   531  012A  120A  118A  213D  120A  118A  	fcall	_spiInit
   532  012F                     l967:
   533                           
   534                           ;slave1.c: 53:     Setup();
   535  012F  120A  118A  20E1  120A  118A  	fcall	_Setup
   536  0134                     l969:
   537                           
   538                           ;slave1.c: 58:      ADCG();
   539  0134  120A  118A  2153  120A  118A  	fcall	_ADCG
   540  0139  2934               	goto	l969
   541  013A  120A  118A  280C   	ljmp	start
   542  013D                     __end_of_main:
   543                           
   544                           	psect	text1
   545  013D                     __ptext1:	
   546 ;; *************** function _spiInit *****************
   547 ;; Defined at:
   548 ;;		line 6 in file "SSSPI.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  sType           1    wreg     enum E1264
   551 ;;  sDataSample     1    3[COMMON] enum E1272
   552 ;;  sClockIdle      1    4[COMMON] enum E1276
   553 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  sType           1    6[COMMON] enum E1264
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         3       0       0       0       0
   566 ;;      Locals:         1       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         4       0       0       0       0
   569 ;;Total ram usage:        4 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _spiInit
   581  013D                     _spiInit:
   582                           
   583                           ;incstack = 0
   584                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   585                           ;spiInit@sType stored from wreg
   586  013D  00F6               	movwf	spiInit@sType
   587  013E                     l923:
   588                           
   589                           ;SSSPI.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSSPI.c: 7: {;SSSPI.c: 8:     TRISC5 = 0;
   590  013E  1683               	bsf	3,5	;RP0=1, select bank1
   591  013F  1303               	bcf	3,6	;RP1=0, select bank1
   592  0140  1287               	bcf	7,5	;volatile
   593                           
   594                           ;SSSPI.c: 9:     if(sType & 0b00000100)
   595  0141  1D76               	btfss	spiInit@sType,2
   596  0142  2944               	goto	u61
   597  0143  2945               	goto	u60
   598  0144                     u61:
   599  0144  2949               	goto	l929
   600  0145                     u60:
   601  0145                     l925:
   602                           
   603                           ;SSSPI.c: 10:     {;SSSPI.c: 11:         SSPSTAT = sTransmitEdge;
   604  0145  0875               	movf	spiInit@sTransmitEdge,w
   605  0146  0094               	movwf	20	;volatile
   606  0147                     l927:
   607                           
   608                           ;SSSPI.c: 12:         TRISC3 = 1;
   609  0147  1587               	bsf	7,3	;volatile
   610                           
   611                           ;SSSPI.c: 13:     }
   612  0148  294D               	goto	l117
   613  0149                     l929:
   614                           
   615                           ;SSSPI.c: 15:     {;SSSPI.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
   616  0149  0873               	movf	spiInit@sDataSample,w
   617  014A  0475               	iorwf	spiInit@sTransmitEdge,w
   618  014B  0094               	movwf	20	;volatile
   619  014C                     l931:
   620                           
   621                           ;SSSPI.c: 17:         TRISC3 = 0;
   622  014C  1187               	bcf	7,3	;volatile
   623  014D                     l117:	
   624                           ;SSSPI.c: 18:     }
   625                           
   626                           
   627                           ;SSSPI.c: 20:     SSPCON = sType | sClockIdle;
   628  014D  0876               	movf	spiInit@sType,w
   629  014E  0474               	iorwf	spiInit@sClockIdle,w
   630  014F  1283               	bcf	3,5	;RP0=0, select bank0
   631  0150  1303               	bcf	3,6	;RP1=0, select bank0
   632  0151  0094               	movwf	20	;volatile
   633  0152                     l118:
   634  0152  0008               	return
   635  0153                     __end_of_spiInit:
   636                           
   637                           	psect	text2
   638  00E1                     __ptext2:	
   639 ;; *************** function _Setup *****************
   640 ;; Defined at:
   641 ;;		line 64 in file "slave1.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          1       0       0       0       0
   658 ;;      Totals:         1       0       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    3
   662 ;; This function calls:
   663 ;;		_ADC_CHS_CLKS
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _Setup
   671  00E1                     _Setup:
   672  00E1                     l933:	
   673                           ;incstack = 0
   674                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   675                           
   676                           
   677                           ;slave1.c: 65:     ADC_CHS_CLKS (0,2);
   678  00E1  3002               	movlw	2
   679  00E2  00F7               	movwf	??_Setup
   680  00E3  0877               	movf	??_Setup,w
   681  00E4  00F3               	movwf	ADC_CHS_CLKS@S
   682  00E5  3000               	movlw	0
   683  00E6  120A  118A  2014  120A  118A  	fcall	_ADC_CHS_CLKS
   684  00EB                     l935:
   685                           
   686                           ;slave1.c: 66:     PIE1bits.ADIE=1;
   687  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   688  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   689  00ED  170C               	bsf	12,6	;volatile
   690  00EE                     l937:
   691                           
   692                           ;slave1.c: 68:     PORTA = 0;
   693  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   694  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   695  00F0  0185               	clrf	5	;volatile
   696  00F1                     l939:
   697                           
   698                           ;slave1.c: 69:     PORTB = 0;
   699  00F1  0186               	clrf	6	;volatile
   700  00F2                     l941:
   701                           
   702                           ;slave1.c: 70:     PORTC = 0;
   703  00F2  0187               	clrf	7	;volatile
   704  00F3                     l943:
   705                           
   706                           ;slave1.c: 71:     PORTD = 0;
   707  00F3  0188               	clrf	8	;volatile
   708  00F4                     l945:
   709                           
   710                           ;slave1.c: 72:     PORTE = 0;
   711  00F4  0189               	clrf	9	;volatile
   712  00F5                     l947:
   713                           
   714                           ;slave1.c: 74:     TRISA = 0B00000001;
   715  00F5  3001               	movlw	1
   716  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   717  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   718  00F8  0085               	movwf	5	;volatile
   719  00F9                     l949:
   720                           
   721                           ;slave1.c: 75:     TRISB = 0B00000000;
   722  00F9  0186               	clrf	6	;volatile
   723  00FA                     l951:
   724                           
   725                           ;slave1.c: 76:     TRISC = 0B00011000;
   726  00FA  3018               	movlw	24
   727  00FB  0087               	movwf	7	;volatile
   728  00FC                     l953:
   729                           
   730                           ;slave1.c: 77:     TRISD = 0B00000000;
   731  00FC  0188               	clrf	8	;volatile
   732  00FD                     l955:
   733                           
   734                           ;slave1.c: 78:     TRISE = 0B0000;
   735  00FD  0189               	clrf	9	;volatile
   736  00FE                     l957:
   737                           
   738                           ;slave1.c: 80:     ANSEL = 0B00000001;
   739  00FE  3001               	movlw	1
   740  00FF  1683               	bsf	3,5	;RP0=1, select bank3
   741  0100  1703               	bsf	3,6	;RP1=1, select bank3
   742  0101  0088               	movwf	8	;volatile
   743  0102                     l959:
   744                           
   745                           ;slave1.c: 83:     INTCONbits.GIE=1;
   746  0102  178B               	bsf	11,7	;volatile
   747  0103                     l961:
   748                           
   749                           ;slave1.c: 84:     INTCONbits.PEIE=1;
   750  0103  170B               	bsf	11,6	;volatile
   751  0104                     l963:
   752                           
   753                           ;slave1.c: 85:     PIR1bits.ADIF=0;
   754  0104  1283               	bcf	3,5	;RP0=0, select bank0
   755  0105  1303               	bcf	3,6	;RP1=0, select bank0
   756  0106  130C               	bcf	12,6	;volatile
   757  0107                     l66:
   758  0107  0008               	return
   759  0108                     __end_of_Setup:
   760                           
   761                           	psect	text3
   762  0014                     __ptext3:	
   763 ;; *************** function _ADC_CHS_CLKS *****************
   764 ;; Defined at:
   765 ;;		line 4 in file "ADC.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  C               1    wreg     unsigned char 
   768 ;;  S               1    3[COMMON] unsigned char 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  C               1    6[COMMON] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         1       0       0       0       0
   781 ;;      Locals:         1       0       0       0       0
   782 ;;      Temps:          2       0       0       0       0
   783 ;;      Totals:         4       0       0       0       0
   784 ;;Total ram usage:        4 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_Setup
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _ADC_CHS_CLKS
   796  0014                     _ADC_CHS_CLKS:
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in _ADC_CHS_CLKS: [wreg-fsr0h+status,2+status,0]
   800                           ;ADC_CHS_CLKS@C stored from wreg
   801  0014  00F6               	movwf	ADC_CHS_CLKS@C
   802  0015                     l877:
   803                           
   804                           ;ADC.c: 5: switch (C) {
   805  0015  28A9               	goto	l917
   806  0016                     l78:	
   807                           ;ADC.c: 8:     case 0:
   808                           
   809                           
   810                           ;ADC.c: 9:         ADCON0bits.CHS3 = 0;
   811  0016  1283               	bcf	3,5	;RP0=0, select bank0
   812  0017  1303               	bcf	3,6	;RP1=0, select bank0
   813  0018  129F               	bcf	31,5	;volatile
   814                           
   815                           ;ADC.c: 10:         ADCON0bits.CHS2 = 0;
   816  0019  121F               	bcf	31,4	;volatile
   817                           
   818                           ;ADC.c: 11:         ADCON0bits.CHS1 = 0;
   819  001A  119F               	bcf	31,3	;volatile
   820                           
   821                           ;ADC.c: 12:         ADCON0bits.CHS0 = 0;
   822  001B  111F               	bcf	31,2	;volatile
   823                           
   824                           ;ADC.c: 13:         ADCON0bits.ADON = 1;
   825  001C  141F               	bsf	31,0	;volatile
   826                           
   827                           ;ADC.c: 14:         ADCON0bits.GO = 1;
   828  001D  149F               	bsf	31,1	;volatile
   829  001E                     l879:
   830                           
   831                           ;ADC.c: 15:         ADCON1 = 0;
   832  001E  1683               	bsf	3,5	;RP0=1, select bank1
   833  001F  1303               	bcf	3,6	;RP1=0, select bank1
   834  0020  019F               	clrf	31	;volatile
   835                           
   836                           ;ADC.c: 16:     break;
   837  0021  28E0               	goto	l101
   838  0022                     l80:	
   839                           ;ADC.c: 17:     case 1:
   840                           
   841                           
   842                           ;ADC.c: 18:         ADCON0bits.CHS3=0;
   843  0022  1283               	bcf	3,5	;RP0=0, select bank0
   844  0023  1303               	bcf	3,6	;RP1=0, select bank0
   845  0024  129F               	bcf	31,5	;volatile
   846                           
   847                           ;ADC.c: 19:         ADCON0bits.CHS2=0;
   848  0025  121F               	bcf	31,4	;volatile
   849                           
   850                           ;ADC.c: 20:         ADCON0bits.CHS1=0;
   851  0026  119F               	bcf	31,3	;volatile
   852                           
   853                           ;ADC.c: 21:         ADCON0bits.CHS0=1;
   854  0027  151F               	bsf	31,2	;volatile
   855                           
   856                           ;ADC.c: 22:         ADCON0bits.ADON = 1;
   857  0028  141F               	bsf	31,0	;volatile
   858                           
   859                           ;ADC.c: 23:         ADCON0bits.GO = 1;
   860  0029  149F               	bsf	31,1	;volatile
   861  002A  281E               	goto	l879
   862  002B                     l81:	
   863                           ;ADC.c: 26:     case 2:
   864                           
   865                           
   866                           ;ADC.c: 27:         ADCON0bits.CHS3=0;
   867  002B  1283               	bcf	3,5	;RP0=0, select bank0
   868  002C  1303               	bcf	3,6	;RP1=0, select bank0
   869  002D  129F               	bcf	31,5	;volatile
   870                           
   871                           ;ADC.c: 28:         ADCON0bits.CHS2=0;
   872  002E  121F               	bcf	31,4	;volatile
   873                           
   874                           ;ADC.c: 29:         ADCON0bits.CHS1=1;
   875  002F  159F               	bsf	31,3	;volatile
   876                           
   877                           ;ADC.c: 30:         ADCON0bits.CHS0=0;
   878  0030  111F               	bcf	31,2	;volatile
   879                           
   880                           ;ADC.c: 31:         ADCON0bits.ADON = 1;
   881  0031  141F               	bsf	31,0	;volatile
   882                           
   883                           ;ADC.c: 32:         ADCON0bits.GO = 1;
   884  0032  149F               	bsf	31,1	;volatile
   885  0033  281E               	goto	l879
   886  0034                     l82:	
   887                           ;ADC.c: 35:     case 3:
   888                           
   889                           
   890                           ;ADC.c: 36:         ADCON0bits.CHS3=0;
   891  0034  1283               	bcf	3,5	;RP0=0, select bank0
   892  0035  1303               	bcf	3,6	;RP1=0, select bank0
   893  0036  129F               	bcf	31,5	;volatile
   894                           
   895                           ;ADC.c: 37:         ADCON0bits.CHS2=0;
   896  0037  121F               	bcf	31,4	;volatile
   897                           
   898                           ;ADC.c: 38:         ADCON0bits.CHS1=1;
   899  0038  159F               	bsf	31,3	;volatile
   900                           
   901                           ;ADC.c: 39:         ADCON0bits.CHS0=1;
   902  0039  151F               	bsf	31,2	;volatile
   903                           
   904                           ;ADC.c: 40:         ADCON0bits.ADON = 1;
   905  003A  141F               	bsf	31,0	;volatile
   906                           
   907                           ;ADC.c: 41:         ADCON0bits.GO = 1;
   908  003B  149F               	bsf	31,1	;volatile
   909  003C  281E               	goto	l879
   910  003D                     l83:	
   911                           ;ADC.c: 44:     case 4:
   912                           
   913                           
   914                           ;ADC.c: 45:         ADCON0bits.CHS3=0;
   915  003D  1283               	bcf	3,5	;RP0=0, select bank0
   916  003E  1303               	bcf	3,6	;RP1=0, select bank0
   917  003F  129F               	bcf	31,5	;volatile
   918                           
   919                           ;ADC.c: 46:         ADCON0bits.CHS2=1;
   920  0040  161F               	bsf	31,4	;volatile
   921                           
   922                           ;ADC.c: 47:         ADCON0bits.CHS1=0;
   923  0041  119F               	bcf	31,3	;volatile
   924                           
   925                           ;ADC.c: 48:         ADCON0bits.CHS0=0;
   926  0042  111F               	bcf	31,2	;volatile
   927                           
   928                           ;ADC.c: 49:         ADCON0bits.ADON = 1;
   929  0043  141F               	bsf	31,0	;volatile
   930                           
   931                           ;ADC.c: 50:         ADCON0bits.GO = 1;
   932  0044  149F               	bsf	31,1	;volatile
   933  0045  281E               	goto	l879
   934  0046                     l84:	
   935                           ;ADC.c: 53:     case 5:
   936                           
   937                           
   938                           ;ADC.c: 54:         ADCON0bits.CHS3=0;
   939  0046  1283               	bcf	3,5	;RP0=0, select bank0
   940  0047  1303               	bcf	3,6	;RP1=0, select bank0
   941  0048  129F               	bcf	31,5	;volatile
   942                           
   943                           ;ADC.c: 55:         ADCON0bits.CHS2=1;
   944  0049  161F               	bsf	31,4	;volatile
   945                           
   946                           ;ADC.c: 56:         ADCON0bits.CHS1=0;
   947  004A  119F               	bcf	31,3	;volatile
   948                           
   949                           ;ADC.c: 57:         ADCON0bits.CHS0=1;
   950  004B  151F               	bsf	31,2	;volatile
   951                           
   952                           ;ADC.c: 58:         ADCON0bits.ADON = 1;
   953  004C  141F               	bsf	31,0	;volatile
   954                           
   955                           ;ADC.c: 59:         ADCON0bits.GO = 1;
   956  004D  149F               	bsf	31,1	;volatile
   957  004E  281E               	goto	l879
   958  004F                     l85:	
   959                           ;ADC.c: 62:     case 6:
   960                           
   961                           
   962                           ;ADC.c: 63:         ADCON0bits.CHS3=0;
   963  004F  1283               	bcf	3,5	;RP0=0, select bank0
   964  0050  1303               	bcf	3,6	;RP1=0, select bank0
   965  0051  129F               	bcf	31,5	;volatile
   966                           
   967                           ;ADC.c: 64:         ADCON0bits.CHS2=1;
   968  0052  161F               	bsf	31,4	;volatile
   969                           
   970                           ;ADC.c: 65:         ADCON0bits.CHS1=1;
   971  0053  159F               	bsf	31,3	;volatile
   972                           
   973                           ;ADC.c: 66:         ADCON0bits.CHS0=0;
   974  0054  111F               	bcf	31,2	;volatile
   975                           
   976                           ;ADC.c: 67:         ADCON0bits.ADON = 1;
   977  0055  141F               	bsf	31,0	;volatile
   978                           
   979                           ;ADC.c: 68:         ADCON0bits.GO = 1;
   980  0056  149F               	bsf	31,1	;volatile
   981  0057  281E               	goto	l879
   982  0058                     l86:	
   983                           ;ADC.c: 71:     case 7:
   984                           
   985                           
   986                           ;ADC.c: 72:         ADCON0bits.CHS3=0;
   987  0058  1283               	bcf	3,5	;RP0=0, select bank0
   988  0059  1303               	bcf	3,6	;RP1=0, select bank0
   989  005A  129F               	bcf	31,5	;volatile
   990                           
   991                           ;ADC.c: 73:         ADCON0bits.CHS2=1;
   992  005B  161F               	bsf	31,4	;volatile
   993                           
   994                           ;ADC.c: 74:         ADCON0bits.CHS1=1;
   995  005C  159F               	bsf	31,3	;volatile
   996                           
   997                           ;ADC.c: 75:         ADCON0bits.CHS0=1;
   998  005D  151F               	bsf	31,2	;volatile
   999                           
  1000                           ;ADC.c: 76:         ADCON0bits.ADON = 1;
  1001  005E  141F               	bsf	31,0	;volatile
  1002                           
  1003                           ;ADC.c: 77:         ADCON0bits.GO = 1;
  1004  005F  149F               	bsf	31,1	;volatile
  1005  0060  281E               	goto	l879
  1006  0061                     l87:	
  1007                           ;ADC.c: 80:     case 8:
  1008                           
  1009                           
  1010                           ;ADC.c: 81:         ADCON0bits.CHS3=1;
  1011  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0063  169F               	bsf	31,5	;volatile
  1014                           
  1015                           ;ADC.c: 82:         ADCON0bits.CHS2=0;
  1016  0064  121F               	bcf	31,4	;volatile
  1017                           
  1018                           ;ADC.c: 83:         ADCON0bits.CHS1=0;
  1019  0065  119F               	bcf	31,3	;volatile
  1020                           
  1021                           ;ADC.c: 84:         ADCON0bits.CHS0=0;
  1022  0066  111F               	bcf	31,2	;volatile
  1023                           
  1024                           ;ADC.c: 85:         ADCON0bits.ADON = 1;
  1025  0067  141F               	bsf	31,0	;volatile
  1026                           
  1027                           ;ADC.c: 86:         ADCON0bits.GO = 1;
  1028  0068  149F               	bsf	31,1	;volatile
  1029  0069  281E               	goto	l879
  1030  006A                     l88:	
  1031                           ;ADC.c: 89:     case 9:
  1032                           
  1033                           
  1034                           ;ADC.c: 90:         ADCON0bits.CHS3=1;
  1035  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1036  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1037  006C  169F               	bsf	31,5	;volatile
  1038                           
  1039                           ;ADC.c: 91:         ADCON0bits.CHS2=0;
  1040  006D  121F               	bcf	31,4	;volatile
  1041                           
  1042                           ;ADC.c: 92:         ADCON0bits.CHS1=0;
  1043  006E  119F               	bcf	31,3	;volatile
  1044                           
  1045                           ;ADC.c: 93:         ADCON0bits.CHS0=1;
  1046  006F  151F               	bsf	31,2	;volatile
  1047                           
  1048                           ;ADC.c: 94:         ADCON0bits.ADON = 1;
  1049  0070  141F               	bsf	31,0	;volatile
  1050                           
  1051                           ;ADC.c: 95:         ADCON0bits.GO = 1;
  1052  0071  149F               	bsf	31,1	;volatile
  1053  0072  281E               	goto	l879
  1054  0073                     l89:	
  1055                           ;ADC.c: 98:     case 10:
  1056                           
  1057                           
  1058                           ;ADC.c: 99:         ADCON0bits.CHS3=1;
  1059  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0075  169F               	bsf	31,5	;volatile
  1062                           
  1063                           ;ADC.c: 100:         ADCON0bits.CHS2=0;
  1064  0076  121F               	bcf	31,4	;volatile
  1065                           
  1066                           ;ADC.c: 101:         ADCON0bits.CHS1=1;
  1067  0077  159F               	bsf	31,3	;volatile
  1068                           
  1069                           ;ADC.c: 102:         ADCON0bits.CHS0=0;
  1070  0078  111F               	bcf	31,2	;volatile
  1071                           
  1072                           ;ADC.c: 103:         ADCON0bits.ADON = 1;
  1073  0079  141F               	bsf	31,0	;volatile
  1074                           
  1075                           ;ADC.c: 104:         ADCON0bits.GO = 1;
  1076  007A  149F               	bsf	31,1	;volatile
  1077  007B  281E               	goto	l879
  1078  007C                     l90:	
  1079                           ;ADC.c: 107:     case 11:
  1080                           
  1081                           
  1082                           ;ADC.c: 108:         ADCON0bits.CHS3=1;
  1083  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1084  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1085  007E  169F               	bsf	31,5	;volatile
  1086                           
  1087                           ;ADC.c: 109:         ADCON0bits.CHS2=0;
  1088  007F  121F               	bcf	31,4	;volatile
  1089                           
  1090                           ;ADC.c: 110:         ADCON0bits.CHS1=1;
  1091  0080  159F               	bsf	31,3	;volatile
  1092                           
  1093                           ;ADC.c: 111:         ADCON0bits.CHS0=1;
  1094  0081  151F               	bsf	31,2	;volatile
  1095                           
  1096                           ;ADC.c: 112:         ADCON0bits.ADON = 1;
  1097  0082  141F               	bsf	31,0	;volatile
  1098                           
  1099                           ;ADC.c: 113:         ADCON0bits.GO = 1;
  1100  0083  149F               	bsf	31,1	;volatile
  1101  0084  281E               	goto	l879
  1102  0085                     l91:	
  1103                           ;ADC.c: 116:     case 12:
  1104                           
  1105                           
  1106                           ;ADC.c: 117:         ADCON0bits.CHS3=1;
  1107  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0087  169F               	bsf	31,5	;volatile
  1110                           
  1111                           ;ADC.c: 118:         ADCON0bits.CHS2=1;
  1112  0088  161F               	bsf	31,4	;volatile
  1113                           
  1114                           ;ADC.c: 119:         ADCON0bits.CHS1=0;
  1115  0089  119F               	bcf	31,3	;volatile
  1116                           
  1117                           ;ADC.c: 120:         ADCON0bits.CHS0=0;
  1118  008A  111F               	bcf	31,2	;volatile
  1119                           
  1120                           ;ADC.c: 121:         ADCON0bits.ADON = 1;
  1121  008B  141F               	bsf	31,0	;volatile
  1122                           
  1123                           ;ADC.c: 122:         ADCON0bits.GO = 1;
  1124  008C  149F               	bsf	31,1	;volatile
  1125  008D  281E               	goto	l879
  1126  008E                     l92:	
  1127                           ;ADC.c: 125:     case 13:
  1128                           
  1129                           
  1130                           ;ADC.c: 126:         ADCON0bits.CHS3=1;
  1131  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1132  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0090  169F               	bsf	31,5	;volatile
  1134                           
  1135                           ;ADC.c: 127:         ADCON0bits.CHS2=1;
  1136  0091  161F               	bsf	31,4	;volatile
  1137                           
  1138                           ;ADC.c: 128:         ADCON0bits.CHS1=0;
  1139  0092  119F               	bcf	31,3	;volatile
  1140                           
  1141                           ;ADC.c: 129:         ADCON0bits.CHS0=1;
  1142  0093  151F               	bsf	31,2	;volatile
  1143                           
  1144                           ;ADC.c: 130:         ADCON0bits.ADON = 1;
  1145  0094  141F               	bsf	31,0	;volatile
  1146                           
  1147                           ;ADC.c: 131:         ADCON0bits.GO = 1;
  1148  0095  149F               	bsf	31,1	;volatile
  1149  0096  281E               	goto	l879
  1150  0097                     l93:	
  1151                           ;ADC.c: 134:     case 14:
  1152                           
  1153                           
  1154                           ;ADC.c: 135:         ADCON0bits.CHS3=1;
  1155  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0099  169F               	bsf	31,5	;volatile
  1158                           
  1159                           ;ADC.c: 136:         ADCON0bits.CHS2=1;
  1160  009A  161F               	bsf	31,4	;volatile
  1161                           
  1162                           ;ADC.c: 137:         ADCON0bits.CHS1=1;
  1163  009B  159F               	bsf	31,3	;volatile
  1164                           
  1165                           ;ADC.c: 138:         ADCON0bits.CHS0=0;
  1166  009C  111F               	bcf	31,2	;volatile
  1167                           
  1168                           ;ADC.c: 139:         ADCON0bits.ADON = 1;
  1169  009D  141F               	bsf	31,0	;volatile
  1170                           
  1171                           ;ADC.c: 140:         ADCON0bits.GO = 1;
  1172  009E  149F               	bsf	31,1	;volatile
  1173  009F  281E               	goto	l879
  1174  00A0                     l94:	
  1175                           ;ADC.c: 143:     default:
  1176                           
  1177                           
  1178                           ;ADC.c: 144:         ADCON0bits.CHS3=1;
  1179  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1180  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1181  00A2  169F               	bsf	31,5	;volatile
  1182                           
  1183                           ;ADC.c: 145:         ADCON0bits.CHS2=1;
  1184  00A3  161F               	bsf	31,4	;volatile
  1185                           
  1186                           ;ADC.c: 146:         ADCON0bits.CHS1=1;
  1187  00A4  159F               	bsf	31,3	;volatile
  1188                           
  1189                           ;ADC.c: 147:         ADCON0bits.CHS0=1;
  1190  00A5  151F               	bsf	31,2	;volatile
  1191                           
  1192                           ;ADC.c: 148:         ADCON0bits.ADON = 1;
  1193  00A6  141F               	bsf	31,0	;volatile
  1194                           
  1195                           ;ADC.c: 149:         ADCON0bits.GO = 1;
  1196  00A7  149F               	bsf	31,1	;volatile
  1197  00A8  281E               	goto	l879
  1198  00A9                     l917:
  1199  00A9  0876               	movf	ADC_CHS_CLKS@C,w
  1200  00AA  00F4               	movwf	??_ADC_CHS_CLKS
  1201  00AB  01F5               	clrf	??_ADC_CHS_CLKS+1
  1202                           
  1203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 1, Range of values is 0 to 0
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte            4     3 (average)
  1209                           ; direct_byte           11     8 (fixed)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  00AC  0875               	movf	??_ADC_CHS_CLKS+1,w
  1213  00AD  3A00               	xorlw	0	; case 0
  1214  00AE  1903               	skipnz
  1215  00AF  28B1               	goto	l991
  1216  00B0  28A0               	goto	l94
  1217  00B1                     l991:
  1218                           
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 15, Range of values is 0 to 14
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           46    24 (average)
  1224                           ; direct_byte           53     8 (fixed)
  1225                           ; jumptable            260     6 (fixed)
  1226                           ;	Chosen strategy is simple_byte
  1227  00B1  0874               	movf	??_ADC_CHS_CLKS,w
  1228  00B2  3A00               	xorlw	0	; case 0
  1229  00B3  1903               	skipnz
  1230  00B4  2816               	goto	l78
  1231  00B5  3A01               	xorlw	1	; case 1
  1232  00B6  1903               	skipnz
  1233  00B7  2822               	goto	l80
  1234  00B8  3A03               	xorlw	3	; case 2
  1235  00B9  1903               	skipnz
  1236  00BA  282B               	goto	l81
  1237  00BB  3A01               	xorlw	1	; case 3
  1238  00BC  1903               	skipnz
  1239  00BD  2834               	goto	l82
  1240  00BE  3A07               	xorlw	7	; case 4
  1241  00BF  1903               	skipnz
  1242  00C0  283D               	goto	l83
  1243  00C1  3A01               	xorlw	1	; case 5
  1244  00C2  1903               	skipnz
  1245  00C3  2846               	goto	l84
  1246  00C4  3A03               	xorlw	3	; case 6
  1247  00C5  1903               	skipnz
  1248  00C6  284F               	goto	l85
  1249  00C7  3A01               	xorlw	1	; case 7
  1250  00C8  1903               	skipnz
  1251  00C9  2858               	goto	l86
  1252  00CA  3A0F               	xorlw	15	; case 8
  1253  00CB  1903               	skipnz
  1254  00CC  2861               	goto	l87
  1255  00CD  3A01               	xorlw	1	; case 9
  1256  00CE  1903               	skipnz
  1257  00CF  286A               	goto	l88
  1258  00D0  3A03               	xorlw	3	; case 10
  1259  00D1  1903               	skipnz
  1260  00D2  2873               	goto	l89
  1261  00D3  3A01               	xorlw	1	; case 11
  1262  00D4  1903               	skipnz
  1263  00D5  287C               	goto	l90
  1264  00D6  3A07               	xorlw	7	; case 12
  1265  00D7  1903               	skipnz
  1266  00D8  2885               	goto	l91
  1267  00D9  3A01               	xorlw	1	; case 13
  1268  00DA  1903               	skipnz
  1269  00DB  288E               	goto	l92
  1270  00DC  3A03               	xorlw	3	; case 14
  1271  00DD  1903               	skipnz
  1272  00DE  2897               	goto	l93
  1273  00DF  28A0               	goto	l94
  1274  00E0                     l101:
  1275  00E0  0008               	return
  1276  00E1                     __end_of_ADC_CHS_CLKS:
  1277                           
  1278                           	psect	text4
  1279  0153                     __ptext4:	
  1280 ;; *************** function _ADCG *****************
  1281 ;; Defined at:
  1282 ;;		line 91 in file "slave1.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    2
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _ADCG
  1312  0153                     _ADCG:
  1313  0153                     l817:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _ADCG: [wreg+status,2]
  1316                           
  1317                           
  1318                           ;slave1.c: 92:     if(ADCGO > 20){
  1319  0153  3015               	movlw	21
  1320  0154  0278               	subwf	_ADCGO,w
  1321  0155  1C03               	skipc
  1322  0156  2958               	goto	u21
  1323  0157  2959               	goto	u20
  1324  0158                     u21:
  1325  0158  295D               	goto	l70
  1326  0159                     u20:
  1327  0159                     l819:
  1328                           
  1329                           ;slave1.c: 93:         ADCGO = 0;
  1330  0159  01F8               	clrf	_ADCGO
  1331  015A                     l821:
  1332                           
  1333                           ;slave1.c: 94:         ADCON0bits.GO_nDONE = 1;
  1334  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1335  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1336  015C  149F               	bsf	31,1	;volatile
  1337  015D                     l70:
  1338  015D  0008               	return
  1339  015E                     __end_of_ADCG:
  1340                           
  1341                           	psect	text5
  1342  0108                     __ptext5:	
  1343 ;; *************** function _isr *****************
  1344 ;; Defined at:
  1345 ;;		line 38 in file "slave1.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0
  1361 ;;      Temps:          2       0       0       0       0
  1362 ;;      Totals:         2       0       0       0       0
  1363 ;;Total ram usage:        2 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		_spiWrite
  1368 ;; This function is called by:
  1369 ;;		Interrupt level 1
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _isr
  1375  0108                     _isr:
  1376  0108                     i1l825:
  1377                           
  1378                           ;slave1.c: 39:     if (ADIF==1){
  1379  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1381  010A  1F0C               	btfss	12,6	;volatile
  1382  010B  290D               	goto	u4_21
  1383  010C  290E               	goto	u4_20
  1384  010D                     u4_21:
  1385  010D  2912               	goto	i1l833
  1386  010E                     u4_20:
  1387  010E                     i1l827:
  1388                           
  1389                           ;slave1.c: 40:         PORTB=ADRESH;
  1390  010E  081E               	movf	30,w	;volatile
  1391  010F  0086               	movwf	6	;volatile
  1392  0110                     i1l829:
  1393                           
  1394                           ;slave1.c: 41:         PIR1bits.ADIF=0;
  1395  0110  130C               	bcf	12,6	;volatile
  1396  0111                     i1l831:
  1397                           
  1398                           ;slave1.c: 42:         ADCON0bits.GO=1;}
  1399  0111  149F               	bsf	31,1	;volatile
  1400  0112                     i1l833:
  1401                           
  1402                           ;slave1.c: 43:     if(SSPIF == 1){
  1403  0112  1D8C               	btfss	12,3	;volatile
  1404  0113  2915               	goto	u5_21
  1405  0114  2916               	goto	u5_20
  1406  0115                     u5_21:
  1407  0115  291F               	goto	i1l55
  1408  0116                     u5_20:
  1409  0116                     i1l835:
  1410                           
  1411                           ;slave1.c: 44:         spiWrite(PORTB);
  1412  0116  0806               	movf	6,w	;volatile
  1413  0117  120A  118A  215E  120A  118A  	fcall	_spiWrite
  1414  011C                     i1l837:
  1415                           
  1416                           ;slave1.c: 45:         SSPIF = 0;
  1417  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1418  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1419  011E  118C               	bcf	12,3	;volatile
  1420  011F                     i1l55:
  1421  011F  0872               	movf	??_isr+1,w
  1422  0120  008A               	movwf	10
  1423  0121  0E71               	swapf	??_isr,w
  1424  0122  0083               	movwf	3
  1425  0123  0EFE               	swapf	btemp,f
  1426  0124  0E7E               	swapf	btemp,w
  1427  0125  0009               	retfie
  1428  0126                     __end_of_isr:
  1429                           
  1430                           	psect	intentry
  1431  0004                     __pintentry:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1434                           
  1435  0004                     interrupt_function:
  1436  007E                     saved_w	set	btemp
  1437  0004  00FE               	movwf	btemp
  1438  0005  0E03               	swapf	3,w
  1439  0006  00F1               	movwf	??_isr
  1440  0007  080A               	movf	10,w
  1441  0008  00F2               	movwf	??_isr+1
  1442  0009  120A  118A  2908   	ljmp	_isr
  1443                           
  1444                           	psect	text6
  1445  015E                     __ptext6:	
  1446 ;; *************** function _spiWrite *****************
  1447 ;; Defined at:
  1448 ;;		line 28 in file "SSSPI.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  dat             1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  dat             1    0[COMMON] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         1       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0
  1465 ;;      Totals:         1       0       0       0       0
  1466 ;;Total ram usage:        1 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_isr
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _spiWrite
  1477  015E                     _spiWrite:
  1478                           
  1479                           ;incstack = 0
  1480                           ; Regs used in _spiWrite: [wreg]
  1481                           ;spiWrite@dat stored from wreg
  1482  015E  00F0               	movwf	spiWrite@dat
  1483  015F                     i1l773:
  1484                           
  1485                           ;SSSPI.c: 28: void spiWrite(char dat);SSSPI.c: 29: {;SSSPI.c: 30:     SSPBUF = dat;
  1486  015F  0870               	movf	spiWrite@dat,w
  1487  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0162  0093               	movwf	19	;volatile
  1490  0163                     i1l127:
  1491  0163  0008               	return
  1492  0164                     __end_of_spiWrite:
  1493  007E                     btemp	set	126	;btemp
  1494  007E                     wtemp0	set	126
  1495                           
  1496                           	psect	config
  1497                           
  1498                           ;Config register CONFIG1 @ 0x2007
  1499                           ;	Oscillator Selection bits
  1500                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1501                           ;	Watchdog Timer Enable bit
  1502                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1503                           ;	Power-up Timer Enable bit
  1504                           ;	PWRTE = OFF, PWRT disabled
  1505                           ;	RE3/MCLR pin function select bit
  1506                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1507                           ;	Code Protection bit
  1508                           ;	CP = OFF, Program memory code protection is disabled
  1509                           ;	Data Code Protection bit
  1510                           ;	CPD = OFF, Data memory code protection is disabled
  1511                           ;	Brown Out Reset Selection bits
  1512                           ;	BOREN = OFF, BOR disabled
  1513                           ;	Internal External Switchover bit
  1514                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1515                           ;	Fail-Safe Clock Monitor Enabled bit
  1516                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1517                           ;	Low Voltage Programming Enable bit
  1518                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1519                           ;	In-Circuit Debugger Mode bit
  1520                           ;	DEBUG = 0x1, unprogrammed default
  1521  2007                     	org	8199
  1522  2007  20D4               	dw	8404
  1523                           
  1524                           ;Config register CONFIG2 @ 0x2008
  1525                           ;	Brown-out Reset Selection bit
  1526                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1527                           ;	Flash Program Memory Self Write Enable bits
  1528                           ;	WRT = OFF, Write protection off
  1529  2008                     	org	8200
  1530  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Setup
    _Setup->_ADC_CHS_CLKS

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     480
                               _ADCG
                              _Setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0     120
                                              7 COMMON     1     1      0
                       _ADC_CHS_CLKS
 ---------------------------------------------------------------------------------
 (2) _ADC_CHS_CLKS                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADCG                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCG
   _Setup
     _ADC_CHS_CLKS
   _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 13:42:40 2021

  __size_of_ADC_CHS_CLKS 00CD              _SSPSTATbits 0094                       l70 015D  
                     l80 0022                       l81 002B                       l90 007C  
                     l82 0034                       l66 0107                       l91 0085  
                     l83 003D                       l92 008E                       l84 0046  
                     l93 0097                       l85 004F                       l94 00A0  
                     l86 0058                       l78 0016                       l87 0061  
                     l88 006A                       l89 0073                       u20 0159  
                     u21 0158                       u60 0145                       u61 0144  
                    l101 00E0                      l117 014D                      l118 0152  
                    l821 015A                      l817 0153                      l819 0159  
                    l931 014C                      l923 013E                      l917 00A9  
                    l941 00F2                      l933 00E1                      l925 0145  
                    l951 00FA                      l943 00F3                      l935 00EB  
                    l927 0147                      l961 0103                      l953 00FC  
                    l945 00F4                      l937 00EE                      l929 0149  
                    l963 0104                      l955 00FD                      l947 00F5  
                    l939 00F1                      l877 0015                      l957 00FE  
                    l949 00F9                      l965 0126                      l991 00B1  
                    l879 001E                      l959 0102                      l967 012F  
                    l969 0134                      _isr 0108                     _ADCG 0153  
                   _ADIF 0066                     ?_isr 0070                     i1l55 011F  
                   u4_20 010E                     u4_21 010D                     u5_20 0116  
                   u5_21 0115                     _main 0126                     btemp 007E  
                   start 000C             _ADC_CHS_CLKS 0014                    ?_ADCG 0070  
                  ??_isr 0071                    _ADCGO 0078                    ?_main 0070  
                  _ANSEL 0188                    i1l127 0163                    i1l831 0111  
                  i1l833 0112                    i1l825 0108                    i1l835 0116  
                  i1l827 010E                    i1l773 015F                    i1l837 011C  
                  i1l829 0110                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _Setup 00E1                    pclath 000A          __end_of_spiInit 0153  
                  status 0003                    wtemp0 007E             __end_of_ADCG 015E  
        __initialization 000F             __end_of_main 013D                   ??_ADCG 0073  
                 ??_main 0078                   ?_Setup 0070                   _ADCON1 009F  
                 _ADRESH 001E                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 0164                ??_spiInit 0076  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_Setup 0108                  ??_Setup 0077  
             __pmaintext 0126               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 013D                  __ptext2 00E1  
                __ptext3 0014                  __ptext4 0153                  __ptext5 0108  
                __ptext6 015E             __size_of_isr 001E                  _spiInit 013D  
   end_of_initialization 0010               ??_spiWrite 0070            ADC_CHS_CLKS@C 0076  
          ADC_CHS_CLKS@S 0073              spiWrite@dat 0070      start_initialization 000F  
            __end_of_isr 0126            ?_ADC_CHS_CLKS 0073              __pbssCOMMON 0078  
              ___latbits 0002           ??_ADC_CHS_CLKS 0074        __size_of_spiWrite 0006  
               ?_spiInit 0073           __size_of_Setup 0027     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C               _ADCON0bits 001F     __end_of_ADC_CHS_CLKS 00E1  
       __size_of_spiInit 0016            __size_of_ADCG 000B            __size_of_main 0017  
               _spiWrite 015E             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000  
