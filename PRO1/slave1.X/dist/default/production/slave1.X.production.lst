

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 20:03:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  000B                     _INTCONbits	set	11
   286  0008                     _PORTD	set	8
   287  001F                     _ADCON0bits	set	31
   288  000C                     _PIR1bits	set	12
   289  001E                     _ADRESH	set	30
   290  0005                     _PORTA	set	5
   291  0066                     _ADIF	set	102
   292  009F                     _ADCON1	set	159
   293  0088                     _TRISD	set	136
   294  0085                     _TRISA	set	133
   295  008C                     _PIE1bits	set	140
   296  0188                     _ANSEL	set	392
   297                           
   298                           	psect	cinit
   299  000F                     start_initialization:	
   300                           ; #config settings
   301                           
   302  000F                     __initialization:
   303                           
   304                           ; Clear objects allocated to COMMON
   305  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   306  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   307  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   308  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   309  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   310  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   311  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   312  0016                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  0016                     __end_of__initialization:
   316  0016  0183               	clrf	3
   317  0017  120A  118A  28FC   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320  0070                     __pbssCOMMON:
   321  0070                     _ADCGO:
   322  0070                     	ds	1
   323  0071                     _L:
   324  0071                     	ds	1
   325  0072                     _h:
   326  0072                     	ds	1
   327  0073                     _H:
   328  0073                     	ds	1
   329  0074                     _Q:
   330  0074                     	ds	1
   331  0075                     _w:
   332  0075                     	ds	1
   333  0076                     _W:
   334  0076                     	ds	1
   335                           
   336                           	psect	cstackCOMMON
   337  0077                     __pcstackCOMMON:
   338  0077                     ?_Setup:
   339  0077                     ?_ADCG:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0077                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0077                     ??_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0077                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0077                     	ds	2
   354  0079                     ??_ADCG:
   355  0079                     ?_ADC_CHS_CLKS:	
   356                           ; 1 bytes @ 0x2
   357                           
   358  0079                     ADC_CHS_CLKS@S:	
   359                           ; 1 bytes @ 0x2
   360                           
   361                           
   362                           ; 1 bytes @ 0x2
   363  0079                     	ds	1
   364  007A                     ??_ADC_CHS_CLKS:
   365                           
   366                           ; 1 bytes @ 0x3
   367  007A                     	ds	2
   368  007C                     ??_main:
   369                           
   370                           	psect	cstackBANK0
   371  0020                     __pcstackBANK0:	
   372                           ; 1 bytes @ 0x5
   373                           
   374  0020                     ADC_CHS_CLKS@C:
   375                           
   376                           ; 1 bytes @ 0x0
   377  0020                     	ds	1
   378  0021                     ??_Setup:
   379                           
   380                           ; 1 bytes @ 0x1
   381  0021                     	ds	1
   382                           
   383                           	psect	maintext
   384  00FC                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 55 in file "slave1.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : B00/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels required when called:    3
   410 ;; This function calls:
   411 ;;		_ADCG
   412 ;;		_Setup
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  00FC                     _main:
   421  00FC                     l948:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   424                           
   425                           
   426                           ;slave1.c: 56:     Setup();
   427  00FC  120A  118A  20C9  120A  118A  	fcall	_Setup
   428  0101                     l950:
   429                           
   430                           ;slave1.c: 61:      ADCG();
   431  0101  120A  118A  210A  120A  118A  	fcall	_ADCG
   432  0106  2901               	goto	l950
   433  0107  120A  118A  280C   	ljmp	start
   434  010A                     __end_of_main:
   435                           
   436                           	psect	text1
   437  00C9                     __ptext1:	
   438 ;; *************** function _Setup *****************
   439 ;; Defined at:
   440 ;;		line 67 in file "slave1.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       1       0       0       0
   457 ;;      Totals:         0       1       0       0       0
   458 ;;Total ram usage:        1 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; Hardware stack levels required when called:    2
   461 ;; This function calls:
   462 ;;		_ADC_CHS_CLKS
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           
   469                           ;psect for function _Setup
   470  00C9                     _Setup:
   471  00C9                     l928:	
   472                           ;incstack = 0
   473                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   474                           
   475                           
   476                           ;slave1.c: 68:     ADC_CHS_CLKS (0,2);
   477  00C9  3002               	movlw	2
   478  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   479  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   480  00CC  00A1               	movwf	??_Setup
   481  00CD  0821               	movf	??_Setup,w
   482  00CE  00F9               	movwf	ADC_CHS_CLKS@S
   483  00CF  3000               	movlw	0
   484  00D0  120A  118A  201A  120A  118A  	fcall	_ADC_CHS_CLKS
   485  00D5                     l930:
   486                           
   487                           ;slave1.c: 69:     PIE1bits.ADIE=1;
   488  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   489  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   490  00D7  170C               	bsf	12,6	;volatile
   491  00D8                     l932:
   492                           
   493                           ;slave1.c: 71:     PORTA = 0;
   494  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   495  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   496  00DA  0185               	clrf	5	;volatile
   497  00DB                     l934:
   498                           
   499                           ;slave1.c: 72:     PORTD = 0;
   500  00DB  0188               	clrf	8	;volatile
   501  00DC                     l936:
   502                           
   503                           ;slave1.c: 74:     TRISA = 0B00000001;
   504  00DC  3001               	movlw	1
   505  00DD  1683               	bsf	3,5	;RP0=1, select bank1
   506  00DE  1303               	bcf	3,6	;RP1=0, select bank1
   507  00DF  0085               	movwf	5	;volatile
   508  00E0                     l938:
   509                           
   510                           ;slave1.c: 75:     TRISD = 0B00000000;
   511  00E0  0188               	clrf	8	;volatile
   512  00E1                     l940:
   513                           
   514                           ;slave1.c: 77:     ANSEL = 0B00000001;
   515  00E1  3001               	movlw	1
   516  00E2  1683               	bsf	3,5	;RP0=1, select bank3
   517  00E3  1703               	bsf	3,6	;RP1=1, select bank3
   518  00E4  0088               	movwf	8	;volatile
   519  00E5                     l942:
   520                           
   521                           ;slave1.c: 80:     INTCONbits.GIE=1;
   522  00E5  178B               	bsf	11,7	;volatile
   523  00E6                     l944:
   524                           
   525                           ;slave1.c: 81:     INTCONbits.PEIE=1;
   526  00E6  170B               	bsf	11,6	;volatile
   527  00E7                     l946:
   528                           
   529                           ;slave1.c: 82:     PIR1bits.ADIF=0;
   530  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   531  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   532  00E9  130C               	bcf	12,6	;volatile
   533  00EA                     l59:
   534  00EA  0008               	return
   535  00EB                     __end_of_Setup:
   536                           
   537                           	psect	text2
   538  001A                     __ptext2:	
   539 ;; *************** function _ADC_CHS_CLKS *****************
   540 ;; Defined at:
   541 ;;		line 3 in file "ADC.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  C               1    wreg     unsigned char 
   544 ;;  S               1    2[COMMON] unsigned char 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  C               1    0[BANK0 ] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         1       0       0       0       0
   557 ;;      Locals:         0       1       0       0       0
   558 ;;      Temps:          2       0       0       0       0
   559 ;;      Totals:         3       1       0       0       0
   560 ;;Total ram usage:        4 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_Setup
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _ADC_CHS_CLKS
   572  001A                     _ADC_CHS_CLKS:
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in _ADC_CHS_CLKS: [wreg-fsr0h+status,2+status,0]
   576                           ;ADC_CHS_CLKS@C stored from wreg
   577  001A  1283               	bcf	3,5	;RP0=0, select bank0
   578  001B  1303               	bcf	3,6	;RP1=0, select bank0
   579  001C  00A0               	movwf	ADC_CHS_CLKS@C
   580  001D                     l880:
   581                           
   582                           ;ADC.c: 4: switch (C) {
   583  001D  2891               	goto	l920
   584  001E                     l71:	
   585                           ;ADC.c: 7:     case 0:
   586                           
   587                           
   588                           ;ADC.c: 8:         ADCON0bits.CHS3 = 0;
   589  001E  129F               	bcf	31,5	;volatile
   590                           
   591                           ;ADC.c: 9:         ADCON0bits.CHS2 = 0;
   592  001F  121F               	bcf	31,4	;volatile
   593                           
   594                           ;ADC.c: 10:         ADCON0bits.CHS1 = 0;
   595  0020  119F               	bcf	31,3	;volatile
   596                           
   597                           ;ADC.c: 11:         ADCON0bits.CHS0 = 0;
   598  0021  111F               	bcf	31,2	;volatile
   599                           
   600                           ;ADC.c: 12:         ADCON0bits.ADON = 1;
   601  0022  141F               	bsf	31,0	;volatile
   602                           
   603                           ;ADC.c: 13:         ADCON0bits.GO = 1;
   604  0023  149F               	bsf	31,1	;volatile
   605  0024                     l882:
   606                           
   607                           ;ADC.c: 14:         ADCON1 = 0;
   608  0024  1683               	bsf	3,5	;RP0=1, select bank1
   609  0025  1303               	bcf	3,6	;RP1=0, select bank1
   610  0026  019F               	clrf	31	;volatile
   611                           
   612                           ;ADC.c: 15:     break;
   613  0027  28C8               	goto	l94
   614  0028                     l73:	
   615                           ;ADC.c: 16:     case 1:
   616                           
   617                           
   618                           ;ADC.c: 17:         ADCON0bits.CHS3=0;
   619  0028  129F               	bcf	31,5	;volatile
   620                           
   621                           ;ADC.c: 18:         ADCON0bits.CHS2=0;
   622  0029  121F               	bcf	31,4	;volatile
   623                           
   624                           ;ADC.c: 19:         ADCON0bits.CHS1=0;
   625  002A  119F               	bcf	31,3	;volatile
   626                           
   627                           ;ADC.c: 20:         ADCON0bits.CHS0=1;
   628  002B  151F               	bsf	31,2	;volatile
   629                           
   630                           ;ADC.c: 21:         ADCON0bits.ADON = 1;
   631  002C  141F               	bsf	31,0	;volatile
   632                           
   633                           ;ADC.c: 22:         ADCON0bits.GO = 1;
   634  002D  149F               	bsf	31,1	;volatile
   635  002E  2824               	goto	l882
   636  002F                     l74:	
   637                           ;ADC.c: 25:     case 2:
   638                           
   639                           
   640                           ;ADC.c: 26:         ADCON0bits.CHS3=0;
   641  002F  129F               	bcf	31,5	;volatile
   642                           
   643                           ;ADC.c: 27:         ADCON0bits.CHS2=0;
   644  0030  121F               	bcf	31,4	;volatile
   645                           
   646                           ;ADC.c: 28:         ADCON0bits.CHS1=1;
   647  0031  159F               	bsf	31,3	;volatile
   648                           
   649                           ;ADC.c: 29:         ADCON0bits.CHS0=0;
   650  0032  111F               	bcf	31,2	;volatile
   651                           
   652                           ;ADC.c: 30:         ADCON0bits.ADON = 1;
   653  0033  141F               	bsf	31,0	;volatile
   654                           
   655                           ;ADC.c: 31:         ADCON0bits.GO = 1;
   656  0034  149F               	bsf	31,1	;volatile
   657  0035  2824               	goto	l882
   658  0036                     l75:	
   659                           ;ADC.c: 34:     case 3:
   660                           
   661                           
   662                           ;ADC.c: 35:         ADCON0bits.CHS3=0;
   663  0036  129F               	bcf	31,5	;volatile
   664                           
   665                           ;ADC.c: 36:         ADCON0bits.CHS2=0;
   666  0037  121F               	bcf	31,4	;volatile
   667                           
   668                           ;ADC.c: 37:         ADCON0bits.CHS1=1;
   669  0038  159F               	bsf	31,3	;volatile
   670                           
   671                           ;ADC.c: 38:         ADCON0bits.CHS0=1;
   672  0039  151F               	bsf	31,2	;volatile
   673                           
   674                           ;ADC.c: 39:         ADCON0bits.ADON = 1;
   675  003A  141F               	bsf	31,0	;volatile
   676                           
   677                           ;ADC.c: 40:         ADCON0bits.GO = 1;
   678  003B  149F               	bsf	31,1	;volatile
   679  003C  2824               	goto	l882
   680  003D                     l76:	
   681                           ;ADC.c: 43:     case 4:
   682                           
   683                           
   684                           ;ADC.c: 44:         ADCON0bits.CHS3=0;
   685  003D  129F               	bcf	31,5	;volatile
   686                           
   687                           ;ADC.c: 45:         ADCON0bits.CHS2=1;
   688  003E  161F               	bsf	31,4	;volatile
   689                           
   690                           ;ADC.c: 46:         ADCON0bits.CHS1=0;
   691  003F  119F               	bcf	31,3	;volatile
   692                           
   693                           ;ADC.c: 47:         ADCON0bits.CHS0=0;
   694  0040  111F               	bcf	31,2	;volatile
   695                           
   696                           ;ADC.c: 48:         ADCON0bits.ADON = 1;
   697  0041  141F               	bsf	31,0	;volatile
   698                           
   699                           ;ADC.c: 49:         ADCON0bits.GO = 1;
   700  0042  149F               	bsf	31,1	;volatile
   701  0043  2824               	goto	l882
   702  0044                     l77:	
   703                           ;ADC.c: 52:     case 5:
   704                           
   705                           
   706                           ;ADC.c: 53:         ADCON0bits.CHS3=0;
   707  0044  129F               	bcf	31,5	;volatile
   708                           
   709                           ;ADC.c: 54:         ADCON0bits.CHS2=1;
   710  0045  161F               	bsf	31,4	;volatile
   711                           
   712                           ;ADC.c: 55:         ADCON0bits.CHS1=0;
   713  0046  119F               	bcf	31,3	;volatile
   714                           
   715                           ;ADC.c: 56:         ADCON0bits.CHS0=1;
   716  0047  151F               	bsf	31,2	;volatile
   717                           
   718                           ;ADC.c: 57:         ADCON0bits.ADON = 1;
   719  0048  141F               	bsf	31,0	;volatile
   720                           
   721                           ;ADC.c: 58:         ADCON0bits.GO = 1;
   722  0049  149F               	bsf	31,1	;volatile
   723  004A  2824               	goto	l882
   724  004B                     l78:	
   725                           ;ADC.c: 61:     case 6:
   726                           
   727                           
   728                           ;ADC.c: 62:         ADCON0bits.CHS3=0;
   729  004B  129F               	bcf	31,5	;volatile
   730                           
   731                           ;ADC.c: 63:         ADCON0bits.CHS2=1;
   732  004C  161F               	bsf	31,4	;volatile
   733                           
   734                           ;ADC.c: 64:         ADCON0bits.CHS1=1;
   735  004D  159F               	bsf	31,3	;volatile
   736                           
   737                           ;ADC.c: 65:         ADCON0bits.CHS0=0;
   738  004E  111F               	bcf	31,2	;volatile
   739                           
   740                           ;ADC.c: 66:         ADCON0bits.ADON = 1;
   741  004F  141F               	bsf	31,0	;volatile
   742                           
   743                           ;ADC.c: 67:         ADCON0bits.GO = 1;
   744  0050  149F               	bsf	31,1	;volatile
   745  0051  2824               	goto	l882
   746  0052                     l79:	
   747                           ;ADC.c: 70:     case 7:
   748                           
   749                           
   750                           ;ADC.c: 71:         ADCON0bits.CHS3=0;
   751  0052  129F               	bcf	31,5	;volatile
   752                           
   753                           ;ADC.c: 72:         ADCON0bits.CHS2=1;
   754  0053  161F               	bsf	31,4	;volatile
   755                           
   756                           ;ADC.c: 73:         ADCON0bits.CHS1=1;
   757  0054  159F               	bsf	31,3	;volatile
   758                           
   759                           ;ADC.c: 74:         ADCON0bits.CHS0=1;
   760  0055  151F               	bsf	31,2	;volatile
   761                           
   762                           ;ADC.c: 75:         ADCON0bits.ADON = 1;
   763  0056  141F               	bsf	31,0	;volatile
   764                           
   765                           ;ADC.c: 76:         ADCON0bits.GO = 1;
   766  0057  149F               	bsf	31,1	;volatile
   767  0058  2824               	goto	l882
   768  0059                     l80:	
   769                           ;ADC.c: 79:     case 8:
   770                           
   771                           
   772                           ;ADC.c: 80:         ADCON0bits.CHS3=1;
   773  0059  169F               	bsf	31,5	;volatile
   774                           
   775                           ;ADC.c: 81:         ADCON0bits.CHS2=0;
   776  005A  121F               	bcf	31,4	;volatile
   777                           
   778                           ;ADC.c: 82:         ADCON0bits.CHS1=0;
   779  005B  119F               	bcf	31,3	;volatile
   780                           
   781                           ;ADC.c: 83:         ADCON0bits.CHS0=0;
   782  005C  111F               	bcf	31,2	;volatile
   783                           
   784                           ;ADC.c: 84:         ADCON0bits.ADON = 1;
   785  005D  141F               	bsf	31,0	;volatile
   786                           
   787                           ;ADC.c: 85:         ADCON0bits.GO = 1;
   788  005E  149F               	bsf	31,1	;volatile
   789  005F  2824               	goto	l882
   790  0060                     l81:	
   791                           ;ADC.c: 88:     case 9:
   792                           
   793                           
   794                           ;ADC.c: 89:         ADCON0bits.CHS3=1;
   795  0060  169F               	bsf	31,5	;volatile
   796                           
   797                           ;ADC.c: 90:         ADCON0bits.CHS2=0;
   798  0061  121F               	bcf	31,4	;volatile
   799                           
   800                           ;ADC.c: 91:         ADCON0bits.CHS1=0;
   801  0062  119F               	bcf	31,3	;volatile
   802                           
   803                           ;ADC.c: 92:         ADCON0bits.CHS0=1;
   804  0063  151F               	bsf	31,2	;volatile
   805                           
   806                           ;ADC.c: 93:         ADCON0bits.ADON = 1;
   807  0064  141F               	bsf	31,0	;volatile
   808                           
   809                           ;ADC.c: 94:         ADCON0bits.GO = 1;
   810  0065  149F               	bsf	31,1	;volatile
   811  0066  2824               	goto	l882
   812  0067                     l82:	
   813                           ;ADC.c: 97:     case 10:
   814                           
   815                           
   816                           ;ADC.c: 98:         ADCON0bits.CHS3=1;
   817  0067  169F               	bsf	31,5	;volatile
   818                           
   819                           ;ADC.c: 99:         ADCON0bits.CHS2=0;
   820  0068  121F               	bcf	31,4	;volatile
   821                           
   822                           ;ADC.c: 100:         ADCON0bits.CHS1=1;
   823  0069  159F               	bsf	31,3	;volatile
   824                           
   825                           ;ADC.c: 101:         ADCON0bits.CHS0=0;
   826  006A  111F               	bcf	31,2	;volatile
   827                           
   828                           ;ADC.c: 102:         ADCON0bits.ADON = 1;
   829  006B  141F               	bsf	31,0	;volatile
   830                           
   831                           ;ADC.c: 103:         ADCON0bits.GO = 1;
   832  006C  149F               	bsf	31,1	;volatile
   833  006D  2824               	goto	l882
   834  006E                     l83:	
   835                           ;ADC.c: 106:     case 11:
   836                           
   837                           
   838                           ;ADC.c: 107:         ADCON0bits.CHS3=1;
   839  006E  169F               	bsf	31,5	;volatile
   840                           
   841                           ;ADC.c: 108:         ADCON0bits.CHS2=0;
   842  006F  121F               	bcf	31,4	;volatile
   843                           
   844                           ;ADC.c: 109:         ADCON0bits.CHS1=1;
   845  0070  159F               	bsf	31,3	;volatile
   846                           
   847                           ;ADC.c: 110:         ADCON0bits.CHS0=1;
   848  0071  151F               	bsf	31,2	;volatile
   849                           
   850                           ;ADC.c: 111:         ADCON0bits.ADON = 1;
   851  0072  141F               	bsf	31,0	;volatile
   852                           
   853                           ;ADC.c: 112:         ADCON0bits.GO = 1;
   854  0073  149F               	bsf	31,1	;volatile
   855  0074  2824               	goto	l882
   856  0075                     l84:	
   857                           ;ADC.c: 115:     case 12:
   858                           
   859                           
   860                           ;ADC.c: 116:         ADCON0bits.CHS3=1;
   861  0075  169F               	bsf	31,5	;volatile
   862                           
   863                           ;ADC.c: 117:         ADCON0bits.CHS2=1;
   864  0076  161F               	bsf	31,4	;volatile
   865                           
   866                           ;ADC.c: 118:         ADCON0bits.CHS1=0;
   867  0077  119F               	bcf	31,3	;volatile
   868                           
   869                           ;ADC.c: 119:         ADCON0bits.CHS0=0;
   870  0078  111F               	bcf	31,2	;volatile
   871                           
   872                           ;ADC.c: 120:         ADCON0bits.ADON = 1;
   873  0079  141F               	bsf	31,0	;volatile
   874                           
   875                           ;ADC.c: 121:         ADCON0bits.GO = 1;
   876  007A  149F               	bsf	31,1	;volatile
   877  007B  2824               	goto	l882
   878  007C                     l85:	
   879                           ;ADC.c: 124:     case 13:
   880                           
   881                           
   882                           ;ADC.c: 125:         ADCON0bits.CHS3=1;
   883  007C  169F               	bsf	31,5	;volatile
   884                           
   885                           ;ADC.c: 126:         ADCON0bits.CHS2=1;
   886  007D  161F               	bsf	31,4	;volatile
   887                           
   888                           ;ADC.c: 127:         ADCON0bits.CHS1=0;
   889  007E  119F               	bcf	31,3	;volatile
   890                           
   891                           ;ADC.c: 128:         ADCON0bits.CHS0=1;
   892  007F  151F               	bsf	31,2	;volatile
   893                           
   894                           ;ADC.c: 129:         ADCON0bits.ADON = 1;
   895  0080  141F               	bsf	31,0	;volatile
   896                           
   897                           ;ADC.c: 130:         ADCON0bits.GO = 1;
   898  0081  149F               	bsf	31,1	;volatile
   899  0082  2824               	goto	l882
   900  0083                     l86:	
   901                           ;ADC.c: 133:     case 14:
   902                           
   903                           
   904                           ;ADC.c: 134:         ADCON0bits.CHS3=1;
   905  0083  169F               	bsf	31,5	;volatile
   906                           
   907                           ;ADC.c: 135:         ADCON0bits.CHS2=1;
   908  0084  161F               	bsf	31,4	;volatile
   909                           
   910                           ;ADC.c: 136:         ADCON0bits.CHS1=1;
   911  0085  159F               	bsf	31,3	;volatile
   912                           
   913                           ;ADC.c: 137:         ADCON0bits.CHS0=0;
   914  0086  111F               	bcf	31,2	;volatile
   915                           
   916                           ;ADC.c: 138:         ADCON0bits.ADON = 1;
   917  0087  141F               	bsf	31,0	;volatile
   918                           
   919                           ;ADC.c: 139:         ADCON0bits.GO = 1;
   920  0088  149F               	bsf	31,1	;volatile
   921  0089  2824               	goto	l882
   922  008A                     l87:	
   923                           ;ADC.c: 142:     default:
   924                           
   925                           
   926                           ;ADC.c: 143:         ADCON0bits.CHS3=1;
   927  008A  169F               	bsf	31,5	;volatile
   928                           
   929                           ;ADC.c: 144:         ADCON0bits.CHS2=1;
   930  008B  161F               	bsf	31,4	;volatile
   931                           
   932                           ;ADC.c: 145:         ADCON0bits.CHS1=1;
   933  008C  159F               	bsf	31,3	;volatile
   934                           
   935                           ;ADC.c: 146:         ADCON0bits.CHS0=1;
   936  008D  151F               	bsf	31,2	;volatile
   937                           
   938                           ;ADC.c: 147:         ADCON0bits.ADON = 1;
   939  008E  141F               	bsf	31,0	;volatile
   940                           
   941                           ;ADC.c: 148:         ADCON0bits.GO = 1;
   942  008F  149F               	bsf	31,1	;volatile
   943  0090  2824               	goto	l882
   944  0091                     l920:
   945  0091  0820               	movf	ADC_CHS_CLKS@C,w
   946  0092  00FA               	movwf	??_ADC_CHS_CLKS
   947  0093  01FB               	clrf	??_ADC_CHS_CLKS+1
   948                           
   949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   950                           ; Switch size 1, requested type "simple"
   951                           ; Number of cases is 1, Range of values is 0 to 0
   952                           ; switch strategies available:
   953                           ; Name         Instructions Cycles
   954                           ; simple_byte            4     3 (average)
   955                           ; direct_byte           11     8 (fixed)
   956                           ; jumptable            260     6 (fixed)
   957                           ;	Chosen strategy is simple_byte
   958  0094  087B               	movf	??_ADC_CHS_CLKS+1,w
   959  0095  3A00               	xorlw	0	; case 0
   960  0096  1903               	skipnz
   961  0097  2899               	goto	l982
   962  0098  288A               	goto	l87
   963  0099                     l982:
   964                           
   965                           ; Switch size 1, requested type "simple"
   966                           ; Number of cases is 15, Range of values is 0 to 14
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte           46    24 (average)
   970                           ; direct_byte           53     8 (fixed)
   971                           ; jumptable            260     6 (fixed)
   972                           ;	Chosen strategy is simple_byte
   973  0099  087A               	movf	??_ADC_CHS_CLKS,w
   974  009A  3A00               	xorlw	0	; case 0
   975  009B  1903               	skipnz
   976  009C  281E               	goto	l71
   977  009D  3A01               	xorlw	1	; case 1
   978  009E  1903               	skipnz
   979  009F  2828               	goto	l73
   980  00A0  3A03               	xorlw	3	; case 2
   981  00A1  1903               	skipnz
   982  00A2  282F               	goto	l74
   983  00A3  3A01               	xorlw	1	; case 3
   984  00A4  1903               	skipnz
   985  00A5  2836               	goto	l75
   986  00A6  3A07               	xorlw	7	; case 4
   987  00A7  1903               	skipnz
   988  00A8  283D               	goto	l76
   989  00A9  3A01               	xorlw	1	; case 5
   990  00AA  1903               	skipnz
   991  00AB  2844               	goto	l77
   992  00AC  3A03               	xorlw	3	; case 6
   993  00AD  1903               	skipnz
   994  00AE  284B               	goto	l78
   995  00AF  3A01               	xorlw	1	; case 7
   996  00B0  1903               	skipnz
   997  00B1  2852               	goto	l79
   998  00B2  3A0F               	xorlw	15	; case 8
   999  00B3  1903               	skipnz
  1000  00B4  2859               	goto	l80
  1001  00B5  3A01               	xorlw	1	; case 9
  1002  00B6  1903               	skipnz
  1003  00B7  2860               	goto	l81
  1004  00B8  3A03               	xorlw	3	; case 10
  1005  00B9  1903               	skipnz
  1006  00BA  2867               	goto	l82
  1007  00BB  3A01               	xorlw	1	; case 11
  1008  00BC  1903               	skipnz
  1009  00BD  286E               	goto	l83
  1010  00BE  3A07               	xorlw	7	; case 12
  1011  00BF  1903               	skipnz
  1012  00C0  2875               	goto	l84
  1013  00C1  3A01               	xorlw	1	; case 13
  1014  00C2  1903               	skipnz
  1015  00C3  287C               	goto	l85
  1016  00C4  3A03               	xorlw	3	; case 14
  1017  00C5  1903               	skipnz
  1018  00C6  2883               	goto	l86
  1019  00C7  288A               	goto	l87
  1020  00C8                     l94:
  1021  00C8  0008               	return
  1022  00C9                     __end_of_ADC_CHS_CLKS:
  1023                           
  1024                           	psect	text3
  1025  010A                     __ptext3:	
  1026 ;; *************** function _ADCG *****************
  1027 ;; Defined at:
  1028 ;;		line 88 in file "slave1.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _ADCG
  1058  010A                     _ADCG:
  1059  010A                     l752:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _ADCG: [wreg+status,2]
  1062                           
  1063                           
  1064                           ;slave1.c: 89:     if(ADCGO > 20){
  1065  010A  3015               	movlw	21
  1066  010B  0270               	subwf	_ADCGO,w
  1067  010C  1C03               	skipc
  1068  010D  290F               	goto	u11
  1069  010E  2910               	goto	u10
  1070  010F                     u11:
  1071  010F  2914               	goto	l63
  1072  0110                     u10:
  1073  0110                     l754:
  1074                           
  1075                           ;slave1.c: 90:         ADCGO = 0;
  1076  0110  01F0               	clrf	_ADCGO
  1077  0111                     l756:
  1078                           
  1079                           ;slave1.c: 91:         ADCON0bits.GO_nDONE = 1;
  1080  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0113  149F               	bsf	31,1	;volatile
  1083  0114                     l63:
  1084  0114  0008               	return
  1085  0115                     __end_of_ADCG:
  1086                           
  1087                           	psect	text4
  1088  00EB                     __ptext4:	
  1089 ;; *************** function _isr *****************
  1090 ;; Defined at:
  1091 ;;		line 46 in file "slave1.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0
  1107 ;;      Temps:          2       0       0       0       0
  1108 ;;      Totals:         2       0       0       0       0
  1109 ;;Total ram usage:        2 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		Interrupt level 1
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _isr
  1120  00EB                     _isr:
  1121  00EB                     i1l758:
  1122                           
  1123                           ;slave1.c: 47:     if (ADIF==1){
  1124  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1125  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1126  00ED  1F0C               	btfss	12,6	;volatile
  1127  00EE  28F0               	goto	u2_21
  1128  00EF  28F1               	goto	u2_20
  1129  00F0                     u2_21:
  1130  00F0  28F5               	goto	i1l48
  1131  00F1                     u2_20:
  1132  00F1                     i1l760:
  1133                           
  1134                           ;slave1.c: 48:         PORTA=ADRESH;
  1135  00F1  081E               	movf	30,w	;volatile
  1136  00F2  0085               	movwf	5	;volatile
  1137  00F3                     i1l762:
  1138                           
  1139                           ;slave1.c: 49:         PIR1bits.ADIF=0;
  1140  00F3  130C               	bcf	12,6	;volatile
  1141  00F4                     i1l764:
  1142                           
  1143                           ;slave1.c: 50:         ADCON0bits.GO=1;}
  1144  00F4  149F               	bsf	31,1	;volatile
  1145  00F5                     i1l48:
  1146  00F5  0878               	movf	??_isr+1,w
  1147  00F6  008A               	movwf	10
  1148  00F7  0E77               	swapf	??_isr,w
  1149  00F8  0083               	movwf	3
  1150  00F9  0EFE               	swapf	btemp,f
  1151  00FA  0E7E               	swapf	btemp,w
  1152  00FB  0009               	retfie
  1153  00FC                     __end_of_isr:
  1154  007E                     btemp	set	126	;btemp
  1155  007E                     wtemp0	set	126
  1156                           
  1157                           	psect	intentry
  1158  0004                     __pintentry:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _isr: [wreg]
  1161                           
  1162  0004                     interrupt_function:
  1163  007E                     saved_w	set	btemp
  1164  0004  00FE               	movwf	btemp
  1165  0005  0E03               	swapf	3,w
  1166  0006  00F7               	movwf	??_isr
  1167  0007  080A               	movf	10,w
  1168  0008  00F8               	movwf	??_isr+1
  1169  0009  120A  118A  28EB   	ljmp	_isr
  1170                           
  1171                           	psect	config
  1172                           
  1173                           ;Config register CONFIG1 @ 0x2007
  1174                           ;	Oscillator Selection bits
  1175                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1176                           ;	Watchdog Timer Enable bit
  1177                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1178                           ;	Power-up Timer Enable bit
  1179                           ;	PWRTE = OFF, PWRT disabled
  1180                           ;	RE3/MCLR pin function select bit
  1181                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1182                           ;	Code Protection bit
  1183                           ;	CP = OFF, Program memory code protection is disabled
  1184                           ;	Data Code Protection bit
  1185                           ;	CPD = OFF, Data memory code protection is disabled
  1186                           ;	Brown Out Reset Selection bits
  1187                           ;	BOREN = OFF, BOR disabled
  1188                           ;	Internal External Switchover bit
  1189                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1190                           ;	Fail-Safe Clock Monitor Enabled bit
  1191                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1192                           ;	Low Voltage Programming Enable bit
  1193                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1194                           ;	In-Circuit Debugger Mode bit
  1195                           ;	DEBUG = 0x1, unprogrammed default
  1196  2007                     	org	8199
  1197  2007  20D4               	dw	8404
  1198                           
  1199                           ;Config register CONFIG2 @ 0x2008
  1200                           ;	Brown-out Reset Selection bit
  1201                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1202                           ;	Flash Program Memory Self Write Enable bits
  1203                           ;	WRT = OFF, Write protection off
  1204  2008                     	org	8200
  1205  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Setup->_ADC_CHS_CLKS

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Setup
    _Setup->_ADC_CHS_CLKS

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     152
                               _ADCG
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0     152
                                              1 BANK0      1     1      0
                       _ADC_CHS_CLKS
 ---------------------------------------------------------------------------------
 (2) _ADC_CHS_CLKS                                         4     3      1     152
                                              2 COMMON     3     2      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCG                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCG
   _Setup
     _ADC_CHS_CLKS

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 20:03:36 2021

                      _H 0073                        _L 0071                        _Q 0074  
                      _W 0076                        _h 0072                        _w 0075  
  __size_of_ADC_CHS_CLKS 00AF                       l63 0114                       l71 001E  
                     l80 0059                       l81 0060                       l73 0028  
                     l82 0067                       l74 002F                       l83 006E  
                     l75 0036                       l59 00EA                       l84 0075  
                     l76 003D                       l85 007C                       l77 0044  
                     l86 0083                       l78 004B                       l94 00C8  
                     l87 008A                       l79 0052                       u10 0110  
                     u11 010F                      l752 010A                      l920 0091  
                    l754 0110                      l930 00D5                      l756 0111  
                    l940 00E1                      l932 00D8                      l942 00E5  
                    l934 00DB                      l950 0101                      l880 001D  
                    l944 00E6                      l936 00DC                      l928 00C9  
                    l882 0024                      l946 00E7                      l938 00E0  
                    l948 00FC                      l982 0099                      _isr 00EB  
                   _ADCG 010A                     _ADIF 0066                     ?_isr 0077  
                   i1l48 00F5                     u2_20 00F1                     u2_21 00F0  
                   _main 00FC                     btemp 007E                     start 000C  
           _ADC_CHS_CLKS 001A                    ?_ADCG 0077                    ??_isr 0077  
                  _ADCGO 0070                    ?_main 0077                    _ANSEL 0188  
                  i1l760 00F1                    i1l762 00F3                    i1l764 00F4  
                  i1l758 00EB                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    _Setup 00C9  
                  pclath 000A                    status 0003                    wtemp0 007E  
           __end_of_ADCG 0115          __initialization 000F             __end_of_main 010A  
                 ??_ADCG 0079                   ??_main 007C                   ?_Setup 0077  
                 _ADCON1 009F                   _ADRESH 001E                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0077            __end_of_Setup 00EB  
                ??_Setup 0021               __pmaintext 00FC               __pintentry 0004  
                __ptext1 00C9                  __ptext2 001A                  __ptext3 010A  
                __ptext4 00EB             __size_of_isr 0011     end_of_initialization 0016  
          ADC_CHS_CLKS@C 0020            ADC_CHS_CLKS@S 0079      start_initialization 000F  
            __end_of_isr 00FC            ?_ADC_CHS_CLKS 0079              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0020           ??_ADC_CHS_CLKS 007A  
         __size_of_Setup 0022        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F     __end_of_ADC_CHS_CLKS 00C9  
          __size_of_ADCG 000B            __size_of_main 000E               _INTCONbits 000B  
               intlevel1 0000  
