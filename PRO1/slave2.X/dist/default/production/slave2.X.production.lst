

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 02:02:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  0006                     _PORTBbits	set	6
   369  000B                     _INTCONbits	set	11
   370  0009                     _PORTE	set	9
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0008                     _PORTD	set	8
   375  0063                     _SSPIF	set	99
   376  0058                     _RBIF	set	88
   377  008F                     _OSCCONbits	set	143
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  0096                     _IOCB	set	150
   381  0095                     _WPUB	set	149
   382  0081                     _OPTION_REG	set	129
   383  0089                     _TRISE	set	137
   384  0088                     _TRISD	set	136
   385  0087                     _TRISC	set	135
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395                           ; #config settings
   396                           
   397  000F                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   403  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   404  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   405  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   406  0015                     end_of_initialization:	
   407                           ;End of C runtime variable initialization code
   408                           
   409  0015                     __end_of__initialization:
   410  0015  0183               	clrf	3
   411  0016  120A  118A  283E   	ljmp	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMMON
   414  0070                     __pbssCOMMON:
   415  0070                     _L:
   416  0070                     	ds	1
   417  0071                     _h:
   418  0071                     	ds	1
   419  0072                     _H:
   420  0072                     	ds	1
   421  0073                     _Q:
   422  0073                     	ds	1
   423  0074                     _w:
   424  0074                     	ds	1
   425  0075                     _W:
   426  0075                     	ds	1
   427                           
   428                           	psect	cstackCOMMON
   429  0076                     __pcstackCOMMON:
   430  0076                     ?_push_0:
   431  0076                     ??_push_0:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0076                     ?_push_1:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0076                     ??_push_1:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0076                     ?_spiWrite:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0076                     ?_Setup:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0076                     ?_isr:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0076                     ?_main:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0076                     ?i1_spiWrite:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0076                     ??i1_spiWrite:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0076                     i1spiWrite@dat:	
   459                           ; 1 bytes @ 0x0
   460                           
   461                           
   462                           ; 1 bytes @ 0x0
   463  0076                     	ds	1
   464  0077                     ??_isr:
   465                           
   466                           ; 1 bytes @ 0x1
   467  0077                     	ds	2
   468  0079                     ??_spiWrite:
   469  0079                     ??_Setup:	
   470                           ; 1 bytes @ 0x3
   471                           
   472  0079                     ??_spiInit:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0079                     spiInit@sType:	
   476                           ; 1 bytes @ 0x3
   477                           
   478  0079                     spiWrite@dat:	
   479                           ; 1 bytes @ 0x3
   480                           
   481                           
   482                           ; 1 bytes @ 0x3
   483  0079                     	ds	1
   484  007A                     ??_main:
   485                           
   486                           	psect	cstackBANK0
   487  0020                     __pcstackBANK0:	
   488                           ; 1 bytes @ 0x4
   489                           
   490  0020                     ?_spiInit:
   491  0020                     spiInit@sDataSample:	
   492                           ; 1 bytes @ 0x0
   493                           
   494                           
   495                           ; 1 bytes @ 0x0
   496  0020                     	ds	1
   497  0021                     spiInit@sClockIdle:
   498                           
   499                           ; 1 bytes @ 0x1
   500  0021                     	ds	1
   501  0022                     spiInit@sTransmitEdge:
   502                           
   503                           ; 1 bytes @ 0x2
   504  0022                     	ds	1
   505                           
   506                           	psect	maintext
   507  003E                     __pmaintext:	
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 57 in file "salve2.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : B00/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels required when called:    3
   533 ;; This function calls:
   534 ;;		_Setup
   535 ;;		_spiInit
   536 ;;		_spiWrite
   537 ;; This function is called by:
   538 ;;		Startup code after reset
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _main
   544  003E                     _main:
   545  003E                     l873:	
   546                           ;incstack = 0
   547                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   548                           
   549                           
   550                           ;salve2.c: 58:     Setup();
   551  003E  120A  118A  2061  120A  118A  	fcall	_Setup
   552                           
   553                           ;salve2.c: 59:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   554  0043  1283               	bcf	3,5	;RP0=0, select bank0
   555  0044  1303               	bcf	3,6	;RP1=0, select bank0
   556  0045  01A0               	clrf	spiInit@sDataSample
   557  0046  01A1               	clrf	spiInit@sClockIdle
   558  0047  01A2               	clrf	spiInit@sTransmitEdge
   559  0048  3024               	movlw	36
   560  0049  120A  118A  2082  120A  118A  	fcall	_spiInit
   561  004E                     l875:
   562                           
   563                           ;salve2.c: 66:      if(SSPIF == 1){
   564  004E  1283               	bcf	3,5	;RP0=0, select bank0
   565  004F  1303               	bcf	3,6	;RP1=0, select bank0
   566  0050  1D8C               	btfss	12,3	;volatile
   567  0051  2853               	goto	u151
   568  0052  2854               	goto	u150
   569  0053                     u151:
   570  0053  284E               	goto	l875
   571  0054                     u150:
   572  0054                     l877:
   573                           
   574                           ;salve2.c: 67:         spiWrite(PORTD);
   575  0054  0808               	movf	8,w	;volatile
   576  0055  120A  118A  20C6  120A  118A  	fcall	_spiWrite
   577  005A                     l879:
   578                           
   579                           ;salve2.c: 68:         SSPIF = 0;
   580  005A  1283               	bcf	3,5	;RP0=0, select bank0
   581  005B  1303               	bcf	3,6	;RP1=0, select bank0
   582  005C  118C               	bcf	12,3	;volatile
   583  005D  284E               	goto	l875
   584  005E  120A  118A  280C   	ljmp	start
   585  0061                     __end_of_main:
   586                           
   587                           	psect	text1
   588  00C6                     __ptext1:	
   589 ;; *************** function _spiWrite *****************
   590 ;; Defined at:
   591 ;;		line 27 in file "SSSPI.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  dat             1    wreg     unsigned char 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  dat             1    3[COMMON] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         1       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0
   608 ;;      Totals:         1       0       0       0       0
   609 ;;Total ram usage:        1 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    2
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _spiWrite
   621  00C6                     _spiWrite:
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _spiWrite: [wreg]
   625                           ;spiWrite@dat stored from wreg
   626  00C6  00F9               	movwf	spiWrite@dat
   627  00C7                     l753:
   628                           
   629                           ;SSSPI.c: 27: void spiWrite(char dat);SSSPI.c: 28: {;SSSPI.c: 29:     SSPBUF = dat;
   630  00C7  0879               	movf	spiWrite@dat,w
   631  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   632  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   633  00CA  0093               	movwf	19	;volatile
   634  00CB                     l117:
   635  00CB  0008               	return
   636  00CC                     __end_of_spiWrite:
   637                           
   638                           	psect	text2
   639  0082                     __ptext2:	
   640 ;; *************** function _spiInit *****************
   641 ;; Defined at:
   642 ;;		line 5 in file "SSSPI.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  sType           1    wreg     enum E1264
   645 ;;  sDataSample     1    0[BANK0 ] enum E1272
   646 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   647 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  sType           1    3[COMMON] enum E1264
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       3       0       0       0
   660 ;;      Locals:         1       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0
   662 ;;      Totals:         1       3       0       0       0
   663 ;;Total ram usage:        4 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    2
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _spiInit
   675  0082                     _spiInit:
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   679                           ;spiInit@sType stored from wreg
   680  0082  00F9               	movwf	spiInit@sType
   681  0083                     l863:
   682                           
   683                           ;SSSPI.c: 5: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSSPI.c: 6: {;SSSPI.c: 7:     TRISC5 = 0;
   684  0083  1683               	bsf	3,5	;RP0=1, select bank1
   685  0084  1303               	bcf	3,6	;RP1=0, select bank1
   686  0085  1287               	bcf	7,5	;volatile
   687                           
   688                           ;SSSPI.c: 8:     if(sType & 0b00000100)
   689  0086  1D79               	btfss	spiInit@sType,2
   690  0087  2889               	goto	u141
   691  0088  288A               	goto	u140
   692  0089                     u141:
   693  0089  2892               	goto	l869
   694  008A                     u140:
   695  008A                     l865:
   696                           
   697                           ;SSSPI.c: 9:     {;SSSPI.c: 10:         SSPSTAT = sTransmitEdge;
   698  008A  1283               	bcf	3,5	;RP0=0, select bank0
   699  008B  1303               	bcf	3,6	;RP1=0, select bank0
   700  008C  0822               	movf	spiInit@sTransmitEdge,w
   701  008D  1683               	bsf	3,5	;RP0=1, select bank1
   702  008E  1303               	bcf	3,6	;RP1=0, select bank1
   703  008F  0094               	movwf	20	;volatile
   704  0090                     l867:
   705                           
   706                           ;SSSPI.c: 11:         TRISC3 = 1;
   707  0090  1587               	bsf	7,3	;volatile
   708                           
   709                           ;SSSPI.c: 12:     }
   710  0091  289A               	goto	l107
   711  0092                     l869:
   712                           
   713                           ;SSSPI.c: 14:     {;SSSPI.c: 15:         SSPSTAT = sDataSample | sTransmitEdge;
   714  0092  1283               	bcf	3,5	;RP0=0, select bank0
   715  0093  1303               	bcf	3,6	;RP1=0, select bank0
   716  0094  0820               	movf	spiInit@sDataSample,w
   717  0095  0422               	iorwf	spiInit@sTransmitEdge,w
   718  0096  1683               	bsf	3,5	;RP0=1, select bank1
   719  0097  1303               	bcf	3,6	;RP1=0, select bank1
   720  0098  0094               	movwf	20	;volatile
   721  0099                     l871:
   722                           
   723                           ;SSSPI.c: 16:         TRISC3 = 0;
   724  0099  1187               	bcf	7,3	;volatile
   725  009A                     l107:	
   726                           ;SSSPI.c: 17:     }
   727                           
   728                           
   729                           ;SSSPI.c: 19:     SSPCON = sType | sClockIdle;
   730  009A  0879               	movf	spiInit@sType,w
   731  009B  1283               	bcf	3,5	;RP0=0, select bank0
   732  009C  1303               	bcf	3,6	;RP1=0, select bank0
   733  009D  0421               	iorwf	spiInit@sClockIdle,w
   734  009E  0094               	movwf	20	;volatile
   735  009F                     l108:
   736  009F  0008               	return
   737  00A0                     __end_of_spiInit:
   738                           
   739                           	psect	text3
   740  0061                     __ptext3:	
   741 ;; *************** function _Setup *****************
   742 ;; Defined at:
   743 ;;		line 73 in file "salve2.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    2
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _Setup
   773  0061                     _Setup:
   774  0061                     l755:	
   775                           ;incstack = 0
   776                           ; Regs used in _Setup: [wreg+status,2]
   777                           
   778                           
   779                           ;salve2.c: 75:     PORTA = 0;
   780  0061  1283               	bcf	3,5	;RP0=0, select bank0
   781  0062  1303               	bcf	3,6	;RP1=0, select bank0
   782  0063  0185               	clrf	5	;volatile
   783                           
   784                           ;salve2.c: 76:     PORTB = 0;
   785  0064  0186               	clrf	6	;volatile
   786                           
   787                           ;salve2.c: 77:     PORTC = 0;
   788  0065  0187               	clrf	7	;volatile
   789                           
   790                           ;salve2.c: 78:     PORTD = 0;
   791  0066  0188               	clrf	8	;volatile
   792                           
   793                           ;salve2.c: 79:     PORTE = 0;
   794  0067  0189               	clrf	9	;volatile
   795                           
   796                           ;salve2.c: 81:     TRISA = 0B00000000;
   797  0068  1683               	bsf	3,5	;RP0=1, select bank1
   798  0069  1303               	bcf	3,6	;RP1=0, select bank1
   799  006A  0185               	clrf	5	;volatile
   800  006B                     l757:
   801                           
   802                           ;salve2.c: 82:     TRISB = 0B00000011;
   803  006B  3003               	movlw	3
   804  006C  0086               	movwf	6	;volatile
   805  006D                     l759:
   806                           
   807                           ;salve2.c: 83:     TRISC = 0B00011000;
   808  006D  3018               	movlw	24
   809  006E  0087               	movwf	7	;volatile
   810                           
   811                           ;salve2.c: 84:     TRISD = 0B00000000;
   812  006F  0188               	clrf	8	;volatile
   813                           
   814                           ;salve2.c: 85:     TRISE = 0B0000;
   815  0070  0189               	clrf	9	;volatile
   816                           
   817                           ;salve2.c: 87:     ANSEL = 0B00000000;
   818  0071  1683               	bsf	3,5	;RP0=1, select bank3
   819  0072  1703               	bsf	3,6	;RP1=1, select bank3
   820  0073  0188               	clrf	8	;volatile
   821                           
   822                           ;salve2.c: 88:     ANSELH = 0B00000000;
   823  0074  0189               	clrf	9	;volatile
   824  0075                     l761:
   825                           
   826                           ;salve2.c: 90:     OPTION_REG =0B01010111 ;
   827  0075  3057               	movlw	87
   828  0076  1683               	bsf	3,5	;RP0=1, select bank1
   829  0077  1303               	bcf	3,6	;RP1=0, select bank1
   830  0078  0081               	movwf	1	;volatile
   831  0079                     l763:
   832                           
   833                           ;salve2.c: 92:     INTCONbits.GIE=1;
   834  0079  178B               	bsf	11,7	;volatile
   835  007A                     l765:
   836                           
   837                           ;salve2.c: 93:     INTCONbits.PEIE=1;
   838  007A  170B               	bsf	11,6	;volatile
   839  007B                     l767:
   840                           
   841                           ;salve2.c: 94:     INTCONbits.RBIE=1;
   842  007B  158B               	bsf	11,3	;volatile
   843  007C                     l769:
   844                           
   845                           ;salve2.c: 95:     INTCONbits.RBIF=0;
   846  007C  100B               	bcf	11,0	;volatile
   847  007D                     l771:
   848                           
   849                           ;salve2.c: 96:     WPUB =0B00000011;
   850  007D  3003               	movlw	3
   851  007E  0095               	movwf	21	;volatile
   852  007F                     l773:
   853                           
   854                           ;salve2.c: 97:     IOCB = 0B00000011;
   855  007F  3003               	movlw	3
   856  0080  0096               	movwf	22	;volatile
   857  0081                     l79:
   858  0081  0008               	return
   859  0082                     __end_of_Setup:
   860                           
   861                           	psect	text4
   862  0019                     __ptext4:	
   863 ;; *************** function _isr *****************
   864 ;; Defined at:
   865 ;;		line 42 in file "salve2.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          2       0       0       0       0
   882 ;;      Totals:         2       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    1
   886 ;; This function calls:
   887 ;;		_push_0
   888 ;;		_push_1
   889 ;;		i1_spiWrite
   890 ;; This function is called by:
   891 ;;		Interrupt level 1
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _isr
   897  0019                     _isr:
   898  0019                     i1l843:
   899                           
   900                           ;salve2.c: 43:     if (RBIF==1){
   901  0019  1C0B               	btfss	11,0	;volatile
   902  001A  281C               	goto	u11_21
   903  001B  281D               	goto	u11_20
   904  001C                     u11_21:
   905  001C  2828               	goto	i1l849
   906  001D                     u11_20:
   907  001D                     i1l845:
   908                           
   909                           ;salve2.c: 44:          push_0 ();
   910  001D  120A  118A  20A0  120A  118A  	fcall	_push_0
   911                           
   912                           ;salve2.c: 45:          push_1 ();
   913  0022  120A  118A  20B4  120A  118A  	fcall	_push_1
   914  0027                     i1l847:
   915                           
   916                           ;salve2.c: 46:          RBIF=0;}
   917  0027  100B               	bcf	11,0	;volatile
   918  0028                     i1l849:
   919                           
   920                           ;salve2.c: 47:      if(SSPIF == 1){
   921  0028  1283               	bcf	3,5	;RP0=0, select bank0
   922  0029  1303               	bcf	3,6	;RP1=0, select bank0
   923  002A  1D8C               	btfss	12,3	;volatile
   924  002B  282D               	goto	u12_21
   925  002C  282E               	goto	u12_20
   926  002D                     u12_21:
   927  002D  2837               	goto	i1l67
   928  002E                     u12_20:
   929  002E                     i1l851:
   930                           
   931                           ;salve2.c: 49:       spiWrite(PORTD);
   932  002E  0808               	movf	8,w	;volatile
   933  002F  120A  118A  20CC  120A  118A  	fcall	i1_spiWrite
   934  0034                     i1l853:
   935                           
   936                           ;salve2.c: 50:       SSPIF = 0;
   937  0034  1283               	bcf	3,5	;RP0=0, select bank0
   938  0035  1303               	bcf	3,6	;RP1=0, select bank0
   939  0036  118C               	bcf	12,3	;volatile
   940  0037                     i1l67:
   941  0037  0878               	movf	??_isr+1,w
   942  0038  008A               	movwf	10
   943  0039  0E77               	swapf	??_isr,w
   944  003A  0083               	movwf	3
   945  003B  0EFE               	swapf	btemp,f
   946  003C  0E7E               	swapf	btemp,w
   947  003D  0009               	retfie
   948  003E                     __end_of_isr:
   949                           
   950                           	psect	intentry
   951  0004                     __pintentry:	
   952                           ;incstack = 0
   953                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   954                           
   955  0004                     interrupt_function:
   956  007E                     saved_w	set	btemp
   957  0004  00FE               	movwf	btemp
   958  0005  0E03               	swapf	3,w
   959  0006  00F7               	movwf	??_isr
   960  0007  080A               	movf	10,w
   961  0008  00F8               	movwf	??_isr+1
   962  0009  120A  118A  2819   	ljmp	_isr
   963                           
   964                           	psect	text5
   965  00CC                     __ptext5:	
   966 ;; *************** function i1_spiWrite *****************
   967 ;; Defined at:
   968 ;;		line 27 in file "SSSPI.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  dat             1    wreg     unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  dat             1    0[COMMON] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         1       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0
   985 ;;      Totals:         1       0       0       0       0
   986 ;;Total ram usage:        1 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_isr
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function i1_spiWrite
   997  00CC                     i1_spiWrite:
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in i1_spiWrite: [wreg]
  1001                           ;i1spiWrite@dat stored from wreg
  1002  00CC  00F6               	movwf	i1spiWrite@dat
  1003  00CD                     i1l841:
  1004                           
  1005                           ;SSSPI.c: 27: void spiWrite(char dat);SSSPI.c: 28: {;SSSPI.c: 29:     SSPBUF = dat;
  1006  00CD  0876               	movf	i1spiWrite@dat,w
  1007  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1008  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1009  00D0  0093               	movwf	19	;volatile
  1010  00D1                     i1l117:
  1011  00D1  0008               	return
  1012  00D2                     __end_ofi1_spiWrite:
  1013                           
  1014                           	psect	text6
  1015  00B4                     __ptext6:	
  1016 ;; *************** function _push_1 *****************
  1017 ;; Defined at:
  1018 ;;		line 113 in file "salve2.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_isr
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _push_1
  1047  00B4                     _push_1:
  1048  00B4                     i1l743:	
  1049                           ;incstack = 0
  1050                           ; Regs used in _push_1: [wreg+status,2+status,0]
  1051                           
  1052                           
  1053                           ;salve2.c: 114:     if (PORTBbits.RB1==0){
  1054  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1055  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1056  00B6  1886               	btfsc	6,1	;volatile
  1057  00B7  28B9               	goto	u3_21
  1058  00B8  28BA               	goto	u3_20
  1059  00B9                     u3_21:
  1060  00B9  28BD               	goto	i1l747
  1061  00BA                     u3_20:
  1062  00BA                     i1l745:
  1063                           
  1064                           ;salve2.c: 115:         w=1;}
  1065  00BA  01F4               	clrf	_w
  1066  00BB  0AF4               	incf	_w,f
  1067  00BC  28C5               	goto	i1l91
  1068  00BD                     i1l747:
  1069                           
  1070                           ;salve2.c: 117:         if(w==1){
  1071  00BD  0374               	decf	_w,w
  1072  00BE  1D03               	btfss	3,2
  1073  00BF  28C1               	goto	u4_21
  1074  00C0  28C2               	goto	u4_20
  1075  00C1                     u4_21:
  1076  00C1  28C5               	goto	i1l91
  1077  00C2                     u4_20:
  1078  00C2                     i1l749:
  1079                           
  1080                           ;salve2.c: 118:         w=0;
  1081  00C2  01F4               	clrf	_w
  1082  00C3                     i1l751:
  1083                           
  1084                           ;salve2.c: 119:         PORTD--;
  1085  00C3  3001               	movlw	1
  1086  00C4  0288               	subwf	8,f	;volatile
  1087  00C5                     i1l91:
  1088  00C5  0008               	return
  1089  00C6                     __end_of_push_1:
  1090                           
  1091                           	psect	text7
  1092  00A0                     __ptext7:	
  1093 ;; *************** function _push_0 *****************
  1094 ;; Defined at:
  1095 ;;		line 103 in file "salve2.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          1       0       0       0       0
  1112 ;;      Totals:         1       0       0       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_isr
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _push_0
  1124  00A0                     _push_0:
  1125  00A0                     i1l733:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _push_0: [wreg+status,2+status,0]
  1128                           
  1129                           
  1130                           ;salve2.c: 104:     if (PORTBbits.RB0==0){
  1131  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1132  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1133  00A2  1806               	btfsc	6,0	;volatile
  1134  00A3  28A5               	goto	u1_21
  1135  00A4  28A6               	goto	u1_20
  1136  00A5                     u1_21:
  1137  00A5  28A9               	goto	i1l737
  1138  00A6                     u1_20:
  1139  00A6                     i1l735:
  1140                           
  1141                           ;salve2.c: 105:         W=1;}
  1142  00A6  01F5               	clrf	_W
  1143  00A7  0AF5               	incf	_W,f
  1144  00A8  28B3               	goto	i1l85
  1145  00A9                     i1l737:
  1146                           
  1147                           ;salve2.c: 107:         if(W==1){
  1148  00A9  0375               	decf	_W,w
  1149  00AA  1D03               	btfss	3,2
  1150  00AB  28AD               	goto	u2_21
  1151  00AC  28AE               	goto	u2_20
  1152  00AD                     u2_21:
  1153  00AD  28B3               	goto	i1l85
  1154  00AE                     u2_20:
  1155  00AE                     i1l739:
  1156                           
  1157                           ;salve2.c: 108:         W=0;
  1158  00AE  01F5               	clrf	_W
  1159  00AF                     i1l741:
  1160                           
  1161                           ;salve2.c: 109:         PORTD++;
  1162  00AF  3001               	movlw	1
  1163  00B0  00F6               	movwf	??_push_0
  1164  00B1  0876               	movf	??_push_0,w
  1165  00B2  0788               	addwf	8,f	;volatile
  1166  00B3                     i1l85:
  1167  00B3  0008               	return
  1168  00B4                     __end_of_push_0:
  1169  007E                     btemp	set	126	;btemp
  1170  007E                     wtemp0	set	126
  1171                           
  1172                           	psect	config
  1173                           
  1174                           ;Config register CONFIG1 @ 0x2007
  1175                           ;	Oscillator Selection bits
  1176                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1177                           ;	Watchdog Timer Enable bit
  1178                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1179                           ;	Power-up Timer Enable bit
  1180                           ;	PWRTE = OFF, PWRT disabled
  1181                           ;	RE3/MCLR pin function select bit
  1182                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1183                           ;	Code Protection bit
  1184                           ;	CP = OFF, Program memory code protection is disabled
  1185                           ;	Data Code Protection bit
  1186                           ;	CPD = OFF, Data memory code protection is disabled
  1187                           ;	Brown Out Reset Selection bits
  1188                           ;	BOREN = OFF, BOR disabled
  1189                           ;	Internal External Switchover bit
  1190                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1191                           ;	Fail-Safe Clock Monitor Enabled bit
  1192                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1193                           ;	Low Voltage Programming Enable bit
  1194                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1195                           ;	In-Circuit Debugger Mode bit
  1196                           ;	DEBUG = 0x1, unprogrammed default
  1197  2007                     	org	8199
  1198  2007  20D4               	dw	8404
  1199                           
  1200                           ;Config register CONFIG2 @ 0x2008
  1201                           ;	Brown-out Reset Selection bit
  1202                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1203                           ;	Flash Program Memory Self Write Enable bits
  1204                           ;	WRT = OFF, Write protection off
  1205  2008                     	org	8200
  1206  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit
    _main->_spiWrite

Critical Paths under _isr in COMMON

    _isr->_push_0
    _isr->i1_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                              _Setup
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              3 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0      22
                                              1 COMMON     2     2      0
                             _push_0
                             _push_1
                         i1_spiWrite
 ---------------------------------------------------------------------------------
 (3) i1_spiWrite                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _push_1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _push_0                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _spiInit
   _spiWrite

 _isr (ROOT)
   _push_0
   _push_1
   i1_spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 02:02:53 2021

                      _H 0072                        _L 0070                        _Q 0073  
                      _W 0075                        _h 0071                        _w 0074  
            _SSPSTATbits 0094                       l79 0081                      l107 009A  
                    l108 009F                      l117 00CB                      l761 0075  
                    l753 00C7                      l771 007D                      l763 0079  
                    l755 0061                      l773 007F                      l765 007A  
                    l757 006B                      l767 007B                      l759 006D  
                    l871 0099                      l863 0083                      l769 007C  
                    l865 008A                      l873 003E                      l867 0090  
                    l875 004E                      l869 0092                      l877 0054  
                    l879 005A                      u140 008A                      u141 0089  
                    u150 0054                      u151 0053                      _isr 0019  
                   ?_isr 0076                     _IOCB 0096            i1spiWrite@dat 0076  
                   _RBIF 0058                     i1l91 00C5                     i1l67 0037  
                   i1l85 00B3                     _WPUB 0095                     u1_20 00A6  
                   u1_21 00A5                     u2_20 00AE                     u2_21 00AD  
                   u3_20 00BA                     u3_21 00B9                     u4_20 00C2  
                   u4_21 00C1                     _main 003E                     btemp 007E  
                   start 000C               i1_spiWrite 00CC                    ??_isr 0077  
                  ?_main 0076                    _ANSEL 0188                    i1l117 00D1  
                  i1l741 00AF                    i1l733 00A0                    i1l735 00A6  
                  i1l751 00C3                    i1l743 00B4                    i1l737 00A9  
                  i1l745 00BA                    i1l841 00CD                    i1l739 00AE  
                  i1l747 00BD                    i1l851 002E                    i1l843 0019  
                  i1l749 00C2                    i1l853 0034                    i1l845 001D  
                  i1l847 0027                    i1l849 0028                    u11_20 001D  
                  u11_21 001C                    u12_20 002E                    u12_21 002D  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _SSPIF 0063                    _Setup 0061  
                  pclath 000A          __end_of_spiInit 00A0                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0061  
                 ??_main 007A                   ?_Setup 0076                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013              ?i1_spiWrite 0076                   _push_0 00A0  
                 _push_1 00B4                   saved_w 007E         __end_of_spiWrite 00CC  
              ??_spiInit 0079  __end_of__initialization 0015           __pcstackCOMMON 0076  
          __end_of_Setup 0082                  ??_Setup 0079      __size_ofi1_spiWrite 0006  
             __pmaintext 003E               __pintentry 0004                  ?_push_0 0076  
                ?_push_1 0076                  _SSPSTAT 0094                ?_spiWrite 0076  
                __ptext1 00C6                  __ptext2 0082                  __ptext3 0061  
                __ptext4 0019                  __ptext5 00CC                  __ptext6 00B4  
                __ptext7 00A0          __size_of_push_0 0014          __size_of_push_1 0012  
           __size_of_isr 0025                  _spiInit 0082     end_of_initialization 0015  
           ??i1_spiWrite 0076               ??_spiWrite 0079                _PORTBbits 0006  
     __end_ofi1_spiWrite 00D2              spiWrite@dat 0079           __end_of_push_0 00B4  
         __end_of_push_1 00C6      start_initialization 000F              __end_of_isr 003E  
               ??_push_0 0076                 ??_push_1 0076              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_spiWrite 0006  
               ?_spiInit 0020           __size_of_Setup 0021     spiInit@sTransmitEdge 0022  
      interrupt_function 0004       spiInit@sDataSample 0020         __size_of_spiInit 001E  
          __size_of_main 0023                 _spiWrite 00C6             spiInit@sType 0079  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F               _OPTION_REG 0081  
