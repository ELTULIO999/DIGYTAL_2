

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 22:09:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  008F                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0105                     	;# 
   429  0107                     	;# 
   430  0108                     	;# 
   431  0109                     	;# 
   432  010C                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  010F                     	;# 
   437  0185                     	;# 
   438  0187                     	;# 
   439  0188                     	;# 
   440  0189                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0013                     _SSPBUF	set	19
   444  0014                     _SSPCON	set	20
   445  000B                     _INTCONbits	set	11
   446  0009                     _PORTE	set	9
   447  0007                     _PORTC	set	7
   448  0005                     _PORTA	set	5
   449  0006                     _PORTB	set	6
   450  001F                     _ADCON0bits	set	31
   451  0008                     _PORTD	set	8
   452  000C                     _PIR1bits	set	12
   453  001E                     _ADRESH	set	30
   454  0063                     _SSPIF	set	99
   455  0066                     _ADIF	set	102
   456  009F                     _ADCON1bits	set	159
   457  009F                     _ADCON1	set	159
   458  008F                     _OSCCONbits	set	143
   459  0094                     _SSPSTATbits	set	148
   460  0094                     _SSPSTAT	set	148
   461  0089                     _TRISE	set	137
   462  0088                     _TRISD	set	136
   463  0086                     _TRISB	set	134
   464  0085                     _TRISA	set	133
   465  008C                     _PIE1bits	set	140
   466  043B                     _TRISC3	set	1083
   467  043D                     _TRISC5	set	1085
   468  0188                     _ANSEL	set	392
   469                           
   470                           	psect	cinit
   471  000F                     start_initialization:	
   472                           ; #config settings
   473                           
   474  000F                     __initialization:
   475                           
   476                           ; Clear objects allocated to COMMON
   477  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   478  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   479  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   480  0012                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  0012                     __end_of__initialization:
   484  0012  0183               	clrf	3
   485  0013  120A  118A  2956   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssCOMMON
   488  0077                     __pbssCOMMON:
   489  0077                     _q:
   490  0077                     	ds	1
   491  0078                     _L:
   492  0078                     	ds	1
   493  0079                     _ADCGO:
   494  0079                     	ds	1
   495                           
   496                           	psect	cstackCOMMON
   497  0070                     __pcstackCOMMON:
   498  0070                     ?_spiWrite:
   499  0070                     ??_spiWrite:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_Setup:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_ADCG:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_isr:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_main:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     spiWrite@dat:	
   515                           ; 1 bytes @ 0x0
   516                           
   517                           
   518                           ; 1 bytes @ 0x0
   519  0070                     	ds	1
   520  0071                     ??_isr:
   521                           
   522                           ; 1 bytes @ 0x1
   523  0071                     	ds	3
   524  0074                     ?_spiInit:
   525  0074                     ??_ADCG:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     ?_ADC_CHS_CLKS:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     spiInit@sDataSample:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0074                     ADC_CHS_CLKS@S:	
   535                           ; 1 bytes @ 0x4
   536                           
   537                           
   538                           ; 1 bytes @ 0x4
   539  0074                     	ds	1
   540  0075                     ??_ADC_CHS_CLKS:
   541  0075                     spiInit@sClockIdle:	
   542                           ; 1 bytes @ 0x5
   543                           
   544                           
   545                           ; 1 bytes @ 0x5
   546  0075                     	ds	1
   547  0076                     spiInit@sTransmitEdge:
   548                           
   549                           ; 1 bytes @ 0x6
   550  0076                     	ds	1
   551  0077                     ??_spiInit:
   552                           
   553                           	psect	cstackBANK0
   554  0020                     __pcstackBANK0:	
   555                           ; 1 bytes @ 0x7
   556                           
   557  0020                     spiInit@sType:
   558  0020                     ADC_CHS_CLKS@C:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 1 bytes @ 0x0
   563  0020                     	ds	1
   564  0021                     ??_Setup:
   565                           
   566                           ; 1 bytes @ 0x1
   567  0021                     	ds	1
   568  0022                     ??_main:
   569                           
   570                           ; 1 bytes @ 0x2
   571  0022                     	ds	1
   572                           
   573                           	psect	maintext
   574  0156                     __pmaintext:	
   575 ;;
   576 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   577 ;;
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 62 in file "slave3.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : B00/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       1       0       0       0
   597 ;;      Totals:         0       1       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels required when called:    4
   600 ;; This function calls:
   601 ;;		_ADCG
   602 ;;		_Setup
   603 ;;		_spiInit
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _main
   611  0156                     _main:
   612  0156                     l1136:	
   613                           ;incstack = 0
   614                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;slave3.c: 63:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW, SPI
      +                          _IDLE_2_ACTIVE);
   618  0156  3080               	movlw	128
   619  0157  1283               	bcf	3,5	;RP0=0, select bank0
   620  0158  1303               	bcf	3,6	;RP1=0, select bank0
   621  0159  00A2               	movwf	??_main
   622  015A  0822               	movf	??_main,w
   623  015B  00F4               	movwf	spiInit@sDataSample
   624  015C  01F5               	clrf	spiInit@sClockIdle
   625  015D  01F6               	clrf	spiInit@sTransmitEdge
   626  015E  3024               	movlw	36
   627  015F  120A  118A  2138  120A  118A  	fcall	_spiInit
   628  0164                     l1138:
   629                           
   630                           ;slave3.c: 64:     Setup();
   631  0164  120A  118A  210C  120A  118A  	fcall	_Setup
   632  0169                     l1140:
   633                           
   634                           ;slave3.c: 69:         ADCG();
   635  0169  120A  118A  2172  120A  118A  	fcall	_ADCG
   636  016E  2969               	goto	l1140
   637  016F  120A  118A  280C   	ljmp	start
   638  0172                     __end_of_main:
   639                           
   640                           	psect	text1
   641  0138                     __ptext1:	
   642 ;; *************** function _spiInit *****************
   643 ;; Defined at:
   644 ;;		line 5 in file "SSSPI.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  sType           1    wreg     enum E1264
   647 ;;  sDataSample     1    4[COMMON] enum E1272
   648 ;;  sClockIdle      1    5[COMMON] enum E1276
   649 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  sType           1    0[BANK0 ] enum E1264
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         3       0       0       0       0
   662 ;;      Locals:         0       1       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         3       1       0       0       0
   665 ;;Total ram usage:        4 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _spiInit
   677  0138                     _spiInit:
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   681                           ;spiInit@sType stored from wreg
   682  0138  1283               	bcf	3,5	;RP0=0, select bank0
   683  0139  1303               	bcf	3,6	;RP1=0, select bank0
   684  013A  00A0               	movwf	spiInit@sType
   685  013B                     l1090:
   686                           
   687                           ;SSSPI.c: 5: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSSPI.c: 6: {;SSSPI.c: 7:     TRISC5 = 0;
   688  013B  1683               	bsf	3,5	;RP0=1, select bank1
   689  013C  1303               	bcf	3,6	;RP1=0, select bank1
   690  013D  1287               	bcf	7,5	;volatile
   691                           
   692                           ;SSSPI.c: 8:     if(sType & 0b00000100)
   693  013E  1283               	bcf	3,5	;RP0=0, select bank0
   694  013F  1303               	bcf	3,6	;RP1=0, select bank0
   695  0140  1D20               	btfss	spiInit@sType,2
   696  0141  2943               	goto	u111
   697  0142  2944               	goto	u110
   698  0143                     u111:
   699  0143  294A               	goto	l1096
   700  0144                     u110:
   701  0144                     l1092:
   702                           
   703                           ;SSSPI.c: 9:     {;SSSPI.c: 10:         SSPSTAT = sTransmitEdge;
   704  0144  0876               	movf	spiInit@sTransmitEdge,w
   705  0145  1683               	bsf	3,5	;RP0=1, select bank1
   706  0146  1303               	bcf	3,6	;RP1=0, select bank1
   707  0147  0094               	movwf	20	;volatile
   708  0148                     l1094:
   709                           
   710                           ;SSSPI.c: 11:         TRISC3 = 1;
   711  0148  1587               	bsf	7,3	;volatile
   712                           
   713                           ;SSSPI.c: 12:     }
   714  0149  2950               	goto	l91
   715  014A                     l1096:
   716                           
   717                           ;SSSPI.c: 14:     {;SSSPI.c: 15:         SSPSTAT = sDataSample | sTransmitEdge;
   718  014A  0874               	movf	spiInit@sDataSample,w
   719  014B  0476               	iorwf	spiInit@sTransmitEdge,w
   720  014C  1683               	bsf	3,5	;RP0=1, select bank1
   721  014D  1303               	bcf	3,6	;RP1=0, select bank1
   722  014E  0094               	movwf	20	;volatile
   723  014F                     l1098:
   724                           
   725                           ;SSSPI.c: 16:         TRISC3 = 0;
   726  014F  1187               	bcf	7,3	;volatile
   727  0150                     l91:	
   728                           ;SSSPI.c: 17:     }
   729                           
   730                           
   731                           ;SSSPI.c: 19:     SSPCON = sType | sClockIdle;
   732  0150  1283               	bcf	3,5	;RP0=0, select bank0
   733  0151  1303               	bcf	3,6	;RP1=0, select bank0
   734  0152  0820               	movf	spiInit@sType,w
   735  0153  0475               	iorwf	spiInit@sClockIdle,w
   736  0154  0094               	movwf	20	;volatile
   737  0155                     l92:
   738  0155  0008               	return
   739  0156                     __end_of_spiInit:
   740                           
   741                           	psect	text2
   742  010C                     __ptext2:	
   743 ;; *************** function _Setup *****************
   744 ;; Defined at:
   745 ;;		line 75 in file "slave3.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0
   761 ;;      Temps:          0       1       0       0       0
   762 ;;      Totals:         0       1       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    3
   766 ;; This function calls:
   767 ;;		_ADC_CHS_CLKS
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _Setup
   775  010C                     _Setup:
   776  010C                     l1100:	
   777                           ;incstack = 0
   778                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   779                           
   780                           
   781                           ;slave3.c: 76:     ADC_CHS_CLKS (0,2);
   782  010C  3002               	movlw	2
   783  010D  1283               	bcf	3,5	;RP0=0, select bank0
   784  010E  1303               	bcf	3,6	;RP1=0, select bank0
   785  010F  00A1               	movwf	??_Setup
   786  0110  0821               	movf	??_Setup,w
   787  0111  00F4               	movwf	ADC_CHS_CLKS@S
   788  0112  3000               	movlw	0
   789  0113  120A  118A  2016  120A  118A  	fcall	_ADC_CHS_CLKS
   790  0118                     l1102:
   791                           
   792                           ;slave3.c: 77:     PIE1bits.ADIE=1;
   793  0118  1683               	bsf	3,5	;RP0=1, select bank1
   794  0119  1303               	bcf	3,6	;RP1=0, select bank1
   795  011A  170C               	bsf	12,6	;volatile
   796  011B                     l1104:
   797                           
   798                           ;slave3.c: 79:     PORTA = 0;
   799  011B  1283               	bcf	3,5	;RP0=0, select bank0
   800  011C  1303               	bcf	3,6	;RP1=0, select bank0
   801  011D  0185               	clrf	5	;volatile
   802  011E                     l1106:
   803                           
   804                           ;slave3.c: 80:     PORTB = 0;
   805  011E  0186               	clrf	6	;volatile
   806  011F                     l1108:
   807                           
   808                           ;slave3.c: 81:     PORTC = 0;
   809  011F  0187               	clrf	7	;volatile
   810  0120                     l1110:
   811                           
   812                           ;slave3.c: 82:     PORTD = 0;
   813  0120  0188               	clrf	8	;volatile
   814  0121                     l1112:
   815                           
   816                           ;slave3.c: 83:     PORTE = 0;
   817  0121  0189               	clrf	9	;volatile
   818  0122                     l1114:
   819                           
   820                           ;slave3.c: 85:     TRISA = 0B00100001;
   821  0122  3021               	movlw	33
   822  0123  1683               	bsf	3,5	;RP0=1, select bank1
   823  0124  1303               	bcf	3,6	;RP1=0, select bank1
   824  0125  0085               	movwf	5	;volatile
   825  0126                     l1116:
   826                           
   827                           ;slave3.c: 86:     TRISB = 0B00000000;
   828  0126  0186               	clrf	6	;volatile
   829  0127                     l1118:
   830                           
   831                           ;slave3.c: 87:     TRISD = 0B00000000;
   832  0127  0188               	clrf	8	;volatile
   833  0128                     l1120:
   834                           
   835                           ;slave3.c: 88:     TRISE = 0B0000;
   836  0128  0189               	clrf	9	;volatile
   837  0129                     l1122:
   838                           
   839                           ;slave3.c: 90:     ANSEL = 0B00000001;
   840  0129  3001               	movlw	1
   841  012A  1683               	bsf	3,5	;RP0=1, select bank3
   842  012B  1703               	bsf	3,6	;RP1=1, select bank3
   843  012C  0088               	movwf	8	;volatile
   844  012D                     l1124:
   845                           
   846                           ;slave3.c: 93:     INTCONbits.GIE=1;
   847  012D  178B               	bsf	11,7	;volatile
   848  012E                     l1126:
   849                           
   850                           ;slave3.c: 94:     INTCONbits.PEIE=1;
   851  012E  170B               	bsf	11,6	;volatile
   852  012F                     l1128:
   853                           
   854                           ;slave3.c: 95:      PIR1bits.ADIF=0;
   855  012F  1283               	bcf	3,5	;RP0=0, select bank0
   856  0130  1303               	bcf	3,6	;RP1=0, select bank0
   857  0131  130C               	bcf	12,6	;volatile
   858  0132                     l1130:
   859                           
   860                           ;slave3.c: 96:     PIR1bits.ADIF=0;
   861  0132  130C               	bcf	12,6	;volatile
   862  0133                     l1132:
   863                           
   864                           ;slave3.c: 97:     PIR1bits.SSPIF = 0;
   865  0133  118C               	bcf	12,3	;volatile
   866  0134                     l1134:
   867                           
   868                           ;slave3.c: 98:     PIE1bits.SSPIE = 1;
   869  0134  1683               	bsf	3,5	;RP0=1, select bank1
   870  0135  1303               	bcf	3,6	;RP1=0, select bank1
   871  0136  158C               	bsf	12,3	;volatile
   872  0137                     l71:
   873  0137  0008               	return
   874  0138                     __end_of_Setup:
   875                           
   876                           	psect	text3
   877  0016                     __ptext3:	
   878 ;; *************** function _ADC_CHS_CLKS *****************
   879 ;; Defined at:
   880 ;;		line 4 in file "ADC.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  C               1    wreg     unsigned char 
   883 ;;  S               1    4[COMMON] unsigned char 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  C               1    0[BANK0 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         1       0       0       0       0
   896 ;;      Locals:         0       1       0       0       0
   897 ;;      Temps:          2       0       0       0       0
   898 ;;      Totals:         3       1       0       0       0
   899 ;;Total ram usage:        4 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    2
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_Setup
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _ADC_CHS_CLKS
   911  0016                     _ADC_CHS_CLKS:
   912                           
   913                           ;incstack = 0
   914                           ; Regs used in _ADC_CHS_CLKS: [wreg-fsr0h+status,2+status,0]
   915                           ;ADC_CHS_CLKS@C stored from wreg
   916  0016  1283               	bcf	3,5	;RP0=0, select bank0
   917  0017  1303               	bcf	3,6	;RP1=0, select bank0
   918  0018  00A0               	movwf	ADC_CHS_CLKS@C
   919  0019                     l1042:
   920                           
   921                           ;ADC.c: 5: switch (C) {
   922  0019  288D               	goto	l1082
   923  001A                     l135:	
   924                           ;ADC.c: 8:     case 0:
   925                           
   926                           
   927                           ;ADC.c: 9:         ADCON0bits.CHS3 = 0;
   928  001A  129F               	bcf	31,5	;volatile
   929                           
   930                           ;ADC.c: 10:         ADCON0bits.CHS2 = 0;
   931  001B  121F               	bcf	31,4	;volatile
   932                           
   933                           ;ADC.c: 11:         ADCON0bits.CHS1 = 0;
   934  001C  119F               	bcf	31,3	;volatile
   935                           
   936                           ;ADC.c: 12:         ADCON0bits.CHS0 = 0;
   937  001D  111F               	bcf	31,2	;volatile
   938                           
   939                           ;ADC.c: 13:         ADCON0bits.ADON = 1;
   940  001E  141F               	bsf	31,0	;volatile
   941                           
   942                           ;ADC.c: 14:         ADCON0bits.GO = 1;
   943  001F  149F               	bsf	31,1	;volatile
   944  0020                     l1044:
   945                           
   946                           ;ADC.c: 15:         ADCON1 = 0;
   947  0020  1683               	bsf	3,5	;RP0=1, select bank1
   948  0021  1303               	bcf	3,6	;RP1=0, select bank1
   949  0022  019F               	clrf	31	;volatile
   950                           
   951                           ;ADC.c: 16:     break;
   952  0023  28C4               	goto	l136
   953  0024                     l137:	
   954                           ;ADC.c: 17:     case 1:
   955                           
   956                           
   957                           ;ADC.c: 18:         ADCON0bits.CHS3=0;
   958  0024  129F               	bcf	31,5	;volatile
   959                           
   960                           ;ADC.c: 19:         ADCON0bits.CHS2=0;
   961  0025  121F               	bcf	31,4	;volatile
   962                           
   963                           ;ADC.c: 20:         ADCON0bits.CHS1=0;
   964  0026  119F               	bcf	31,3	;volatile
   965                           
   966                           ;ADC.c: 21:         ADCON0bits.CHS0=1;
   967  0027  151F               	bsf	31,2	;volatile
   968                           
   969                           ;ADC.c: 22:         ADCON0bits.ADON = 1;
   970  0028  141F               	bsf	31,0	;volatile
   971                           
   972                           ;ADC.c: 23:         ADCON0bits.GO = 1;
   973  0029  149F               	bsf	31,1	;volatile
   974  002A  2820               	goto	l1044
   975  002B                     l138:	
   976                           ;ADC.c: 26:     case 2:
   977                           
   978                           
   979                           ;ADC.c: 27:         ADCON0bits.CHS3=0;
   980  002B  129F               	bcf	31,5	;volatile
   981                           
   982                           ;ADC.c: 28:         ADCON0bits.CHS2=0;
   983  002C  121F               	bcf	31,4	;volatile
   984                           
   985                           ;ADC.c: 29:         ADCON0bits.CHS1=1;
   986  002D  159F               	bsf	31,3	;volatile
   987                           
   988                           ;ADC.c: 30:         ADCON0bits.CHS0=0;
   989  002E  111F               	bcf	31,2	;volatile
   990                           
   991                           ;ADC.c: 31:         ADCON0bits.ADON = 1;
   992  002F  141F               	bsf	31,0	;volatile
   993                           
   994                           ;ADC.c: 32:         ADCON0bits.GO = 1;
   995  0030  149F               	bsf	31,1	;volatile
   996  0031  2820               	goto	l1044
   997  0032                     l139:	
   998                           ;ADC.c: 35:     case 3:
   999                           
  1000                           
  1001                           ;ADC.c: 36:         ADCON0bits.CHS3=0;
  1002  0032  129F               	bcf	31,5	;volatile
  1003                           
  1004                           ;ADC.c: 37:         ADCON0bits.CHS2=0;
  1005  0033  121F               	bcf	31,4	;volatile
  1006                           
  1007                           ;ADC.c: 38:         ADCON0bits.CHS1=1;
  1008  0034  159F               	bsf	31,3	;volatile
  1009                           
  1010                           ;ADC.c: 39:         ADCON0bits.CHS0=1;
  1011  0035  151F               	bsf	31,2	;volatile
  1012                           
  1013                           ;ADC.c: 40:         ADCON0bits.ADON = 1;
  1014  0036  141F               	bsf	31,0	;volatile
  1015                           
  1016                           ;ADC.c: 41:         ADCON0bits.GO = 1;
  1017  0037  149F               	bsf	31,1	;volatile
  1018  0038  2820               	goto	l1044
  1019  0039                     l140:	
  1020                           ;ADC.c: 44:     case 4:
  1021                           
  1022                           
  1023                           ;ADC.c: 45:         ADCON0bits.CHS3=0;
  1024  0039  129F               	bcf	31,5	;volatile
  1025                           
  1026                           ;ADC.c: 46:         ADCON0bits.CHS2=1;
  1027  003A  161F               	bsf	31,4	;volatile
  1028                           
  1029                           ;ADC.c: 47:         ADCON0bits.CHS1=0;
  1030  003B  119F               	bcf	31,3	;volatile
  1031                           
  1032                           ;ADC.c: 48:         ADCON0bits.CHS0=0;
  1033  003C  111F               	bcf	31,2	;volatile
  1034                           
  1035                           ;ADC.c: 49:         ADCON0bits.ADON = 1;
  1036  003D  141F               	bsf	31,0	;volatile
  1037                           
  1038                           ;ADC.c: 50:         ADCON0bits.GO = 1;
  1039  003E  149F               	bsf	31,1	;volatile
  1040  003F  2820               	goto	l1044
  1041  0040                     l141:	
  1042                           ;ADC.c: 53:     case 5:
  1043                           
  1044                           
  1045                           ;ADC.c: 54:         ADCON0bits.CHS3=0;
  1046  0040  129F               	bcf	31,5	;volatile
  1047                           
  1048                           ;ADC.c: 55:         ADCON0bits.CHS2=1;
  1049  0041  161F               	bsf	31,4	;volatile
  1050                           
  1051                           ;ADC.c: 56:         ADCON0bits.CHS1=0;
  1052  0042  119F               	bcf	31,3	;volatile
  1053                           
  1054                           ;ADC.c: 57:         ADCON0bits.CHS0=1;
  1055  0043  151F               	bsf	31,2	;volatile
  1056                           
  1057                           ;ADC.c: 58:         ADCON0bits.ADON = 1;
  1058  0044  141F               	bsf	31,0	;volatile
  1059                           
  1060                           ;ADC.c: 59:         ADCON0bits.GO = 1;
  1061  0045  149F               	bsf	31,1	;volatile
  1062  0046  2820               	goto	l1044
  1063  0047                     l142:	
  1064                           ;ADC.c: 62:     case 6:
  1065                           
  1066                           
  1067                           ;ADC.c: 63:         ADCON0bits.CHS3=0;
  1068  0047  129F               	bcf	31,5	;volatile
  1069                           
  1070                           ;ADC.c: 64:         ADCON0bits.CHS2=1;
  1071  0048  161F               	bsf	31,4	;volatile
  1072                           
  1073                           ;ADC.c: 65:         ADCON0bits.CHS1=1;
  1074  0049  159F               	bsf	31,3	;volatile
  1075                           
  1076                           ;ADC.c: 66:         ADCON0bits.CHS0=0;
  1077  004A  111F               	bcf	31,2	;volatile
  1078                           
  1079                           ;ADC.c: 67:         ADCON0bits.ADON = 1;
  1080  004B  141F               	bsf	31,0	;volatile
  1081                           
  1082                           ;ADC.c: 68:         ADCON0bits.GO = 1;
  1083  004C  149F               	bsf	31,1	;volatile
  1084  004D  2820               	goto	l1044
  1085  004E                     l143:	
  1086                           ;ADC.c: 71:     case 7:
  1087                           
  1088                           
  1089                           ;ADC.c: 72:         ADCON0bits.CHS3=0;
  1090  004E  129F               	bcf	31,5	;volatile
  1091                           
  1092                           ;ADC.c: 73:         ADCON0bits.CHS2=1;
  1093  004F  161F               	bsf	31,4	;volatile
  1094                           
  1095                           ;ADC.c: 74:         ADCON0bits.CHS1=1;
  1096  0050  159F               	bsf	31,3	;volatile
  1097                           
  1098                           ;ADC.c: 75:         ADCON0bits.CHS0=1;
  1099  0051  151F               	bsf	31,2	;volatile
  1100                           
  1101                           ;ADC.c: 76:         ADCON0bits.ADON = 1;
  1102  0052  141F               	bsf	31,0	;volatile
  1103                           
  1104                           ;ADC.c: 77:         ADCON0bits.GO = 1;
  1105  0053  149F               	bsf	31,1	;volatile
  1106  0054  2820               	goto	l1044
  1107  0055                     l144:	
  1108                           ;ADC.c: 80:     case 8:
  1109                           
  1110                           
  1111                           ;ADC.c: 81:         ADCON0bits.CHS3=1;
  1112  0055  169F               	bsf	31,5	;volatile
  1113                           
  1114                           ;ADC.c: 82:         ADCON0bits.CHS2=0;
  1115  0056  121F               	bcf	31,4	;volatile
  1116                           
  1117                           ;ADC.c: 83:         ADCON0bits.CHS1=0;
  1118  0057  119F               	bcf	31,3	;volatile
  1119                           
  1120                           ;ADC.c: 84:         ADCON0bits.CHS0=0;
  1121  0058  111F               	bcf	31,2	;volatile
  1122                           
  1123                           ;ADC.c: 85:         ADCON0bits.ADON = 1;
  1124  0059  141F               	bsf	31,0	;volatile
  1125                           
  1126                           ;ADC.c: 86:         ADCON0bits.GO = 1;
  1127  005A  149F               	bsf	31,1	;volatile
  1128  005B  2820               	goto	l1044
  1129  005C                     l145:	
  1130                           ;ADC.c: 89:     case 9:
  1131                           
  1132                           
  1133                           ;ADC.c: 90:         ADCON0bits.CHS3=1;
  1134  005C  169F               	bsf	31,5	;volatile
  1135                           
  1136                           ;ADC.c: 91:         ADCON0bits.CHS2=0;
  1137  005D  121F               	bcf	31,4	;volatile
  1138                           
  1139                           ;ADC.c: 92:         ADCON0bits.CHS1=0;
  1140  005E  119F               	bcf	31,3	;volatile
  1141                           
  1142                           ;ADC.c: 93:         ADCON0bits.CHS0=1;
  1143  005F  151F               	bsf	31,2	;volatile
  1144                           
  1145                           ;ADC.c: 94:         ADCON0bits.ADON = 1;
  1146  0060  141F               	bsf	31,0	;volatile
  1147                           
  1148                           ;ADC.c: 95:         ADCON0bits.GO = 1;
  1149  0061  149F               	bsf	31,1	;volatile
  1150  0062  2820               	goto	l1044
  1151  0063                     l146:	
  1152                           ;ADC.c: 98:     case 10:
  1153                           
  1154                           
  1155                           ;ADC.c: 99:         ADCON0bits.CHS3=1;
  1156  0063  169F               	bsf	31,5	;volatile
  1157                           
  1158                           ;ADC.c: 100:         ADCON0bits.CHS2=0;
  1159  0064  121F               	bcf	31,4	;volatile
  1160                           
  1161                           ;ADC.c: 101:         ADCON0bits.CHS1=1;
  1162  0065  159F               	bsf	31,3	;volatile
  1163                           
  1164                           ;ADC.c: 102:         ADCON0bits.CHS0=0;
  1165  0066  111F               	bcf	31,2	;volatile
  1166                           
  1167                           ;ADC.c: 103:         ADCON0bits.ADON = 1;
  1168  0067  141F               	bsf	31,0	;volatile
  1169                           
  1170                           ;ADC.c: 104:         ADCON0bits.GO = 1;
  1171  0068  149F               	bsf	31,1	;volatile
  1172  0069  2820               	goto	l1044
  1173  006A                     l147:	
  1174                           ;ADC.c: 107:     case 11:
  1175                           
  1176                           
  1177                           ;ADC.c: 108:         ADCON0bits.CHS3=1;
  1178  006A  169F               	bsf	31,5	;volatile
  1179                           
  1180                           ;ADC.c: 109:         ADCON0bits.CHS2=0;
  1181  006B  121F               	bcf	31,4	;volatile
  1182                           
  1183                           ;ADC.c: 110:         ADCON0bits.CHS1=1;
  1184  006C  159F               	bsf	31,3	;volatile
  1185                           
  1186                           ;ADC.c: 111:         ADCON0bits.CHS0=1;
  1187  006D  151F               	bsf	31,2	;volatile
  1188                           
  1189                           ;ADC.c: 112:         ADCON0bits.ADON = 1;
  1190  006E  141F               	bsf	31,0	;volatile
  1191                           
  1192                           ;ADC.c: 113:         ADCON0bits.GO = 1;
  1193  006F  149F               	bsf	31,1	;volatile
  1194  0070  2820               	goto	l1044
  1195  0071                     l148:	
  1196                           ;ADC.c: 116:     case 12:
  1197                           
  1198                           
  1199                           ;ADC.c: 117:         ADCON0bits.CHS3=1;
  1200  0071  169F               	bsf	31,5	;volatile
  1201                           
  1202                           ;ADC.c: 118:         ADCON0bits.CHS2=1;
  1203  0072  161F               	bsf	31,4	;volatile
  1204                           
  1205                           ;ADC.c: 119:         ADCON0bits.CHS1=0;
  1206  0073  119F               	bcf	31,3	;volatile
  1207                           
  1208                           ;ADC.c: 120:         ADCON0bits.CHS0=0;
  1209  0074  111F               	bcf	31,2	;volatile
  1210                           
  1211                           ;ADC.c: 121:         ADCON0bits.ADON = 1;
  1212  0075  141F               	bsf	31,0	;volatile
  1213                           
  1214                           ;ADC.c: 122:         ADCON0bits.GO = 1;
  1215  0076  149F               	bsf	31,1	;volatile
  1216  0077  2820               	goto	l1044
  1217  0078                     l149:	
  1218                           ;ADC.c: 125:     case 13:
  1219                           
  1220                           
  1221                           ;ADC.c: 126:         ADCON0bits.CHS3=1;
  1222  0078  169F               	bsf	31,5	;volatile
  1223                           
  1224                           ;ADC.c: 127:         ADCON0bits.CHS2=1;
  1225  0079  161F               	bsf	31,4	;volatile
  1226                           
  1227                           ;ADC.c: 128:         ADCON0bits.CHS1=0;
  1228  007A  119F               	bcf	31,3	;volatile
  1229                           
  1230                           ;ADC.c: 129:         ADCON0bits.CHS0=1;
  1231  007B  151F               	bsf	31,2	;volatile
  1232                           
  1233                           ;ADC.c: 130:         ADCON0bits.ADON = 1;
  1234  007C  141F               	bsf	31,0	;volatile
  1235                           
  1236                           ;ADC.c: 131:         ADCON0bits.GO = 1;
  1237  007D  149F               	bsf	31,1	;volatile
  1238  007E  2820               	goto	l1044
  1239  007F                     l150:	
  1240                           ;ADC.c: 134:     case 14:
  1241                           
  1242                           
  1243                           ;ADC.c: 135:         ADCON0bits.CHS3=1;
  1244  007F  169F               	bsf	31,5	;volatile
  1245                           
  1246                           ;ADC.c: 136:         ADCON0bits.CHS2=1;
  1247  0080  161F               	bsf	31,4	;volatile
  1248                           
  1249                           ;ADC.c: 137:         ADCON0bits.CHS1=1;
  1250  0081  159F               	bsf	31,3	;volatile
  1251                           
  1252                           ;ADC.c: 138:         ADCON0bits.CHS0=0;
  1253  0082  111F               	bcf	31,2	;volatile
  1254                           
  1255                           ;ADC.c: 139:         ADCON0bits.ADON = 1;
  1256  0083  141F               	bsf	31,0	;volatile
  1257                           
  1258                           ;ADC.c: 140:         ADCON0bits.GO = 1;
  1259  0084  149F               	bsf	31,1	;volatile
  1260  0085  2820               	goto	l1044
  1261  0086                     l151:	
  1262                           ;ADC.c: 143:     default:
  1263                           
  1264                           
  1265                           ;ADC.c: 144:         ADCON0bits.CHS3=1;
  1266  0086  169F               	bsf	31,5	;volatile
  1267                           
  1268                           ;ADC.c: 145:         ADCON0bits.CHS2=1;
  1269  0087  161F               	bsf	31,4	;volatile
  1270                           
  1271                           ;ADC.c: 146:         ADCON0bits.CHS1=1;
  1272  0088  159F               	bsf	31,3	;volatile
  1273                           
  1274                           ;ADC.c: 147:         ADCON0bits.CHS0=1;
  1275  0089  151F               	bsf	31,2	;volatile
  1276                           
  1277                           ;ADC.c: 148:         ADCON0bits.ADON = 1;
  1278  008A  141F               	bsf	31,0	;volatile
  1279                           
  1280                           ;ADC.c: 149:         ADCON0bits.GO = 1;
  1281  008B  149F               	bsf	31,1	;volatile
  1282  008C  2820               	goto	l1044
  1283  008D                     l1082:
  1284  008D  0820               	movf	ADC_CHS_CLKS@C,w
  1285  008E  00F5               	movwf	??_ADC_CHS_CLKS
  1286  008F  01F6               	clrf	??_ADC_CHS_CLKS+1
  1287                           
  1288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1289                           ; Switch size 1, requested type "simple"
  1290                           ; Number of cases is 1, Range of values is 0 to 0
  1291                           ; switch strategies available:
  1292                           ; Name         Instructions Cycles
  1293                           ; simple_byte            4     3 (average)
  1294                           ; direct_byte           11     8 (fixed)
  1295                           ; jumptable            260     6 (fixed)
  1296                           ;	Chosen strategy is simple_byte
  1297  0090  0876               	movf	??_ADC_CHS_CLKS+1,w
  1298  0091  3A00               	xorlw	0	; case 0
  1299  0092  1903               	skipnz
  1300  0093  2895               	goto	l1172
  1301  0094  2886               	goto	l151
  1302  0095                     l1172:
  1303                           
  1304                           ; Switch size 1, requested type "simple"
  1305                           ; Number of cases is 15, Range of values is 0 to 14
  1306                           ; switch strategies available:
  1307                           ; Name         Instructions Cycles
  1308                           ; simple_byte           46    24 (average)
  1309                           ; direct_byte           53     8 (fixed)
  1310                           ; jumptable            260     6 (fixed)
  1311                           ;	Chosen strategy is simple_byte
  1312  0095  0875               	movf	??_ADC_CHS_CLKS,w
  1313  0096  3A00               	xorlw	0	; case 0
  1314  0097  1903               	skipnz
  1315  0098  281A               	goto	l135
  1316  0099  3A01               	xorlw	1	; case 1
  1317  009A  1903               	skipnz
  1318  009B  2824               	goto	l137
  1319  009C  3A03               	xorlw	3	; case 2
  1320  009D  1903               	skipnz
  1321  009E  282B               	goto	l138
  1322  009F  3A01               	xorlw	1	; case 3
  1323  00A0  1903               	skipnz
  1324  00A1  2832               	goto	l139
  1325  00A2  3A07               	xorlw	7	; case 4
  1326  00A3  1903               	skipnz
  1327  00A4  2839               	goto	l140
  1328  00A5  3A01               	xorlw	1	; case 5
  1329  00A6  1903               	skipnz
  1330  00A7  2840               	goto	l141
  1331  00A8  3A03               	xorlw	3	; case 6
  1332  00A9  1903               	skipnz
  1333  00AA  2847               	goto	l142
  1334  00AB  3A01               	xorlw	1	; case 7
  1335  00AC  1903               	skipnz
  1336  00AD  284E               	goto	l143
  1337  00AE  3A0F               	xorlw	15	; case 8
  1338  00AF  1903               	skipnz
  1339  00B0  2855               	goto	l144
  1340  00B1  3A01               	xorlw	1	; case 9
  1341  00B2  1903               	skipnz
  1342  00B3  285C               	goto	l145
  1343  00B4  3A03               	xorlw	3	; case 10
  1344  00B5  1903               	skipnz
  1345  00B6  2863               	goto	l146
  1346  00B7  3A01               	xorlw	1	; case 11
  1347  00B8  1903               	skipnz
  1348  00B9  286A               	goto	l147
  1349  00BA  3A07               	xorlw	7	; case 12
  1350  00BB  1903               	skipnz
  1351  00BC  2871               	goto	l148
  1352  00BD  3A01               	xorlw	1	; case 13
  1353  00BE  1903               	skipnz
  1354  00BF  2878               	goto	l149
  1355  00C0  3A03               	xorlw	3	; case 14
  1356  00C1  1903               	skipnz
  1357  00C2  287F               	goto	l150
  1358  00C3  2886               	goto	l151
  1359  00C4                     l136:
  1360                           
  1361                           ;ADC.c: 170: ADCON1bits.VCFG0=1;
  1362  00C4  161F               	bsf	31,4	;volatile
  1363                           
  1364                           ;ADC.c: 171: ADCON1bits.VCFG1=1;
  1365  00C5  169F               	bsf	31,5	;volatile
  1366                           
  1367                           ;ADC.c: 172: ADCON1bits.ADFM=0;
  1368  00C6  139F               	bcf	31,7	;volatile
  1369  00C7                     l158:
  1370  00C7  0008               	return
  1371  00C8                     __end_of_ADC_CHS_CLKS:
  1372                           
  1373                           	psect	text4
  1374  0172                     __ptext4:	
  1375 ;; *************** function _ADCG *****************
  1376 ;; Defined at:
  1377 ;;		line 104 in file "slave3.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    2
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _ADCG
  1407  0172                     _ADCG:
  1408  0172                     l844:	
  1409                           ;incstack = 0
  1410                           ; Regs used in _ADCG: [wreg+status,2]
  1411                           
  1412                           
  1413                           ;slave3.c: 105:     if(ADCGO > 20){
  1414  0172  3015               	movlw	21
  1415  0173  0279               	subwf	_ADCGO,w
  1416  0174  1C03               	skipc
  1417  0175  2977               	goto	u21
  1418  0176  2978               	goto	u20
  1419  0177                     u21:
  1420  0177  297C               	goto	l75
  1421  0178                     u20:
  1422  0178                     l846:
  1423                           
  1424                           ;slave3.c: 106:         ADCGO = 0;
  1425  0178  01F9               	clrf	_ADCGO
  1426  0179                     l848:
  1427                           
  1428                           ;slave3.c: 107:         ADCON0bits.GO_nDONE = 1;
  1429  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1430  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1431  017B  149F               	bsf	31,1	;volatile
  1432  017C                     l75:
  1433  017C  0008               	return
  1434  017D                     __end_of_ADCG:
  1435                           
  1436                           	psect	text5
  1437  00C8                     __ptext5:	
  1438 ;; *************** function _isr *****************
  1439 ;; Defined at:
  1440 ;;		line 38 in file "slave3.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, pclath, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0
  1456 ;;      Temps:          3       0       0       0       0
  1457 ;;      Totals:         3       0       0       0       0
  1458 ;;Total ram usage:        3 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    1
  1461 ;; This function calls:
  1462 ;;		_spiWrite
  1463 ;; This function is called by:
  1464 ;;		Interrupt level 1
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           
  1469                           ;psect for function _isr
  1470  00C8                     _isr:
  1471  00C8                     i1l852:
  1472                           
  1473                           ;slave3.c: 39:     if (ADIF==1){
  1474  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1475  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1476  00CA  1F0C               	btfss	12,6	;volatile
  1477  00CB  28CD               	goto	u4_21
  1478  00CC  28CE               	goto	u4_20
  1479  00CD                     u4_21:
  1480  00CD  28F6               	goto	i1l868
  1481  00CE                     u4_20:
  1482  00CE                     i1l854:
  1483                           
  1484                           ;slave3.c: 40:         L=ADRESH;
  1485  00CE  081E               	movf	30,w	;volatile
  1486  00CF  00F1               	movwf	??_isr
  1487  00D0  0871               	movf	??_isr,w
  1488  00D1  00F8               	movwf	_L
  1489  00D2                     i1l856:
  1490                           
  1491                           ;slave3.c: 41:         PIR1bits.ADIF=0;
  1492  00D2  130C               	bcf	12,6	;volatile
  1493                           
  1494                           ;slave3.c: 42:         q=L;
  1495  00D3  0878               	movf	_L,w
  1496  00D4  00F1               	movwf	??_isr
  1497  00D5  0871               	movf	??_isr,w
  1498  00D6  00F7               	movwf	_q
  1499                           
  1500                           ;slave3.c: 43:         if(q <= 97){
  1501  00D7  3062               	movlw	98
  1502  00D8  0277               	subwf	_q,w
  1503  00D9  1803               	skipnc
  1504  00DA  28DC               	goto	u5_21
  1505  00DB  28DD               	goto	u5_20
  1506  00DC                     u5_21:
  1507  00DC  28DF               	goto	i1l56
  1508  00DD                     u5_20:
  1509  00DD                     i1l858:
  1510                           
  1511                           ;slave3.c: 44:            PORTD = 0B00000010;
  1512  00DD  3002               	movlw	2
  1513  00DE  0088               	movwf	8	;volatile
  1514  00DF                     i1l56:	
  1515                           ;slave3.c: 45:         }
  1516                           
  1517                           
  1518                           ;slave3.c: 46:         if(q > 97 && q < 111){
  1519  00DF  3062               	movlw	98
  1520  00E0  0277               	subwf	_q,w
  1521  00E1  1C03               	skipc
  1522  00E2  28E4               	goto	u6_21
  1523  00E3  28E5               	goto	u6_20
  1524  00E4                     u6_21:
  1525  00E4  28ED               	goto	i1l57
  1526  00E5                     u6_20:
  1527  00E5                     i1l860:
  1528  00E5  306F               	movlw	111
  1529  00E6  0277               	subwf	_q,w
  1530  00E7  1803               	skipnc
  1531  00E8  28EA               	goto	u7_21
  1532  00E9  28EB               	goto	u7_20
  1533  00EA                     u7_21:
  1534  00EA  28ED               	goto	i1l57
  1535  00EB                     u7_20:
  1536  00EB                     i1l862:
  1537                           
  1538                           ;slave3.c: 47:            PORTD = 0B00000100;
  1539  00EB  3004               	movlw	4
  1540  00EC  0088               	movwf	8	;volatile
  1541  00ED                     i1l57:	
  1542                           ;slave3.c: 48:         }
  1543                           
  1544                           
  1545                           ;slave3.c: 49:         if(q >= 111){
  1546  00ED  306F               	movlw	111
  1547  00EE  0277               	subwf	_q,w
  1548  00EF  1C03               	skipc
  1549  00F0  28F2               	goto	u8_21
  1550  00F1  28F3               	goto	u8_20
  1551  00F2                     u8_21:
  1552  00F2  28F5               	goto	i1l866
  1553  00F3                     u8_20:
  1554  00F3                     i1l864:
  1555                           
  1556                           ;slave3.c: 50:            PORTD = 0B00001000;
  1557  00F3  3008               	movlw	8
  1558  00F4  0088               	movwf	8	;volatile
  1559  00F5                     i1l866:
  1560                           
  1561                           ;slave3.c: 52:         ADCON0bits.GO=1;}
  1562  00F5  149F               	bsf	31,1	;volatile
  1563  00F6                     i1l868:
  1564                           
  1565                           ;slave3.c: 53:     if(SSPIF == 1){
  1566  00F6  1D8C               	btfss	12,3	;volatile
  1567  00F7  28F9               	goto	u9_21
  1568  00F8  28FA               	goto	u9_20
  1569  00F9                     u9_21:
  1570  00F9  2905               	goto	i1l60
  1571  00FA                     u9_20:
  1572  00FA                     i1l870:
  1573                           
  1574                           ;slave3.c: 54:         PORTB=L;
  1575  00FA  0878               	movf	_L,w
  1576  00FB  0086               	movwf	6	;volatile
  1577  00FC                     i1l872:
  1578                           
  1579                           ;slave3.c: 55:         spiWrite(L);
  1580  00FC  0878               	movf	_L,w
  1581  00FD  120A  118A  217D  120A  118A  	fcall	_spiWrite
  1582  0102                     i1l874:
  1583                           
  1584                           ;slave3.c: 56:         SSPIF = 0;
  1585  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0104  118C               	bcf	12,3	;volatile
  1588  0105                     i1l60:
  1589  0105  0873               	movf	??_isr+2,w
  1590  0106  008A               	movwf	10
  1591  0107  0E72               	swapf	??_isr+1,w
  1592  0108  0083               	movwf	3
  1593  0109  0EFE               	swapf	btemp,f
  1594  010A  0E7E               	swapf	btemp,w
  1595  010B  0009               	retfie
  1596  010C                     __end_of_isr:
  1597                           
  1598                           	psect	intentry
  1599  0004                     __pintentry:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1602                           
  1603  0004                     interrupt_function:
  1604  007E                     saved_w	set	btemp
  1605  0004  00FE               	movwf	btemp
  1606  0005  0E03               	swapf	3,w
  1607  0006  00F2               	movwf	??_isr+1
  1608  0007  080A               	movf	10,w
  1609  0008  00F3               	movwf	??_isr+2
  1610  0009  120A  118A  28C8   	ljmp	_isr
  1611                           
  1612                           	psect	text6
  1613  017D                     __ptext6:	
  1614 ;; *************** function _spiWrite *****************
  1615 ;; Defined at:
  1616 ;;		line 27 in file "SSSPI.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  dat             1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  dat             1    0[COMMON] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0
  1633 ;;      Totals:         1       0       0       0       0
  1634 ;;Total ram usage:        1 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_isr
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _spiWrite
  1645  017D                     _spiWrite:
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _spiWrite: [wreg]
  1649                           ;spiWrite@dat stored from wreg
  1650  017D  00F0               	movwf	spiWrite@dat
  1651  017E                     i1l796:
  1652                           
  1653                           ;SSSPI.c: 27: void spiWrite(char dat);SSSPI.c: 28: {;SSSPI.c: 29:     SSPBUF = dat;
  1654  017E  0870               	movf	spiWrite@dat,w
  1655  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0181  0093               	movwf	19	;volatile
  1658  0182                     i1l101:
  1659  0182  0008               	return
  1660  0183                     __end_of_spiWrite:
  1661  007E                     btemp	set	126	;btemp
  1662  007E                     wtemp0	set	126
  1663                           
  1664                           	psect	config
  1665                           
  1666                           ;Config register CONFIG1 @ 0x2007
  1667                           ;	Oscillator Selection bits
  1668                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1669                           ;	Watchdog Timer Enable bit
  1670                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1671                           ;	Power-up Timer Enable bit
  1672                           ;	PWRTE = OFF, PWRT disabled
  1673                           ;	RE3/MCLR pin function select bit
  1674                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1675                           ;	Code Protection bit
  1676                           ;	CP = OFF, Program memory code protection is disabled
  1677                           ;	Data Code Protection bit
  1678                           ;	CPD = OFF, Data memory code protection is disabled
  1679                           ;	Brown Out Reset Selection bits
  1680                           ;	BOREN = OFF, BOR disabled
  1681                           ;	Internal External Switchover bit
  1682                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1683                           ;	Fail-Safe Clock Monitor Enabled bit
  1684                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1685                           ;	Low Voltage Programming Enable bit
  1686                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1687                           ;	In-Circuit Debugger Mode bit
  1688                           ;	DEBUG = 0x1, unprogrammed default
  1689  2007                     	org	8199
  1690  2007  20D4               	dw	8404
  1691                           
  1692                           ;Config register CONFIG2 @ 0x2008
  1693                           ;	Brown-out Reset Selection bit
  1694                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1695                           ;	Flash Program Memory Self Write Enable bits
  1696                           ;	WRT = OFF, Write protection off
  1697  2008                     	org	8200
  1698  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit
    _Setup->_ADC_CHS_CLKS

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_Setup
    _Setup->_ADC_CHS_CLKS

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     608
                                              2 BANK0      1     1      0
                               _ADCG
                              _Setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0     152
                                              1 BANK0      1     1      0
                       _ADC_CHS_CLKS
 ---------------------------------------------------------------------------------
 (2) _ADC_CHS_CLKS                                         4     3      1     152
                                              4 COMMON     3     2      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCG                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCG
   _Setup
     _ADC_CHS_CLKS
   _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 22:09:15 2021

                      _L 0078                        _q 0077    __size_of_ADC_CHS_CLKS 00B2  
            _SSPSTATbits 0094                       l71 0137                       l75 017C  
                     l91 0150                       l92 0155                       u20 0178  
                     u21 0177                      l140 0039                      l141 0040  
                    l150 007F                      l142 0047                      l151 0086  
                    l143 004E                      l135 001A                      l144 0055  
                    l136 00C4                      l145 005C                      l137 0024  
                    l146 0063                      l138 002B                      l147 006A  
                    l139 0032                      l148 0071                      l149 0078  
                    l158 00C7                      l844 0172                      l846 0178  
                    l848 0179                      u110 0144                      u111 0143  
                    _isr 00C8                     l1100 010C                     l1110 0120  
                   l1102 0118                     l1120 0128                     l1112 0121  
                   l1104 011B                     l1042 0019                     l1130 0132  
                   l1122 0129                     l1114 0122                     l1106 011E  
                   l1044 0020                     l1132 0133                     l1124 012D  
                   l1116 0126                     l1108 011F                     l1140 0169  
                   l1134 0134                     l1126 012E                     l1118 0127  
                   l1128 012F                     l1136 0156                     l1082 008D  
                   l1090 013B                     l1138 0164                     l1172 0095  
                   l1092 0144                     l1094 0148                     l1096 014A  
                   l1098 014F                     _ADCG 0172                     _ADIF 0066  
                   ?_isr 0070                     i1l60 0105                     i1l56 00DF  
                   i1l57 00ED                     u4_20 00CE                     u4_21 00CD  
                   u5_20 00DD                     u5_21 00DC                     u6_20 00E5  
                   u6_21 00E4                     u7_20 00EB                     u7_21 00EA  
                   u8_20 00F3                     u8_21 00F2                     u9_20 00FA  
                   u9_21 00F9                     _main 0156                     btemp 007E  
                   start 000C             _ADC_CHS_CLKS 0016                    ?_ADCG 0070  
                  ??_isr 0071                    _ADCGO 0079                    ?_main 0070  
                  _ANSEL 0188                    i1l101 0182                    i1l860 00E5  
                  i1l852 00C8                    i1l870 00FA                    i1l862 00EB  
                  i1l854 00CE                    i1l872 00FC                    i1l864 00F3  
                  i1l856 00D2                    i1l874 0102                    i1l866 00F5  
                  i1l858 00DD                    i1l796 017E                    i1l868 00F6  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _Setup 010C                    pclath 000A  
        __end_of_spiInit 0156                    status 0003                    wtemp0 007E  
           __end_of_ADCG 017D          __initialization 000F             __end_of_main 0172  
                 ??_ADCG 0074                   ??_main 0022                   ?_Setup 0070  
                 _ADCON1 009F                   _ADRESH 001E                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 0183                ??_spiInit 0077  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_Setup 0138  
                ??_Setup 0021               __pmaintext 0156               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0138  
                __ptext2 010C                  __ptext3 0016                  __ptext4 0172  
                __ptext5 00C8                  __ptext6 017D             __size_of_isr 0044  
                _spiInit 0138     end_of_initialization 0012               ??_spiWrite 0070  
          ADC_CHS_CLKS@C 0020            ADC_CHS_CLKS@S 0074              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 010C            ?_ADC_CHS_CLKS 0074  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
         ??_ADC_CHS_CLKS 0075        __size_of_spiWrite 0006                 ?_spiInit 0074  
         __size_of_Setup 002C     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F     __end_of_ADC_CHS_CLKS 00C8  
       __size_of_spiInit 001E            __size_of_ADCG 000B            __size_of_main 001C  
               _spiWrite 017D             spiInit@sType 0020        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
