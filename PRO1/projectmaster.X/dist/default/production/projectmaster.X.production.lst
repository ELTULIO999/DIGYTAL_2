

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 19:01:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0018                     _RCSTAbits	set	24
   458  0008                     _PORTDbits	set	8
   459  0013                     _SSPBUF	set	19
   460  0014                     _SSPCON	set	20
   461  0019                     _TXREG	set	25
   462  000B                     _INTCONbits	set	11
   463  0009                     _PORTE	set	9
   464  0008                     _PORTD	set	8
   465  0007                     _PORTC	set	7
   466  0006                     _PORTB	set	6
   467  0005                     _PORTA	set	5
   468  0009                     _PORTEbits	set	9
   469  008C                     _PIE1bits	set	140
   470  0099                     _SPBRG	set	153
   471  0098                     _TXSTAbits	set	152
   472  0088                     _TRISDbits	set	136
   473  0094                     _SSPSTATbits	set	148
   474  0094                     _SSPSTAT	set	148
   475  0089                     _TRISE	set	137
   476  0088                     _TRISD	set	136
   477  0086                     _TRISB	set	134
   478  0085                     _TRISA	set	133
   479  043B                     _TRISC3	set	1083
   480  043D                     _TRISC5	set	1085
   481  0187                     _BAUDCTLbits	set	391
   482  0189                     _ANSELH	set	393
   483  0188                     _ANSEL	set	392
   484                           
   485                           	psect	strings
   486  0003                     __pstrings:
   487  0003                     stringtab:
   488  0003                     __stringtab:
   489  0003                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492  0003                     stringdir:
   493  0003  3000               	movlw	high stringdir
   494  0004  008A               	movwf	10
   495  0005  0804               	movf	4,w
   496  0006  0A84               	incf	4,f
   497  0007  0782               	addwf	2,f
   498  0008                     __stringbase:
   499  0008  3400               	retlw	0
   500  0009                     __end_of__stringtab:
   501  0009                     STR_1:
   502  0009  3441               	retlw	65	;'A'
   503  000A  3444               	retlw	68	;'D'
   504  000B  3443               	retlw	67	;'C'
   505  000C  3420               	retlw	32	;' '
   506  000D  3454               	retlw	84	;'T'
   507  000E  3445               	retlw	69	;'E'
   508  000F  344D               	retlw	77	;'M'
   509  0010  3450               	retlw	80	;'P'
   510  0011  3420               	retlw	32	;' '
   511  0012  3443               	retlw	67	;'C'
   512  0013  344F               	retlw	79	;'O'
   513  0014  344E               	retlw	78	;'N'
   514  0015  3454               	retlw	84	;'T'
   515  0016  3400               	retlw	0
   516  0017                     STR_18:
   517  0017  342E               	retlw	46	;'.'
   518  0018  3400               	retlw	0
   519  0019                     STR_2:
   520  0019  3430               	retlw	48	;'0'
   521  001A  3400               	retlw	0
   522  001B                     STR_3:
   523  001B  3431               	retlw	49	;'1'
   524  001C  3400               	retlw	0
   525  001D                     STR_4:
   526  001D  3432               	retlw	50	;'2'
   527  001E  3400               	retlw	0
   528  001F                     STR_5:
   529  001F  3433               	retlw	51	;'3'
   530  0020  3400               	retlw	0
   531  0021                     STR_6:
   532  0021  3434               	retlw	52	;'4'
   533  0022  3400               	retlw	0
   534  0023                     STR_7:
   535  0023  3435               	retlw	53	;'5'
   536  0024  3400               	retlw	0
   537  0025                     STR_8:
   538  0025  3436               	retlw	54	;'6'
   539  0026  3400               	retlw	0
   540  0027                     STR_9:
   541  0027  3437               	retlw	55	;'7'
   542  0028  3400               	retlw	0
   543  0029                     STR_10:
   544  0029  3438               	retlw	56	;'8'
   545  002A  3400               	retlw	0
   546  002B                     STR_11:
   547  002B  3439               	retlw	57	;'9'
   548  002C  3400               	retlw	0
   549  002D                     STR_12:
   550  002D  3441               	retlw	65	;'A'
   551  002E  3400               	retlw	0
   552  002F                     STR_13:
   553  002F  3442               	retlw	66	;'B'
   554  0030  3400               	retlw	0
   555  0031                     STR_14:
   556  0031  3443               	retlw	67	;'C'
   557  0032  3400               	retlw	0
   558  0033                     STR_15:
   559  0033  3444               	retlw	68	;'D'
   560  0034  3400               	retlw	0
   561  0035                     STR_16:
   562  0035  3445               	retlw	69	;'E'
   563  0036  3400               	retlw	0
   564  0037                     STR_17:
   565  0037  3446               	retlw	70	;'F'
   566  0038  3400               	retlw	0
   567                           
   568                           	psect	cinit
   569  07F2                     start_initialization:	
   570                           ; #config settings
   571                           
   572  07F2                     __initialization:
   573                           
   574                           ; Clear objects allocated to COMMON
   575  07F2  01FD               	clrf	__pbssCOMMON& (0+127)
   576                           
   577                           ; Clear objects allocated to BANK0
   578  07F3  1383               	bcf	3,7	;select IRP bank0
   579  07F4  3020               	movlw	low __pbssBANK0
   580  07F5  0084               	movwf	4
   581  07F6  3034               	movlw	low (__pbssBANK0+20)
   582  07F7  120A  118A  22D9  120A  118A  	fcall	clear_ram0
   583  07FC                     end_of_initialization:	
   584                           ;End of C runtime variable initialization code
   585                           
   586  07FC                     __end_of__initialization:
   587  07FC  0183               	clrf	3
   588  07FD  120A  118A  2D67   	ljmp	_main	;jump to C main() function
   589                           
   590                           	psect	bssCOMMON
   591  007D                     __pbssCOMMON:
   592  007D                     _L:
   593  007D                     	ds	1
   594                           
   595                           	psect	bssBANK0
   596  0020                     __pbssBANK0:
   597  0020                     _POT1_Tas:
   598  0020                     	ds	1
   599  0021                     _POT1_Has:
   600  0021                     	ds	1
   601  0022                     _POT1_Uas:
   602  0022                     	ds	1
   603  0023                     _cont_3AS:
   604  0023                     	ds	1
   605  0024                     _cont_2AS:
   606  0024                     	ds	1
   607  0025                     _cont_1AS:
   608  0025                     	ds	1
   609  0026                     _cont:
   610  0026                     	ds	1
   611  0027                     _cont_3:
   612  0027                     	ds	1
   613  0028                     _cont_2:
   614  0028                     	ds	1
   615  0029                     _cont_1:
   616  0029                     	ds	1
   617  002A                     _TEM_TAS:
   618  002A                     	ds	1
   619  002B                     _TEM_UAS:
   620  002B                     	ds	1
   621  002C                     _TEM_T:
   622  002C                     	ds	1
   623  002D                     _TEM_U:
   624  002D                     	ds	1
   625  002E                     _POT1_T:
   626  002E                     	ds	1
   627  002F                     _POT1_H:
   628  002F                     	ds	1
   629  0030                     _POT1_U:
   630  0030                     	ds	1
   631  0031                     _z:
   632  0031                     	ds	1
   633  0032                     _Z:
   634  0032                     	ds	1
   635  0033                     _l:
   636  0033                     	ds	1
   637                           
   638                           	psect	clrtext
   639  02D9                     clear_ram0:	
   640                           ;	Called with FSR containing the base address, and
   641                           ;	W with the last address+1
   642                           
   643  02D9  0064               	clrwdt	;clear the watchdog before getting into this loop
   644  02DA                     clrloop0:
   645  02DA  0180               	clrf	0	;clear RAM location pointed to by FSR
   646  02DB  0A84               	incf	4,f	;increment pointer
   647  02DC  0604               	xorwf	4,w	;XOR with final address
   648  02DD  1903               	btfsc	3,2	;have we reached the end yet?
   649  02DE  3400               	retlw	0	;all done for this memory range, return
   650  02DF  0604               	xorwf	4,w	;XOR again to restore value
   651  02E0  2ADA               	goto	clrloop0	;do the next byte
   652                           
   653                           	psect	cstackCOMMON
   654  0070                     __pcstackCOMMON:
   655  0070                     ?_spiInit:
   656  0070                     ?_Setup:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_Setup:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_LCD_IN:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_LCD_CL:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_spiWrite:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_spiWrite:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_spiRead:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_spiRead:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_CONVET_cont:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_CONV:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_LCD_ON:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ??_LCD_ON:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_LCD_TIM:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ??_LCD_TIM:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_main:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_spiReceiveWait:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_spiReceiveWait:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_LCD_PLAY:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_LCD_PLAY:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCD_P:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?___bmul:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?___wmul:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     spiInit@sDataSample:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0070                     spiWrite@dat:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ___bmul@multiplicand:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ___wmul@multiplier:	
   732                           ; 1 bytes @ 0x0
   733                           
   734                           
   735                           ; 2 bytes @ 0x0
   736  0070                     	ds	1
   737  0071                     ??___bmul:
   738  0071                     spiInit@sClockIdle:	
   739                           ; 1 bytes @ 0x1
   740                           
   741  0071                     LCD_PLAY@D:	
   742                           ; 1 bytes @ 0x1
   743                           
   744                           
   745                           ; 1 bytes @ 0x1
   746  0071                     	ds	1
   747  0072                     ??_LCD_P:
   748  0072                     spiInit@sTransmitEdge:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     LCD_ON@C:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ___bmul@product:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ___wmul@multiplicand:	
   758                           ; 1 bytes @ 0x2
   759                           
   760                           
   761                           ; 2 bytes @ 0x2
   762  0072                     	ds	1
   763  0073                     ??_spiInit:
   764  0073                     ??_LCD_IN:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0073                     ??_LCD_CL:	
   768                           ; 1 bytes @ 0x3
   769                           
   770  0073                     spiInit@sType:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     LCD_P@D:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     ___bmul@multiplier:	
   777                           ; 1 bytes @ 0x3
   778                           
   779                           
   780                           ; 1 bytes @ 0x3
   781  0073                     	ds	1
   782  0074                     ?_LCD_POINT:
   783  0074                     ??___wmul:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0074                     LCD_POINT@x:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0074                     ___wmul@product:	
   790                           ; 2 bytes @ 0x4
   791                           
   792                           
   793                           ; 2 bytes @ 0x4
   794  0074                     	ds	2
   795  0076                     ?___awdiv:
   796  0076                     LCD_POINT@y:	
   797                           ; 2 bytes @ 0x6
   798                           
   799  0076                     ___awdiv@divisor:	
   800                           ; 2 bytes @ 0x6
   801                           
   802                           
   803                           ; 2 bytes @ 0x6
   804  0076                     	ds	2
   805  0078                     LCD_POINT@D:
   806  0078                     ___awdiv@dividend:	
   807                           ; 1 bytes @ 0x8
   808                           
   809                           
   810                           ; 2 bytes @ 0x8
   811  0078                     	ds	1
   812  0079                     ??_LCD_POINT:
   813                           
   814                           ; 1 bytes @ 0x9
   815  0079                     	ds	1
   816  007A                     ??___awdiv:
   817  007A                     LCD_POINT@LOC:	
   818                           ; 1 bytes @ 0xA
   819                           
   820                           
   821                           ; 1 bytes @ 0xA
   822  007A                     	ds	1
   823  007B                     ??_LCDVAL1:
   824  007B                     _CONV$1189:	
   825                           ; 1 bytes @ 0xB
   826                           
   827                           
   828                           ; 2 bytes @ 0xB
   829  007B                     	ds	2
   830                           
   831                           	psect	cstackBANK0
   832  0034                     __pcstackBANK0:
   833  0034                     ?_LCDVAL1:
   834  0034                     ___awdiv@counter:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0034                     LCDVAL1@x:	
   838                           ; 1 bytes @ 0x0
   839                           
   840                           
   841                           ; 2 bytes @ 0x0
   842  0034                     	ds	1
   843  0035                     ___awdiv@sign:
   844                           
   845                           ; 1 bytes @ 0x1
   846  0035                     	ds	1
   847  0036                     LCDVAL1@Z:
   848  0036                     ___awdiv@quotient:	
   849                           ; 2 bytes @ 0x2
   850                           
   851                           
   852                           ; 2 bytes @ 0x2
   853  0036                     	ds	2
   854  0038                     ??_CONVET_cont:
   855  0038                     ??_CONV:	
   856                           ; 1 bytes @ 0x4
   857                           
   858                           
   859                           ; 1 bytes @ 0x4
   860  0038                     	ds	8
   861  0040                     ??_main:
   862                           
   863                           ; 1 bytes @ 0xC
   864  0040                     	ds	2
   865                           
   866                           	psect	maintext
   867  0567                     __pmaintext:	
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 55 in file "master.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : B00/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       2       0       0       0
   890 ;;      Totals:         0       2       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels required when called:    5
   893 ;; This function calls:
   894 ;;		_CONV
   895 ;;		_CONVET_cont
   896 ;;		_LCDVAL1
   897 ;;		_LCD_CL
   898 ;;		_LCD_IN
   899 ;;		_LCD_POINT
   900 ;;		_Setup
   901 ;;		_spiInit
   902 ;;		_spiRead
   903 ;;		_spiWrite
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  0567                     _main:
   912  0567                     l1453:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   915                           
   916                           
   917                           ;master.c: 56:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   918  0567  3080               	movlw	128
   919  0568  1283               	bcf	3,5	;RP0=0, select bank0
   920  0569  1303               	bcf	3,6	;RP1=0, select bank0
   921  056A  00C0               	movwf	??_main
   922  056B  0840               	movf	??_main,w
   923  056C  00F0               	movwf	spiInit@sDataSample
   924  056D  01F1               	clrf	spiInit@sClockIdle
   925  056E  01F2               	clrf	spiInit@sTransmitEdge
   926  056F  3020               	movlw	32
   927  0570  120A  118A  2348  120A  118A  	fcall	_spiInit
   928                           
   929                           ;master.c: 57:     Setup();
   930  0575  120A  118A  2332  120A  118A  	fcall	_Setup
   931                           
   932                           ;master.c: 58:     LCD_IN();
   933  057A  120A  118A  23C9  120A  118A  	fcall	_LCD_IN
   934                           
   935                           ;master.c: 59:     LCD_CL();
   936  057F  120A  118A  22CB  120A  118A  	fcall	_LCD_CL
   937  0584                     l1455:
   938                           
   939                           ;master.c: 60:     LCD_POINT(0,1,"ADC TEMP CONT");
   940  0584  3000               	movlw	0
   941  0585  00F4               	movwf	LCD_POINT@x
   942  0586  00F5               	movwf	LCD_POINT@x+1
   943  0587  3001               	movlw	1
   944  0588  00F6               	movwf	LCD_POINT@y
   945  0589  3000               	movlw	0
   946  058A  00F7               	movwf	LCD_POINT@y+1
   947  058B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   948  058C  1283               	bcf	3,5	;RP0=0, select bank0
   949  058D  1303               	bcf	3,6	;RP1=0, select bank0
   950  058E  00C0               	movwf	??_main
   951  058F  0840               	movf	??_main,w
   952  0590  00F8               	movwf	LCD_POINT@D
   953  0591  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
   954  0596                     l1457:
   955                           
   956                           ;master.c: 61:     Z=0;
   957  0596  1283               	bcf	3,5	;RP0=0, select bank0
   958  0597  1303               	bcf	3,6	;RP1=0, select bank0
   959  0598  01B2               	clrf	_Z
   960  0599  2E72               	goto	l1499
   961  059A                     l99:	
   962                           ;master.c: 69:             case 0:
   963                           
   964                           
   965                           ;master.c: 70:                 PORTEbits.RE0=0;
   966  059A  1009               	bcf	9,0	;volatile
   967                           
   968                           ;master.c: 71:                 PORTEbits.RE1=1;
   969  059B  1489               	bsf	9,1	;volatile
   970                           
   971                           ;master.c: 72:                 PORTEbits.RE2=1;
   972  059C  1509               	bsf	9,2	;volatile
   973  059D                     l1459:
   974                           
   975                           ;master.c: 74:                 spiWrite(0x00);
   976  059D  3000               	movlw	0
   977  059E  120A  118A  22C5  120A  118A  	fcall	_spiWrite
   978  05A3                     l1461:
   979                           
   980                           ;master.c: 75:                 _delay((unsigned long)((1)*(4000000/4000.0)));
   981  05A3  30C7               	movlw	199
   982  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   983  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   984  05A6  00C0               	movwf	??_main
   985  05A7                     u397:
   986  05A7  2DA8               	nop2
   987  05A8  0BC0               	decfsz	??_main,f
   988  05A9  2DA7               	goto	u397
   989  05AA  2DAB               	nop2
   990  05AB                     l1463:
   991                           
   992                           ;master.c: 76:                 cont=spiRead();
   993  05AB  120A  118A  22E1  120A  118A  	fcall	_spiRead
   994  05B0  1283               	bcf	3,5	;RP0=0, select bank0
   995  05B1  1303               	bcf	3,6	;RP1=0, select bank0
   996  05B2  00C0               	movwf	??_main
   997  05B3  0840               	movf	??_main,w
   998  05B4  00A6               	movwf	_cont
   999  05B5                     l1465:
  1000                           
  1001                           ;master.c: 77:                 CONVET_cont();
  1002  05B5  120A  118A  23F5  120A  118A  	fcall	_CONVET_cont
  1003  05BA                     l1467:
  1004                           
  1005                           ;master.c: 78:                 _delay((unsigned long)((1)*(4000000/4000.0)));
  1006  05BA  30C7               	movlw	199
  1007  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1008  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1009  05BD  00C0               	movwf	??_main
  1010  05BE                     u407:
  1011  05BE  2DBF               	nop2
  1012  05BF  0BC0               	decfsz	??_main,f
  1013  05C0  2DBE               	goto	u407
  1014  05C1  2DC2               	nop2
  1015  05C2                     l1469:
  1016                           
  1017                           ;master.c: 80:                 LCDVAL1 (10,cont_1);
  1018  05C2  300A               	movlw	10
  1019  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1020  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1021  05C5  00B4               	movwf	LCDVAL1@x
  1022  05C6  3000               	movlw	0
  1023  05C7  00B5               	movwf	LCDVAL1@x+1
  1024  05C8  0829               	movf	_cont_1,w
  1025  05C9  00C0               	movwf	??_main
  1026  05CA  01C1               	clrf	??_main+1
  1027  05CB  0840               	movf	??_main,w
  1028  05CC  00B6               	movwf	LCDVAL1@Z
  1029  05CD  0841               	movf	??_main+1,w
  1030  05CE  00B7               	movwf	LCDVAL1@Z+1
  1031  05CF  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1032  05D4                     l1471:
  1033                           
  1034                           ;master.c: 81:                 LCDVAL1 (11,cont_2);
  1035  05D4  300B               	movlw	11
  1036  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1037  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1038  05D7  00B4               	movwf	LCDVAL1@x
  1039  05D8  3000               	movlw	0
  1040  05D9  00B5               	movwf	LCDVAL1@x+1
  1041  05DA  0828               	movf	_cont_2,w
  1042  05DB  00C0               	movwf	??_main
  1043  05DC  01C1               	clrf	??_main+1
  1044  05DD  0840               	movf	??_main,w
  1045  05DE  00B6               	movwf	LCDVAL1@Z
  1046  05DF  0841               	movf	??_main+1,w
  1047  05E0  00B7               	movwf	LCDVAL1@Z+1
  1048  05E1  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1049  05E6                     l1473:
  1050                           
  1051                           ;master.c: 82:                 LCDVAL1 (12,cont_3);
  1052  05E6  300C               	movlw	12
  1053  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1054  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1055  05E9  00B4               	movwf	LCDVAL1@x
  1056  05EA  3000               	movlw	0
  1057  05EB  00B5               	movwf	LCDVAL1@x+1
  1058  05EC  0827               	movf	_cont_3,w
  1059  05ED  00C0               	movwf	??_main
  1060  05EE  01C1               	clrf	??_main+1
  1061  05EF  0840               	movf	??_main,w
  1062  05F0  00B6               	movwf	LCDVAL1@Z
  1063  05F1  0841               	movf	??_main+1,w
  1064  05F2  00B7               	movwf	LCDVAL1@Z+1
  1065  05F3  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1066  05F8                     l1475:
  1067                           
  1068                           ;master.c: 83:                 Z++;
  1069  05F8  3001               	movlw	1
  1070  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1071  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1072  05FB  00C0               	movwf	??_main
  1073  05FC  0840               	movf	??_main,w
  1074  05FD  07B2               	addwf	_Z,f
  1075                           
  1076                           ;master.c: 84:                 break;
  1077  05FE  2E72               	goto	l1499
  1078  05FF                     l101:	
  1079                           ;master.c: 85:             case 1:
  1080                           
  1081                           
  1082                           ;master.c: 86:                 PORTEbits.RE0=1;
  1083  05FF  1409               	bsf	9,0	;volatile
  1084                           
  1085                           ;master.c: 87:                 PORTEbits.RE1=0;
  1086  0600  1089               	bcf	9,1	;volatile
  1087                           
  1088                           ;master.c: 88:                 PORTEbits.RE2=1;
  1089  0601  1509               	bsf	9,2	;volatile
  1090  0602                     l1477:
  1091                           
  1092                           ;master.c: 90:                 spiWrite(0x00);
  1093  0602  3000               	movlw	0
  1094  0603  120A  118A  22C5  120A  118A  	fcall	_spiWrite
  1095  0608                     l1479:
  1096                           
  1097                           ;master.c: 91:                 _delay((unsigned long)((1)*(4000000/4000.0)));
  1098  0608  30C7               	movlw	199
  1099  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1100  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1101  060B  00C0               	movwf	??_main
  1102  060C                     u417:
  1103  060C  2E0D               	nop2
  1104  060D  0BC0               	decfsz	??_main,f
  1105  060E  2E0C               	goto	u417
  1106  060F  2E10               	nop2
  1107  0610                     l1481:
  1108                           
  1109                           ;master.c: 92:                 L=spiRead();
  1110  0610  120A  118A  22E1  120A  118A  	fcall	_spiRead
  1111  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0617  00C0               	movwf	??_main
  1114  0618  0840               	movf	??_main,w
  1115  0619  00FD               	movwf	_L
  1116                           
  1117                           ;master.c: 93:                 PORTA=L;
  1118  061A  087D               	movf	_L,w
  1119  061B  0085               	movwf	5	;volatile
  1120  061C                     l1483:
  1121                           
  1122                           ;master.c: 94:                 CONV();
  1123  061C  120A  118A  24BD  120A  118A  	fcall	_CONV
  1124  0621                     l1485:
  1125                           
  1126                           ;master.c: 95:                 _delay((unsigned long)((1)*(4000000/4000.0)));
  1127  0621  30C7               	movlw	199
  1128  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0624  00C0               	movwf	??_main
  1131  0625                     u427:
  1132  0625  2E26               	nop2
  1133  0626  0BC0               	decfsz	??_main,f
  1134  0627  2E25               	goto	u427
  1135  0628  2E29               	nop2
  1136  0629                     l1487:
  1137                           
  1138                           ;master.c: 97:                 LCDVAL1 (2,POT1_U);
  1139  0629  3002               	movlw	2
  1140  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1141  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1142  062C  00B4               	movwf	LCDVAL1@x
  1143  062D  3000               	movlw	0
  1144  062E  00B5               	movwf	LCDVAL1@x+1
  1145  062F  0830               	movf	_POT1_U,w
  1146  0630  00C0               	movwf	??_main
  1147  0631  01C1               	clrf	??_main+1
  1148  0632  0840               	movf	??_main,w
  1149  0633  00B6               	movwf	LCDVAL1@Z
  1150  0634  0841               	movf	??_main+1,w
  1151  0635  00B7               	movwf	LCDVAL1@Z+1
  1152  0636  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1153  063B                     l1489:
  1154                           
  1155                           ;master.c: 98:                 LCDVAL1 (3,16);
  1156  063B  3003               	movlw	3
  1157  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1158  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1159  063E  00B4               	movwf	LCDVAL1@x
  1160  063F  3000               	movlw	0
  1161  0640  00B5               	movwf	LCDVAL1@x+1
  1162  0641  3010               	movlw	16
  1163  0642  00B6               	movwf	LCDVAL1@Z
  1164  0643  3000               	movlw	0
  1165  0644  00B7               	movwf	LCDVAL1@Z+1
  1166  0645  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1167  064A                     l1491:
  1168                           
  1169                           ;master.c: 99:                 LCDVAL1 (4,POT1_T);
  1170  064A  3004               	movlw	4
  1171  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1172  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1173  064D  00B4               	movwf	LCDVAL1@x
  1174  064E  3000               	movlw	0
  1175  064F  00B5               	movwf	LCDVAL1@x+1
  1176  0650  082E               	movf	_POT1_T,w
  1177  0651  00C0               	movwf	??_main
  1178  0652  01C1               	clrf	??_main+1
  1179  0653  0840               	movf	??_main,w
  1180  0654  00B6               	movwf	LCDVAL1@Z
  1181  0655  0841               	movf	??_main+1,w
  1182  0656  00B7               	movwf	LCDVAL1@Z+1
  1183  0657  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1184  065C                     l1493:
  1185                           
  1186                           ;master.c: 100:                 LCDVAL1 (5,POT1_H);
  1187  065C  3005               	movlw	5
  1188  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1189  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1190  065F  00B4               	movwf	LCDVAL1@x
  1191  0660  3000               	movlw	0
  1192  0661  00B5               	movwf	LCDVAL1@x+1
  1193  0662  082F               	movf	_POT1_H,w
  1194  0663  00C0               	movwf	??_main
  1195  0664  01C1               	clrf	??_main+1
  1196  0665  0840               	movf	??_main,w
  1197  0666  00B6               	movwf	LCDVAL1@Z
  1198  0667  0841               	movf	??_main+1,w
  1199  0668  00B7               	movwf	LCDVAL1@Z+1
  1200  0669  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1201  066E  2D96               	goto	l1457
  1202  066F                     l102:	
  1203                           ;master.c: 105:             default:
  1204                           
  1205                           
  1206                           ;master.c: 106:                 PORTEbits.RE0=1;
  1207  066F  1409               	bsf	9,0	;volatile
  1208                           
  1209                           ;master.c: 107:                 PORTEbits.RE1=1;
  1210  0670  1489               	bsf	9,1	;volatile
  1211                           
  1212                           ;master.c: 108:                 PORTEbits.RE2=0;
  1213  0671  1109               	bcf	9,2	;volatile
  1214  0672                     l1499:	
  1215                           ;master.c: 109:                 break;
  1216                           
  1217  0672  0832               	movf	_Z,w
  1218  0673  00C0               	movwf	??_main
  1219  0674  01C1               	clrf	??_main+1
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ; direct_byte           11     8 (fixed)
  1228                           ; jumptable            260     6 (fixed)
  1229                           ;	Chosen strategy is simple_byte
  1230  0675  0841               	movf	??_main+1,w
  1231  0676  3A00               	xorlw	0	; case 0
  1232  0677  1903               	skipnz
  1233  0678  2E7A               	goto	l1609
  1234  0679  2E6F               	goto	l102
  1235  067A                     l1609:
  1236                           
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 2, Range of values is 0 to 1
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte            7     4 (average)
  1242                           ; direct_byte           14     8 (fixed)
  1243                           ; jumptable            260     6 (fixed)
  1244                           ;	Chosen strategy is simple_byte
  1245  067A  0840               	movf	??_main,w
  1246  067B  3A00               	xorlw	0	; case 0
  1247  067C  1903               	skipnz
  1248  067D  2D9A               	goto	l99
  1249  067E  3A01               	xorlw	1	; case 1
  1250  067F  1903               	skipnz
  1251  0680  2DFF               	goto	l101
  1252  0681  2E6F               	goto	l102
  1253  0682  120A  118A  2800   	ljmp	start
  1254  0685                     __end_of_main:
  1255                           
  1256                           	psect	text1
  1257  02C5                     __ptext1:	
  1258 ;; *************** function _spiWrite *****************
  1259 ;; Defined at:
  1260 ;;		line 28 in file "MSSP.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  dat             1    wreg     unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  dat             1    0[COMMON] unsigned char 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         1       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0
  1277 ;;      Totals:         1       0       0       0       0
  1278 ;;Total ram usage:        1 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _spiWrite
  1289  02C5                     _spiWrite:
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _spiWrite: [wreg]
  1293                           ;spiWrite@dat stored from wreg
  1294  02C5  00F0               	movwf	spiWrite@dat
  1295  02C6                     l1397:
  1296                           
  1297                           ;MSSP.c: 28: void spiWrite(char dat);MSSP.c: 29: {;MSSP.c: 30:     SSPBUF = dat;
  1298  02C6  0870               	movf	spiWrite@dat,w
  1299  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1300  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1301  02C9  0093               	movwf	19	;volatile
  1302  02CA                     l164:
  1303  02CA  0008               	return
  1304  02CB                     __end_of_spiWrite:
  1305                           
  1306                           	psect	text2
  1307  02E1                     __ptext2:	
  1308 ;; *************** function _spiRead *****************
  1309 ;; Defined at:
  1310 ;;		line 41 in file "MSSP.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      unsigned char 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    1
  1331 ;; This function calls:
  1332 ;;		_spiReceiveWait
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _spiRead
  1340  02E1                     _spiRead:
  1341  02E1                     l1399:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1344                           
  1345                           
  1346                           ;MSSP.c: 43:     spiReceiveWait();
  1347  02E1  120A  118A  22D2  120A  118A  	fcall	_spiReceiveWait
  1348  02E6                     l1401:
  1349                           
  1350                           ;MSSP.c: 44:     return(SSPBUF);
  1351  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1352  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1353  02E8  0813               	movf	19,w	;volatile
  1354  02E9                     l172:
  1355  02E9  0008               	return
  1356  02EA                     __end_of_spiRead:
  1357                           
  1358                           	psect	text3
  1359  02D2                     __ptext3:	
  1360 ;; *************** function _spiReceiveWait *****************
  1361 ;; Defined at:
  1362 ;;		line 23 in file "MSSP.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		None
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_spiRead
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _spiReceiveWait
  1391  02D2                     _spiReceiveWait:
  1392  02D2                     l1279:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _spiReceiveWait: []
  1395                           
  1396  02D2                     l158:	
  1397                           ;MSSP.c: 25:     while ( !SSPSTATbits.BF );
  1398                           
  1399  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1400  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1401  02D4  1C14               	btfss	20,0	;volatile
  1402  02D5  2AD7               	goto	u211
  1403  02D6  2AD8               	goto	u210
  1404  02D7                     u211:
  1405  02D7  2AD2               	goto	l158
  1406  02D8                     u210:
  1407  02D8                     l161:
  1408  02D8  0008               	return
  1409  02D9                     __end_of_spiReceiveWait:
  1410                           
  1411                           	psect	text4
  1412  0348                     __ptext4:	
  1413 ;; *************** function _spiInit *****************
  1414 ;; Defined at:
  1415 ;;		line 6 in file "MSSP.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  sType           1    wreg     enum E1264
  1418 ;;  sDataSample     1    0[COMMON] enum E1272
  1419 ;;  sClockIdle      1    1[COMMON] enum E1276
  1420 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  sType           1    3[COMMON] enum E1264
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         3       0       0       0       0
  1433 ;;      Locals:         1       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0
  1435 ;;      Totals:         4       0       0       0       0
  1436 ;;Total ram usage:        4 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _spiInit
  1447  0348                     _spiInit:
  1448                           
  1449                           ;incstack = 0
  1450                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1451                           ;spiInit@sType stored from wreg
  1452  0348  00F3               	movwf	spiInit@sType
  1453  0349                     l1353:
  1454                           
  1455                           ;MSSP.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);MSSP.c: 7: {;MSSP.c: 8:     TRISC5 = 0;
  1456  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1457  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1458  034B  1287               	bcf	7,5	;volatile
  1459                           
  1460                           ;MSSP.c: 9:     if(sType & 0b00000100)
  1461  034C  1D73               	btfss	spiInit@sType,2
  1462  034D  2B4F               	goto	u381
  1463  034E  2B50               	goto	u380
  1464  034F                     u381:
  1465  034F  2B54               	goto	l1359
  1466  0350                     u380:
  1467  0350                     l1355:
  1468                           
  1469                           ;MSSP.c: 10:     {;MSSP.c: 11:         SSPSTAT = sTransmitEdge;
  1470  0350  0872               	movf	spiInit@sTransmitEdge,w
  1471  0351  0094               	movwf	20	;volatile
  1472  0352                     l1357:
  1473                           
  1474                           ;MSSP.c: 12:         TRISC3 = 1;
  1475  0352  1587               	bsf	7,3	;volatile
  1476                           
  1477                           ;MSSP.c: 13:     }
  1478  0353  2B58               	goto	l154
  1479  0354                     l1359:
  1480                           
  1481                           ;MSSP.c: 15:     {;MSSP.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
  1482  0354  0870               	movf	spiInit@sDataSample,w
  1483  0355  0472               	iorwf	spiInit@sTransmitEdge,w
  1484  0356  0094               	movwf	20	;volatile
  1485  0357                     l1361:
  1486                           
  1487                           ;MSSP.c: 17:         TRISC3 = 0;
  1488  0357  1187               	bcf	7,3	;volatile
  1489  0358                     l154:	
  1490                           ;MSSP.c: 18:     }
  1491                           
  1492                           
  1493                           ;MSSP.c: 20:     SSPCON = sType | sClockIdle;
  1494  0358  0873               	movf	spiInit@sType,w
  1495  0359  0471               	iorwf	spiInit@sClockIdle,w
  1496  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1497  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1498  035C  0094               	movwf	20	;volatile
  1499  035D                     l155:
  1500  035D  0008               	return
  1501  035E                     __end_of_spiInit:
  1502                           
  1503                           	psect	text5
  1504  0332                     __ptext5:	
  1505 ;; *************** function _Setup *****************
  1506 ;; Defined at:
  1507 ;;		line 116 in file "master.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0
  1524 ;;      Totals:         0       0       0       0       0
  1525 ;;Total ram usage:        0 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function _Setup
  1536  0332                     _Setup:
  1537  0332                     l1363:	
  1538                           ;incstack = 0
  1539                           ; Regs used in _Setup: [wreg+status,2]
  1540                           
  1541                           
  1542                           ;master.c: 118:     PORTA = 0;
  1543  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0334  0185               	clrf	5	;volatile
  1546                           
  1547                           ;master.c: 119:     PORTB = 0;
  1548  0335  0186               	clrf	6	;volatile
  1549                           
  1550                           ;master.c: 120:     PORTC = 0;
  1551  0336  0187               	clrf	7	;volatile
  1552                           
  1553                           ;master.c: 121:     PORTD = 0;
  1554  0337  0188               	clrf	8	;volatile
  1555                           
  1556                           ;master.c: 122:     PORTE = 0;
  1557  0338  0189               	clrf	9	;volatile
  1558                           
  1559                           ;master.c: 124:     TRISA = 0B00000000;
  1560  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1561  033A  1303               	bcf	3,6	;RP1=0, select bank1
  1562  033B  0185               	clrf	5	;volatile
  1563                           
  1564                           ;master.c: 125:     TRISB = 0B00000000;
  1565  033C  0186               	clrf	6	;volatile
  1566                           
  1567                           ;master.c: 127:     TRISD = 0B00000000;
  1568  033D  0188               	clrf	8	;volatile
  1569  033E                     l1365:
  1570                           
  1571                           ;master.c: 128:     TRISE = 1 ;
  1572  033E  3001               	movlw	1
  1573  033F  0089               	movwf	9	;volatile
  1574  0340                     l1367:
  1575                           
  1576                           ;master.c: 130:     ANSEL = 0B00000000;
  1577  0340  1683               	bsf	3,5	;RP0=1, select bank3
  1578  0341  1703               	bsf	3,6	;RP1=1, select bank3
  1579  0342  0188               	clrf	8	;volatile
  1580  0343                     l1369:
  1581                           
  1582                           ;master.c: 131:     ANSELH = 0B00000000;
  1583  0343  0189               	clrf	9	;volatile
  1584  0344                     l1371:
  1585                           
  1586                           ;master.c: 134:     INTCONbits.GIE=1;
  1587  0344  178B               	bsf	11,7	;volatile
  1588  0345                     l1373:
  1589                           
  1590                           ;master.c: 135:     INTCONbits.PEIE=1;
  1591  0345  170B               	bsf	11,6	;volatile
  1592  0346                     l1375:
  1593                           
  1594                           ;master.c: 136:     INTCONbits.RBIE=1;
  1595  0346  158B               	bsf	11,3	;volatile
  1596  0347                     l108:
  1597  0347  0008               	return
  1598  0348                     __end_of_Setup:
  1599                           
  1600                           	psect	text6
  1601  03C9                     __ptext6:	
  1602 ;; *************** function _LCD_IN *****************
  1603 ;; Defined at:
  1604 ;;		line 4 in file "SETLCD.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0
  1620 ;;      Temps:          2       0       0       0       0
  1621 ;;      Totals:         2       0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    2
  1625 ;; This function calls:
  1626 ;;		_LCD_ON
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _LCD_IN
  1634  03C9                     _LCD_IN:
  1635  03C9                     l1377:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _LCD_IN: [wreg+status,2+status,0+pclath+cstack]
  1638                           
  1639                           
  1640                           ;SETLCD.c: 5:     TRISDbits.TRISD6 = 0;
  1641  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1642  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1643  03CB  1308               	bcf	8,6	;volatile
  1644                           
  1645                           ;SETLCD.c: 6:     TRISDbits.TRISD7 = 0;
  1646  03CC  1388               	bcf	8,7	;volatile
  1647  03CD                     l1379:
  1648                           
  1649                           ;SETLCD.c: 7:     TRISB = 0;
  1650  03CD  0186               	clrf	6	;volatile
  1651  03CE                     l1381:
  1652                           
  1653                           ;SETLCD.c: 8:     PORTDbits.RD6 = 0;
  1654  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1655  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1656  03D0  1308               	bcf	8,6	;volatile
  1657  03D1                     l1383:
  1658                           
  1659                           ;SETLCD.c: 9:     PORTDbits.RD7 = 0;
  1660  03D1  1388               	bcf	8,7	;volatile
  1661                           
  1662                           ;SETLCD.c: 10:     PORTB = 0;
  1663  03D2  0186               	clrf	6	;volatile
  1664  03D3                     l1385:
  1665                           
  1666                           ;SETLCD.c: 11:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1667  03D3  3041               	movlw	65
  1668  03D4  00F4               	movwf	??_LCD_IN+1
  1669  03D5  30EE               	movlw	238
  1670  03D6  00F3               	movwf	??_LCD_IN
  1671  03D7                     u437:
  1672  03D7  0BF3               	decfsz	??_LCD_IN,f
  1673  03D8  2BD7               	goto	u437
  1674  03D9  0BF4               	decfsz	??_LCD_IN+1,f
  1675  03DA  2BD7               	goto	u437
  1676  03DB  0000               	nop
  1677  03DC                     l1387:
  1678                           
  1679                           ;SETLCD.c: 12:     LCD_ON(0x02);
  1680  03DC  3002               	movlw	2
  1681  03DD  120A  118A  231D  120A  118A  	fcall	_LCD_ON
  1682  03E2                     l1389:
  1683                           
  1684                           ;SETLCD.c: 13:     LCD_ON(0x38);
  1685  03E2  3038               	movlw	56
  1686  03E3  120A  118A  231D  120A  118A  	fcall	_LCD_ON
  1687  03E8                     l1391:
  1688                           
  1689                           ;SETLCD.c: 14:     LCD_ON(0x0C);
  1690  03E8  300C               	movlw	12
  1691  03E9  120A  118A  231D  120A  118A  	fcall	_LCD_ON
  1692  03EE                     l1393:
  1693                           
  1694                           ;SETLCD.c: 15:     LCD_ON(0x06);
  1695  03EE  3006               	movlw	6
  1696  03EF  120A  118A  231D  120A  118A  	fcall	_LCD_ON
  1697  03F4                     l189:
  1698  03F4  0008               	return
  1699  03F5                     __end_of_LCD_IN:
  1700                           
  1701                           	psect	text7
  1702  02CB                     __ptext7:	
  1703 ;; *************** function _LCD_CL *****************
  1704 ;; Defined at:
  1705 ;;		line 34 in file "SETLCD.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0
  1722 ;;      Totals:         0       0       0       0       0
  1723 ;;Total ram usage:        0 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    2
  1726 ;; This function calls:
  1727 ;;		_LCD_ON
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _LCD_CL
  1735  02CB                     _LCD_CL:
  1736  02CB                     l1395:	
  1737                           ;incstack = 0
  1738                           ; Regs used in _LCD_CL: [wreg+status,2+status,0+pclath+cstack]
  1739                           
  1740                           
  1741                           ;SETLCD.c: 35:     LCD_ON(0x01);
  1742  02CB  3001               	movlw	1
  1743  02CC  120A  118A  231D  120A  118A  	fcall	_LCD_ON
  1744  02D1                     l201:
  1745  02D1  0008               	return
  1746  02D2                     __end_of_LCD_CL:
  1747                           
  1748                           	psect	text8
  1749  0685                     __ptext8:	
  1750 ;; *************** function _LCDVAL1 *****************
  1751 ;; Defined at:
  1752 ;;		line 59 in file "SETLCD.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  x               2    0[BANK0 ] int 
  1755 ;;  Z               2    2[BANK0 ] int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       4       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          1       0       0       0       0
  1770 ;;      Totals:         1       4       0       0       0
  1771 ;;Total ram usage:        5 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    4
  1774 ;; This function calls:
  1775 ;;		_LCD_POINT
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _LCDVAL1
  1783  0685                     _LCDVAL1:
  1784  0685                     l1407:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _LCDVAL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1787                           
  1788                           
  1789                           ;SETLCD.c: 60:     switch (Z){
  1790  0685  2FB8               	goto	l1445
  1791  0686                     l1409:
  1792                           
  1793                           ;SETLCD.c: 62:             LCD_POINT(x,2,"0");
  1794  0686  0835               	movf	LCDVAL1@x+1,w
  1795  0687  00F5               	movwf	LCD_POINT@x+1
  1796  0688  0834               	movf	LCDVAL1@x,w
  1797  0689  00F4               	movwf	LCD_POINT@x
  1798  068A  3002               	movlw	2
  1799  068B  00F6               	movwf	LCD_POINT@y
  1800  068C  3000               	movlw	0
  1801  068D  00F7               	movwf	LCD_POINT@y+1
  1802  068E  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1803  068F  00FB               	movwf	??_LCDVAL1
  1804  0690  087B               	movf	??_LCDVAL1,w
  1805  0691  00F8               	movwf	LCD_POINT@D
  1806  0692  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1807                           
  1808                           ;SETLCD.c: 63:             break;
  1809  0697  2FF1               	goto	l237
  1810  0698                     l1411:
  1811                           
  1812                           ;SETLCD.c: 65:             LCD_POINT(x,2,"1");
  1813  0698  0835               	movf	LCDVAL1@x+1,w
  1814  0699  00F5               	movwf	LCD_POINT@x+1
  1815  069A  0834               	movf	LCDVAL1@x,w
  1816  069B  00F4               	movwf	LCD_POINT@x
  1817  069C  3002               	movlw	2
  1818  069D  00F6               	movwf	LCD_POINT@y
  1819  069E  3000               	movlw	0
  1820  069F  00F7               	movwf	LCD_POINT@y+1
  1821  06A0  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1822  06A1  00FB               	movwf	??_LCDVAL1
  1823  06A2  087B               	movf	??_LCDVAL1,w
  1824  06A3  00F8               	movwf	LCD_POINT@D
  1825  06A4  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1826                           
  1827                           ;SETLCD.c: 66:             break;
  1828  06A9  2FF1               	goto	l237
  1829  06AA                     l1413:
  1830                           
  1831                           ;SETLCD.c: 68:             LCD_POINT(x,2,"2");
  1832  06AA  0835               	movf	LCDVAL1@x+1,w
  1833  06AB  00F5               	movwf	LCD_POINT@x+1
  1834  06AC  0834               	movf	LCDVAL1@x,w
  1835  06AD  00F4               	movwf	LCD_POINT@x
  1836  06AE  3002               	movlw	2
  1837  06AF  00F6               	movwf	LCD_POINT@y
  1838  06B0  3000               	movlw	0
  1839  06B1  00F7               	movwf	LCD_POINT@y+1
  1840  06B2  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1841  06B3  00FB               	movwf	??_LCDVAL1
  1842  06B4  087B               	movf	??_LCDVAL1,w
  1843  06B5  00F8               	movwf	LCD_POINT@D
  1844  06B6  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1845                           
  1846                           ;SETLCD.c: 69:             break;
  1847  06BB  2FF1               	goto	l237
  1848  06BC                     l1415:
  1849                           
  1850                           ;SETLCD.c: 71:             LCD_POINT(x,2,"3");
  1851  06BC  0835               	movf	LCDVAL1@x+1,w
  1852  06BD  00F5               	movwf	LCD_POINT@x+1
  1853  06BE  0834               	movf	LCDVAL1@x,w
  1854  06BF  00F4               	movwf	LCD_POINT@x
  1855  06C0  3002               	movlw	2
  1856  06C1  00F6               	movwf	LCD_POINT@y
  1857  06C2  3000               	movlw	0
  1858  06C3  00F7               	movwf	LCD_POINT@y+1
  1859  06C4  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1860  06C5  00FB               	movwf	??_LCDVAL1
  1861  06C6  087B               	movf	??_LCDVAL1,w
  1862  06C7  00F8               	movwf	LCD_POINT@D
  1863  06C8  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1864                           
  1865                           ;SETLCD.c: 72:             break;
  1866  06CD  2FF1               	goto	l237
  1867  06CE                     l1417:
  1868                           
  1869                           ;SETLCD.c: 74:             LCD_POINT(x,2,"4");
  1870  06CE  0835               	movf	LCDVAL1@x+1,w
  1871  06CF  00F5               	movwf	LCD_POINT@x+1
  1872  06D0  0834               	movf	LCDVAL1@x,w
  1873  06D1  00F4               	movwf	LCD_POINT@x
  1874  06D2  3002               	movlw	2
  1875  06D3  00F6               	movwf	LCD_POINT@y
  1876  06D4  3000               	movlw	0
  1877  06D5  00F7               	movwf	LCD_POINT@y+1
  1878  06D6  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1879  06D7  00FB               	movwf	??_LCDVAL1
  1880  06D8  087B               	movf	??_LCDVAL1,w
  1881  06D9  00F8               	movwf	LCD_POINT@D
  1882  06DA  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1883                           
  1884                           ;SETLCD.c: 75:             break;
  1885  06DF  2FF1               	goto	l237
  1886  06E0                     l1419:
  1887                           
  1888                           ;SETLCD.c: 77:             LCD_POINT(x,2,"5");
  1889  06E0  0835               	movf	LCDVAL1@x+1,w
  1890  06E1  00F5               	movwf	LCD_POINT@x+1
  1891  06E2  0834               	movf	LCDVAL1@x,w
  1892  06E3  00F4               	movwf	LCD_POINT@x
  1893  06E4  3002               	movlw	2
  1894  06E5  00F6               	movwf	LCD_POINT@y
  1895  06E6  3000               	movlw	0
  1896  06E7  00F7               	movwf	LCD_POINT@y+1
  1897  06E8  301B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1898  06E9  00FB               	movwf	??_LCDVAL1
  1899  06EA  087B               	movf	??_LCDVAL1,w
  1900  06EB  00F8               	movwf	LCD_POINT@D
  1901  06EC  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1902                           
  1903                           ;SETLCD.c: 78:             break;
  1904  06F1  2FF1               	goto	l237
  1905  06F2                     l1421:
  1906                           
  1907                           ;SETLCD.c: 80:             LCD_POINT(x,2,"6");
  1908  06F2  0835               	movf	LCDVAL1@x+1,w
  1909  06F3  00F5               	movwf	LCD_POINT@x+1
  1910  06F4  0834               	movf	LCDVAL1@x,w
  1911  06F5  00F4               	movwf	LCD_POINT@x
  1912  06F6  3002               	movlw	2
  1913  06F7  00F6               	movwf	LCD_POINT@y
  1914  06F8  3000               	movlw	0
  1915  06F9  00F7               	movwf	LCD_POINT@y+1
  1916  06FA  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1917  06FB  00FB               	movwf	??_LCDVAL1
  1918  06FC  087B               	movf	??_LCDVAL1,w
  1919  06FD  00F8               	movwf	LCD_POINT@D
  1920  06FE  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1921                           
  1922                           ;SETLCD.c: 81:             break;
  1923  0703  2FF1               	goto	l237
  1924  0704                     l1423:
  1925                           
  1926                           ;SETLCD.c: 83:             LCD_POINT(x,2,"7");
  1927  0704  0835               	movf	LCDVAL1@x+1,w
  1928  0705  00F5               	movwf	LCD_POINT@x+1
  1929  0706  0834               	movf	LCDVAL1@x,w
  1930  0707  00F4               	movwf	LCD_POINT@x
  1931  0708  3002               	movlw	2
  1932  0709  00F6               	movwf	LCD_POINT@y
  1933  070A  3000               	movlw	0
  1934  070B  00F7               	movwf	LCD_POINT@y+1
  1935  070C  301F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1936  070D  00FB               	movwf	??_LCDVAL1
  1937  070E  087B               	movf	??_LCDVAL1,w
  1938  070F  00F8               	movwf	LCD_POINT@D
  1939  0710  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1940                           
  1941                           ;SETLCD.c: 84:             break;
  1942  0715  2FF1               	goto	l237
  1943  0716                     l1425:
  1944                           
  1945                           ;SETLCD.c: 86:             LCD_POINT(x,2,"8");
  1946  0716  0835               	movf	LCDVAL1@x+1,w
  1947  0717  00F5               	movwf	LCD_POINT@x+1
  1948  0718  0834               	movf	LCDVAL1@x,w
  1949  0719  00F4               	movwf	LCD_POINT@x
  1950  071A  3002               	movlw	2
  1951  071B  00F6               	movwf	LCD_POINT@y
  1952  071C  3000               	movlw	0
  1953  071D  00F7               	movwf	LCD_POINT@y+1
  1954  071E  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1955  071F  00FB               	movwf	??_LCDVAL1
  1956  0720  087B               	movf	??_LCDVAL1,w
  1957  0721  00F8               	movwf	LCD_POINT@D
  1958  0722  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1959                           
  1960                           ;SETLCD.c: 87:             break;
  1961  0727  2FF1               	goto	l237
  1962  0728                     l1427:
  1963                           
  1964                           ;SETLCD.c: 89:             LCD_POINT(x,2,"9");
  1965  0728  0835               	movf	LCDVAL1@x+1,w
  1966  0729  00F5               	movwf	LCD_POINT@x+1
  1967  072A  0834               	movf	LCDVAL1@x,w
  1968  072B  00F4               	movwf	LCD_POINT@x
  1969  072C  3002               	movlw	2
  1970  072D  00F6               	movwf	LCD_POINT@y
  1971  072E  3000               	movlw	0
  1972  072F  00F7               	movwf	LCD_POINT@y+1
  1973  0730  3023               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1974  0731  00FB               	movwf	??_LCDVAL1
  1975  0732  087B               	movf	??_LCDVAL1,w
  1976  0733  00F8               	movwf	LCD_POINT@D
  1977  0734  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1978                           
  1979                           ;SETLCD.c: 90:             break;
  1980  0739  2FF1               	goto	l237
  1981  073A                     l1429:
  1982                           
  1983                           ;SETLCD.c: 92:             LCD_POINT (x,2,"A");
  1984  073A  0835               	movf	LCDVAL1@x+1,w
  1985  073B  00F5               	movwf	LCD_POINT@x+1
  1986  073C  0834               	movf	LCDVAL1@x,w
  1987  073D  00F4               	movwf	LCD_POINT@x
  1988  073E  3002               	movlw	2
  1989  073F  00F6               	movwf	LCD_POINT@y
  1990  0740  3000               	movlw	0
  1991  0741  00F7               	movwf	LCD_POINT@y+1
  1992  0742  3025               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1993  0743  00FB               	movwf	??_LCDVAL1
  1994  0744  087B               	movf	??_LCDVAL1,w
  1995  0745  00F8               	movwf	LCD_POINT@D
  1996  0746  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1997                           
  1998                           ;SETLCD.c: 93:             break;
  1999  074B  2FF1               	goto	l237
  2000  074C                     l1431:
  2001                           
  2002                           ;SETLCD.c: 95:             LCD_POINT (x,2,"B");
  2003  074C  0835               	movf	LCDVAL1@x+1,w
  2004  074D  00F5               	movwf	LCD_POINT@x+1
  2005  074E  0834               	movf	LCDVAL1@x,w
  2006  074F  00F4               	movwf	LCD_POINT@x
  2007  0750  3002               	movlw	2
  2008  0751  00F6               	movwf	LCD_POINT@y
  2009  0752  3000               	movlw	0
  2010  0753  00F7               	movwf	LCD_POINT@y+1
  2011  0754  3027               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2012  0755  00FB               	movwf	??_LCDVAL1
  2013  0756  087B               	movf	??_LCDVAL1,w
  2014  0757  00F8               	movwf	LCD_POINT@D
  2015  0758  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2016                           
  2017                           ;SETLCD.c: 96:             break;
  2018  075D  2FF1               	goto	l237
  2019  075E                     l1433:
  2020                           
  2021                           ;SETLCD.c: 98:             LCD_POINT (x,2,"C");
  2022  075E  0835               	movf	LCDVAL1@x+1,w
  2023  075F  00F5               	movwf	LCD_POINT@x+1
  2024  0760  0834               	movf	LCDVAL1@x,w
  2025  0761  00F4               	movwf	LCD_POINT@x
  2026  0762  3002               	movlw	2
  2027  0763  00F6               	movwf	LCD_POINT@y
  2028  0764  3000               	movlw	0
  2029  0765  00F7               	movwf	LCD_POINT@y+1
  2030  0766  3029               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2031  0767  00FB               	movwf	??_LCDVAL1
  2032  0768  087B               	movf	??_LCDVAL1,w
  2033  0769  00F8               	movwf	LCD_POINT@D
  2034  076A  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2035                           
  2036                           ;SETLCD.c: 99:             break;
  2037  076F  2FF1               	goto	l237
  2038  0770                     l1435:
  2039                           
  2040                           ;SETLCD.c: 101:             LCD_POINT (x,2,"D");
  2041  0770  0835               	movf	LCDVAL1@x+1,w
  2042  0771  00F5               	movwf	LCD_POINT@x+1
  2043  0772  0834               	movf	LCDVAL1@x,w
  2044  0773  00F4               	movwf	LCD_POINT@x
  2045  0774  3002               	movlw	2
  2046  0775  00F6               	movwf	LCD_POINT@y
  2047  0776  3000               	movlw	0
  2048  0777  00F7               	movwf	LCD_POINT@y+1
  2049  0778  302B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2050  0779  00FB               	movwf	??_LCDVAL1
  2051  077A  087B               	movf	??_LCDVAL1,w
  2052  077B  00F8               	movwf	LCD_POINT@D
  2053  077C  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2054                           
  2055                           ;SETLCD.c: 102:             break;
  2056  0781  2FF1               	goto	l237
  2057  0782                     l1437:
  2058                           
  2059                           ;SETLCD.c: 104:             LCD_POINT (x,2,"E");
  2060  0782  0835               	movf	LCDVAL1@x+1,w
  2061  0783  00F5               	movwf	LCD_POINT@x+1
  2062  0784  0834               	movf	LCDVAL1@x,w
  2063  0785  00F4               	movwf	LCD_POINT@x
  2064  0786  3002               	movlw	2
  2065  0787  00F6               	movwf	LCD_POINT@y
  2066  0788  3000               	movlw	0
  2067  0789  00F7               	movwf	LCD_POINT@y+1
  2068  078A  302D               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2069  078B  00FB               	movwf	??_LCDVAL1
  2070  078C  087B               	movf	??_LCDVAL1,w
  2071  078D  00F8               	movwf	LCD_POINT@D
  2072  078E  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2073                           
  2074                           ;SETLCD.c: 105:             break;
  2075  0793  2FF1               	goto	l237
  2076  0794                     l1439:
  2077                           
  2078                           ;SETLCD.c: 107:             LCD_POINT (x,2,"F");
  2079  0794  0835               	movf	LCDVAL1@x+1,w
  2080  0795  00F5               	movwf	LCD_POINT@x+1
  2081  0796  0834               	movf	LCDVAL1@x,w
  2082  0797  00F4               	movwf	LCD_POINT@x
  2083  0798  3002               	movlw	2
  2084  0799  00F6               	movwf	LCD_POINT@y
  2085  079A  3000               	movlw	0
  2086  079B  00F7               	movwf	LCD_POINT@y+1
  2087  079C  302F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2088  079D  00FB               	movwf	??_LCDVAL1
  2089  079E  087B               	movf	??_LCDVAL1,w
  2090  079F  00F8               	movwf	LCD_POINT@D
  2091  07A0  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2092                           
  2093                           ;SETLCD.c: 108:             break;
  2094  07A5  2FF1               	goto	l237
  2095  07A6                     l1441:
  2096                           
  2097                           ;SETLCD.c: 110:             LCD_POINT(x,2,".");
  2098  07A6  0835               	movf	LCDVAL1@x+1,w
  2099  07A7  00F5               	movwf	LCD_POINT@x+1
  2100  07A8  0834               	movf	LCDVAL1@x,w
  2101  07A9  00F4               	movwf	LCD_POINT@x
  2102  07AA  3002               	movlw	2
  2103  07AB  00F6               	movwf	LCD_POINT@y
  2104  07AC  3000               	movlw	0
  2105  07AD  00F7               	movwf	LCD_POINT@y+1
  2106  07AE  300F               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2107  07AF  00FB               	movwf	??_LCDVAL1
  2108  07B0  087B               	movf	??_LCDVAL1,w
  2109  07B1  00F8               	movwf	LCD_POINT@D
  2110  07B2  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2111                           
  2112                           ;SETLCD.c: 111:             break;
  2113  07B7  2FF1               	goto	l237
  2114  07B8                     l1445:
  2115                           
  2116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2117                           ; Switch size 1, requested type "simple"
  2118                           ; Number of cases is 1, Range of values is 0 to 0
  2119                           ; switch strategies available:
  2120                           ; Name         Instructions Cycles
  2121                           ; simple_byte            4     3 (average)
  2122                           ; direct_byte           11     8 (fixed)
  2123                           ; jumptable            260     6 (fixed)
  2124                           ;	Chosen strategy is simple_byte
  2125  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2126  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2127  07BA  0837               	movf	LCDVAL1@Z+1,w
  2128  07BB  3A00               	xorlw	0	; case 0
  2129  07BC  1903               	skipnz
  2130  07BD  2FBF               	goto	l1611
  2131  07BE  2FA6               	goto	l1441
  2132  07BF                     l1611:
  2133                           
  2134                           ; Switch size 1, requested type "simple"
  2135                           ; Number of cases is 16, Range of values is 0 to 15
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte           49    25 (average)
  2139                           ; direct_byte           56     8 (fixed)
  2140                           ; jumptable            260     6 (fixed)
  2141                           ;	Chosen strategy is simple_byte
  2142  07BF  0836               	movf	LCDVAL1@Z,w
  2143  07C0  3A00               	xorlw	0	; case 0
  2144  07C1  1903               	skipnz
  2145  07C2  2E86               	goto	l1409
  2146  07C3  3A01               	xorlw	1	; case 1
  2147  07C4  1903               	skipnz
  2148  07C5  2E98               	goto	l1411
  2149  07C6  3A03               	xorlw	3	; case 2
  2150  07C7  1903               	skipnz
  2151  07C8  2EAA               	goto	l1413
  2152  07C9  3A01               	xorlw	1	; case 3
  2153  07CA  1903               	skipnz
  2154  07CB  2EBC               	goto	l1415
  2155  07CC  3A07               	xorlw	7	; case 4
  2156  07CD  1903               	skipnz
  2157  07CE  2ECE               	goto	l1417
  2158  07CF  3A01               	xorlw	1	; case 5
  2159  07D0  1903               	skipnz
  2160  07D1  2EE0               	goto	l1419
  2161  07D2  3A03               	xorlw	3	; case 6
  2162  07D3  1903               	skipnz
  2163  07D4  2EF2               	goto	l1421
  2164  07D5  3A01               	xorlw	1	; case 7
  2165  07D6  1903               	skipnz
  2166  07D7  2F04               	goto	l1423
  2167  07D8  3A0F               	xorlw	15	; case 8
  2168  07D9  1903               	skipnz
  2169  07DA  2F16               	goto	l1425
  2170  07DB  3A01               	xorlw	1	; case 9
  2171  07DC  1903               	skipnz
  2172  07DD  2F28               	goto	l1427
  2173  07DE  3A03               	xorlw	3	; case 10
  2174  07DF  1903               	skipnz
  2175  07E0  2F3A               	goto	l1429
  2176  07E1  3A01               	xorlw	1	; case 11
  2177  07E2  1903               	skipnz
  2178  07E3  2F4C               	goto	l1431
  2179  07E4  3A07               	xorlw	7	; case 12
  2180  07E5  1903               	skipnz
  2181  07E6  2F5E               	goto	l1433
  2182  07E7  3A01               	xorlw	1	; case 13
  2183  07E8  1903               	skipnz
  2184  07E9  2F70               	goto	l1435
  2185  07EA  3A03               	xorlw	3	; case 14
  2186  07EB  1903               	skipnz
  2187  07EC  2F82               	goto	l1437
  2188  07ED  3A01               	xorlw	1	; case 15
  2189  07EE  1903               	skipnz
  2190  07EF  2F94               	goto	l1439
  2191  07F0  2FA6               	goto	l1441
  2192  07F1                     l237:
  2193  07F1  0008               	return
  2194  07F2                     __end_of_LCDVAL1:
  2195                           
  2196                           	psect	text9
  2197  03A2                     __ptext9:	
  2198 ;; *************** function _LCD_POINT *****************
  2199 ;; Defined at:
  2200 ;;		line 43 in file "SETLCD.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  x               2    4[COMMON] int 
  2203 ;;  y               2    6[COMMON] int 
  2204 ;;  D               1    8[COMMON] PTR unsigned char 
  2205 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2206 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2207 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2208 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2209 ;;		 -> STR_2(2), STR_1(14), 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  LOC             1   10[COMMON] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         5       0       0       0       0
  2222 ;;      Locals:         1       0       0       0       0
  2223 ;;      Temps:          1       0       0       0       0
  2224 ;;      Totals:         7       0       0       0       0
  2225 ;;Total ram usage:        7 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    3
  2228 ;; This function calls:
  2229 ;;		_LCD_ON
  2230 ;;		_LCD_P
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;;		_LCDVAL1
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _LCD_POINT
  2239  03A2                     _LCD_POINT:
  2240  03A2                     l1259:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _LCD_POINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2243                           
  2244                           
  2245                           ;SETLCD.c: 44:     char LOC;;SETLCD.c: 45:     switch (y){
  2246  03A2  2BAF               	goto	l1269
  2247  03A3                     l1261:
  2248                           
  2249                           ;SETLCD.c: 47:             LOC = 0x80 + x;
  2250  03A3  0874               	movf	LCD_POINT@x,w
  2251  03A4  3E80               	addlw	128
  2252  03A5  00F9               	movwf	??_LCD_POINT
  2253  03A6  0879               	movf	??_LCD_POINT,w
  2254  03A7  00FA               	movwf	LCD_POINT@LOC
  2255                           
  2256                           ;SETLCD.c: 48:             break;
  2257  03A8  2BBC               	goto	l1271
  2258  03A9                     l1263:
  2259                           
  2260                           ;SETLCD.c: 50:             LOC = 0xC0 + x;
  2261  03A9  0874               	movf	LCD_POINT@x,w
  2262  03AA  3EC0               	addlw	192
  2263  03AB  00F9               	movwf	??_LCD_POINT
  2264  03AC  0879               	movf	??_LCD_POINT,w
  2265  03AD  00FA               	movwf	LCD_POINT@LOC
  2266                           
  2267                           ;SETLCD.c: 51:             break;
  2268  03AE  2BBC               	goto	l1271
  2269  03AF                     l1269:
  2270                           
  2271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2272                           ; Switch size 1, requested type "simple"
  2273                           ; Number of cases is 1, Range of values is 0 to 0
  2274                           ; switch strategies available:
  2275                           ; Name         Instructions Cycles
  2276                           ; simple_byte            4     3 (average)
  2277                           ; direct_byte           11     8 (fixed)
  2278                           ; jumptable            260     6 (fixed)
  2279                           ;	Chosen strategy is simple_byte
  2280  03AF  0877               	movf	LCD_POINT@y+1,w
  2281  03B0  3A00               	xorlw	0	; case 0
  2282  03B1  1903               	skipnz
  2283  03B2  2BB4               	goto	l1613
  2284  03B3  2BA3               	goto	l1261
  2285  03B4                     l1613:
  2286                           
  2287                           ; Switch size 1, requested type "simple"
  2288                           ; Number of cases is 2, Range of values is 1 to 2
  2289                           ; switch strategies available:
  2290                           ; Name         Instructions Cycles
  2291                           ; simple_byte            7     4 (average)
  2292                           ; direct_byte           17    11 (fixed)
  2293                           ; jumptable            263     9 (fixed)
  2294                           ;	Chosen strategy is simple_byte
  2295  03B4  0876               	movf	LCD_POINT@y,w
  2296  03B5  3A01               	xorlw	1	; case 1
  2297  03B6  1903               	skipnz
  2298  03B7  2BA3               	goto	l1261
  2299  03B8  3A03               	xorlw	3	; case 2
  2300  03B9  1903               	skipnz
  2301  03BA  2BA9               	goto	l1263
  2302  03BB  2BA3               	goto	l1261
  2303  03BC                     l1271:
  2304                           
  2305                           ;SETLCD.c: 56:     LCD_ON(LOC);
  2306  03BC  087A               	movf	LCD_POINT@LOC,w
  2307  03BD  120A  118A  231D  120A  118A  	fcall	_LCD_ON
  2308  03C2                     l1273:
  2309                           
  2310                           ;SETLCD.c: 57:     LCD_P(D);
  2311  03C2  0878               	movf	LCD_POINT@D,w
  2312  03C3  120A  118A  235E  120A  118A  	fcall	_LCD_P
  2313  03C8                     l215:
  2314  03C8  0008               	return
  2315  03C9                     __end_of_LCD_POINT:
  2316                           
  2317                           	psect	text10
  2318  035E                     __ptext10:	
  2319 ;; *************** function _LCD_P *****************
  2320 ;; Defined at:
  2321 ;;		line 37 in file "SETLCD.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  D               1    wreg     PTR unsigned char 
  2324 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2325 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2326 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2327 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2328 ;;		 -> STR_2(2), STR_1(14), 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  D               1    3[COMMON] PTR unsigned char 
  2331 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2332 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2333 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2334 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2335 ;;		 -> STR_2(2), STR_1(14), 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0
  2347 ;;      Temps:          1       0       0       0       0
  2348 ;;      Totals:         2       0       0       0       0
  2349 ;;Total ram usage:        2 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    2
  2352 ;; This function calls:
  2353 ;;		_LCD_PLAY
  2354 ;; This function is called by:
  2355 ;;		_LCD_POINT
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _LCD_P
  2361  035E                     _LCD_P:
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _LCD_P: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2365                           ;LCD_P@D stored from wreg
  2366  035E  00F3               	movwf	LCD_P@D
  2367  035F                     l1251:
  2368                           
  2369                           ;SETLCD.c: 38:     while (*D){
  2370  035F  2B70               	goto	l1257
  2371  0360                     l1253:
  2372                           
  2373                           ;SETLCD.c: 39:         LCD_PLAY(*D);
  2374  0360  0873               	movf	LCD_P@D,w
  2375  0361  0084               	movwf	4
  2376  0362  120A  118A  2003  120A  118A  	fcall	stringdir
  2377  0367  120A  118A  22F7  120A  118A  	fcall	_LCD_PLAY
  2378  036C                     l1255:
  2379                           
  2380                           ;SETLCD.c: 40:         D++;
  2381  036C  3001               	movlw	1
  2382  036D  00F2               	movwf	??_LCD_P
  2383  036E  0872               	movf	??_LCD_P,w
  2384  036F  07F3               	addwf	LCD_P@D,f
  2385  0370                     l1257:
  2386                           
  2387                           ;SETLCD.c: 38:     while (*D){
  2388  0370  0873               	movf	LCD_P@D,w
  2389  0371  0084               	movwf	4
  2390  0372  120A  118A  2003  120A  118A  	fcall	stringdir
  2391  0377  3A00               	xorlw	0
  2392  0378  1D03               	skipz
  2393  0379  2B7B               	goto	u201
  2394  037A  2B7C               	goto	u200
  2395  037B                     u201:
  2396  037B  2B60               	goto	l1253
  2397  037C                     u200:
  2398  037C                     l207:
  2399  037C  0008               	return
  2400  037D                     __end_of_LCD_P:
  2401                           
  2402                           	psect	text11
  2403  02F7                     __ptext11:	
  2404 ;; *************** function _LCD_PLAY *****************
  2405 ;; Defined at:
  2406 ;;		line 28 in file "SETLCD.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  D               1    wreg     unsigned char 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  D               1    1[COMMON] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       0       0       0       0
  2421 ;;      Locals:         1       0       0       0       0
  2422 ;;      Temps:          1       0       0       0       0
  2423 ;;      Totals:         2       0       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    1
  2427 ;; This function calls:
  2428 ;;		_LCD_TIM
  2429 ;; This function is called by:
  2430 ;;		_LCD_P
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _LCD_PLAY
  2436  02F7                     _LCD_PLAY:
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _LCD_PLAY: [wreg+status,2+status,0+pclath+cstack]
  2440                           ;LCD_PLAY@D stored from wreg
  2441  02F7  00F1               	movwf	LCD_PLAY@D
  2442  02F8                     l1235:
  2443                           
  2444                           ;SETLCD.c: 29:     PORTDbits.RD6=1;
  2445  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2446  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2447  02FA  1708               	bsf	8,6	;volatile
  2448  02FB                     l1237:
  2449                           
  2450                           ;SETLCD.c: 30:     PORTB=D;
  2451  02FB  0871               	movf	LCD_PLAY@D,w
  2452  02FC  0086               	movwf	6	;volatile
  2453  02FD                     l1239:
  2454                           
  2455                           ;SETLCD.c: 31:     LCD_TIM();
  2456  02FD  120A  118A  22EA  120A  118A  	fcall	_LCD_TIM
  2457  0302                     l1241:
  2458                           
  2459                           ;SETLCD.c: 32:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2460  0302  3010               	movlw	16
  2461  0303  00F0               	movwf	??_LCD_PLAY
  2462  0304                     u447:
  2463  0304  0BF0               	decfsz	??_LCD_PLAY,f
  2464  0305  2B04               	goto	u447
  2465  0306  0000               	nop
  2466  0307                     l198:
  2467  0307  0008               	return
  2468  0308                     __end_of_LCD_PLAY:
  2469                           
  2470                           	psect	text12
  2471  031D                     __ptext12:	
  2472 ;; *************** function _LCD_ON *****************
  2473 ;; Defined at:
  2474 ;;		line 17 in file "SETLCD.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  C               1    wreg     unsigned char 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  C               1    2[COMMON] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         1       0       0       0       0
  2490 ;;      Temps:          2       0       0       0       0
  2491 ;;      Totals:         3       0       0       0       0
  2492 ;;Total ram usage:        3 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    1
  2495 ;; This function calls:
  2496 ;;		_LCD_TIM
  2497 ;; This function is called by:
  2498 ;;		_LCD_IN
  2499 ;;		_LCD_CL
  2500 ;;		_LCD_POINT
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _LCD_ON
  2506  031D                     _LCD_ON:
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  2510                           ;LCD_ON@C stored from wreg
  2511  031D  00F2               	movwf	LCD_ON@C
  2512  031E                     l1243:
  2513                           
  2514                           ;SETLCD.c: 18:     PORTDbits.RD6=0;
  2515  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2516  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0320  1308               	bcf	8,6	;volatile
  2518  0321                     l1245:
  2519                           
  2520                           ;SETLCD.c: 19:     PORTB=C;
  2521  0321  0872               	movf	LCD_ON@C,w
  2522  0322  0086               	movwf	6	;volatile
  2523  0323                     l1247:
  2524                           
  2525                           ;SETLCD.c: 20:     LCD_TIM();
  2526  0323  120A  118A  22EA  120A  118A  	fcall	_LCD_TIM
  2527  0328                     l1249:
  2528                           
  2529                           ;SETLCD.c: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2530  0328  3003               	movlw	3
  2531  0329  00F1               	movwf	??_LCD_ON+1
  2532  032A  3097               	movlw	151
  2533  032B  00F0               	movwf	??_LCD_ON
  2534  032C                     u457:
  2535  032C  0BF0               	decfsz	??_LCD_ON,f
  2536  032D  2B2C               	goto	u457
  2537  032E  0BF1               	decfsz	??_LCD_ON+1,f
  2538  032F  2B2C               	goto	u457
  2539  0330  2B31               	nop2
  2540  0331                     l192:
  2541  0331  0008               	return
  2542  0332                     __end_of_LCD_ON:
  2543                           
  2544                           	psect	text13
  2545  02EA                     __ptext13:	
  2546 ;; *************** function _LCD_TIM *****************
  2547 ;; Defined at:
  2548 ;;		line 23 in file "SETLCD.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		None
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_LCD_ON
  2572 ;;		_LCD_PLAY
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _LCD_TIM
  2578  02EA                     _LCD_TIM:
  2579  02EA                     l1233:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _LCD_TIM: []
  2582                           
  2583                           
  2584                           ;SETLCD.c: 24:     PORTDbits.RD7 = 1;
  2585  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2586  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2587  02EC  1788               	bsf	8,7	;volatile
  2588                           
  2589                           ;SETLCD.c: 25:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2590  02ED  2AEE               	nop2	;2 cycle nop
  2591  02EE  2AEF               	nop2	;2 cycle nop
  2592  02EF  0000               	nop
  2593                           
  2594                           ;SETLCD.c: 26:     PORTDbits.RD7 = 0;
  2595  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2596  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2597  02F2  1388               	bcf	8,7	;volatile
  2598                           
  2599                           ;SETLCD.c: 27:     _delay((unsigned long)((5)*(4000000/4000000.0)));}
  2600  02F3  2AF4               	nop2	;2 cycle nop
  2601  02F4  2AF5               	nop2	;2 cycle nop
  2602  02F5  0000               	nop
  2603  02F6                     l195:
  2604  02F6  0008               	return
  2605  02F7                     __end_of_LCD_TIM:
  2606                           
  2607                           	psect	text14
  2608  03F5                     __ptext14:	
  2609 ;; *************** function _CONVET_cont *****************
  2610 ;; Defined at:
  2611 ;;		line 153 in file "master.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, pclath, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0
  2627 ;;      Temps:          0       4       0       0       0
  2628 ;;      Totals:         0       4       0       0       0
  2629 ;;Total ram usage:        4 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    1
  2632 ;; This function calls:
  2633 ;;		___awdiv
  2634 ;;		___bmul
  2635 ;;		___wmul
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _CONVET_cont
  2643  03F5                     _CONVET_cont:
  2644  03F5                     l1405:	
  2645                           ;incstack = 0
  2646                           ; Regs used in _CONVET_cont: [wreg+status,2+status,0+pclath+cstack]
  2647                           
  2648                           
  2649                           ;master.c: 154:     cont_1=(cont/100);
  2650  03F5  3064               	movlw	100
  2651  03F6  00F6               	movwf	___awdiv@divisor
  2652  03F7  3000               	movlw	0
  2653  03F8  00F7               	movwf	___awdiv@divisor+1
  2654  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2655  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2656  03FB  0826               	movf	_cont,w
  2657  03FC  00B8               	movwf	??_CONVET_cont
  2658  03FD  01B9               	clrf	??_CONVET_cont+1
  2659  03FE  0838               	movf	??_CONVET_cont,w
  2660  03FF  00F8               	movwf	___awdiv@dividend
  2661  0400  0839               	movf	??_CONVET_cont+1,w
  2662  0401  00F9               	movwf	___awdiv@dividend+1
  2663  0402  120A  118A  2454  120A  118A  	fcall	___awdiv
  2664  0407  0876               	movf	?___awdiv,w
  2665  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2667  040A  00BA               	movwf	??_CONVET_cont+2
  2668  040B  083A               	movf	??_CONVET_cont+2,w
  2669  040C  00A9               	movwf	_cont_1
  2670                           
  2671                           ;master.c: 155:     cont_2=((cont)-(cont_1*100))/10;
  2672  040D  300A               	movlw	10
  2673  040E  00F6               	movwf	___awdiv@divisor
  2674  040F  3000               	movlw	0
  2675  0410  00F7               	movwf	___awdiv@divisor+1
  2676  0411  0829               	movf	_cont_1,w
  2677  0412  00B8               	movwf	??_CONVET_cont
  2678  0413  01B9               	clrf	??_CONVET_cont+1
  2679  0414  0838               	movf	??_CONVET_cont,w
  2680  0415  00F0               	movwf	___wmul@multiplier
  2681  0416  0839               	movf	??_CONVET_cont+1,w
  2682  0417  00F1               	movwf	___wmul@multiplier+1
  2683  0418  309C               	movlw	156
  2684  0419  00F2               	movwf	___wmul@multiplicand
  2685  041A  30FF               	movlw	255
  2686  041B  00F3               	movwf	___wmul@multiplicand+1
  2687  041C  120A  118A  237D  120A  118A  	fcall	___wmul
  2688  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0423  0826               	movf	_cont,w
  2691  0424  0770               	addwf	?___wmul,w
  2692  0425  00F8               	movwf	___awdiv@dividend
  2693  0426  0871               	movf	?___wmul+1,w
  2694  0427  1803               	skipnc
  2695  0428  0A71               	incf	?___wmul+1,w
  2696  0429  00F9               	movwf	___awdiv@dividend+1
  2697  042A  120A  118A  2454  120A  118A  	fcall	___awdiv
  2698  042F  0876               	movf	?___awdiv,w
  2699  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0432  00BA               	movwf	??_CONVET_cont+2
  2702  0433  083A               	movf	??_CONVET_cont+2,w
  2703  0434  00A8               	movwf	_cont_2
  2704                           
  2705                           ;master.c: 156:     cont_3=((cont)-(cont_1*100)-(cont_2*10));
  2706  0435  309C               	movlw	156
  2707  0436  00B8               	movwf	??_CONVET_cont
  2708  0437  0838               	movf	??_CONVET_cont,w
  2709  0438  00F0               	movwf	___bmul@multiplicand
  2710  0439  0829               	movf	_cont_1,w
  2711  043A  120A  118A  2308  120A  118A  	fcall	___bmul
  2712  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0441  00B9               	movwf	??_CONVET_cont+1
  2715  0442  30F6               	movlw	246
  2716  0443  00BA               	movwf	??_CONVET_cont+2
  2717  0444  083A               	movf	??_CONVET_cont+2,w
  2718  0445  00F0               	movwf	___bmul@multiplicand
  2719  0446  0828               	movf	_cont_2,w
  2720  0447  120A  118A  2308  120A  118A  	fcall	___bmul
  2721  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2722  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2723  044E  0739               	addwf	??_CONVET_cont+1,w
  2724  044F  0726               	addwf	_cont,w
  2725  0450  00BB               	movwf	??_CONVET_cont+3
  2726  0451  083B               	movf	??_CONVET_cont+3,w
  2727  0452  00A7               	movwf	_cont_3
  2728  0453                     l117:
  2729  0453  0008               	return
  2730  0454                     __end_of_CONVET_cont:
  2731                           
  2732                           	psect	text15
  2733  04BD                     __ptext15:	
  2734 ;; *************** function _CONV *****************
  2735 ;; Defined at:
  2736 ;;		line 142 in file "master.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       0       0       0       0
  2751 ;;      Locals:         2       0       0       0       0
  2752 ;;      Temps:          0       8       0       0       0
  2753 ;;      Totals:         2       8       0       0       0
  2754 ;;Total ram usage:       10 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    1
  2757 ;; This function calls:
  2758 ;;		___awdiv
  2759 ;;		___bmul
  2760 ;;		___wmul
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function _CONV
  2768  04BD                     _CONV:
  2769  04BD                     l1451:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _CONV: [wreg+status,2+status,0+pclath+cstack]
  2772                           
  2773                           
  2774                           ;master.c: 144:     POT1_U=(L/51);
  2775  04BD  3033               	movlw	51
  2776  04BE  00F6               	movwf	___awdiv@divisor
  2777  04BF  3000               	movlw	0
  2778  04C0  00F7               	movwf	___awdiv@divisor+1
  2779  04C1  087D               	movf	_L,w
  2780  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2781  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2782  04C4  00B8               	movwf	??_CONV
  2783  04C5  01B9               	clrf	??_CONV+1
  2784  04C6  0838               	movf	??_CONV,w
  2785  04C7  00F8               	movwf	___awdiv@dividend
  2786  04C8  0839               	movf	??_CONV+1,w
  2787  04C9  00F9               	movwf	___awdiv@dividend+1
  2788  04CA  120A  118A  2454  120A  118A  	fcall	___awdiv
  2789  04CF  0876               	movf	?___awdiv,w
  2790  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2791  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2792  04D2  00BA               	movwf	??_CONV+2
  2793  04D3  083A               	movf	??_CONV+2,w
  2794  04D4  00B0               	movwf	_POT1_U
  2795                           
  2796                           ;master.c: 145:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  2797  04D5  3033               	movlw	51
  2798  04D6  00F6               	movwf	___awdiv@divisor
  2799  04D7  3000               	movlw	0
  2800  04D8  00F7               	movwf	___awdiv@divisor+1
  2801  04D9  087D               	movf	_L,w
  2802  04DA  00B8               	movwf	??_CONV
  2803  04DB  01B9               	clrf	??_CONV+1
  2804  04DC  0838               	movf	??_CONV,w
  2805  04DD  00F0               	movwf	___wmul@multiplier
  2806  04DE  0839               	movf	??_CONV+1,w
  2807  04DF  00F1               	movwf	___wmul@multiplier+1
  2808  04E0  3064               	movlw	100
  2809  04E1  00F2               	movwf	___wmul@multiplicand
  2810  04E2  3000               	movlw	0
  2811  04E3  00F3               	movwf	___wmul@multiplicand+1
  2812  04E4  120A  118A  237D  120A  118A  	fcall	___wmul
  2813  04E9  0871               	movf	?___wmul+1,w
  2814  04EA  00F9               	movwf	___awdiv@dividend+1
  2815  04EB  0870               	movf	?___wmul,w
  2816  04EC  00F8               	movwf	___awdiv@dividend
  2817  04ED  120A  118A  2454  120A  118A  	fcall	___awdiv
  2818  04F2  0876               	movf	?___awdiv,w
  2819  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2820  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2821  04F5  00BA               	movwf	??_CONV+2
  2822  04F6  0877               	movf	?___awdiv+1,w
  2823  04F7  00BB               	movwf	??_CONV+3
  2824  04F8  0830               	movf	_POT1_U,w
  2825  04F9  00BC               	movwf	??_CONV+4
  2826  04FA  01BD               	clrf	??_CONV+5
  2827  04FB  083C               	movf	??_CONV+4,w
  2828  04FC  00F0               	movwf	___wmul@multiplier
  2829  04FD  083D               	movf	??_CONV+5,w
  2830  04FE  00F1               	movwf	___wmul@multiplier+1
  2831  04FF  309C               	movlw	156
  2832  0500  00F2               	movwf	___wmul@multiplicand
  2833  0501  30FF               	movlw	255
  2834  0502  00F3               	movwf	___wmul@multiplicand+1
  2835  0503  120A  118A  237D  120A  118A  	fcall	___wmul
  2836  0508  0870               	movf	?___wmul,w
  2837  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2838  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2839  050B  073A               	addwf	??_CONV+2,w
  2840  050C  00FB               	movwf	_CONV$1189
  2841  050D  0871               	movf	?___wmul+1,w
  2842  050E  1803               	skipnc
  2843  050F  0A71               	incf	?___wmul+1,w
  2844  0510  073B               	addwf	??_CONV+3,w
  2845  0511  00FC               	movwf	_CONV$1189+1
  2846                           
  2847                           ;master.c: 145:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  2848  0512  300A               	movlw	10
  2849  0513  00F6               	movwf	___awdiv@divisor
  2850  0514  3000               	movlw	0
  2851  0515  00F7               	movwf	___awdiv@divisor+1
  2852  0516  087C               	movf	_CONV$1189+1,w
  2853  0517  00F9               	movwf	___awdiv@dividend+1
  2854  0518  087B               	movf	_CONV$1189,w
  2855  0519  00F8               	movwf	___awdiv@dividend
  2856  051A  120A  118A  2454  120A  118A  	fcall	___awdiv
  2857  051F  0876               	movf	?___awdiv,w
  2858  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0522  00B8               	movwf	??_CONV
  2861  0523  0838               	movf	??_CONV,w
  2862  0524  00AE               	movwf	_POT1_T
  2863                           
  2864                           ;master.c: 146:     POT1_H=((L*100/51)-(POT1_U*100)-(POT1_T*10));
  2865  0525  3033               	movlw	51
  2866  0526  00F6               	movwf	___awdiv@divisor
  2867  0527  3000               	movlw	0
  2868  0528  00F7               	movwf	___awdiv@divisor+1
  2869  0529  087D               	movf	_L,w
  2870  052A  00B8               	movwf	??_CONV
  2871  052B  01B9               	clrf	??_CONV+1
  2872  052C  0838               	movf	??_CONV,w
  2873  052D  00F0               	movwf	___wmul@multiplier
  2874  052E  0839               	movf	??_CONV+1,w
  2875  052F  00F1               	movwf	___wmul@multiplier+1
  2876  0530  3064               	movlw	100
  2877  0531  00F2               	movwf	___wmul@multiplicand
  2878  0532  3000               	movlw	0
  2879  0533  00F3               	movwf	___wmul@multiplicand+1
  2880  0534  120A  118A  237D  120A  118A  	fcall	___wmul
  2881  0539  0871               	movf	?___wmul+1,w
  2882  053A  00F9               	movwf	___awdiv@dividend+1
  2883  053B  0870               	movf	?___wmul,w
  2884  053C  00F8               	movwf	___awdiv@dividend
  2885  053D  120A  118A  2454  120A  118A  	fcall	___awdiv
  2886  0542  0876               	movf	?___awdiv,w
  2887  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0545  00BA               	movwf	??_CONV+2
  2890  0546  0877               	movf	?___awdiv+1,w
  2891  0547  00BB               	movwf	??_CONV+3
  2892  0548  309C               	movlw	156
  2893  0549  00BC               	movwf	??_CONV+4
  2894  054A  083C               	movf	??_CONV+4,w
  2895  054B  00F0               	movwf	___bmul@multiplicand
  2896  054C  0830               	movf	_POT1_U,w
  2897  054D  120A  118A  2308  120A  118A  	fcall	___bmul
  2898  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0554  00BD               	movwf	??_CONV+5
  2901  0555  30F6               	movlw	246
  2902  0556  00BE               	movwf	??_CONV+6
  2903  0557  083E               	movf	??_CONV+6,w
  2904  0558  00F0               	movwf	___bmul@multiplicand
  2905  0559  082E               	movf	_POT1_T,w
  2906  055A  120A  118A  2308  120A  118A  	fcall	___bmul
  2907  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0561  073D               	addwf	??_CONV+5,w
  2910  0562  073A               	addwf	??_CONV+2,w
  2911  0563  00BF               	movwf	??_CONV+7
  2912  0564  083F               	movf	??_CONV+7,w
  2913  0565  00AF               	movwf	_POT1_H
  2914  0566                     l111:
  2915  0566  0008               	return
  2916  0567                     __end_of_CONV:
  2917                           
  2918                           	psect	text16
  2919  037D                     __ptext16:	
  2920 ;; *************** function ___wmul *****************
  2921 ;; Defined at:
  2922 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  multiplier      2    0[COMMON] unsigned int 
  2925 ;;  multiplicand    2    2[COMMON] unsigned int 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  product         2    4[COMMON] unsigned int 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  2    0[COMMON] unsigned int 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         4       0       0       0       0
  2938 ;;      Locals:         2       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0
  2940 ;;      Totals:         6       0       0       0       0
  2941 ;;Total ram usage:        6 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_CONV
  2947 ;;		_CONVET_cont
  2948 ;;		_CONT
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           
  2953                           ;psect for function ___wmul
  2954  037D                     ___wmul:
  2955  037D                     l1281:	
  2956                           ;incstack = 0
  2957                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2958                           
  2959  037D  01F4               	clrf	___wmul@product
  2960  037E  01F5               	clrf	___wmul@product+1
  2961  037F                     l1283:
  2962  037F  1C70               	btfss	___wmul@multiplier,0
  2963  0380  2B82               	goto	u221
  2964  0381  2B83               	goto	u220
  2965  0382                     u221:
  2966  0382  2B89               	goto	l339
  2967  0383                     u220:
  2968  0383                     l1285:
  2969  0383  0872               	movf	___wmul@multiplicand,w
  2970  0384  07F4               	addwf	___wmul@product,f
  2971  0385  1803               	skipnc
  2972  0386  0AF5               	incf	___wmul@product+1,f
  2973  0387  0873               	movf	___wmul@multiplicand+1,w
  2974  0388  07F5               	addwf	___wmul@product+1,f
  2975  0389                     l339:
  2976  0389  3001               	movlw	1
  2977  038A                     u235:
  2978  038A  1003               	clrc
  2979  038B  0DF2               	rlf	___wmul@multiplicand,f
  2980  038C  0DF3               	rlf	___wmul@multiplicand+1,f
  2981  038D  3EFF               	addlw	-1
  2982  038E  1D03               	skipz
  2983  038F  2B8A               	goto	u235
  2984  0390                     l1287:
  2985  0390  3001               	movlw	1
  2986  0391                     u245:
  2987  0391  1003               	clrc
  2988  0392  0CF1               	rrf	___wmul@multiplier+1,f
  2989  0393  0CF0               	rrf	___wmul@multiplier,f
  2990  0394  3EFF               	addlw	-1
  2991  0395  1D03               	skipz
  2992  0396  2B91               	goto	u245
  2993  0397                     l1289:
  2994  0397  0870               	movf	___wmul@multiplier,w
  2995  0398  0471               	iorwf	___wmul@multiplier+1,w
  2996  0399  1D03               	btfss	3,2
  2997  039A  2B9C               	goto	u251
  2998  039B  2B9D               	goto	u250
  2999  039C                     u251:
  3000  039C  2B7F               	goto	l1283
  3001  039D                     u250:
  3002  039D                     l1291:
  3003  039D  0875               	movf	___wmul@product+1,w
  3004  039E  00F1               	movwf	?___wmul+1
  3005  039F  0874               	movf	___wmul@product,w
  3006  03A0  00F0               	movwf	?___wmul
  3007  03A1                     l341:
  3008  03A1  0008               	return
  3009  03A2                     __end_of___wmul:
  3010                           
  3011                           	psect	text17
  3012  0308                     __ptext17:	
  3013 ;; *************** function ___bmul *****************
  3014 ;; Defined at:
  3015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  multiplier      1    wreg     unsigned char 
  3018 ;;  multiplicand    1    0[COMMON] unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  multiplier      1    3[COMMON] unsigned char 
  3021 ;;  product         1    2[COMMON] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      unsigned char 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         1       0       0       0       0
  3032 ;;      Locals:         2       0       0       0       0
  3033 ;;      Temps:          1       0       0       0       0
  3034 ;;      Totals:         4       0       0       0       0
  3035 ;;Total ram usage:        4 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_CONV
  3041 ;;		_CONVET_cont
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function ___bmul
  3047  0308                     ___bmul:
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3051                           ;___bmul@multiplier stored from wreg
  3052  0308  00F3               	movwf	___bmul@multiplier
  3053  0309                     l1295:
  3054  0309  01F2               	clrf	___bmul@product
  3055  030A                     l1297:
  3056  030A  1C73               	btfss	___bmul@multiplier,0
  3057  030B  2B0D               	goto	u261
  3058  030C  2B0E               	goto	u260
  3059  030D                     u261:
  3060  030D  2B12               	goto	l1301
  3061  030E                     u260:
  3062  030E                     l1299:
  3063  030E  0870               	movf	___bmul@multiplicand,w
  3064  030F  00F1               	movwf	??___bmul
  3065  0310  0871               	movf	??___bmul,w
  3066  0311  07F2               	addwf	___bmul@product,f
  3067  0312                     l1301:
  3068  0312  1003               	clrc
  3069  0313  0DF0               	rlf	___bmul@multiplicand,f
  3070  0314                     l1303:
  3071  0314  1003               	clrc
  3072  0315  0CF3               	rrf	___bmul@multiplier,f
  3073  0316  0873               	movf	___bmul@multiplier,w
  3074  0317  1D03               	btfss	3,2
  3075  0318  2B1A               	goto	u271
  3076  0319  2B1B               	goto	u270
  3077  031A                     u271:
  3078  031A  2B0A               	goto	l1297
  3079  031B                     u270:
  3080  031B                     l1305:
  3081  031B  0872               	movf	___bmul@product,w
  3082  031C                     l365:
  3083  031C  0008               	return
  3084  031D                     __end_of___bmul:
  3085                           
  3086                           	psect	text18
  3087  0454                     __ptext18:	
  3088 ;; *************** function ___awdiv *****************
  3089 ;; Defined at:
  3090 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  divisor         2    6[COMMON] int 
  3093 ;;  dividend        2    8[COMMON] int 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  quotient        2    2[BANK0 ] int 
  3096 ;;  sign            1    1[BANK0 ] unsigned char 
  3097 ;;  counter         1    0[BANK0 ] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2    6[COMMON] int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         4       0       0       0       0
  3108 ;;      Locals:         0       4       0       0       0
  3109 ;;      Temps:          1       0       0       0       0
  3110 ;;      Totals:         5       4       0       0       0
  3111 ;;Total ram usage:        9 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_CONV
  3117 ;;		_CONVET_cont
  3118 ;;		_CONT
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function ___awdiv
  3124  0454                     ___awdiv:
  3125  0454                     l1309:	
  3126                           ;incstack = 0
  3127                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3128                           
  3129  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0456  01B5               	clrf	___awdiv@sign
  3132  0457                     l1311:
  3133  0457  1FF7               	btfss	___awdiv@divisor+1,7
  3134  0458  2C5A               	goto	u281
  3135  0459  2C5B               	goto	u280
  3136  045A                     u281:
  3137  045A  2C62               	goto	l1317
  3138  045B                     u280:
  3139  045B                     l1313:
  3140  045B  09F6               	comf	___awdiv@divisor,f
  3141  045C  09F7               	comf	___awdiv@divisor+1,f
  3142  045D  0AF6               	incf	___awdiv@divisor,f
  3143  045E  1903               	skipnz
  3144  045F  0AF7               	incf	___awdiv@divisor+1,f
  3145  0460                     l1315:
  3146  0460  01B5               	clrf	___awdiv@sign
  3147  0461  0AB5               	incf	___awdiv@sign,f
  3148  0462                     l1317:
  3149  0462  1FF9               	btfss	___awdiv@dividend+1,7
  3150  0463  2C65               	goto	u291
  3151  0464  2C66               	goto	u290
  3152  0465                     u291:
  3153  0465  2C6F               	goto	l1323
  3154  0466                     u290:
  3155  0466                     l1319:
  3156  0466  09F8               	comf	___awdiv@dividend,f
  3157  0467  09F9               	comf	___awdiv@dividend+1,f
  3158  0468  0AF8               	incf	___awdiv@dividend,f
  3159  0469  1903               	skipnz
  3160  046A  0AF9               	incf	___awdiv@dividend+1,f
  3161  046B                     l1321:
  3162  046B  3001               	movlw	1
  3163  046C  00FA               	movwf	??___awdiv
  3164  046D  087A               	movf	??___awdiv,w
  3165  046E  06B5               	xorwf	___awdiv@sign,f
  3166  046F                     l1323:
  3167  046F  01B6               	clrf	___awdiv@quotient
  3168  0470  01B7               	clrf	___awdiv@quotient+1
  3169  0471                     l1325:
  3170  0471  0876               	movf	___awdiv@divisor,w
  3171  0472  0477               	iorwf	___awdiv@divisor+1,w
  3172  0473  1903               	btfsc	3,2
  3173  0474  2C76               	goto	u301
  3174  0475  2C77               	goto	u300
  3175  0476                     u301:
  3176  0476  2CAE               	goto	l1345
  3177  0477                     u300:
  3178  0477                     l1327:
  3179  0477  01B4               	clrf	___awdiv@counter
  3180  0478  0AB4               	incf	___awdiv@counter,f
  3181  0479  2C85               	goto	l1333
  3182  047A                     l1329:
  3183  047A  3001               	movlw	1
  3184  047B                     u315:
  3185  047B  1003               	clrc
  3186  047C  0DF6               	rlf	___awdiv@divisor,f
  3187  047D  0DF7               	rlf	___awdiv@divisor+1,f
  3188  047E  3EFF               	addlw	-1
  3189  047F  1D03               	skipz
  3190  0480  2C7B               	goto	u315
  3191  0481                     l1331:
  3192  0481  3001               	movlw	1
  3193  0482  00FA               	movwf	??___awdiv
  3194  0483  087A               	movf	??___awdiv,w
  3195  0484  07B4               	addwf	___awdiv@counter,f
  3196  0485                     l1333:
  3197  0485  1FF7               	btfss	___awdiv@divisor+1,7
  3198  0486  2C88               	goto	u321
  3199  0487  2C89               	goto	u320
  3200  0488                     u321:
  3201  0488  2C7A               	goto	l1329
  3202  0489                     u320:
  3203  0489                     l1335:
  3204  0489  3001               	movlw	1
  3205  048A                     u335:
  3206  048A  1003               	clrc
  3207  048B  0DB6               	rlf	___awdiv@quotient,f
  3208  048C  0DB7               	rlf	___awdiv@quotient+1,f
  3209  048D  3EFF               	addlw	-1
  3210  048E  1D03               	skipz
  3211  048F  2C8A               	goto	u335
  3212  0490  0877               	movf	___awdiv@divisor+1,w
  3213  0491  0279               	subwf	___awdiv@dividend+1,w
  3214  0492  1D03               	skipz
  3215  0493  2C96               	goto	u345
  3216  0494  0876               	movf	___awdiv@divisor,w
  3217  0495  0278               	subwf	___awdiv@dividend,w
  3218  0496                     u345:
  3219  0496  1C03               	skipc
  3220  0497  2C99               	goto	u341
  3221  0498  2C9A               	goto	u340
  3222  0499                     u341:
  3223  0499  2CA1               	goto	l1341
  3224  049A                     u340:
  3225  049A                     l1337:
  3226  049A  0876               	movf	___awdiv@divisor,w
  3227  049B  02F8               	subwf	___awdiv@dividend,f
  3228  049C  0877               	movf	___awdiv@divisor+1,w
  3229  049D  1C03               	skipc
  3230  049E  03F9               	decf	___awdiv@dividend+1,f
  3231  049F  02F9               	subwf	___awdiv@dividend+1,f
  3232  04A0                     l1339:
  3233  04A0  1436               	bsf	___awdiv@quotient,0
  3234  04A1                     l1341:
  3235  04A1  3001               	movlw	1
  3236  04A2                     u355:
  3237  04A2  1003               	clrc
  3238  04A3  0CF7               	rrf	___awdiv@divisor+1,f
  3239  04A4  0CF6               	rrf	___awdiv@divisor,f
  3240  04A5  3EFF               	addlw	-1
  3241  04A6  1D03               	skipz
  3242  04A7  2CA2               	goto	u355
  3243  04A8                     l1343:
  3244  04A8  3001               	movlw	1
  3245  04A9  02B4               	subwf	___awdiv@counter,f
  3246  04AA  1D03               	btfss	3,2
  3247  04AB  2CAD               	goto	u361
  3248  04AC  2CAE               	goto	u360
  3249  04AD                     u361:
  3250  04AD  2C89               	goto	l1335
  3251  04AE                     u360:
  3252  04AE                     l1345:
  3253  04AE  0835               	movf	___awdiv@sign,w
  3254  04AF  1903               	btfsc	3,2
  3255  04B0  2CB2               	goto	u371
  3256  04B1  2CB3               	goto	u370
  3257  04B2                     u371:
  3258  04B2  2CB8               	goto	l1349
  3259  04B3                     u370:
  3260  04B3                     l1347:
  3261  04B3  09B6               	comf	___awdiv@quotient,f
  3262  04B4  09B7               	comf	___awdiv@quotient+1,f
  3263  04B5  0AB6               	incf	___awdiv@quotient,f
  3264  04B6  1903               	skipnz
  3265  04B7  0AB7               	incf	___awdiv@quotient+1,f
  3266  04B8                     l1349:
  3267  04B8  0837               	movf	___awdiv@quotient+1,w
  3268  04B9  00F7               	movwf	?___awdiv+1
  3269  04BA  0836               	movf	___awdiv@quotient,w
  3270  04BB  00F6               	movwf	?___awdiv
  3271  04BC                     l492:
  3272  04BC  0008               	return
  3273  04BD                     __end_of___awdiv:
  3274  007E                     btemp	set	126	;btemp
  3275  007E                     wtemp0	set	126
  3276                           
  3277                           	psect	config
  3278                           
  3279                           ;Config register CONFIG1 @ 0x2007
  3280                           ;	Oscillator Selection bits
  3281                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3282                           ;	Watchdog Timer Enable bit
  3283                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3284                           ;	Power-up Timer Enable bit
  3285                           ;	PWRTE = OFF, PWRT disabled
  3286                           ;	RE3/MCLR pin function select bit
  3287                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3288                           ;	Code Protection bit
  3289                           ;	CP = OFF, Program memory code protection is disabled
  3290                           ;	Data Code Protection bit
  3291                           ;	CPD = OFF, Data memory code protection is disabled
  3292                           ;	Brown Out Reset Selection bits
  3293                           ;	BOREN = OFF, BOR disabled
  3294                           ;	Internal External Switchover bit
  3295                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3296                           ;	Fail-Safe Clock Monitor Enabled bit
  3297                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3298                           ;	Low Voltage Programming Enable bit
  3299                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3300                           ;	In-Circuit Debugger Mode bit
  3301                           ;	DEBUG = 0x1, unprogrammed default
  3302  2007                     	org	8199
  3303  2007  20D4               	dw	8404
  3304                           
  3305                           ;Config register CONFIG2 @ 0x2008
  3306                           ;	Brown-out Reset Selection bit
  3307                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3308                           ;	Flash Program Memory Self Write Enable bits
  3309                           ;	WRT = OFF, Write protection off
  3310  2008                     	org	8200
  3311  2008  3FFF               	dw	16383

Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     14      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_POINT@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 

    LCD_P@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_CONV
    _LCD_IN->_LCD_ON
    _LCD_CL->_LCD_ON
    _LCDVAL1->_LCD_POINT
    _LCD_POINT->_LCD_P
    _LCD_P->_LCD_PLAY
    _CONVET_cont->___awdiv
    _CONV->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_CONV
    _CONVET_cont->___awdiv
    _CONV->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16671
                                             12 BANK0      2     2      0
                               _CONV
                        _CONVET_cont
                            _LCDVAL1
                             _LCD_CL
                             _LCD_IN
                          _LCD_POINT
                              _Setup
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_IN                                               2     2      0      22
                                              3 COMMON     2     2      0
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCD_CL                                               0     0      0      22
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCDVAL1                                              5     1      4    5821
                                             11 COMMON     1     1      0
                                              0 BANK0      4     0      4
                          _LCD_POINT
 ---------------------------------------------------------------------------------
 (1) _LCD_POINT                                            7     2      5    4361
                                              4 COMMON     7     2      5
                             _LCD_ON
                              _LCD_P
 ---------------------------------------------------------------------------------
 (2) _LCD_P                                                2     2      0     100
                                              2 COMMON     2     2      0
                           _LCD_PLAY
 ---------------------------------------------------------------------------------
 (3) _LCD_PLAY                                             2     2      0      22
                                              0 COMMON     2     2      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               3     3      0      22
                                              0 COMMON     3     3      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (4) _LCD_TIM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVET_cont                                          4     4      0    3020
                                              4 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _CONV                                                10    10      0    3043
                                             11 COMMON     2     2      0
                                              4 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     988
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     396
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1636
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONV
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _CONVET_cont
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _LCDVAL1
     _LCD_POINT
       _LCD_ON
         _LCD_TIM
       _LCD_P
         _LCD_PLAY
           _LCD_TIM
   _LCD_CL
     _LCD_ON
       _LCD_TIM
   _LCD_IN
     _LCD_ON
       _LCD_TIM
   _LCD_POINT
     _LCD_ON
       _LCD_TIM
     _LCD_P
       _LCD_PLAY
         _LCD_TIM
   _Setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 19:01:16 2021

                      _L 007D                        _Z 0032                        _l 0033  
                      _z 0031                        pc 0002           ___bmul@product 0072  
            _SSPSTATbits 0094                       l99 059A             ___awdiv@sign 0035  
                     fsr 0004      ___wmul@multiplicand 0072                      l101 05FF  
                    l102 066F                      l111 0566                      l201 02D1  
                    l108 0347                      l117 0453                      l207 037C  
                    l215 03C8                      l161 02D8                      l154 0358  
                    l155 035D                      l172 02E9                      l164 02CA  
                    l341 03A1                      l237 07F1                      l158 02D2  
                    l192 0331                      l339 0389                      l195 02F6  
                    l365 031C                      l189 03F4                      l198 0307  
                    l492 04BC                      u200 037C                      u201 037B  
                    u210 02D8                      u211 02D7                      u300 0477  
                    u220 0383                      u301 0476                      u221 0382  
                    u320 0489                      u321 0488                      u250 039D  
                    u315 047B                      u251 039C                      u235 038A  
                    u340 049A                      u260 030E                      u341 0499  
                    u261 030D                      u245 0391                      u270 031B  
                    u335 048A                      u271 031A                      u407 05BE  
                    u360 04AE                      u280 045B                      u361 04AD  
                    u345 0496                      u281 045A                      u417 060C  
                    u370 04B3                      u290 0466                      u371 04B2  
                    u355 04A2                      u291 0465                      u427 0625  
                    u380 0350                      u437 03D7                      u381 034F  
                    u447 0304                      u457 032C                      u397 05A7  
                    fsr0 0004                      indf 0000             LCD_POINT@LOC 007A  
        __end_of_LCDVAL1 07F2          __end_of_LCD_TIM 02F7                     l1301 0312  
                   l1311 0457                     l1303 0314                     l1321 046B  
                   l1313 045B                     l1305 031B                     l1233 02EA  
                   l1241 0302                     l1401 02E6                     l1331 0481  
                   l1323 046F                     l1315 0460                     l1243 031E  
                   l1235 02F8                     l1251 035F                     l1411 0698  
                   l1341 04A1                     l1333 0485                     l1325 0471  
                   l1317 0462                     l1309 0454                     l1405 03F5  
                   l1245 0321                     l1237 02FB                     l1253 0360  
                   l1261 03A3                     l1421 06F2                     l1413 06AA  
                   l1343 04A8                     l1335 0489                     l1327 0477  
                   l1319 0466                     l1247 0323                     l1239 02FD  
                   l1255 036C                     l1263 03A9                     l1271 03BC  
                   l1431 074C                     l1423 0704                     l1415 06BC  
                   l1407 0685                     l1337 049A                     l1329 047A  
                   l1345 04AE                     l1281 037D                     l1249 0328  
                   l1257 0370                     l1273 03C2                     l1441 07A6  
                   l1433 075E                     l1425 0716                     l1417 06CE  
                   l1409 0686                     l1361 0357                     l1353 0349  
                   l1347 04B3                     l1339 04A0                     l1291 039D  
                   l1283 037F                     l1451 04BD                     l1259 03A2  
                   l1611 07BF                     l1435 0770                     l1427 0728  
                   l1419 06E0                     l1371 0344                     l1363 0332  
                   l1355 0350                     l1349 04B8                     l1285 0383  
                   l1613 03B4                     l1269 03AF                     l1437 0782  
                   l1429 073A                     l1445 07B8                     l1381 03CE  
                   l1373 0345                     l1365 033E                     l1357 0352  
                   l1461 05A3                     l1453 0567                     l1295 0309  
                   l1287 0390                     l1439 0794                     l1391 03E8  
                   l1383 03D1                     l1375 0346                     l1367 0340  
                   l1359 0354                     l1279 02D2                     l1471 05D4  
                   l1463 05AB                     l1455 0584                     l1297 030A  
                   l1289 0397                     l1393 03EE                     l1385 03D3  
                   l1377 03C9                     l1369 0343                     l1609 067A  
                   l1481 0610                     l1473 05E6                     l1465 05B5  
                   l1457 0596                     l1299 030E                     l1395 02CB  
                   l1387 03DC                     l1379 03CD                     l1491 064A  
                   l1483 061C                     l1475 05F8                     l1467 05BA  
                   l1459 059D                     l1389 03E2                     l1397 02C6  
                   l1493 065C                     l1485 0621                     l1477 0602  
                   l1469 05C2                     l1399 02E1                     l1487 0629  
                   l1479 0608                     l1489 063B                     l1499 0672  
                   STR_1 0009                     STR_2 0019                     STR_3 001B  
                   STR_4 001D                     STR_5 001F                     STR_6 0021  
                   STR_7 0023                     STR_8 0025                     STR_9 0027  
                   _CONV 04BD       __size_of_LCD_POINT 0027                     _cont 0026  
                   _main 0567                     btemp 007E                     start 0000  
      ___bmul@multiplier 0073         __end_of_LCD_PLAY 0308                    ?_CONV 0070  
                  ?_main 0070          __end_of___awdiv 04BD                    STR_10 0029  
                  STR_11 002B                    STR_12 002D                    STR_13 002F  
                  STR_14 0031                    STR_15 0033                    STR_16 0035  
                  STR_17 0037                    STR_18 0017                    _ANSEL 0188  
        ___awdiv@divisor 0076                    _LCD_P 035E          ___awdiv@counter 0034  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TEM_T 002C                    _TEM_U 002D                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _Setup 0332                    pclath 000A  
        __end_of_spiInit 035E          __end_of_spiRead 02EA                    status 0003  
                  wtemp0 007E             __end_of_CONV 0567          __initialization 07F2  
           __end_of_main 0685                   ??_CONV 0038        __end_of_LCD_POINT 03C9  
                 ??_main 0040                ??_LCDVAL1 007B                   ?_LCD_P 0070  
                 LCD_P@D 0073                ??_LCD_TIM 0070                   ?_Setup 0070  
       ___awdiv@dividend 0078                   _ANSELH 0189     __size_of_CONVET_cont 005F  
                 _LCD_CL 02CB                   _LCD_IN 03C9                   _LCD_ON 031D  
                 _POT1_H 002F                   _POT1_T 002E                   _POT1_U 0030  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   ___bmul 0308                   ___wmul 037D  
              ??___awdiv 007A                   _cont_1 0029                   _cont_2 0028  
                 _cont_3 0027         ___awdiv@quotient 0036         __end_of_spiWrite 02CB  
              ??_spiInit 0073                ??_spiRead 0070                ?_LCD_PLAY 0070  
__end_of__initialization 07FC                LCD_PLAY@D 0071            __end_of_LCD_P 037D  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070            __end_of_Setup 0348  
                ??_LCD_P 0072                  ??_Setup 0070                  ?_LCD_CL 0070  
             __pbssBANK0 0020                  ?_LCD_IN 0070                  ?_LCD_ON 0070  
                LCD_ON@C 0072               ??_LCD_PLAY 0070               __pmaintext 0567  
                ?___bmul 0070                  ?___wmul 0070  __size_of_spiReceiveWait 0007  
                _LCDVAL1 0685                  _LCD_TIM 02EA                  _TEM_TAS 002A  
                _TEM_UAS 002B                  _SSPSTAT 0094               __stringtab 0003  
        __size_of_LCD_CL 0007          __size_of_LCD_IN 002C          __size_of_LCD_ON 0015  
              ?_spiWrite 0070          __size_of___bmul 0015                _CONV$1189 007B  
                ___awdiv 0454          __size_of___wmul 0025                  __ptext1 02C5  
                __ptext2 02E1                  __ptext3 02D2                  __ptext4 0348  
                __ptext5 0332                  __ptext6 03C9                  __ptext7 02CB  
                __ptext8 0685                  __ptext9 03A2                _LCD_POINT 03A2  
                _spiInit 0348                  _spiRead 02E1                  clrloop0 02DA  
   end_of_initialization 07FC                _RCSTAbits 0018               ??_spiWrite 0070  
              _PORTDbits 0008                _PORTEbits 0009               ?_LCD_POINT 0074  
          ??_CONVET_cont 0038                _TRISDbits 0088              spiWrite@dat 0070  
             LCD_POINT@D 0078               LCD_POINT@x 0074               LCD_POINT@y 0076  
         __end_of_LCD_CL 02D2           __end_of_LCD_IN 03F5           __end_of_LCD_ON 0332  
              _TXSTAbits 0098        __size_of_LCD_PLAY 0011           _spiReceiveWait 02D2  
         __end_of___bmul 031D           __end_of___wmul 03A2              _BAUDCTLbits 0187  
    start_initialization 07F2                 ??_LCD_CL 0073                 ??_LCD_IN 0073  
               ??_LCD_ON 0070      __end_of_CONVET_cont 0454   __end_of_spiReceiveWait 02D9  
               ??___bmul 0071                 ??___wmul 0074                 LCDVAL1@Z 0036  
               LCDVAL1@x 0034                 ?_LCDVAL1 0034                 ?_LCD_TIM 0070  
            __pbssCOMMON 007D                ___latbits 0002              ??_LCD_POINT 0079  
          __pcstackBANK0 0034          ?_spiReceiveWait 0070                 ?___awdiv 0076  
      __size_of_spiWrite 0006                __pstrings 0003           __size_of_LCD_P 001F  
               ?_spiInit 0070                 ?_spiRead 0070              _CONVET_cont 03F5  
         __size_of_Setup 0016                 _LCD_PLAY 02F7     spiInit@sTransmitEdge 0072  
         ___wmul@product 0074                clear_ram0 02D9                 _PIE1bits 008C  
     spiInit@sDataSample 0070                 _POT1_Has 0021                 _POT1_Tas 0020  
               _POT1_Uas 0022              __stringbase 0008        ___wmul@multiplier 0070  
       __size_of_LCDVAL1 016D         __size_of_LCD_TIM 000D         __size_of___awdiv 0069  
     __end_of__stringtab 0009                 __ptext10 035E                 __ptext11 02F7  
               __ptext12 031D                 __ptext13 02EA                 __ptext14 03F5  
               __ptext15 04BD                 __ptext16 037D                 __ptext17 0308  
               __ptext18 0454         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _cont_1AS 0025                 _cont_2AS 0024                 _cont_3AS 0023  
          __size_of_CONV 00AA            __size_of_main 011E                 _spiWrite 02C5  
           spiInit@sType 0073        spiInit@sClockIdle 0071               _INTCONbits 000B  
       ??_spiReceiveWait 0070                stringcode 0003                 stringdir 0003  
               stringtab 0003             ?_CONVET_cont 0070  
