

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 01:58:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0000                     	;# 
   449  0001                     	;# 
   450  0002                     	;# 
   451  0003                     	;# 
   452  0004                     	;# 
   453  0005                     	;# 
   454  0006                     	;# 
   455  0007                     	;# 
   456  0008                     	;# 
   457  0009                     	;# 
   458  000A                     	;# 
   459  000B                     	;# 
   460  000C                     	;# 
   461  000D                     	;# 
   462  000E                     	;# 
   463  000E                     	;# 
   464  000F                     	;# 
   465  0010                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001D                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  0081                     	;# 
   484  0085                     	;# 
   485  0086                     	;# 
   486  0087                     	;# 
   487  0088                     	;# 
   488  0089                     	;# 
   489  008C                     	;# 
   490  008D                     	;# 
   491  008E                     	;# 
   492  008F                     	;# 
   493  0090                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0093                     	;# 
   498  0093                     	;# 
   499  0094                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  0105                     	;# 
   512  0107                     	;# 
   513  0108                     	;# 
   514  0109                     	;# 
   515  010C                     	;# 
   516  010C                     	;# 
   517  010D                     	;# 
   518  010E                     	;# 
   519  010F                     	;# 
   520  0185                     	;# 
   521  0187                     	;# 
   522  0188                     	;# 
   523  0189                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  0018                     _RCSTAbits	set	24
   527  0008                     _PORTDbits	set	8
   528  0013                     _SSPBUF	set	19
   529  0014                     _SSPCON	set	20
   530  000B                     _INTCONbits	set	11
   531  0009                     _PORTE	set	9
   532  0008                     _PORTD	set	8
   533  0007                     _PORTC	set	7
   534  0006                     _PORTB	set	6
   535  0005                     _PORTA	set	5
   536  0009                     _PORTEbits	set	9
   537  008C                     _PIE1bits	set	140
   538  0099                     _SPBRG	set	153
   539  0098                     _TXSTAbits	set	152
   540  0088                     _TRISDbits	set	136
   541  0094                     _SSPSTATbits	set	148
   542  0094                     _SSPSTAT	set	148
   543  0089                     _TRISE	set	137
   544  0088                     _TRISD	set	136
   545  0087                     _TRISC	set	135
   546  0086                     _TRISB	set	134
   547  0085                     _TRISA	set	133
   548  043B                     _TRISC3	set	1083
   549  043D                     _TRISC5	set	1085
   550  0187                     _BAUDCTLbits	set	391
   551  0189                     _ANSELH	set	393
   552  0188                     _ANSEL	set	392
   553                           
   554                           	psect	strings
   555  0003                     __pstrings:
   556  0003                     stringtab:
   557  0003                     __stringtab:
   558  0003                     stringcode:	
   559                           ;	String table - string pointers are 1 byte each
   560                           
   561  0003                     stringdir:
   562  0003  3000               	movlw	high stringdir
   563  0004  008A               	movwf	10
   564  0005  0804               	movf	4,w
   565  0006  0A84               	incf	4,f
   566  0007  0782               	addwf	2,f
   567  0008                     __stringbase:
   568  0008  3400               	retlw	0
   569  0009                     __end_of__stringtab:
   570  0009                     STR_1:
   571  0009  3441               	retlw	65	;'A'
   572  000A  3444               	retlw	68	;'D'
   573  000B  3443               	retlw	67	;'C'
   574  000C  3420               	retlw	32	;' '
   575  000D  3443               	retlw	67	;'C'
   576  000E  344F               	retlw	79	;'O'
   577  000F  344E               	retlw	78	;'N'
   578  0010  3454               	retlw	84	;'T'
   579  0011  3420               	retlw	32	;' '
   580  0012  3454               	retlw	84	;'T'
   581  0013  3445               	retlw	69	;'E'
   582  0014  344D               	retlw	77	;'M'
   583  0015  3450               	retlw	80	;'P'
   584  0016  3400               	retlw	0
   585  0017                     STR_18:
   586  0017  342E               	retlw	46	;'.'
   587  0018  3400               	retlw	0
   588  0019                     STR_2:
   589  0019  3430               	retlw	48	;'0'
   590  001A  3400               	retlw	0
   591  001B                     STR_3:
   592  001B  3431               	retlw	49	;'1'
   593  001C  3400               	retlw	0
   594  001D                     STR_4:
   595  001D  3432               	retlw	50	;'2'
   596  001E  3400               	retlw	0
   597  001F                     STR_5:
   598  001F  3433               	retlw	51	;'3'
   599  0020  3400               	retlw	0
   600  0021                     STR_6:
   601  0021  3434               	retlw	52	;'4'
   602  0022  3400               	retlw	0
   603  0023                     STR_7:
   604  0023  3435               	retlw	53	;'5'
   605  0024  3400               	retlw	0
   606  0025                     STR_8:
   607  0025  3436               	retlw	54	;'6'
   608  0026  3400               	retlw	0
   609  0027                     STR_9:
   610  0027  3437               	retlw	55	;'7'
   611  0028  3400               	retlw	0
   612  0029                     STR_10:
   613  0029  3438               	retlw	56	;'8'
   614  002A  3400               	retlw	0
   615  002B                     STR_11:
   616  002B  3439               	retlw	57	;'9'
   617  002C  3400               	retlw	0
   618  002D                     STR_12:
   619  002D  3441               	retlw	65	;'A'
   620  002E  3400               	retlw	0
   621  002F                     STR_13:
   622  002F  3442               	retlw	66	;'B'
   623  0030  3400               	retlw	0
   624  0031                     STR_14:
   625  0031  3443               	retlw	67	;'C'
   626  0032  3400               	retlw	0
   627  0033                     STR_15:
   628  0033  3444               	retlw	68	;'D'
   629  0034  3400               	retlw	0
   630  0035                     STR_16:
   631  0035  3445               	retlw	69	;'E'
   632  0036  3400               	retlw	0
   633  0037                     STR_17:
   634  0037  3446               	retlw	70	;'F'
   635  0038  3400               	retlw	0
   636                           
   637                           	psect	cinit
   638  07EE                     start_initialization:	
   639                           ; #config settings
   640                           
   641  07EE                     __initialization:
   642                           
   643                           ; Clear objects allocated to BANK0
   644  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   645  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   646  07F0  01A0               	clrf	__pbssBANK0& (0+127)
   647  07F1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   648  07F2  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   649  07F3  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   650  07F4  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   651  07F5  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   652  07F6  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   653  07F7  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   654  07F8  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   655  07F9  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   656  07FA  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   657  07FB  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   658  07FC                     end_of_initialization:	
   659                           ;End of C runtime variable initialization code
   660                           
   661  07FC                     __end_of__initialization:
   662  07FC  0183               	clrf	3
   663  07FD  120A  118A  2DF6   	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssBANK0
   666  0020                     __pbssBANK0:
   667  0020                     _cont:
   668  0020                     	ds	1
   669  0021                     _cont_3:
   670  0021                     	ds	1
   671  0022                     _cont_2:
   672  0022                     	ds	1
   673  0023                     _cont_1:
   674  0023                     	ds	1
   675  0024                     _TEM_T:
   676  0024                     	ds	1
   677  0025                     _TEM_U:
   678  0025                     	ds	1
   679  0026                     _POT1_T:
   680  0026                     	ds	1
   681  0027                     _POT1_H:
   682  0027                     	ds	1
   683  0028                     _POT1_U:
   684  0028                     	ds	1
   685  0029                     _Z:
   686  0029                     	ds	1
   687  002A                     _l:
   688  002A                     	ds	1
   689  002B                     _L:
   690  002B                     	ds	1
   691                           
   692                           	psect	cstackCOMMON
   693  0070                     __pcstackCOMMON:
   694  0070                     ?_spiInit:
   695  0070                     ?_Setup:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_Setup:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_LCD_IN:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_LCD_CL:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_spiWrite:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_spiWrite:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCD_ON:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ??_LCD_ON:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_LCD_TIM:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ??_LCD_TIM:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_main:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_LCD_PLAY:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ??_LCD_PLAY:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_LCD_P:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     spiInit@sDataSample:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     spiWrite@dat:	
   741                           ; 1 bytes @ 0x0
   742                           
   743                           
   744                           ; 1 bytes @ 0x0
   745  0070                     	ds	1
   746  0071                     spiInit@sClockIdle:
   747  0071                     LCD_PLAY@D:	
   748                           ; 1 bytes @ 0x1
   749                           
   750                           
   751                           ; 1 bytes @ 0x1
   752  0071                     	ds	1
   753  0072                     ??_LCD_P:
   754  0072                     spiInit@sTransmitEdge:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     LCD_ON@C:	
   758                           ; 1 bytes @ 0x2
   759                           
   760                           
   761                           ; 1 bytes @ 0x2
   762  0072                     	ds	1
   763  0073                     ??_spiInit:
   764  0073                     ??_LCD_IN:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0073                     ??_LCD_CL:	
   768                           ; 1 bytes @ 0x3
   769                           
   770  0073                     spiInit@sType:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     LCD_P@D:	
   774                           ; 1 bytes @ 0x3
   775                           
   776                           
   777                           ; 1 bytes @ 0x3
   778  0073                     	ds	1
   779  0074                     ?_LCD_POINT:
   780  0074                     LCD_POINT@x:	
   781                           ; 1 bytes @ 0x4
   782                           
   783                           
   784                           ; 2 bytes @ 0x4
   785  0074                     	ds	2
   786  0076                     LCD_POINT@y:
   787                           
   788                           ; 2 bytes @ 0x6
   789  0076                     	ds	2
   790  0078                     LCD_POINT@D:
   791                           
   792                           ; 1 bytes @ 0x8
   793  0078                     	ds	1
   794  0079                     ??_LCD_POINT:
   795                           
   796                           ; 1 bytes @ 0x9
   797  0079                     	ds	1
   798  007A                     LCD_POINT@LOC:
   799                           
   800                           ; 1 bytes @ 0xA
   801  007A                     	ds	1
   802  007B                     ??_LCDVAL1:
   803                           
   804                           ; 1 bytes @ 0xB
   805  007B                     	ds	1
   806  007C                     ??_main:
   807                           
   808                           ; 1 bytes @ 0xC
   809  007C                     	ds	2
   810                           
   811                           	psect	cstackBANK0
   812  002C                     __pcstackBANK0:
   813  002C                     ?_LCDVAL1:
   814  002C                     LCDVAL1@x:	
   815                           ; 1 bytes @ 0x0
   816                           
   817                           
   818                           ; 2 bytes @ 0x0
   819  002C                     	ds	2
   820  002E                     LCDVAL1@Z:
   821                           
   822                           ; 2 bytes @ 0x2
   823  002E                     	ds	2
   824                           
   825                           	psect	maintext
   826  05F6                     __pmaintext:	
   827 ;;
   828 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   829 ;;
   830 ;; *************** function _main *****************
   831 ;; Defined at:
   832 ;;		line 48 in file "master.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : B00/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0
   848 ;;      Temps:          2       0       0       0       0
   849 ;;      Totals:         2       0       0       0       0
   850 ;;Total ram usage:        2 bytes
   851 ;; Hardware stack levels required when called:    5
   852 ;; This function calls:
   853 ;;		_LCDVAL1
   854 ;;		_LCD_CL
   855 ;;		_LCD_IN
   856 ;;		_LCD_POINT
   857 ;;		_Setup
   858 ;;		_spiInit
   859 ;;		_spiWrite
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _main
   867  05F6                     _main:
   868  05F6                     l1250:	
   869                           ;incstack = 0
   870                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   871                           
   872                           
   873                           ;master.c: 49:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   874  05F6  01F0               	clrf	spiInit@sDataSample
   875  05F7  01F1               	clrf	spiInit@sClockIdle
   876  05F8  01F2               	clrf	spiInit@sTransmitEdge
   877  05F9  3020               	movlw	32
   878  05FA  120A  118A  2556  120A  118A  	fcall	_spiInit
   879                           
   880                           ;master.c: 50:     Setup();
   881  05FF  120A  118A  256C  120A  118A  	fcall	_Setup
   882                           
   883                           ;master.c: 51:     LCD_IN();
   884  0604  120A  118A  25CA  120A  118A  	fcall	_LCD_IN
   885                           
   886                           ;master.c: 52:     LCD_CL();
   887  0609  120A  118A  251C  120A  118A  	fcall	_LCD_CL
   888  060E                     l1252:
   889                           
   890                           ;master.c: 53:     LCD_POINT(0,1,"ADC CONT TEMP");
   891  060E  3000               	movlw	0
   892  060F  00F4               	movwf	LCD_POINT@x
   893  0610  00F5               	movwf	LCD_POINT@x+1
   894  0611  3001               	movlw	1
   895  0612  00F6               	movwf	LCD_POINT@y
   896  0613  3000               	movlw	0
   897  0614  00F7               	movwf	LCD_POINT@y+1
   898  0615  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   899  0616  00FC               	movwf	??_main
   900  0617  087C               	movf	??_main,w
   901  0618  00F8               	movwf	LCD_POINT@D
   902  0619  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
   903  061E                     l1254:
   904                           
   905                           ;master.c: 54:     Z=0;
   906  061E  1283               	bcf	3,5	;RP0=0, select bank0
   907  061F  1303               	bcf	3,6	;RP1=0, select bank0
   908  0620  01A9               	clrf	_Z
   909  0621  2E37               	goto	l1262
   910  0622                     l73:	
   911                           ;master.c: 61:             case 0:
   912                           
   913                           
   914                           ;master.c: 62:                 PORTEbits.RE0=0;
   915  0622  1009               	bcf	9,0	;volatile
   916                           
   917                           ;master.c: 63:                 PORTEbits.RE1=1;
   918  0623  1489               	bsf	9,1	;volatile
   919                           
   920                           ;master.c: 64:                 PORTEbits.RE2=1;
   921  0624  1509               	bsf	9,2	;volatile
   922  0625                     l1256:
   923                           
   924                           ;master.c: 65:                 spiWrite(cont);
   925  0625  3000               	movlw	0
   926  0626  120A  118A  2516  120A  118A  	fcall	_spiWrite
   927  062B                     l1258:
   928                           
   929                           ;master.c: 66:                 PORTA=cont;
   930  062B  1283               	bcf	3,5	;RP0=0, select bank0
   931  062C  1303               	bcf	3,6	;RP1=0, select bank0
   932  062D  0185               	clrf	5	;volatile
   933                           
   934                           ;master.c: 67:                 break;
   935  062E  2E49               	goto	l1264
   936  062F                     l75:	
   937                           ;master.c: 68:             case 1:
   938                           
   939                           
   940                           ;master.c: 69:                 PORTEbits.RE0=1;
   941  062F  1409               	bsf	9,0	;volatile
   942                           
   943                           ;master.c: 70:                 PORTEbits.RE1=0;
   944  0630  1089               	bcf	9,1	;volatile
   945                           
   946                           ;master.c: 71:                 PORTEbits.RE2=1;
   947  0631  1509               	bsf	9,2	;volatile
   948                           
   949                           ;master.c: 72:                 break;
   950  0632  2E49               	goto	l1264
   951  0633                     l76:	
   952                           ;master.c: 73:             default:
   953                           
   954                           
   955                           ;master.c: 74:                 PORTEbits.RE0=1;
   956  0633  1409               	bsf	9,0	;volatile
   957                           
   958                           ;master.c: 75:                 PORTEbits.RE1=1;
   959  0634  1489               	bsf	9,1	;volatile
   960                           
   961                           ;master.c: 76:                 PORTEbits.RE2=0;
   962  0635  1109               	bcf	9,2	;volatile
   963                           
   964                           ;master.c: 77:                 break;
   965  0636  2E49               	goto	l1264
   966  0637                     l1262:
   967  0637  1283               	bcf	3,5	;RP0=0, select bank0
   968  0638  1303               	bcf	3,6	;RP1=0, select bank0
   969  0639  0829               	movf	_Z,w
   970  063A  00FC               	movwf	??_main
   971  063B  01FD               	clrf	??_main+1
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ; direct_byte           11     8 (fixed)
   980                           ; jumptable            260     6 (fixed)
   981                           ;	Chosen strategy is simple_byte
   982  063C  087D               	movf	??_main+1,w
   983  063D  3A00               	xorlw	0	; case 0
   984  063E  1903               	skipnz
   985  063F  2E41               	goto	l1418
   986  0640  2E33               	goto	l76
   987  0641                     l1418:
   988                           
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 2, Range of values is 0 to 1
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte            7     4 (average)
   994                           ; direct_byte           14     8 (fixed)
   995                           ; jumptable            260     6 (fixed)
   996                           ;	Chosen strategy is simple_byte
   997  0641  087C               	movf	??_main,w
   998  0642  3A00               	xorlw	0	; case 0
   999  0643  1903               	skipnz
  1000  0644  2E22               	goto	l73
  1001  0645  3A01               	xorlw	1	; case 1
  1002  0646  1903               	skipnz
  1003  0647  2E2F               	goto	l75
  1004  0648  2E33               	goto	l76
  1005  0649                     l1264:
  1006                           
  1007                           ;master.c: 79:     LCDVAL1 (10,cont_1);
  1008  0649  300A               	movlw	10
  1009  064A  00AC               	movwf	LCDVAL1@x
  1010  064B  3000               	movlw	0
  1011  064C  00AD               	movwf	LCDVAL1@x+1
  1012  064D  0823               	movf	_cont_1,w
  1013  064E  00FC               	movwf	??_main
  1014  064F  01FD               	clrf	??_main+1
  1015  0650  087C               	movf	??_main,w
  1016  0651  00AE               	movwf	LCDVAL1@Z
  1017  0652  087D               	movf	??_main+1,w
  1018  0653  00AF               	movwf	LCDVAL1@Z+1
  1019  0654  120A  118A  2681  120A  118A  	fcall	_LCDVAL1
  1020                           
  1021                           ;master.c: 80:     LCDVAL1 (11,cont_2);
  1022  0659  300B               	movlw	11
  1023  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  065C  00AC               	movwf	LCDVAL1@x
  1026  065D  3000               	movlw	0
  1027  065E  00AD               	movwf	LCDVAL1@x+1
  1028  065F  0822               	movf	_cont_2,w
  1029  0660  00FC               	movwf	??_main
  1030  0661  01FD               	clrf	??_main+1
  1031  0662  087C               	movf	??_main,w
  1032  0663  00AE               	movwf	LCDVAL1@Z
  1033  0664  087D               	movf	??_main+1,w
  1034  0665  00AF               	movwf	LCDVAL1@Z+1
  1035  0666  120A  118A  2681  120A  118A  	fcall	_LCDVAL1
  1036                           
  1037                           ;master.c: 81:     LCDVAL1 (12,cont_3);
  1038  066B  300C               	movlw	12
  1039  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1040  066D  1303               	bcf	3,6	;RP1=0, select bank0
  1041  066E  00AC               	movwf	LCDVAL1@x
  1042  066F  3000               	movlw	0
  1043  0670  00AD               	movwf	LCDVAL1@x+1
  1044  0671  0821               	movf	_cont_3,w
  1045  0672  00FC               	movwf	??_main
  1046  0673  01FD               	clrf	??_main+1
  1047  0674  087C               	movf	??_main,w
  1048  0675  00AE               	movwf	LCDVAL1@Z
  1049  0676  087D               	movf	??_main+1,w
  1050  0677  00AF               	movwf	LCDVAL1@Z+1
  1051  0678  120A  118A  2681  120A  118A  	fcall	_LCDVAL1
  1052  067D  2E37               	goto	l1262
  1053  067E  120A  118A  2800   	ljmp	start
  1054  0681                     __end_of_main:
  1055                           
  1056                           	psect	text1
  1057  0516                     __ptext1:	
  1058 ;; *************** function _spiWrite *****************
  1059 ;; Defined at:
  1060 ;;		line 28 in file "MSSP.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  dat             1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  dat             1    0[COMMON] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0
  1077 ;;      Totals:         1       0       0       0       0
  1078 ;;Total ram usage:        1 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _spiWrite
  1089  0516                     _spiWrite:
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _spiWrite: [wreg]
  1093                           ;spiWrite@dat stored from wreg
  1094  0516  00F0               	movwf	spiWrite@dat
  1095  0517                     l1204:
  1096                           
  1097                           ;MSSP.c: 28: void spiWrite(char dat);MSSP.c: 29: {;MSSP.c: 30:     SSPBUF = dat;
  1098  0517  0870               	movf	spiWrite@dat,w
  1099  0518  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0519  1303               	bcf	3,6	;RP1=0, select bank0
  1101  051A  0093               	movwf	19	;volatile
  1102  051B                     l117:
  1103  051B  0008               	return
  1104  051C                     __end_of_spiWrite:
  1105                           
  1106                           	psect	text2
  1107  0556                     __ptext2:	
  1108 ;; *************** function _spiInit *****************
  1109 ;; Defined at:
  1110 ;;		line 6 in file "MSSP.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  sType           1    wreg     enum E1264
  1113 ;;  sDataSample     1    0[COMMON] enum E1272
  1114 ;;  sClockIdle      1    1[COMMON] enum E1276
  1115 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  sType           1    3[COMMON] enum E1264
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         3       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0
  1130 ;;      Totals:         4       0       0       0       0
  1131 ;;Total ram usage:        4 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _spiInit
  1142  0556                     _spiInit:
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1146                           ;spiInit@sType stored from wreg
  1147  0556  00F3               	movwf	spiInit@sType
  1148  0557                     l1158:
  1149                           
  1150                           ;MSSP.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);MSSP.c: 7: {;MSSP.c: 8:     TRISC5 = 0;
  1151  0557  1683               	bsf	3,5	;RP0=1, select bank1
  1152  0558  1303               	bcf	3,6	;RP1=0, select bank1
  1153  0559  1287               	bcf	7,5	;volatile
  1154                           
  1155                           ;MSSP.c: 9:     if(sType & 0b00000100)
  1156  055A  1D73               	btfss	spiInit@sType,2
  1157  055B  2D5D               	goto	u71
  1158  055C  2D5E               	goto	u70
  1159  055D                     u71:
  1160  055D  2D62               	goto	l1164
  1161  055E                     u70:
  1162  055E                     l1160:
  1163                           
  1164                           ;MSSP.c: 10:     {;MSSP.c: 11:         SSPSTAT = sTransmitEdge;
  1165  055E  0872               	movf	spiInit@sTransmitEdge,w
  1166  055F  0094               	movwf	20	;volatile
  1167  0560                     l1162:
  1168                           
  1169                           ;MSSP.c: 12:         TRISC3 = 1;
  1170  0560  1587               	bsf	7,3	;volatile
  1171                           
  1172                           ;MSSP.c: 13:     }
  1173  0561  2D66               	goto	l107
  1174  0562                     l1164:
  1175                           
  1176                           ;MSSP.c: 15:     {;MSSP.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
  1177  0562  0870               	movf	spiInit@sDataSample,w
  1178  0563  0472               	iorwf	spiInit@sTransmitEdge,w
  1179  0564  0094               	movwf	20	;volatile
  1180  0565                     l1166:
  1181                           
  1182                           ;MSSP.c: 17:         TRISC3 = 0;
  1183  0565  1187               	bcf	7,3	;volatile
  1184  0566                     l107:	
  1185                           ;MSSP.c: 18:     }
  1186                           
  1187                           
  1188                           ;MSSP.c: 20:     SSPCON = sType | sClockIdle;
  1189  0566  0873               	movf	spiInit@sType,w
  1190  0567  0471               	iorwf	spiInit@sClockIdle,w
  1191  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1193  056A  0094               	movwf	20	;volatile
  1194  056B                     l108:
  1195  056B  0008               	return
  1196  056C                     __end_of_spiInit:
  1197                           
  1198                           	psect	text3
  1199  056C                     __ptext3:	
  1200 ;; *************** function _Setup *****************
  1201 ;; Defined at:
  1202 ;;		line 92 in file "master.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _Setup
  1231  056C                     _Setup:
  1232  056C                     l1168:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _Setup: [wreg+status,2]
  1235                           
  1236                           
  1237                           ;master.c: 94:     PORTA = 0;
  1238  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1239  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1240  056E  0185               	clrf	5	;volatile
  1241                           
  1242                           ;master.c: 95:     PORTB = 0;
  1243  056F  0186               	clrf	6	;volatile
  1244                           
  1245                           ;master.c: 96:     PORTC = 0;
  1246  0570  0187               	clrf	7	;volatile
  1247                           
  1248                           ;master.c: 97:     PORTD = 0;
  1249  0571  0188               	clrf	8	;volatile
  1250                           
  1251                           ;master.c: 98:     PORTE = 0;
  1252  0572  0189               	clrf	9	;volatile
  1253                           
  1254                           ;master.c: 100:     TRISA = 0B00000000;
  1255  0573  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0574  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0575  0185               	clrf	5	;volatile
  1258                           
  1259                           ;master.c: 101:     TRISB = 0B00000000;
  1260  0576  0186               	clrf	6	;volatile
  1261  0577                     l1170:
  1262                           
  1263                           ;master.c: 102:     TRISC = 0B00010000;
  1264  0577  3010               	movlw	16
  1265  0578  0087               	movwf	7	;volatile
  1266  0579                     l1172:
  1267                           
  1268                           ;master.c: 103:     TRISD = 0B00000000;
  1269  0579  0188               	clrf	8	;volatile
  1270                           
  1271                           ;master.c: 104:     TRISE = 1 ;
  1272  057A  3001               	movlw	1
  1273  057B  0089               	movwf	9	;volatile
  1274  057C                     l1174:
  1275                           
  1276                           ;master.c: 106:     ANSEL = 0B00000000;
  1277  057C  1683               	bsf	3,5	;RP0=1, select bank3
  1278  057D  1703               	bsf	3,6	;RP1=1, select bank3
  1279  057E  0188               	clrf	8	;volatile
  1280  057F                     l1176:
  1281                           
  1282                           ;master.c: 107:     ANSELH = 0B00000000;
  1283  057F  0189               	clrf	9	;volatile
  1284  0580                     l1178:
  1285                           
  1286                           ;master.c: 110:     INTCONbits.GIE=1;
  1287  0580  178B               	bsf	11,7	;volatile
  1288  0581                     l1180:
  1289                           
  1290                           ;master.c: 111:     INTCONbits.PEIE=1;
  1291  0581  170B               	bsf	11,6	;volatile
  1292  0582                     l1182:
  1293                           
  1294                           ;master.c: 112:     INTCONbits.RBIE=1;
  1295  0582  158B               	bsf	11,3	;volatile
  1296  0583                     l82:
  1297  0583  0008               	return
  1298  0584                     __end_of_Setup:
  1299                           
  1300                           	psect	text4
  1301  05CA                     __ptext4:	
  1302 ;; *************** function _LCD_IN *****************
  1303 ;; Defined at:
  1304 ;;		line 4 in file "SETLCD.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0, pclath, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0
  1320 ;;      Temps:          2       0       0       0       0
  1321 ;;      Totals:         2       0       0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		_LCD_ON
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _LCD_IN
  1334  05CA                     _LCD_IN:
  1335  05CA                     l1184:	
  1336                           ;incstack = 0
  1337                           ; Regs used in _LCD_IN: [wreg+status,2+status,0+pclath+cstack]
  1338                           
  1339                           
  1340                           ;SETLCD.c: 5:     TRISDbits.TRISD6 = 0;
  1341  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  1342  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  1343  05CC  1308               	bcf	8,6	;volatile
  1344                           
  1345                           ;SETLCD.c: 6:     TRISDbits.TRISD7 = 0;
  1346  05CD  1388               	bcf	8,7	;volatile
  1347  05CE                     l1186:
  1348                           
  1349                           ;SETLCD.c: 7:     TRISB = 0;
  1350  05CE  0186               	clrf	6	;volatile
  1351  05CF                     l1188:
  1352                           
  1353                           ;SETLCD.c: 8:     PORTDbits.RD6 = 0;
  1354  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1355  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1356  05D1  1308               	bcf	8,6	;volatile
  1357  05D2                     l1190:
  1358                           
  1359                           ;SETLCD.c: 9:     PORTDbits.RD7 = 0;
  1360  05D2  1388               	bcf	8,7	;volatile
  1361                           
  1362                           ;SETLCD.c: 10:     PORTB = 0;
  1363  05D3  0186               	clrf	6	;volatile
  1364  05D4                     l1192:
  1365                           
  1366                           ;SETLCD.c: 11:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1367  05D4  3041               	movlw	65
  1368  05D5  00F4               	movwf	??_LCD_IN+1
  1369  05D6  30EE               	movlw	238
  1370  05D7  00F3               	movwf	??_LCD_IN
  1371  05D8                     u247:
  1372  05D8  0BF3               	decfsz	??_LCD_IN,f
  1373  05D9  2DD8               	goto	u247
  1374  05DA  0BF4               	decfsz	??_LCD_IN+1,f
  1375  05DB  2DD8               	goto	u247
  1376  05DC  0000               	nop
  1377  05DD                     l1194:
  1378                           
  1379                           ;SETLCD.c: 12:     LCD_ON(0x02);
  1380  05DD  3002               	movlw	2
  1381  05DE  120A  118A  2541  120A  118A  	fcall	_LCD_ON
  1382  05E3                     l1196:
  1383                           
  1384                           ;SETLCD.c: 13:     LCD_ON(0x38);
  1385  05E3  3038               	movlw	56
  1386  05E4  120A  118A  2541  120A  118A  	fcall	_LCD_ON
  1387  05E9                     l1198:
  1388                           
  1389                           ;SETLCD.c: 14:     LCD_ON(0x0C);
  1390  05E9  300C               	movlw	12
  1391  05EA  120A  118A  2541  120A  118A  	fcall	_LCD_ON
  1392  05EF                     l1200:
  1393                           
  1394                           ;SETLCD.c: 15:     LCD_ON(0x06);
  1395  05EF  3006               	movlw	6
  1396  05F0  120A  118A  2541  120A  118A  	fcall	_LCD_ON
  1397  05F5                     l142:
  1398  05F5  0008               	return
  1399  05F6                     __end_of_LCD_IN:
  1400                           
  1401                           	psect	text5
  1402  051C                     __ptext5:	
  1403 ;; *************** function _LCD_CL *****************
  1404 ;; Defined at:
  1405 ;;		line 34 in file "SETLCD.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0
  1422 ;;      Totals:         0       0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    2
  1426 ;; This function calls:
  1427 ;;		_LCD_ON
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           
  1434                           ;psect for function _LCD_CL
  1435  051C                     _LCD_CL:
  1436  051C                     l1202:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _LCD_CL: [wreg+status,2+status,0+pclath+cstack]
  1439                           
  1440                           
  1441                           ;SETLCD.c: 35:     LCD_ON(0x01);
  1442  051C  3001               	movlw	1
  1443  051D  120A  118A  2541  120A  118A  	fcall	_LCD_ON
  1444  0522                     l154:
  1445  0522  0008               	return
  1446  0523                     __end_of_LCD_CL:
  1447                           
  1448                           	psect	text6
  1449  0681                     __ptext6:	
  1450 ;; *************** function _LCDVAL1 *****************
  1451 ;; Defined at:
  1452 ;;		line 59 in file "SETLCD.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  x               2    0[BANK0 ] int 
  1455 ;;  Z               2    2[BANK0 ] int 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       4       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          1       0       0       0       0
  1470 ;;      Totals:         1       4       0       0       0
  1471 ;;Total ram usage:        5 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    4
  1474 ;; This function calls:
  1475 ;;		_LCD_POINT
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _LCDVAL1
  1483  0681                     _LCDVAL1:
  1484  0681                     l1206:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _LCDVAL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1487                           
  1488                           
  1489                           ;SETLCD.c: 60:     switch (Z){
  1490  0681  2FB4               	goto	l1244
  1491  0682                     l1208:
  1492                           
  1493                           ;SETLCD.c: 62:             LCD_POINT(x,2,"0");
  1494  0682  082D               	movf	LCDVAL1@x+1,w
  1495  0683  00F5               	movwf	LCD_POINT@x+1
  1496  0684  082C               	movf	LCDVAL1@x,w
  1497  0685  00F4               	movwf	LCD_POINT@x
  1498  0686  3002               	movlw	2
  1499  0687  00F6               	movwf	LCD_POINT@y
  1500  0688  3000               	movlw	0
  1501  0689  00F7               	movwf	LCD_POINT@y+1
  1502  068A  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1503  068B  00FB               	movwf	??_LCDVAL1
  1504  068C  087B               	movf	??_LCDVAL1,w
  1505  068D  00F8               	movwf	LCD_POINT@D
  1506  068E  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1507                           
  1508                           ;SETLCD.c: 63:             break;
  1509  0693  2FED               	goto	l190
  1510  0694                     l1210:
  1511                           
  1512                           ;SETLCD.c: 65:             LCD_POINT(x,2,"1");
  1513  0694  082D               	movf	LCDVAL1@x+1,w
  1514  0695  00F5               	movwf	LCD_POINT@x+1
  1515  0696  082C               	movf	LCDVAL1@x,w
  1516  0697  00F4               	movwf	LCD_POINT@x
  1517  0698  3002               	movlw	2
  1518  0699  00F6               	movwf	LCD_POINT@y
  1519  069A  3000               	movlw	0
  1520  069B  00F7               	movwf	LCD_POINT@y+1
  1521  069C  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1522  069D  00FB               	movwf	??_LCDVAL1
  1523  069E  087B               	movf	??_LCDVAL1,w
  1524  069F  00F8               	movwf	LCD_POINT@D
  1525  06A0  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1526                           
  1527                           ;SETLCD.c: 66:             break;
  1528  06A5  2FED               	goto	l190
  1529  06A6                     l1212:
  1530                           
  1531                           ;SETLCD.c: 68:             LCD_POINT(x,2,"2");
  1532  06A6  082D               	movf	LCDVAL1@x+1,w
  1533  06A7  00F5               	movwf	LCD_POINT@x+1
  1534  06A8  082C               	movf	LCDVAL1@x,w
  1535  06A9  00F4               	movwf	LCD_POINT@x
  1536  06AA  3002               	movlw	2
  1537  06AB  00F6               	movwf	LCD_POINT@y
  1538  06AC  3000               	movlw	0
  1539  06AD  00F7               	movwf	LCD_POINT@y+1
  1540  06AE  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1541  06AF  00FB               	movwf	??_LCDVAL1
  1542  06B0  087B               	movf	??_LCDVAL1,w
  1543  06B1  00F8               	movwf	LCD_POINT@D
  1544  06B2  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1545                           
  1546                           ;SETLCD.c: 69:             break;
  1547  06B7  2FED               	goto	l190
  1548  06B8                     l1214:
  1549                           
  1550                           ;SETLCD.c: 71:             LCD_POINT(x,2,"3");
  1551  06B8  082D               	movf	LCDVAL1@x+1,w
  1552  06B9  00F5               	movwf	LCD_POINT@x+1
  1553  06BA  082C               	movf	LCDVAL1@x,w
  1554  06BB  00F4               	movwf	LCD_POINT@x
  1555  06BC  3002               	movlw	2
  1556  06BD  00F6               	movwf	LCD_POINT@y
  1557  06BE  3000               	movlw	0
  1558  06BF  00F7               	movwf	LCD_POINT@y+1
  1559  06C0  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1560  06C1  00FB               	movwf	??_LCDVAL1
  1561  06C2  087B               	movf	??_LCDVAL1,w
  1562  06C3  00F8               	movwf	LCD_POINT@D
  1563  06C4  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1564                           
  1565                           ;SETLCD.c: 72:             break;
  1566  06C9  2FED               	goto	l190
  1567  06CA                     l1216:
  1568                           
  1569                           ;SETLCD.c: 74:             LCD_POINT(x,2,"4");
  1570  06CA  082D               	movf	LCDVAL1@x+1,w
  1571  06CB  00F5               	movwf	LCD_POINT@x+1
  1572  06CC  082C               	movf	LCDVAL1@x,w
  1573  06CD  00F4               	movwf	LCD_POINT@x
  1574  06CE  3002               	movlw	2
  1575  06CF  00F6               	movwf	LCD_POINT@y
  1576  06D0  3000               	movlw	0
  1577  06D1  00F7               	movwf	LCD_POINT@y+1
  1578  06D2  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1579  06D3  00FB               	movwf	??_LCDVAL1
  1580  06D4  087B               	movf	??_LCDVAL1,w
  1581  06D5  00F8               	movwf	LCD_POINT@D
  1582  06D6  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1583                           
  1584                           ;SETLCD.c: 75:             break;
  1585  06DB  2FED               	goto	l190
  1586  06DC                     l1218:
  1587                           
  1588                           ;SETLCD.c: 77:             LCD_POINT(x,2,"5");
  1589  06DC  082D               	movf	LCDVAL1@x+1,w
  1590  06DD  00F5               	movwf	LCD_POINT@x+1
  1591  06DE  082C               	movf	LCDVAL1@x,w
  1592  06DF  00F4               	movwf	LCD_POINT@x
  1593  06E0  3002               	movlw	2
  1594  06E1  00F6               	movwf	LCD_POINT@y
  1595  06E2  3000               	movlw	0
  1596  06E3  00F7               	movwf	LCD_POINT@y+1
  1597  06E4  301B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1598  06E5  00FB               	movwf	??_LCDVAL1
  1599  06E6  087B               	movf	??_LCDVAL1,w
  1600  06E7  00F8               	movwf	LCD_POINT@D
  1601  06E8  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1602                           
  1603                           ;SETLCD.c: 78:             break;
  1604  06ED  2FED               	goto	l190
  1605  06EE                     l1220:
  1606                           
  1607                           ;SETLCD.c: 80:             LCD_POINT(x,2,"6");
  1608  06EE  082D               	movf	LCDVAL1@x+1,w
  1609  06EF  00F5               	movwf	LCD_POINT@x+1
  1610  06F0  082C               	movf	LCDVAL1@x,w
  1611  06F1  00F4               	movwf	LCD_POINT@x
  1612  06F2  3002               	movlw	2
  1613  06F3  00F6               	movwf	LCD_POINT@y
  1614  06F4  3000               	movlw	0
  1615  06F5  00F7               	movwf	LCD_POINT@y+1
  1616  06F6  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1617  06F7  00FB               	movwf	??_LCDVAL1
  1618  06F8  087B               	movf	??_LCDVAL1,w
  1619  06F9  00F8               	movwf	LCD_POINT@D
  1620  06FA  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1621                           
  1622                           ;SETLCD.c: 81:             break;
  1623  06FF  2FED               	goto	l190
  1624  0700                     l1222:
  1625                           
  1626                           ;SETLCD.c: 83:             LCD_POINT(x,2,"7");
  1627  0700  082D               	movf	LCDVAL1@x+1,w
  1628  0701  00F5               	movwf	LCD_POINT@x+1
  1629  0702  082C               	movf	LCDVAL1@x,w
  1630  0703  00F4               	movwf	LCD_POINT@x
  1631  0704  3002               	movlw	2
  1632  0705  00F6               	movwf	LCD_POINT@y
  1633  0706  3000               	movlw	0
  1634  0707  00F7               	movwf	LCD_POINT@y+1
  1635  0708  301F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1636  0709  00FB               	movwf	??_LCDVAL1
  1637  070A  087B               	movf	??_LCDVAL1,w
  1638  070B  00F8               	movwf	LCD_POINT@D
  1639  070C  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1640                           
  1641                           ;SETLCD.c: 84:             break;
  1642  0711  2FED               	goto	l190
  1643  0712                     l1224:
  1644                           
  1645                           ;SETLCD.c: 86:             LCD_POINT(x,2,"8");
  1646  0712  082D               	movf	LCDVAL1@x+1,w
  1647  0713  00F5               	movwf	LCD_POINT@x+1
  1648  0714  082C               	movf	LCDVAL1@x,w
  1649  0715  00F4               	movwf	LCD_POINT@x
  1650  0716  3002               	movlw	2
  1651  0717  00F6               	movwf	LCD_POINT@y
  1652  0718  3000               	movlw	0
  1653  0719  00F7               	movwf	LCD_POINT@y+1
  1654  071A  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1655  071B  00FB               	movwf	??_LCDVAL1
  1656  071C  087B               	movf	??_LCDVAL1,w
  1657  071D  00F8               	movwf	LCD_POINT@D
  1658  071E  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1659                           
  1660                           ;SETLCD.c: 87:             break;
  1661  0723  2FED               	goto	l190
  1662  0724                     l1226:
  1663                           
  1664                           ;SETLCD.c: 89:             LCD_POINT(x,2,"9");
  1665  0724  082D               	movf	LCDVAL1@x+1,w
  1666  0725  00F5               	movwf	LCD_POINT@x+1
  1667  0726  082C               	movf	LCDVAL1@x,w
  1668  0727  00F4               	movwf	LCD_POINT@x
  1669  0728  3002               	movlw	2
  1670  0729  00F6               	movwf	LCD_POINT@y
  1671  072A  3000               	movlw	0
  1672  072B  00F7               	movwf	LCD_POINT@y+1
  1673  072C  3023               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1674  072D  00FB               	movwf	??_LCDVAL1
  1675  072E  087B               	movf	??_LCDVAL1,w
  1676  072F  00F8               	movwf	LCD_POINT@D
  1677  0730  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1678                           
  1679                           ;SETLCD.c: 90:             break;
  1680  0735  2FED               	goto	l190
  1681  0736                     l1228:
  1682                           
  1683                           ;SETLCD.c: 92:             LCD_POINT (x,2,"A");
  1684  0736  082D               	movf	LCDVAL1@x+1,w
  1685  0737  00F5               	movwf	LCD_POINT@x+1
  1686  0738  082C               	movf	LCDVAL1@x,w
  1687  0739  00F4               	movwf	LCD_POINT@x
  1688  073A  3002               	movlw	2
  1689  073B  00F6               	movwf	LCD_POINT@y
  1690  073C  3000               	movlw	0
  1691  073D  00F7               	movwf	LCD_POINT@y+1
  1692  073E  3025               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1693  073F  00FB               	movwf	??_LCDVAL1
  1694  0740  087B               	movf	??_LCDVAL1,w
  1695  0741  00F8               	movwf	LCD_POINT@D
  1696  0742  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1697                           
  1698                           ;SETLCD.c: 93:             break;
  1699  0747  2FED               	goto	l190
  1700  0748                     l1230:
  1701                           
  1702                           ;SETLCD.c: 95:             LCD_POINT (x,2,"B");
  1703  0748  082D               	movf	LCDVAL1@x+1,w
  1704  0749  00F5               	movwf	LCD_POINT@x+1
  1705  074A  082C               	movf	LCDVAL1@x,w
  1706  074B  00F4               	movwf	LCD_POINT@x
  1707  074C  3002               	movlw	2
  1708  074D  00F6               	movwf	LCD_POINT@y
  1709  074E  3000               	movlw	0
  1710  074F  00F7               	movwf	LCD_POINT@y+1
  1711  0750  3027               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1712  0751  00FB               	movwf	??_LCDVAL1
  1713  0752  087B               	movf	??_LCDVAL1,w
  1714  0753  00F8               	movwf	LCD_POINT@D
  1715  0754  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1716                           
  1717                           ;SETLCD.c: 96:             break;
  1718  0759  2FED               	goto	l190
  1719  075A                     l1232:
  1720                           
  1721                           ;SETLCD.c: 98:             LCD_POINT (x,2,"C");
  1722  075A  082D               	movf	LCDVAL1@x+1,w
  1723  075B  00F5               	movwf	LCD_POINT@x+1
  1724  075C  082C               	movf	LCDVAL1@x,w
  1725  075D  00F4               	movwf	LCD_POINT@x
  1726  075E  3002               	movlw	2
  1727  075F  00F6               	movwf	LCD_POINT@y
  1728  0760  3000               	movlw	0
  1729  0761  00F7               	movwf	LCD_POINT@y+1
  1730  0762  3029               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1731  0763  00FB               	movwf	??_LCDVAL1
  1732  0764  087B               	movf	??_LCDVAL1,w
  1733  0765  00F8               	movwf	LCD_POINT@D
  1734  0766  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1735                           
  1736                           ;SETLCD.c: 99:             break;
  1737  076B  2FED               	goto	l190
  1738  076C                     l1234:
  1739                           
  1740                           ;SETLCD.c: 101:             LCD_POINT (x,2,"D");
  1741  076C  082D               	movf	LCDVAL1@x+1,w
  1742  076D  00F5               	movwf	LCD_POINT@x+1
  1743  076E  082C               	movf	LCDVAL1@x,w
  1744  076F  00F4               	movwf	LCD_POINT@x
  1745  0770  3002               	movlw	2
  1746  0771  00F6               	movwf	LCD_POINT@y
  1747  0772  3000               	movlw	0
  1748  0773  00F7               	movwf	LCD_POINT@y+1
  1749  0774  302B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1750  0775  00FB               	movwf	??_LCDVAL1
  1751  0776  087B               	movf	??_LCDVAL1,w
  1752  0777  00F8               	movwf	LCD_POINT@D
  1753  0778  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1754                           
  1755                           ;SETLCD.c: 102:             break;
  1756  077D  2FED               	goto	l190
  1757  077E                     l1236:
  1758                           
  1759                           ;SETLCD.c: 104:             LCD_POINT (x,2,"E");
  1760  077E  082D               	movf	LCDVAL1@x+1,w
  1761  077F  00F5               	movwf	LCD_POINT@x+1
  1762  0780  082C               	movf	LCDVAL1@x,w
  1763  0781  00F4               	movwf	LCD_POINT@x
  1764  0782  3002               	movlw	2
  1765  0783  00F6               	movwf	LCD_POINT@y
  1766  0784  3000               	movlw	0
  1767  0785  00F7               	movwf	LCD_POINT@y+1
  1768  0786  302D               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1769  0787  00FB               	movwf	??_LCDVAL1
  1770  0788  087B               	movf	??_LCDVAL1,w
  1771  0789  00F8               	movwf	LCD_POINT@D
  1772  078A  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1773                           
  1774                           ;SETLCD.c: 105:             break;
  1775  078F  2FED               	goto	l190
  1776  0790                     l1238:
  1777                           
  1778                           ;SETLCD.c: 107:             LCD_POINT (x,2,"F");
  1779  0790  082D               	movf	LCDVAL1@x+1,w
  1780  0791  00F5               	movwf	LCD_POINT@x+1
  1781  0792  082C               	movf	LCDVAL1@x,w
  1782  0793  00F4               	movwf	LCD_POINT@x
  1783  0794  3002               	movlw	2
  1784  0795  00F6               	movwf	LCD_POINT@y
  1785  0796  3000               	movlw	0
  1786  0797  00F7               	movwf	LCD_POINT@y+1
  1787  0798  302F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1788  0799  00FB               	movwf	??_LCDVAL1
  1789  079A  087B               	movf	??_LCDVAL1,w
  1790  079B  00F8               	movwf	LCD_POINT@D
  1791  079C  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1792                           
  1793                           ;SETLCD.c: 108:             break;
  1794  07A1  2FED               	goto	l190
  1795  07A2                     l1240:
  1796                           
  1797                           ;SETLCD.c: 110:             LCD_POINT(x,2,".");
  1798  07A2  082D               	movf	LCDVAL1@x+1,w
  1799  07A3  00F5               	movwf	LCD_POINT@x+1
  1800  07A4  082C               	movf	LCDVAL1@x,w
  1801  07A5  00F4               	movwf	LCD_POINT@x
  1802  07A6  3002               	movlw	2
  1803  07A7  00F6               	movwf	LCD_POINT@y
  1804  07A8  3000               	movlw	0
  1805  07A9  00F7               	movwf	LCD_POINT@y+1
  1806  07AA  300F               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1807  07AB  00FB               	movwf	??_LCDVAL1
  1808  07AC  087B               	movf	??_LCDVAL1,w
  1809  07AD  00F8               	movwf	LCD_POINT@D
  1810  07AE  120A  118A  25A3  120A  118A  	fcall	_LCD_POINT
  1811                           
  1812                           ;SETLCD.c: 111:             break;
  1813  07B3  2FED               	goto	l190
  1814  07B4                     l1244:
  1815                           
  1816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1817                           ; Switch size 1, requested type "simple"
  1818                           ; Number of cases is 1, Range of values is 0 to 0
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte            4     3 (average)
  1822                           ; direct_byte           11     8 (fixed)
  1823                           ; jumptable            260     6 (fixed)
  1824                           ;	Chosen strategy is simple_byte
  1825  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1826  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1827  07B6  082F               	movf	LCDVAL1@Z+1,w
  1828  07B7  3A00               	xorlw	0	; case 0
  1829  07B8  1903               	skipnz
  1830  07B9  2FBB               	goto	l1420
  1831  07BA  2FA2               	goto	l1240
  1832  07BB                     l1420:
  1833                           
  1834                           ; Switch size 1, requested type "simple"
  1835                           ; Number of cases is 16, Range of values is 0 to 15
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte           49    25 (average)
  1839                           ; direct_byte           56     8 (fixed)
  1840                           ; jumptable            260     6 (fixed)
  1841                           ;	Chosen strategy is simple_byte
  1842  07BB  082E               	movf	LCDVAL1@Z,w
  1843  07BC  3A00               	xorlw	0	; case 0
  1844  07BD  1903               	skipnz
  1845  07BE  2E82               	goto	l1208
  1846  07BF  3A01               	xorlw	1	; case 1
  1847  07C0  1903               	skipnz
  1848  07C1  2E94               	goto	l1210
  1849  07C2  3A03               	xorlw	3	; case 2
  1850  07C3  1903               	skipnz
  1851  07C4  2EA6               	goto	l1212
  1852  07C5  3A01               	xorlw	1	; case 3
  1853  07C6  1903               	skipnz
  1854  07C7  2EB8               	goto	l1214
  1855  07C8  3A07               	xorlw	7	; case 4
  1856  07C9  1903               	skipnz
  1857  07CA  2ECA               	goto	l1216
  1858  07CB  3A01               	xorlw	1	; case 5
  1859  07CC  1903               	skipnz
  1860  07CD  2EDC               	goto	l1218
  1861  07CE  3A03               	xorlw	3	; case 6
  1862  07CF  1903               	skipnz
  1863  07D0  2EEE               	goto	l1220
  1864  07D1  3A01               	xorlw	1	; case 7
  1865  07D2  1903               	skipnz
  1866  07D3  2F00               	goto	l1222
  1867  07D4  3A0F               	xorlw	15	; case 8
  1868  07D5  1903               	skipnz
  1869  07D6  2F12               	goto	l1224
  1870  07D7  3A01               	xorlw	1	; case 9
  1871  07D8  1903               	skipnz
  1872  07D9  2F24               	goto	l1226
  1873  07DA  3A03               	xorlw	3	; case 10
  1874  07DB  1903               	skipnz
  1875  07DC  2F36               	goto	l1228
  1876  07DD  3A01               	xorlw	1	; case 11
  1877  07DE  1903               	skipnz
  1878  07DF  2F48               	goto	l1230
  1879  07E0  3A07               	xorlw	7	; case 12
  1880  07E1  1903               	skipnz
  1881  07E2  2F5A               	goto	l1232
  1882  07E3  3A01               	xorlw	1	; case 13
  1883  07E4  1903               	skipnz
  1884  07E5  2F6C               	goto	l1234
  1885  07E6  3A03               	xorlw	3	; case 14
  1886  07E7  1903               	skipnz
  1887  07E8  2F7E               	goto	l1236
  1888  07E9  3A01               	xorlw	1	; case 15
  1889  07EA  1903               	skipnz
  1890  07EB  2F90               	goto	l1238
  1891  07EC  2FA2               	goto	l1240
  1892  07ED                     l190:
  1893  07ED  0008               	return
  1894  07EE                     __end_of_LCDVAL1:
  1895                           
  1896                           	psect	text7
  1897  05A3                     __ptext7:	
  1898 ;; *************** function _LCD_POINT *****************
  1899 ;; Defined at:
  1900 ;;		line 43 in file "SETLCD.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  x               2    4[COMMON] int 
  1903 ;;  y               2    6[COMMON] int 
  1904 ;;  D               1    8[COMMON] PTR unsigned char 
  1905 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  1906 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  1907 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1908 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1909 ;;		 -> STR_2(2), STR_1(14), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  LOC             1   10[COMMON] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         5       0       0       0       0
  1922 ;;      Locals:         1       0       0       0       0
  1923 ;;      Temps:          1       0       0       0       0
  1924 ;;      Totals:         7       0       0       0       0
  1925 ;;Total ram usage:        7 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    3
  1928 ;; This function calls:
  1929 ;;		_LCD_ON
  1930 ;;		_LCD_P
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;;		_LCDVAL1
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _LCD_POINT
  1939  05A3                     _LCD_POINT:
  1940  05A3                     l1138:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _LCD_POINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;SETLCD.c: 44:     char LOC;;SETLCD.c: 45:     switch (y){
  1946  05A3  2DB0               	goto	l1148
  1947  05A4                     l1140:
  1948                           
  1949                           ;SETLCD.c: 47:             LOC = 0x80 + x;
  1950  05A4  0874               	movf	LCD_POINT@x,w
  1951  05A5  3E80               	addlw	128
  1952  05A6  00F9               	movwf	??_LCD_POINT
  1953  05A7  0879               	movf	??_LCD_POINT,w
  1954  05A8  00FA               	movwf	LCD_POINT@LOC
  1955                           
  1956                           ;SETLCD.c: 48:             break;
  1957  05A9  2DBD               	goto	l1150
  1958  05AA                     l1142:
  1959                           
  1960                           ;SETLCD.c: 50:             LOC = 0xC0 + x;
  1961  05AA  0874               	movf	LCD_POINT@x,w
  1962  05AB  3EC0               	addlw	192
  1963  05AC  00F9               	movwf	??_LCD_POINT
  1964  05AD  0879               	movf	??_LCD_POINT,w
  1965  05AE  00FA               	movwf	LCD_POINT@LOC
  1966                           
  1967                           ;SETLCD.c: 51:             break;
  1968  05AF  2DBD               	goto	l1150
  1969  05B0                     l1148:
  1970                           
  1971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 1, Range of values is 0 to 0
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte            4     3 (average)
  1977                           ; direct_byte           11     8 (fixed)
  1978                           ; jumptable            260     6 (fixed)
  1979                           ;	Chosen strategy is simple_byte
  1980  05B0  0877               	movf	LCD_POINT@y+1,w
  1981  05B1  3A00               	xorlw	0	; case 0
  1982  05B2  1903               	skipnz
  1983  05B3  2DB5               	goto	l1422
  1984  05B4  2DA4               	goto	l1140
  1985  05B5                     l1422:
  1986                           
  1987                           ; Switch size 1, requested type "simple"
  1988                           ; Number of cases is 2, Range of values is 1 to 2
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte            7     4 (average)
  1992                           ; direct_byte           17    11 (fixed)
  1993                           ; jumptable            263     9 (fixed)
  1994                           ;	Chosen strategy is simple_byte
  1995  05B5  0876               	movf	LCD_POINT@y,w
  1996  05B6  3A01               	xorlw	1	; case 1
  1997  05B7  1903               	skipnz
  1998  05B8  2DA4               	goto	l1140
  1999  05B9  3A03               	xorlw	3	; case 2
  2000  05BA  1903               	skipnz
  2001  05BB  2DAA               	goto	l1142
  2002  05BC  2DA4               	goto	l1140
  2003  05BD                     l1150:
  2004                           
  2005                           ;SETLCD.c: 56:     LCD_ON(LOC);
  2006  05BD  087A               	movf	LCD_POINT@LOC,w
  2007  05BE  120A  118A  2541  120A  118A  	fcall	_LCD_ON
  2008  05C3                     l1152:
  2009                           
  2010                           ;SETLCD.c: 57:     LCD_P(D);
  2011  05C3  0878               	movf	LCD_POINT@D,w
  2012  05C4  120A  118A  2584  120A  118A  	fcall	_LCD_P
  2013  05C9                     l168:
  2014  05C9  0008               	return
  2015  05CA                     __end_of_LCD_POINT:
  2016                           
  2017                           	psect	text8
  2018  0584                     __ptext8:	
  2019 ;; *************** function _LCD_P *****************
  2020 ;; Defined at:
  2021 ;;		line 37 in file "SETLCD.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  D               1    wreg     PTR unsigned char 
  2024 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2025 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2026 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2027 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2028 ;;		 -> STR_2(2), STR_1(14), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  D               1    3[COMMON] PTR unsigned char 
  2031 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2032 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2033 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2034 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2035 ;;		 -> STR_2(2), STR_1(14), 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         0       0       0       0       0
  2046 ;;      Locals:         1       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0
  2048 ;;      Totals:         2       0       0       0       0
  2049 ;;Total ram usage:        2 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    2
  2052 ;; This function calls:
  2053 ;;		_LCD_PLAY
  2054 ;; This function is called by:
  2055 ;;		_LCD_POINT
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _LCD_P
  2061  0584                     _LCD_P:
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _LCD_P: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2065                           ;LCD_P@D stored from wreg
  2066  0584  00F3               	movwf	LCD_P@D
  2067  0585                     l1130:
  2068                           
  2069                           ;SETLCD.c: 38:     while (*D){
  2070  0585  2D96               	goto	l1136
  2071  0586                     l1132:
  2072                           
  2073                           ;SETLCD.c: 39:         LCD_PLAY(*D);
  2074  0586  0873               	movf	LCD_P@D,w
  2075  0587  0084               	movwf	4
  2076  0588  120A  118A  2003  120A  118A  	fcall	stringdir
  2077  058D  120A  118A  2530  120A  118A  	fcall	_LCD_PLAY
  2078  0592                     l1134:
  2079                           
  2080                           ;SETLCD.c: 40:         D++;
  2081  0592  3001               	movlw	1
  2082  0593  00F2               	movwf	??_LCD_P
  2083  0594  0872               	movf	??_LCD_P,w
  2084  0595  07F3               	addwf	LCD_P@D,f
  2085  0596                     l1136:
  2086                           
  2087                           ;SETLCD.c: 38:     while (*D){
  2088  0596  0873               	movf	LCD_P@D,w
  2089  0597  0084               	movwf	4
  2090  0598  120A  118A  2003  120A  118A  	fcall	stringdir
  2091  059D  3A00               	xorlw	0
  2092  059E  1D03               	skipz
  2093  059F  2DA1               	goto	u61
  2094  05A0  2DA2               	goto	u60
  2095  05A1                     u61:
  2096  05A1  2D86               	goto	l1132
  2097  05A2                     u60:
  2098  05A2                     l160:
  2099  05A2  0008               	return
  2100  05A3                     __end_of_LCD_P:
  2101                           
  2102                           	psect	text9
  2103  0530                     __ptext9:	
  2104 ;; *************** function _LCD_PLAY *****************
  2105 ;; Defined at:
  2106 ;;		line 28 in file "SETLCD.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  D               1    wreg     unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  D               1    1[COMMON] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       0       0       0       0
  2121 ;;      Locals:         1       0       0       0       0
  2122 ;;      Temps:          1       0       0       0       0
  2123 ;;      Totals:         2       0       0       0       0
  2124 ;;Total ram usage:        2 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    1
  2127 ;; This function calls:
  2128 ;;		_LCD_TIM
  2129 ;; This function is called by:
  2130 ;;		_LCD_P
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _LCD_PLAY
  2136  0530                     _LCD_PLAY:
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _LCD_PLAY: [wreg+status,2+status,0+pclath+cstack]
  2140                           ;LCD_PLAY@D stored from wreg
  2141  0530  00F1               	movwf	LCD_PLAY@D
  2142  0531                     l1114:
  2143                           
  2144                           ;SETLCD.c: 29:     PORTDbits.RD6=1;
  2145  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0533  1708               	bsf	8,6	;volatile
  2148  0534                     l1116:
  2149                           
  2150                           ;SETLCD.c: 30:     PORTB=D;
  2151  0534  0871               	movf	LCD_PLAY@D,w
  2152  0535  0086               	movwf	6	;volatile
  2153  0536                     l1118:
  2154                           
  2155                           ;SETLCD.c: 31:     LCD_TIM();
  2156  0536  120A  118A  2523  120A  118A  	fcall	_LCD_TIM
  2157  053B                     l1120:
  2158                           
  2159                           ;SETLCD.c: 32:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2160  053B  3010               	movlw	16
  2161  053C  00F0               	movwf	??_LCD_PLAY
  2162  053D                     u257:
  2163  053D  0BF0               	decfsz	??_LCD_PLAY,f
  2164  053E  2D3D               	goto	u257
  2165  053F  0000               	nop
  2166  0540                     l151:
  2167  0540  0008               	return
  2168  0541                     __end_of_LCD_PLAY:
  2169                           
  2170                           	psect	text10
  2171  0541                     __ptext10:	
  2172 ;; *************** function _LCD_ON *****************
  2173 ;; Defined at:
  2174 ;;		line 17 in file "SETLCD.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  C               1    wreg     unsigned char 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  C               1    2[COMMON] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         0       0       0       0       0
  2189 ;;      Locals:         1       0       0       0       0
  2190 ;;      Temps:          2       0       0       0       0
  2191 ;;      Totals:         3       0       0       0       0
  2192 ;;Total ram usage:        3 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    1
  2195 ;; This function calls:
  2196 ;;		_LCD_TIM
  2197 ;; This function is called by:
  2198 ;;		_LCD_IN
  2199 ;;		_LCD_CL
  2200 ;;		_LCD_POINT
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _LCD_ON
  2206  0541                     _LCD_ON:
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  2210                           ;LCD_ON@C stored from wreg
  2211  0541  00F2               	movwf	LCD_ON@C
  2212  0542                     l1122:
  2213                           
  2214                           ;SETLCD.c: 18:     PORTDbits.RD6=0;
  2215  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0544  1308               	bcf	8,6	;volatile
  2218  0545                     l1124:
  2219                           
  2220                           ;SETLCD.c: 19:     PORTB=C;
  2221  0545  0872               	movf	LCD_ON@C,w
  2222  0546  0086               	movwf	6	;volatile
  2223  0547                     l1126:
  2224                           
  2225                           ;SETLCD.c: 20:     LCD_TIM();
  2226  0547  120A  118A  2523  120A  118A  	fcall	_LCD_TIM
  2227  054C                     l1128:
  2228                           
  2229                           ;SETLCD.c: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2230  054C  3003               	movlw	3
  2231  054D  00F1               	movwf	??_LCD_ON+1
  2232  054E  3097               	movlw	151
  2233  054F  00F0               	movwf	??_LCD_ON
  2234  0550                     u267:
  2235  0550  0BF0               	decfsz	??_LCD_ON,f
  2236  0551  2D50               	goto	u267
  2237  0552  0BF1               	decfsz	??_LCD_ON+1,f
  2238  0553  2D50               	goto	u267
  2239  0554  2D55               	nop2
  2240  0555                     l145:
  2241  0555  0008               	return
  2242  0556                     __end_of_LCD_ON:
  2243                           
  2244                           	psect	text11
  2245  0523                     __ptext11:	
  2246 ;; *************** function _LCD_TIM *****************
  2247 ;; Defined at:
  2248 ;;		line 23 in file "SETLCD.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		None
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0
  2265 ;;      Totals:         0       0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_LCD_ON
  2272 ;;		_LCD_PLAY
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _LCD_TIM
  2278  0523                     _LCD_TIM:
  2279  0523                     l1112:	
  2280                           ;incstack = 0
  2281                           ; Regs used in _LCD_TIM: []
  2282                           
  2283                           
  2284                           ;SETLCD.c: 24:     PORTDbits.RD7 = 1;
  2285  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0525  1788               	bsf	8,7	;volatile
  2288                           
  2289                           ;SETLCD.c: 25:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2290  0526  2D27               	nop2	;2 cycle nop
  2291  0527  2D28               	nop2	;2 cycle nop
  2292  0528  0000               	nop
  2293                           
  2294                           ;SETLCD.c: 26:     PORTDbits.RD7 = 0;
  2295  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2296  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2297  052B  1388               	bcf	8,7	;volatile
  2298                           
  2299                           ;SETLCD.c: 27:     _delay((unsigned long)((5)*(4000000/4000000.0)));}
  2300  052C  2D2D               	nop2	;2 cycle nop
  2301  052D  2D2E               	nop2	;2 cycle nop
  2302  052E  0000               	nop
  2303  052F                     l148:
  2304  052F  0008               	return
  2305  0530                     __end_of_LCD_TIM:
  2306  007E                     btemp	set	126	;btemp
  2307  007E                     wtemp0	set	126
  2308                           
  2309                           	psect	config
  2310                           
  2311                           ;Config register CONFIG1 @ 0x2007
  2312                           ;	Oscillator Selection bits
  2313                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2314                           ;	Watchdog Timer Enable bit
  2315                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2316                           ;	Power-up Timer Enable bit
  2317                           ;	PWRTE = OFF, PWRT disabled
  2318                           ;	RE3/MCLR pin function select bit
  2319                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2320                           ;	Code Protection bit
  2321                           ;	CP = OFF, Program memory code protection is disabled
  2322                           ;	Data Code Protection bit
  2323                           ;	CPD = OFF, Data memory code protection is disabled
  2324                           ;	Brown Out Reset Selection bits
  2325                           ;	BOREN = OFF, BOR disabled
  2326                           ;	Internal External Switchover bit
  2327                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2328                           ;	Fail-Safe Clock Monitor Enabled bit
  2329                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2330                           ;	Low Voltage Programming Enable bit
  2331                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2332                           ;	In-Circuit Debugger Mode bit
  2333                           ;	DEBUG = 0x1, unprogrammed default
  2334  2007                     	org	8199
  2335  2007  20D4               	dw	8404
  2336                           
  2337                           ;Config register CONFIG2 @ 0x2008
  2338                           ;	Brown-out Reset Selection bit
  2339                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2340                           ;	Flash Program Memory Self Write Enable bits
  2341                           ;	WRT = OFF, Write protection off
  2342  2008                     	org	8200
  2343  2008  3FFF               	dw	16383

Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_POINT@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 

    LCD_P@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_LCDVAL1
    _LCD_IN->_LCD_ON
    _LCD_CL->_LCD_ON
    _LCDVAL1->_LCD_POINT
    _LCD_POINT->_LCD_P
    _LCD_P->_LCD_PLAY

Critical Paths under _main in BANK0

    _main->_LCDVAL1

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10000
                                             12 COMMON     2     2      0
                            _LCDVAL1
                             _LCD_CL
                             _LCD_IN
                          _LCD_POINT
                              _Setup
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_IN                                               2     2      0      22
                                              3 COMMON     2     2      0
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCD_CL                                               0     0      0      22
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCDVAL1                                              5     1      4    5213
                                             11 COMMON     1     1      0
                                              0 BANK0      4     0      4
                          _LCD_POINT
 ---------------------------------------------------------------------------------
 (1) _LCD_POINT                                            7     2      5    4361
                                              4 COMMON     7     2      5
                             _LCD_ON
                              _LCD_P
 ---------------------------------------------------------------------------------
 (2) _LCD_P                                                2     2      0     100
                                              2 COMMON     2     2      0
                           _LCD_PLAY
 ---------------------------------------------------------------------------------
 (3) _LCD_PLAY                                             2     2      0      22
                                              0 COMMON     2     2      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               3     3      0      22
                                              0 COMMON     3     3      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (4) _LCD_TIM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDVAL1
     _LCD_POINT
       _LCD_ON
         _LCD_TIM
       _LCD_P
         _LCD_PLAY
           _LCD_TIM
   _LCD_CL
     _LCD_ON
       _LCD_TIM
   _LCD_IN
     _LCD_ON
       _LCD_TIM
   _LCD_POINT
     _LCD_ON
       _LCD_TIM
     _LCD_P
       _LCD_PLAY
         _LCD_TIM
   _Setup
   _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 01:58:09 2021

                      _L 002B                        _Z 0029                        _l 002A  
                      pc 0002              _SSPSTATbits 0094                       l73 0622  
                     l82 0583                       l75 062F                       l76 0633  
                     u60 05A2                       u61 05A1                       u70 055E  
                     u71 055D                       fsr 0004                      l107 0566  
                    l108 056B                      l117 051B                      l142 05F5  
                    l151 0540                      l160 05A2                      l145 0555  
                    l154 0522                      l148 052F                      l190 07ED  
                    l168 05C9                      u247 05D8                      u257 053D  
                    u267 0550                      fsr0 0004             LCD_POINT@LOC 007A  
        __end_of_LCDVAL1 07EE          __end_of_LCD_TIM 0530                     l1112 0523  
                   l1120 053B                     l1200 05EF                     l1122 0542  
                   l1114 0531                     l1130 0585                     l1210 0694  
                   l1202 051C                     l1124 0545                     l1116 0534  
                   l1132 0586                     l1140 05A4                     l1220 06EE  
                   l1212 06A6                     l1204 0517                     l1126 0547  
                   l1118 0536                     l1134 0592                     l1142 05AA  
                   l1150 05BD                     l1230 0748                     l1222 0700  
                   l1214 06B8                     l1206 0681                     l1128 054C  
                   l1136 0596                     l1152 05C3                     l1240 07A2  
                   l1232 075A                     l1224 0712                     l1216 06CA  
                   l1208 0682                     l1160 055E                     l1138 05A3  
                   l1234 076C                     l1226 0724                     l1218 06DC  
                   l1170 0577                     l1162 0560                     l1250 05F6  
                   l1148 05B0                     l1420 07BB                     l1236 077E  
                   l1228 0736                     l1244 07B4                     l1180 0581  
                   l1172 0579                     l1164 0562                     l1252 060E  
                   l1422 05B5                     l1238 0790                     l1190 05D2  
                   l1182 0582                     l1174 057C                     l1166 0565  
                   l1158 0557                     l1262 0637                     l1254 061E  
                   l1192 05D4                     l1184 05CA                     l1176 057F  
                   l1168 056C                     l1264 0649                     l1256 0625  
                   l1194 05DD                     l1186 05CE                     l1178 0580  
                   l1418 0641                     l1258 062B                     l1196 05E3  
                   l1188 05CF                     l1198 05E9                     STR_1 0009  
                   STR_2 0019                     STR_3 001B                     STR_4 001D  
                   STR_5 001F                     STR_6 0021                     STR_7 0023  
                   STR_8 0025                     STR_9 0027       __size_of_LCD_POINT 0027  
                   _cont 0020                     _main 05F6                     btemp 007E  
                   start 0000         __end_of_LCD_PLAY 0541                    ?_main 0070  
                  STR_10 0029                    STR_11 002B                    STR_12 002D  
                  STR_13 002F                    STR_14 0031                    STR_15 0033  
                  STR_16 0035                    STR_17 0037                    STR_18 0017  
                  _ANSEL 0188                    _LCD_P 0584                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TEM_T 0024  
                  _TEM_U 0025                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Setup 056C                    pclath 000A          __end_of_spiInit 056C  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 0681        __end_of_LCD_POINT 05CA                   ??_main 007C  
              ??_LCDVAL1 007B                   ?_LCD_P 0070                   LCD_P@D 0073  
              ??_LCD_TIM 0070                   ?_Setup 0070                   _ANSELH 0189  
                 _LCD_CL 051C                   _LCD_IN 05CA                   _LCD_ON 0541  
                 _POT1_H 0027                   _POT1_T 0026                   _POT1_U 0028  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   _cont_1 0023                   _cont_2 0022  
                 _cont_3 0021         __end_of_spiWrite 051C                ??_spiInit 0073  
              ?_LCD_PLAY 0070  __end_of__initialization 07FC                LCD_PLAY@D 0071  
          __end_of_LCD_P 05A3           __pcstackCOMMON 0070            __end_of_Setup 0584  
                ??_LCD_P 0072                  ??_Setup 0070                  ?_LCD_CL 0070  
             __pbssBANK0 0020                  ?_LCD_IN 0070                  ?_LCD_ON 0070  
                LCD_ON@C 0072               ??_LCD_PLAY 0070               __pmaintext 05F6  
                _LCDVAL1 0681                  _LCD_TIM 0523                  _SSPSTAT 0094  
             __stringtab 0003          __size_of_LCD_CL 0007          __size_of_LCD_IN 002C  
        __size_of_LCD_ON 0015                ?_spiWrite 0070                  __ptext1 0516  
                __ptext2 0556                  __ptext3 056C                  __ptext4 05CA  
                __ptext5 051C                  __ptext6 0681                  __ptext7 05A3  
                __ptext8 0584                  __ptext9 0530                _LCD_POINT 05A3  
                _spiInit 0556     end_of_initialization 07FC                _RCSTAbits 0018  
             ??_spiWrite 0070                _PORTDbits 0008                _PORTEbits 0009  
             ?_LCD_POINT 0074                _TRISDbits 0088              spiWrite@dat 0070  
             LCD_POINT@D 0078               LCD_POINT@x 0074               LCD_POINT@y 0076  
         __end_of_LCD_CL 0523           __end_of_LCD_IN 05F6           __end_of_LCD_ON 0556  
              _TXSTAbits 0098        __size_of_LCD_PLAY 0011              _BAUDCTLbits 0187  
    start_initialization 07EE                 ??_LCD_CL 0073                 ??_LCD_IN 0073  
               ??_LCD_ON 0070                 LCDVAL1@Z 002E                 LCDVAL1@x 002C  
               ?_LCDVAL1 002C                 ?_LCD_TIM 0070                ___latbits 0002  
            ??_LCD_POINT 0079            __pcstackBANK0 002C        __size_of_spiWrite 0006  
              __pstrings 0003           __size_of_LCD_P 001F                 ?_spiInit 0070  
         __size_of_Setup 0018                 _LCD_PLAY 0530     spiInit@sTransmitEdge 0072  
               _PIE1bits 008C       spiInit@sDataSample 0070              __stringbase 0008  
       __size_of_LCDVAL1 016D         __size_of_LCD_TIM 000D       __end_of__stringtab 0009  
               __ptext10 0541                 __ptext11 0523         __size_of_spiInit 0016  
          __size_of_main 008B                 _spiWrite 0516             spiInit@sType 0073  
      spiInit@sClockIdle 0071               _INTCONbits 000B                stringcode 0003  
               stringdir 0003                 stringtab 0003  
