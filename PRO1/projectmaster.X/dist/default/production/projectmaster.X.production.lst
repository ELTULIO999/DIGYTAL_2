

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 19:07:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0018                     _RCSTAbits	set	24
   458  0008                     _PORTDbits	set	8
   459  0013                     _SSPBUF	set	19
   460  0014                     _SSPCON	set	20
   461  0019                     _TXREG	set	25
   462  000B                     _INTCONbits	set	11
   463  0009                     _PORTE	set	9
   464  0008                     _PORTD	set	8
   465  0007                     _PORTC	set	7
   466  0006                     _PORTB	set	6
   467  0005                     _PORTA	set	5
   468  0009                     _PORTEbits	set	9
   469  008C                     _PIE1bits	set	140
   470  0099                     _SPBRG	set	153
   471  0098                     _TXSTAbits	set	152
   472  0088                     _TRISDbits	set	136
   473  0094                     _SSPSTATbits	set	148
   474  0094                     _SSPSTAT	set	148
   475  0089                     _TRISE	set	137
   476  0088                     _TRISD	set	136
   477  0086                     _TRISB	set	134
   478  0085                     _TRISA	set	133
   479  043B                     _TRISC3	set	1083
   480  043D                     _TRISC5	set	1085
   481  0187                     _BAUDCTLbits	set	391
   482  0189                     _ANSELH	set	393
   483  0188                     _ANSEL	set	392
   484                           
   485                           	psect	strings
   486  0003                     __pstrings:
   487  0003                     stringtab:
   488  0003                     __stringtab:
   489  0003                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492  0003                     stringdir:
   493  0003  3000               	movlw	high stringdir
   494  0004  008A               	movwf	10
   495  0005  0804               	movf	4,w
   496  0006  0A84               	incf	4,f
   497  0007  0782               	addwf	2,f
   498  0008                     __stringbase:
   499  0008  3400               	retlw	0
   500  0009                     __end_of__stringtab:
   501  0009                     STR_1:
   502  0009  3441               	retlw	65	;'A'
   503  000A  3444               	retlw	68	;'D'
   504  000B  3443               	retlw	67	;'C'
   505  000C  3420               	retlw	32	;' '
   506  000D  3454               	retlw	84	;'T'
   507  000E  3445               	retlw	69	;'E'
   508  000F  344D               	retlw	77	;'M'
   509  0010  3450               	retlw	80	;'P'
   510  0011  3420               	retlw	32	;' '
   511  0012  3443               	retlw	67	;'C'
   512  0013  344F               	retlw	79	;'O'
   513  0014  344E               	retlw	78	;'N'
   514  0015  3454               	retlw	84	;'T'
   515  0016  3400               	retlw	0
   516  0017                     STR_18:
   517  0017  342E               	retlw	46	;'.'
   518  0018  3400               	retlw	0
   519  0019                     STR_2:
   520  0019  3430               	retlw	48	;'0'
   521  001A  3400               	retlw	0
   522  001B                     STR_3:
   523  001B  3431               	retlw	49	;'1'
   524  001C  3400               	retlw	0
   525  001D                     STR_4:
   526  001D  3432               	retlw	50	;'2'
   527  001E  3400               	retlw	0
   528  001F                     STR_5:
   529  001F  3433               	retlw	51	;'3'
   530  0020  3400               	retlw	0
   531  0021                     STR_6:
   532  0021  3434               	retlw	52	;'4'
   533  0022  3400               	retlw	0
   534  0023                     STR_7:
   535  0023  3435               	retlw	53	;'5'
   536  0024  3400               	retlw	0
   537  0025                     STR_8:
   538  0025  3436               	retlw	54	;'6'
   539  0026  3400               	retlw	0
   540  0027                     STR_9:
   541  0027  3437               	retlw	55	;'7'
   542  0028  3400               	retlw	0
   543  0029                     STR_10:
   544  0029  3438               	retlw	56	;'8'
   545  002A  3400               	retlw	0
   546  002B                     STR_11:
   547  002B  3439               	retlw	57	;'9'
   548  002C  3400               	retlw	0
   549  002D                     STR_12:
   550  002D  3441               	retlw	65	;'A'
   551  002E  3400               	retlw	0
   552  002F                     STR_13:
   553  002F  3442               	retlw	66	;'B'
   554  0030  3400               	retlw	0
   555  0031                     STR_14:
   556  0031  3443               	retlw	67	;'C'
   557  0032  3400               	retlw	0
   558  0033                     STR_15:
   559  0033  3444               	retlw	68	;'D'
   560  0034  3400               	retlw	0
   561  0035                     STR_16:
   562  0035  3445               	retlw	69	;'E'
   563  0036  3400               	retlw	0
   564  0037                     STR_17:
   565  0037  3446               	retlw	70	;'F'
   566  0038  3400               	retlw	0
   567                           
   568                           	psect	cinit
   569  07F2                     start_initialization:	
   570                           ; #config settings
   571                           
   572  07F2                     __initialization:
   573                           
   574                           ; Clear objects allocated to COMMON
   575  07F2  01FD               	clrf	__pbssCOMMON& (0+127)
   576                           
   577                           ; Clear objects allocated to BANK0
   578  07F3  1383               	bcf	3,7	;select IRP bank0
   579  07F4  3020               	movlw	low __pbssBANK0
   580  07F5  0084               	movwf	4
   581  07F6  3034               	movlw	low (__pbssBANK0+20)
   582  07F7  120A  118A  22DA  120A  118A  	fcall	clear_ram0
   583  07FC                     end_of_initialization:	
   584                           ;End of C runtime variable initialization code
   585                           
   586  07FC                     __end_of__initialization:
   587  07FC  0183               	clrf	3
   588  07FD  120A  118A  2D67   	ljmp	_main	;jump to C main() function
   589                           
   590                           	psect	bssCOMMON
   591  007D                     __pbssCOMMON:
   592  007D                     _POT1_U:
   593  007D                     	ds	1
   594                           
   595                           	psect	bssBANK0
   596  0020                     __pbssBANK0:
   597  0020                     _POT1_Tas:
   598  0020                     	ds	1
   599  0021                     _POT1_Has:
   600  0021                     	ds	1
   601  0022                     _POT1_Uas:
   602  0022                     	ds	1
   603  0023                     _cont_3AS:
   604  0023                     	ds	1
   605  0024                     _cont_2AS:
   606  0024                     	ds	1
   607  0025                     _cont_1AS:
   608  0025                     	ds	1
   609  0026                     _cont:
   610  0026                     	ds	1
   611  0027                     _cont_3:
   612  0027                     	ds	1
   613  0028                     _cont_2:
   614  0028                     	ds	1
   615  0029                     _cont_1:
   616  0029                     	ds	1
   617  002A                     _TEM_TAS:
   618  002A                     	ds	1
   619  002B                     _TEM_UAS:
   620  002B                     	ds	1
   621  002C                     _TEM_T:
   622  002C                     	ds	1
   623  002D                     _TEM_U:
   624  002D                     	ds	1
   625  002E                     _POT1_T:
   626  002E                     	ds	1
   627  002F                     _POT1_H:
   628  002F                     	ds	1
   629  0030                     _z:
   630  0030                     	ds	1
   631  0031                     _Z:
   632  0031                     	ds	1
   633  0032                     _l:
   634  0032                     	ds	1
   635  0033                     _L:
   636  0033                     	ds	1
   637                           
   638                           	psect	clrtext
   639  02DA                     clear_ram0:	
   640                           ;	Called with FSR containing the base address, and
   641                           ;	W with the last address+1
   642                           
   643  02DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   644  02DB                     clrloop0:
   645  02DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   646  02DC  0A84               	incf	4,f	;increment pointer
   647  02DD  0604               	xorwf	4,w	;XOR with final address
   648  02DE  1903               	btfsc	3,2	;have we reached the end yet?
   649  02DF  3400               	retlw	0	;all done for this memory range, return
   650  02E0  0604               	xorwf	4,w	;XOR again to restore value
   651  02E1  2ADB               	goto	clrloop0	;do the next byte
   652                           
   653                           	psect	cstackCOMMON
   654  0070                     __pcstackCOMMON:
   655  0070                     ?_spiInit:
   656  0070                     ?_Setup:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_Setup:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_LCD_IN:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_LCD_CL:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_spiWrite:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_spiWrite:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_spiRead:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_spiRead:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_CONVET_cont:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_CONV:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_LCD_ON:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ??_LCD_ON:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_LCD_TIM:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ??_LCD_TIM:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_main:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_spiReceiveWait:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_spiReceiveWait:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_LCD_PLAY:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_LCD_PLAY:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCD_P:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?___bmul:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?___wmul:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     spiInit@sDataSample:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0070                     spiWrite@dat:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ___bmul@multiplicand:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ___wmul@multiplier:	
   732                           ; 1 bytes @ 0x0
   733                           
   734                           
   735                           ; 2 bytes @ 0x0
   736  0070                     	ds	1
   737  0071                     ??___bmul:
   738  0071                     spiInit@sClockIdle:	
   739                           ; 1 bytes @ 0x1
   740                           
   741  0071                     LCD_PLAY@D:	
   742                           ; 1 bytes @ 0x1
   743                           
   744                           
   745                           ; 1 bytes @ 0x1
   746  0071                     	ds	1
   747  0072                     ??_LCD_P:
   748  0072                     spiInit@sTransmitEdge:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     LCD_ON@C:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ___bmul@product:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ___wmul@multiplicand:	
   758                           ; 1 bytes @ 0x2
   759                           
   760                           
   761                           ; 2 bytes @ 0x2
   762  0072                     	ds	1
   763  0073                     ??_spiInit:
   764  0073                     ??_LCD_IN:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0073                     ??_LCD_CL:	
   768                           ; 1 bytes @ 0x3
   769                           
   770  0073                     spiInit@sType:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     LCD_P@D:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     ___bmul@multiplier:	
   777                           ; 1 bytes @ 0x3
   778                           
   779                           
   780                           ; 1 bytes @ 0x3
   781  0073                     	ds	1
   782  0074                     ?_LCD_POINT:
   783  0074                     ??___wmul:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0074                     LCD_POINT@x:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0074                     ___wmul@product:	
   790                           ; 2 bytes @ 0x4
   791                           
   792                           
   793                           ; 2 bytes @ 0x4
   794  0074                     	ds	2
   795  0076                     ?___awdiv:
   796  0076                     LCD_POINT@y:	
   797                           ; 2 bytes @ 0x6
   798                           
   799  0076                     ___awdiv@divisor:	
   800                           ; 2 bytes @ 0x6
   801                           
   802                           
   803                           ; 2 bytes @ 0x6
   804  0076                     	ds	2
   805  0078                     LCD_POINT@D:
   806  0078                     ___awdiv@dividend:	
   807                           ; 1 bytes @ 0x8
   808                           
   809                           
   810                           ; 2 bytes @ 0x8
   811  0078                     	ds	1
   812  0079                     ??_LCD_POINT:
   813                           
   814                           ; 1 bytes @ 0x9
   815  0079                     	ds	1
   816  007A                     ??___awdiv:
   817  007A                     LCD_POINT@LOC:	
   818                           ; 1 bytes @ 0xA
   819                           
   820                           
   821                           ; 1 bytes @ 0xA
   822  007A                     	ds	1
   823  007B                     ??_LCDVAL1:
   824  007B                     _CONV$1189:	
   825                           ; 1 bytes @ 0xB
   826                           
   827                           
   828                           ; 2 bytes @ 0xB
   829  007B                     	ds	2
   830                           
   831                           	psect	cstackBANK0
   832  0034                     __pcstackBANK0:
   833  0034                     ?_LCDVAL1:
   834  0034                     ___awdiv@counter:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0034                     LCDVAL1@x:	
   838                           ; 1 bytes @ 0x0
   839                           
   840                           
   841                           ; 2 bytes @ 0x0
   842  0034                     	ds	1
   843  0035                     ___awdiv@sign:
   844                           
   845                           ; 1 bytes @ 0x1
   846  0035                     	ds	1
   847  0036                     LCDVAL1@Z:
   848  0036                     ___awdiv@quotient:	
   849                           ; 2 bytes @ 0x2
   850                           
   851                           
   852                           ; 2 bytes @ 0x2
   853  0036                     	ds	2
   854  0038                     ??_CONVET_cont:
   855  0038                     ??_CONV:	
   856                           ; 1 bytes @ 0x4
   857                           
   858                           
   859                           ; 1 bytes @ 0x4
   860  0038                     	ds	8
   861  0040                     ??_main:
   862                           
   863                           ; 1 bytes @ 0xC
   864  0040                     	ds	2
   865                           
   866                           	psect	maintext
   867  0567                     __pmaintext:	
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 55 in file "master.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : B00/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       2       0       0       0
   890 ;;      Totals:         0       2       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels required when called:    5
   893 ;; This function calls:
   894 ;;		_CONV
   895 ;;		_CONVET_cont
   896 ;;		_LCDVAL1
   897 ;;		_LCD_CL
   898 ;;		_LCD_IN
   899 ;;		_LCD_POINT
   900 ;;		_Setup
   901 ;;		_spiInit
   902 ;;		_spiRead
   903 ;;		_spiWrite
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  0567                     _main:
   912  0567                     l1447:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   915                           
   916                           
   917                           ;master.c: 56:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   918  0567  3080               	movlw	128
   919  0568  1283               	bcf	3,5	;RP0=0, select bank0
   920  0569  1303               	bcf	3,6	;RP1=0, select bank0
   921  056A  00C0               	movwf	??_main
   922  056B  0840               	movf	??_main,w
   923  056C  00F0               	movwf	spiInit@sDataSample
   924  056D  01F1               	clrf	spiInit@sClockIdle
   925  056E  01F2               	clrf	spiInit@sTransmitEdge
   926  056F  3020               	movlw	32
   927  0570  120A  118A  2348  120A  118A  	fcall	_spiInit
   928  0575                     l1449:
   929                           
   930                           ;master.c: 57:     Setup();
   931  0575  120A  118A  2333  120A  118A  	fcall	_Setup
   932  057A                     l1451:
   933                           
   934                           ;master.c: 58:     LCD_IN();
   935  057A  120A  118A  23C9  120A  118A  	fcall	_LCD_IN
   936  057F                     l1453:
   937                           
   938                           ;master.c: 59:     LCD_CL();
   939  057F  120A  118A  22CC  120A  118A  	fcall	_LCD_CL
   940  0584                     l1455:
   941                           
   942                           ;master.c: 60:     LCD_POINT(0,1,"ADC TEMP CONT");
   943  0584  3000               	movlw	0
   944  0585  00F4               	movwf	LCD_POINT@x
   945  0586  00F5               	movwf	LCD_POINT@x+1
   946  0587  3001               	movlw	1
   947  0588  00F6               	movwf	LCD_POINT@y
   948  0589  3000               	movlw	0
   949  058A  00F7               	movwf	LCD_POINT@y+1
   950  058B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   951  058C  1283               	bcf	3,5	;RP0=0, select bank0
   952  058D  1303               	bcf	3,6	;RP1=0, select bank0
   953  058E  00C0               	movwf	??_main
   954  058F  0840               	movf	??_main,w
   955  0590  00F8               	movwf	LCD_POINT@D
   956  0591  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
   957  0596                     l1457:
   958                           
   959                           ;master.c: 61:     Z=0;
   960  0596  1283               	bcf	3,5	;RP0=0, select bank0
   961  0597  1303               	bcf	3,6	;RP1=0, select bank0
   962  0598  01B1               	clrf	_Z
   963  0599  2E72               	goto	l1499
   964  059A                     l99:	
   965                           ;master.c: 69:             case 0:
   966                           
   967                           
   968                           ;master.c: 70:                 PORTEbits.RE0=0;
   969  059A  1009               	bcf	9,0	;volatile
   970                           
   971                           ;master.c: 71:                 PORTEbits.RE1=1;
   972  059B  1489               	bsf	9,1	;volatile
   973                           
   974                           ;master.c: 72:                 PORTEbits.RE2=1;
   975  059C  1509               	bsf	9,2	;volatile
   976  059D                     l1459:
   977                           
   978                           ;master.c: 74:                 spiWrite(0x00);
   979  059D  3000               	movlw	0
   980  059E  120A  118A  22C6  120A  118A  	fcall	_spiWrite
   981  05A3                     l1461:
   982                           
   983                           ;master.c: 75:                 _delay((unsigned long)((1)*(4000000/4000.0)));
   984  05A3  30C7               	movlw	199
   985  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   986  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   987  05A6  00C0               	movwf	??_main
   988  05A7                     u397:
   989  05A7  2DA8               	nop2
   990  05A8  0BC0               	decfsz	??_main,f
   991  05A9  2DA7               	goto	u397
   992  05AA  2DAB               	nop2
   993  05AB                     l1463:
   994                           
   995                           ;master.c: 76:                 cont=spiRead();
   996  05AB  120A  118A  22E2  120A  118A  	fcall	_spiRead
   997  05B0  1283               	bcf	3,5	;RP0=0, select bank0
   998  05B1  1303               	bcf	3,6	;RP1=0, select bank0
   999  05B2  00C0               	movwf	??_main
  1000  05B3  0840               	movf	??_main,w
  1001  05B4  00A6               	movwf	_cont
  1002                           
  1003                           ;master.c: 77:                 PORTA=cont;
  1004  05B5  0826               	movf	_cont,w
  1005  05B6  0085               	movwf	5	;volatile
  1006  05B7                     l1465:
  1007                           
  1008                           ;master.c: 78:                 CONVET_cont();
  1009  05B7  120A  118A  23F5  120A  118A  	fcall	_CONVET_cont
  1010  05BC                     l1467:
  1011                           
  1012                           ;master.c: 79:                 _delay((unsigned long)((1)*(4000000/4000.0)));
  1013  05BC  30C7               	movlw	199
  1014  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1015  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1016  05BF  00C0               	movwf	??_main
  1017  05C0                     u407:
  1018  05C0  2DC1               	nop2
  1019  05C1  0BC0               	decfsz	??_main,f
  1020  05C2  2DC0               	goto	u407
  1021  05C3  2DC4               	nop2
  1022  05C4                     l1469:
  1023                           
  1024                           ;master.c: 81:                 LCDVAL1 (10,cont_1);
  1025  05C4  300A               	movlw	10
  1026  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1027  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1028  05C7  00B4               	movwf	LCDVAL1@x
  1029  05C8  3000               	movlw	0
  1030  05C9  00B5               	movwf	LCDVAL1@x+1
  1031  05CA  0829               	movf	_cont_1,w
  1032  05CB  00C0               	movwf	??_main
  1033  05CC  01C1               	clrf	??_main+1
  1034  05CD  0840               	movf	??_main,w
  1035  05CE  00B6               	movwf	LCDVAL1@Z
  1036  05CF  0841               	movf	??_main+1,w
  1037  05D0  00B7               	movwf	LCDVAL1@Z+1
  1038  05D1  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1039  05D6                     l1471:
  1040                           
  1041                           ;master.c: 82:                 LCDVAL1 (11,cont_2);
  1042  05D6  300B               	movlw	11
  1043  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1044  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1045  05D9  00B4               	movwf	LCDVAL1@x
  1046  05DA  3000               	movlw	0
  1047  05DB  00B5               	movwf	LCDVAL1@x+1
  1048  05DC  0828               	movf	_cont_2,w
  1049  05DD  00C0               	movwf	??_main
  1050  05DE  01C1               	clrf	??_main+1
  1051  05DF  0840               	movf	??_main,w
  1052  05E0  00B6               	movwf	LCDVAL1@Z
  1053  05E1  0841               	movf	??_main+1,w
  1054  05E2  00B7               	movwf	LCDVAL1@Z+1
  1055  05E3  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1056  05E8                     l1473:
  1057                           
  1058                           ;master.c: 83:                 LCDVAL1 (12,cont_3);
  1059  05E8  300C               	movlw	12
  1060  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1061  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1062  05EB  00B4               	movwf	LCDVAL1@x
  1063  05EC  3000               	movlw	0
  1064  05ED  00B5               	movwf	LCDVAL1@x+1
  1065  05EE  0827               	movf	_cont_3,w
  1066  05EF  00C0               	movwf	??_main
  1067  05F0  01C1               	clrf	??_main+1
  1068  05F1  0840               	movf	??_main,w
  1069  05F2  00B6               	movwf	LCDVAL1@Z
  1070  05F3  0841               	movf	??_main+1,w
  1071  05F4  00B7               	movwf	LCDVAL1@Z+1
  1072  05F5  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1073  05FA                     l1475:
  1074                           
  1075                           ;master.c: 84:                 Z++;
  1076  05FA  3001               	movlw	1
  1077  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1078  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1079  05FD  00C0               	movwf	??_main
  1080  05FE  0840               	movf	??_main,w
  1081  05FF  07B1               	addwf	_Z,f
  1082                           
  1083                           ;master.c: 85:                 break;
  1084  0600  2E72               	goto	l1499
  1085  0601                     l101:	
  1086                           ;master.c: 86:             case 1:
  1087                           
  1088                           
  1089                           ;master.c: 87:                 PORTEbits.RE0=1;
  1090  0601  1409               	bsf	9,0	;volatile
  1091                           
  1092                           ;master.c: 88:                 PORTEbits.RE1=0;
  1093  0602  1089               	bcf	9,1	;volatile
  1094                           
  1095                           ;master.c: 89:                 PORTEbits.RE2=1;
  1096  0603  1509               	bsf	9,2	;volatile
  1097  0604                     l1477:
  1098                           
  1099                           ;master.c: 91:                 spiWrite(0x00);
  1100  0604  3000               	movlw	0
  1101  0605  120A  118A  22C6  120A  118A  	fcall	_spiWrite
  1102  060A                     l1479:
  1103                           
  1104                           ;master.c: 92:                 _delay((unsigned long)((1)*(4000000/4000.0)));
  1105  060A  30C7               	movlw	199
  1106  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1107  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1108  060D  00C0               	movwf	??_main
  1109  060E                     u417:
  1110  060E  2E0F               	nop2
  1111  060F  0BC0               	decfsz	??_main,f
  1112  0610  2E0E               	goto	u417
  1113  0611  2E12               	nop2
  1114  0612                     l1481:
  1115                           
  1116                           ;master.c: 93:                 L=spiRead();
  1117  0612  120A  118A  22E2  120A  118A  	fcall	_spiRead
  1118  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0619  00C0               	movwf	??_main
  1121  061A  0840               	movf	??_main,w
  1122  061B  00B3               	movwf	_L
  1123  061C                     l1483:
  1124                           
  1125                           ;master.c: 95:                 CONV();
  1126  061C  120A  118A  24BD  120A  118A  	fcall	_CONV
  1127  0621                     l1485:
  1128                           
  1129                           ;master.c: 96:                 _delay((unsigned long)((1)*(4000000/4000.0)));
  1130  0621  30C7               	movlw	199
  1131  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0624  00C0               	movwf	??_main
  1134  0625                     u427:
  1135  0625  2E26               	nop2
  1136  0626  0BC0               	decfsz	??_main,f
  1137  0627  2E25               	goto	u427
  1138  0628  2E29               	nop2
  1139  0629                     l1487:
  1140                           
  1141                           ;master.c: 98:                 LCDVAL1 (2,POT1_U);
  1142  0629  3002               	movlw	2
  1143  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1144  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1145  062C  00B4               	movwf	LCDVAL1@x
  1146  062D  3000               	movlw	0
  1147  062E  00B5               	movwf	LCDVAL1@x+1
  1148  062F  087D               	movf	_POT1_U,w
  1149  0630  00C0               	movwf	??_main
  1150  0631  01C1               	clrf	??_main+1
  1151  0632  0840               	movf	??_main,w
  1152  0633  00B6               	movwf	LCDVAL1@Z
  1153  0634  0841               	movf	??_main+1,w
  1154  0635  00B7               	movwf	LCDVAL1@Z+1
  1155  0636  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1156  063B                     l1489:
  1157                           
  1158                           ;master.c: 99:                 LCDVAL1 (3,16);
  1159  063B  3003               	movlw	3
  1160  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1161  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1162  063E  00B4               	movwf	LCDVAL1@x
  1163  063F  3000               	movlw	0
  1164  0640  00B5               	movwf	LCDVAL1@x+1
  1165  0641  3010               	movlw	16
  1166  0642  00B6               	movwf	LCDVAL1@Z
  1167  0643  3000               	movlw	0
  1168  0644  00B7               	movwf	LCDVAL1@Z+1
  1169  0645  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1170  064A                     l1491:
  1171                           
  1172                           ;master.c: 100:                 LCDVAL1 (4,POT1_T);
  1173  064A  3004               	movlw	4
  1174  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1175  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1176  064D  00B4               	movwf	LCDVAL1@x
  1177  064E  3000               	movlw	0
  1178  064F  00B5               	movwf	LCDVAL1@x+1
  1179  0650  082E               	movf	_POT1_T,w
  1180  0651  00C0               	movwf	??_main
  1181  0652  01C1               	clrf	??_main+1
  1182  0653  0840               	movf	??_main,w
  1183  0654  00B6               	movwf	LCDVAL1@Z
  1184  0655  0841               	movf	??_main+1,w
  1185  0656  00B7               	movwf	LCDVAL1@Z+1
  1186  0657  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1187  065C                     l1493:
  1188                           
  1189                           ;master.c: 101:                 LCDVAL1 (5,POT1_H);
  1190  065C  3005               	movlw	5
  1191  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1192  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1193  065F  00B4               	movwf	LCDVAL1@x
  1194  0660  3000               	movlw	0
  1195  0661  00B5               	movwf	LCDVAL1@x+1
  1196  0662  082F               	movf	_POT1_H,w
  1197  0663  00C0               	movwf	??_main
  1198  0664  01C1               	clrf	??_main+1
  1199  0665  0840               	movf	??_main,w
  1200  0666  00B6               	movwf	LCDVAL1@Z
  1201  0667  0841               	movf	??_main+1,w
  1202  0668  00B7               	movwf	LCDVAL1@Z+1
  1203  0669  120A  118A  2685  120A  118A  	fcall	_LCDVAL1
  1204  066E  2D96               	goto	l1457
  1205  066F                     l102:	
  1206                           ;master.c: 106:             default:
  1207                           
  1208                           
  1209                           ;master.c: 107:                 PORTEbits.RE0=1;
  1210  066F  1409               	bsf	9,0	;volatile
  1211                           
  1212                           ;master.c: 108:                 PORTEbits.RE1=1;
  1213  0670  1489               	bsf	9,1	;volatile
  1214                           
  1215                           ;master.c: 109:                 PORTEbits.RE2=0;
  1216  0671  1109               	bcf	9,2	;volatile
  1217  0672                     l1499:	
  1218                           ;master.c: 110:                 break;
  1219                           
  1220  0672  0831               	movf	_Z,w
  1221  0673  00C0               	movwf	??_main
  1222  0674  01C1               	clrf	??_main+1
  1223                           
  1224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1225                           ; Switch size 1, requested type "simple"
  1226                           ; Number of cases is 1, Range of values is 0 to 0
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte            4     3 (average)
  1230                           ; direct_byte           11     8 (fixed)
  1231                           ; jumptable            260     6 (fixed)
  1232                           ;	Chosen strategy is simple_byte
  1233  0675  0841               	movf	??_main+1,w
  1234  0676  3A00               	xorlw	0	; case 0
  1235  0677  1903               	skipnz
  1236  0678  2E7A               	goto	l1609
  1237  0679  2E6F               	goto	l102
  1238  067A                     l1609:
  1239                           
  1240                           ; Switch size 1, requested type "simple"
  1241                           ; Number of cases is 2, Range of values is 0 to 1
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte            7     4 (average)
  1245                           ; direct_byte           14     8 (fixed)
  1246                           ; jumptable            260     6 (fixed)
  1247                           ;	Chosen strategy is simple_byte
  1248  067A  0840               	movf	??_main,w
  1249  067B  3A00               	xorlw	0	; case 0
  1250  067C  1903               	skipnz
  1251  067D  2D9A               	goto	l99
  1252  067E  3A01               	xorlw	1	; case 1
  1253  067F  1903               	skipnz
  1254  0680  2E01               	goto	l101
  1255  0681  2E6F               	goto	l102
  1256  0682  120A  118A  2800   	ljmp	start
  1257  0685                     __end_of_main:
  1258                           
  1259                           	psect	text1
  1260  02C6                     __ptext1:	
  1261 ;; *************** function _spiWrite *****************
  1262 ;; Defined at:
  1263 ;;		line 28 in file "MSSP.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  dat             1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  dat             1    0[COMMON] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0
  1280 ;;      Totals:         1       0       0       0       0
  1281 ;;Total ram usage:        1 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _spiWrite
  1292  02C6                     _spiWrite:
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _spiWrite: [wreg]
  1296                           ;spiWrite@dat stored from wreg
  1297  02C6  00F0               	movwf	spiWrite@dat
  1298  02C7                     l1391:
  1299                           
  1300                           ;MSSP.c: 28: void spiWrite(char dat);MSSP.c: 29: {;MSSP.c: 30:     SSPBUF = dat;
  1301  02C7  0870               	movf	spiWrite@dat,w
  1302  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1303  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1304  02CA  0093               	movwf	19	;volatile
  1305  02CB                     l164:
  1306  02CB  0008               	return
  1307  02CC                     __end_of_spiWrite:
  1308                           
  1309                           	psect	text2
  1310  02E2                     __ptext2:	
  1311 ;; *************** function _spiRead *****************
  1312 ;; Defined at:
  1313 ;;		line 41 in file "MSSP.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      unsigned char 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		_spiReceiveWait
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _spiRead
  1343  02E2                     _spiRead:
  1344  02E2                     l1393:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1347                           
  1348                           
  1349                           ;MSSP.c: 43:     spiReceiveWait();
  1350  02E2  120A  118A  22D3  120A  118A  	fcall	_spiReceiveWait
  1351  02E7                     l1395:
  1352                           
  1353                           ;MSSP.c: 44:     return(SSPBUF);
  1354  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1355  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1356  02E9  0813               	movf	19,w	;volatile
  1357  02EA                     l172:
  1358  02EA  0008               	return
  1359  02EB                     __end_of_spiRead:
  1360                           
  1361                           	psect	text3
  1362  02D3                     __ptext3:	
  1363 ;; *************** function _spiReceiveWait *****************
  1364 ;; Defined at:
  1365 ;;		line 23 in file "MSSP.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		None
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0
  1382 ;;      Totals:         0       0       0       0       0
  1383 ;;Total ram usage:        0 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_spiRead
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _spiReceiveWait
  1394  02D3                     _spiReceiveWait:
  1395  02D3                     l1279:	
  1396                           ;incstack = 0
  1397                           ; Regs used in _spiReceiveWait: []
  1398                           
  1399  02D3                     l158:	
  1400                           ;MSSP.c: 25:     while ( !SSPSTATbits.BF );
  1401                           
  1402  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1403  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  1404  02D5  1C14               	btfss	20,0	;volatile
  1405  02D6  2AD8               	goto	u211
  1406  02D7  2AD9               	goto	u210
  1407  02D8                     u211:
  1408  02D8  2AD3               	goto	l158
  1409  02D9                     u210:
  1410  02D9                     l161:
  1411  02D9  0008               	return
  1412  02DA                     __end_of_spiReceiveWait:
  1413                           
  1414                           	psect	text4
  1415  0348                     __ptext4:	
  1416 ;; *************** function _spiInit *****************
  1417 ;; Defined at:
  1418 ;;		line 6 in file "MSSP.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  sType           1    wreg     enum E1264
  1421 ;;  sDataSample     1    0[COMMON] enum E1272
  1422 ;;  sClockIdle      1    1[COMMON] enum E1276
  1423 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  sType           1    3[COMMON] enum E1264
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         3       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         4       0       0       0       0
  1439 ;;Total ram usage:        4 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _spiInit
  1450  0348                     _spiInit:
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1454                           ;spiInit@sType stored from wreg
  1455  0348  00F3               	movwf	spiInit@sType
  1456  0349                     l1353:
  1457                           
  1458                           ;MSSP.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);MSSP.c: 7: {;MSSP.c: 8:     TRISC5 = 0;
  1459  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1460  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1461  034B  1287               	bcf	7,5	;volatile
  1462                           
  1463                           ;MSSP.c: 9:     if(sType & 0b00000100)
  1464  034C  1D73               	btfss	spiInit@sType,2
  1465  034D  2B4F               	goto	u381
  1466  034E  2B50               	goto	u380
  1467  034F                     u381:
  1468  034F  2B54               	goto	l1359
  1469  0350                     u380:
  1470  0350                     l1355:
  1471                           
  1472                           ;MSSP.c: 10:     {;MSSP.c: 11:         SSPSTAT = sTransmitEdge;
  1473  0350  0872               	movf	spiInit@sTransmitEdge,w
  1474  0351  0094               	movwf	20	;volatile
  1475  0352                     l1357:
  1476                           
  1477                           ;MSSP.c: 12:         TRISC3 = 1;
  1478  0352  1587               	bsf	7,3	;volatile
  1479                           
  1480                           ;MSSP.c: 13:     }
  1481  0353  2B58               	goto	l154
  1482  0354                     l1359:
  1483                           
  1484                           ;MSSP.c: 15:     {;MSSP.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
  1485  0354  0870               	movf	spiInit@sDataSample,w
  1486  0355  0472               	iorwf	spiInit@sTransmitEdge,w
  1487  0356  0094               	movwf	20	;volatile
  1488  0357                     l1361:
  1489                           
  1490                           ;MSSP.c: 17:         TRISC3 = 0;
  1491  0357  1187               	bcf	7,3	;volatile
  1492  0358                     l154:	
  1493                           ;MSSP.c: 18:     }
  1494                           
  1495                           
  1496                           ;MSSP.c: 20:     SSPCON = sType | sClockIdle;
  1497  0358  0873               	movf	spiInit@sType,w
  1498  0359  0471               	iorwf	spiInit@sClockIdle,w
  1499  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1500  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1501  035C  0094               	movwf	20	;volatile
  1502  035D                     l155:
  1503  035D  0008               	return
  1504  035E                     __end_of_spiInit:
  1505                           
  1506                           	psect	text5
  1507  0333                     __ptext5:	
  1508 ;; *************** function _Setup *****************
  1509 ;; Defined at:
  1510 ;;		line 117 in file "master.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		status,2
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           
  1538                           ;psect for function _Setup
  1539  0333                     _Setup:
  1540  0333                     l1363:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _Setup: [status,2]
  1543                           
  1544                           
  1545                           ;master.c: 119:     PORTA = 0;
  1546  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0335  0185               	clrf	5	;volatile
  1549                           
  1550                           ;master.c: 120:     PORTB = 0;
  1551  0336  0186               	clrf	6	;volatile
  1552                           
  1553                           ;master.c: 121:     PORTC = 0;
  1554  0337  0187               	clrf	7	;volatile
  1555                           
  1556                           ;master.c: 122:     PORTD = 0;
  1557  0338  0188               	clrf	8	;volatile
  1558                           
  1559                           ;master.c: 123:     PORTE = 0;
  1560  0339  0189               	clrf	9	;volatile
  1561                           
  1562                           ;master.c: 125:     TRISA = 0B00000000;
  1563  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1564  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1565  033C  0185               	clrf	5	;volatile
  1566                           
  1567                           ;master.c: 126:     TRISB = 0B00000000;
  1568  033D  0186               	clrf	6	;volatile
  1569                           
  1570                           ;master.c: 128:     TRISD = 0B00000000;
  1571  033E  0188               	clrf	8	;volatile
  1572                           
  1573                           ;master.c: 129:     TRISE = 0 ;
  1574  033F  0189               	clrf	9	;volatile
  1575                           
  1576                           ;master.c: 131:     ANSEL = 0B00000000;
  1577  0340  1683               	bsf	3,5	;RP0=1, select bank3
  1578  0341  1703               	bsf	3,6	;RP1=1, select bank3
  1579  0342  0188               	clrf	8	;volatile
  1580                           
  1581                           ;master.c: 132:     ANSELH = 0B00000000;
  1582  0343  0189               	clrf	9	;volatile
  1583  0344                     l1365:
  1584                           
  1585                           ;master.c: 135:     INTCONbits.GIE=1;
  1586  0344  178B               	bsf	11,7	;volatile
  1587  0345                     l1367:
  1588                           
  1589                           ;master.c: 136:     INTCONbits.PEIE=1;
  1590  0345  170B               	bsf	11,6	;volatile
  1591  0346                     l1369:
  1592                           
  1593                           ;master.c: 137:     INTCONbits.RBIE=1;
  1594  0346  158B               	bsf	11,3	;volatile
  1595  0347                     l108:
  1596  0347  0008               	return
  1597  0348                     __end_of_Setup:
  1598                           
  1599                           	psect	text6
  1600  03C9                     __ptext6:	
  1601 ;; *************** function _LCD_IN *****************
  1602 ;; Defined at:
  1603 ;;		line 4 in file "SETLCD.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0
  1619 ;;      Temps:          2       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    2
  1624 ;; This function calls:
  1625 ;;		_LCD_ON
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _LCD_IN
  1633  03C9                     _LCD_IN:
  1634  03C9                     l1371:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _LCD_IN: [wreg+status,2+status,0+pclath+cstack]
  1637                           
  1638                           
  1639                           ;SETLCD.c: 5:     TRISDbits.TRISD6 = 0;
  1640  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1641  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1642  03CB  1308               	bcf	8,6	;volatile
  1643                           
  1644                           ;SETLCD.c: 6:     TRISDbits.TRISD7 = 0;
  1645  03CC  1388               	bcf	8,7	;volatile
  1646  03CD                     l1373:
  1647                           
  1648                           ;SETLCD.c: 7:     TRISB = 0;
  1649  03CD  0186               	clrf	6	;volatile
  1650  03CE                     l1375:
  1651                           
  1652                           ;SETLCD.c: 8:     PORTDbits.RD6 = 0;
  1653  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1654  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1655  03D0  1308               	bcf	8,6	;volatile
  1656  03D1                     l1377:
  1657                           
  1658                           ;SETLCD.c: 9:     PORTDbits.RD7 = 0;
  1659  03D1  1388               	bcf	8,7	;volatile
  1660                           
  1661                           ;SETLCD.c: 10:     PORTB = 0;
  1662  03D2  0186               	clrf	6	;volatile
  1663  03D3                     l1379:
  1664                           
  1665                           ;SETLCD.c: 11:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1666  03D3  3041               	movlw	65
  1667  03D4  00F4               	movwf	??_LCD_IN+1
  1668  03D5  30EE               	movlw	238
  1669  03D6  00F3               	movwf	??_LCD_IN
  1670  03D7                     u437:
  1671  03D7  0BF3               	decfsz	??_LCD_IN,f
  1672  03D8  2BD7               	goto	u437
  1673  03D9  0BF4               	decfsz	??_LCD_IN+1,f
  1674  03DA  2BD7               	goto	u437
  1675  03DB  0000               	nop
  1676  03DC                     l1381:
  1677                           
  1678                           ;SETLCD.c: 12:     LCD_ON(0x02);
  1679  03DC  3002               	movlw	2
  1680  03DD  120A  118A  231E  120A  118A  	fcall	_LCD_ON
  1681  03E2                     l1383:
  1682                           
  1683                           ;SETLCD.c: 13:     LCD_ON(0x38);
  1684  03E2  3038               	movlw	56
  1685  03E3  120A  118A  231E  120A  118A  	fcall	_LCD_ON
  1686  03E8                     l1385:
  1687                           
  1688                           ;SETLCD.c: 14:     LCD_ON(0x0C);
  1689  03E8  300C               	movlw	12
  1690  03E9  120A  118A  231E  120A  118A  	fcall	_LCD_ON
  1691  03EE                     l1387:
  1692                           
  1693                           ;SETLCD.c: 15:     LCD_ON(0x06);
  1694  03EE  3006               	movlw	6
  1695  03EF  120A  118A  231E  120A  118A  	fcall	_LCD_ON
  1696  03F4                     l189:
  1697  03F4  0008               	return
  1698  03F5                     __end_of_LCD_IN:
  1699                           
  1700                           	psect	text7
  1701  02CC                     __ptext7:	
  1702 ;; *************** function _LCD_CL *****************
  1703 ;; Defined at:
  1704 ;;		line 34 in file "SETLCD.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    2
  1725 ;; This function calls:
  1726 ;;		_LCD_ON
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _LCD_CL
  1734  02CC                     _LCD_CL:
  1735  02CC                     l1389:	
  1736                           ;incstack = 0
  1737                           ; Regs used in _LCD_CL: [wreg+status,2+status,0+pclath+cstack]
  1738                           
  1739                           
  1740                           ;SETLCD.c: 35:     LCD_ON(0x01);
  1741  02CC  3001               	movlw	1
  1742  02CD  120A  118A  231E  120A  118A  	fcall	_LCD_ON
  1743  02D2                     l201:
  1744  02D2  0008               	return
  1745  02D3                     __end_of_LCD_CL:
  1746                           
  1747                           	psect	text8
  1748  0685                     __ptext8:	
  1749 ;; *************** function _LCDVAL1 *****************
  1750 ;; Defined at:
  1751 ;;		line 59 in file "SETLCD.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  x               2    0[BANK0 ] int 
  1754 ;;  Z               2    2[BANK0 ] int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       4       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          1       0       0       0       0
  1769 ;;      Totals:         1       4       0       0       0
  1770 ;;Total ram usage:        5 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    4
  1773 ;; This function calls:
  1774 ;;		_LCD_POINT
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _LCDVAL1
  1782  0685                     _LCDVAL1:
  1783  0685                     l1401:	
  1784                           ;incstack = 0
  1785                           ; Regs used in _LCDVAL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1786                           
  1787                           
  1788                           ;SETLCD.c: 60:     switch (Z){
  1789  0685  2FB8               	goto	l1439
  1790  0686                     l1403:
  1791                           
  1792                           ;SETLCD.c: 62:             LCD_POINT(x,2,"0");
  1793  0686  0835               	movf	LCDVAL1@x+1,w
  1794  0687  00F5               	movwf	LCD_POINT@x+1
  1795  0688  0834               	movf	LCDVAL1@x,w
  1796  0689  00F4               	movwf	LCD_POINT@x
  1797  068A  3002               	movlw	2
  1798  068B  00F6               	movwf	LCD_POINT@y
  1799  068C  3000               	movlw	0
  1800  068D  00F7               	movwf	LCD_POINT@y+1
  1801  068E  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1802  068F  00FB               	movwf	??_LCDVAL1
  1803  0690  087B               	movf	??_LCDVAL1,w
  1804  0691  00F8               	movwf	LCD_POINT@D
  1805  0692  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1806                           
  1807                           ;SETLCD.c: 63:             break;
  1808  0697  2FF1               	goto	l237
  1809  0698                     l1405:
  1810                           
  1811                           ;SETLCD.c: 65:             LCD_POINT(x,2,"1");
  1812  0698  0835               	movf	LCDVAL1@x+1,w
  1813  0699  00F5               	movwf	LCD_POINT@x+1
  1814  069A  0834               	movf	LCDVAL1@x,w
  1815  069B  00F4               	movwf	LCD_POINT@x
  1816  069C  3002               	movlw	2
  1817  069D  00F6               	movwf	LCD_POINT@y
  1818  069E  3000               	movlw	0
  1819  069F  00F7               	movwf	LCD_POINT@y+1
  1820  06A0  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1821  06A1  00FB               	movwf	??_LCDVAL1
  1822  06A2  087B               	movf	??_LCDVAL1,w
  1823  06A3  00F8               	movwf	LCD_POINT@D
  1824  06A4  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1825                           
  1826                           ;SETLCD.c: 66:             break;
  1827  06A9  2FF1               	goto	l237
  1828  06AA                     l1407:
  1829                           
  1830                           ;SETLCD.c: 68:             LCD_POINT(x,2,"2");
  1831  06AA  0835               	movf	LCDVAL1@x+1,w
  1832  06AB  00F5               	movwf	LCD_POINT@x+1
  1833  06AC  0834               	movf	LCDVAL1@x,w
  1834  06AD  00F4               	movwf	LCD_POINT@x
  1835  06AE  3002               	movlw	2
  1836  06AF  00F6               	movwf	LCD_POINT@y
  1837  06B0  3000               	movlw	0
  1838  06B1  00F7               	movwf	LCD_POINT@y+1
  1839  06B2  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1840  06B3  00FB               	movwf	??_LCDVAL1
  1841  06B4  087B               	movf	??_LCDVAL1,w
  1842  06B5  00F8               	movwf	LCD_POINT@D
  1843  06B6  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1844                           
  1845                           ;SETLCD.c: 69:             break;
  1846  06BB  2FF1               	goto	l237
  1847  06BC                     l1409:
  1848                           
  1849                           ;SETLCD.c: 71:             LCD_POINT(x,2,"3");
  1850  06BC  0835               	movf	LCDVAL1@x+1,w
  1851  06BD  00F5               	movwf	LCD_POINT@x+1
  1852  06BE  0834               	movf	LCDVAL1@x,w
  1853  06BF  00F4               	movwf	LCD_POINT@x
  1854  06C0  3002               	movlw	2
  1855  06C1  00F6               	movwf	LCD_POINT@y
  1856  06C2  3000               	movlw	0
  1857  06C3  00F7               	movwf	LCD_POINT@y+1
  1858  06C4  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1859  06C5  00FB               	movwf	??_LCDVAL1
  1860  06C6  087B               	movf	??_LCDVAL1,w
  1861  06C7  00F8               	movwf	LCD_POINT@D
  1862  06C8  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1863                           
  1864                           ;SETLCD.c: 72:             break;
  1865  06CD  2FF1               	goto	l237
  1866  06CE                     l1411:
  1867                           
  1868                           ;SETLCD.c: 74:             LCD_POINT(x,2,"4");
  1869  06CE  0835               	movf	LCDVAL1@x+1,w
  1870  06CF  00F5               	movwf	LCD_POINT@x+1
  1871  06D0  0834               	movf	LCDVAL1@x,w
  1872  06D1  00F4               	movwf	LCD_POINT@x
  1873  06D2  3002               	movlw	2
  1874  06D3  00F6               	movwf	LCD_POINT@y
  1875  06D4  3000               	movlw	0
  1876  06D5  00F7               	movwf	LCD_POINT@y+1
  1877  06D6  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1878  06D7  00FB               	movwf	??_LCDVAL1
  1879  06D8  087B               	movf	??_LCDVAL1,w
  1880  06D9  00F8               	movwf	LCD_POINT@D
  1881  06DA  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1882                           
  1883                           ;SETLCD.c: 75:             break;
  1884  06DF  2FF1               	goto	l237
  1885  06E0                     l1413:
  1886                           
  1887                           ;SETLCD.c: 77:             LCD_POINT(x,2,"5");
  1888  06E0  0835               	movf	LCDVAL1@x+1,w
  1889  06E1  00F5               	movwf	LCD_POINT@x+1
  1890  06E2  0834               	movf	LCDVAL1@x,w
  1891  06E3  00F4               	movwf	LCD_POINT@x
  1892  06E4  3002               	movlw	2
  1893  06E5  00F6               	movwf	LCD_POINT@y
  1894  06E6  3000               	movlw	0
  1895  06E7  00F7               	movwf	LCD_POINT@y+1
  1896  06E8  301B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1897  06E9  00FB               	movwf	??_LCDVAL1
  1898  06EA  087B               	movf	??_LCDVAL1,w
  1899  06EB  00F8               	movwf	LCD_POINT@D
  1900  06EC  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1901                           
  1902                           ;SETLCD.c: 78:             break;
  1903  06F1  2FF1               	goto	l237
  1904  06F2                     l1415:
  1905                           
  1906                           ;SETLCD.c: 80:             LCD_POINT(x,2,"6");
  1907  06F2  0835               	movf	LCDVAL1@x+1,w
  1908  06F3  00F5               	movwf	LCD_POINT@x+1
  1909  06F4  0834               	movf	LCDVAL1@x,w
  1910  06F5  00F4               	movwf	LCD_POINT@x
  1911  06F6  3002               	movlw	2
  1912  06F7  00F6               	movwf	LCD_POINT@y
  1913  06F8  3000               	movlw	0
  1914  06F9  00F7               	movwf	LCD_POINT@y+1
  1915  06FA  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1916  06FB  00FB               	movwf	??_LCDVAL1
  1917  06FC  087B               	movf	??_LCDVAL1,w
  1918  06FD  00F8               	movwf	LCD_POINT@D
  1919  06FE  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1920                           
  1921                           ;SETLCD.c: 81:             break;
  1922  0703  2FF1               	goto	l237
  1923  0704                     l1417:
  1924                           
  1925                           ;SETLCD.c: 83:             LCD_POINT(x,2,"7");
  1926  0704  0835               	movf	LCDVAL1@x+1,w
  1927  0705  00F5               	movwf	LCD_POINT@x+1
  1928  0706  0834               	movf	LCDVAL1@x,w
  1929  0707  00F4               	movwf	LCD_POINT@x
  1930  0708  3002               	movlw	2
  1931  0709  00F6               	movwf	LCD_POINT@y
  1932  070A  3000               	movlw	0
  1933  070B  00F7               	movwf	LCD_POINT@y+1
  1934  070C  301F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1935  070D  00FB               	movwf	??_LCDVAL1
  1936  070E  087B               	movf	??_LCDVAL1,w
  1937  070F  00F8               	movwf	LCD_POINT@D
  1938  0710  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1939                           
  1940                           ;SETLCD.c: 84:             break;
  1941  0715  2FF1               	goto	l237
  1942  0716                     l1419:
  1943                           
  1944                           ;SETLCD.c: 86:             LCD_POINT(x,2,"8");
  1945  0716  0835               	movf	LCDVAL1@x+1,w
  1946  0717  00F5               	movwf	LCD_POINT@x+1
  1947  0718  0834               	movf	LCDVAL1@x,w
  1948  0719  00F4               	movwf	LCD_POINT@x
  1949  071A  3002               	movlw	2
  1950  071B  00F6               	movwf	LCD_POINT@y
  1951  071C  3000               	movlw	0
  1952  071D  00F7               	movwf	LCD_POINT@y+1
  1953  071E  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1954  071F  00FB               	movwf	??_LCDVAL1
  1955  0720  087B               	movf	??_LCDVAL1,w
  1956  0721  00F8               	movwf	LCD_POINT@D
  1957  0722  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1958                           
  1959                           ;SETLCD.c: 87:             break;
  1960  0727  2FF1               	goto	l237
  1961  0728                     l1421:
  1962                           
  1963                           ;SETLCD.c: 89:             LCD_POINT(x,2,"9");
  1964  0728  0835               	movf	LCDVAL1@x+1,w
  1965  0729  00F5               	movwf	LCD_POINT@x+1
  1966  072A  0834               	movf	LCDVAL1@x,w
  1967  072B  00F4               	movwf	LCD_POINT@x
  1968  072C  3002               	movlw	2
  1969  072D  00F6               	movwf	LCD_POINT@y
  1970  072E  3000               	movlw	0
  1971  072F  00F7               	movwf	LCD_POINT@y+1
  1972  0730  3023               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1973  0731  00FB               	movwf	??_LCDVAL1
  1974  0732  087B               	movf	??_LCDVAL1,w
  1975  0733  00F8               	movwf	LCD_POINT@D
  1976  0734  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1977                           
  1978                           ;SETLCD.c: 90:             break;
  1979  0739  2FF1               	goto	l237
  1980  073A                     l1423:
  1981                           
  1982                           ;SETLCD.c: 92:             LCD_POINT (x,2,"A");
  1983  073A  0835               	movf	LCDVAL1@x+1,w
  1984  073B  00F5               	movwf	LCD_POINT@x+1
  1985  073C  0834               	movf	LCDVAL1@x,w
  1986  073D  00F4               	movwf	LCD_POINT@x
  1987  073E  3002               	movlw	2
  1988  073F  00F6               	movwf	LCD_POINT@y
  1989  0740  3000               	movlw	0
  1990  0741  00F7               	movwf	LCD_POINT@y+1
  1991  0742  3025               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1992  0743  00FB               	movwf	??_LCDVAL1
  1993  0744  087B               	movf	??_LCDVAL1,w
  1994  0745  00F8               	movwf	LCD_POINT@D
  1995  0746  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  1996                           
  1997                           ;SETLCD.c: 93:             break;
  1998  074B  2FF1               	goto	l237
  1999  074C                     l1425:
  2000                           
  2001                           ;SETLCD.c: 95:             LCD_POINT (x,2,"B");
  2002  074C  0835               	movf	LCDVAL1@x+1,w
  2003  074D  00F5               	movwf	LCD_POINT@x+1
  2004  074E  0834               	movf	LCDVAL1@x,w
  2005  074F  00F4               	movwf	LCD_POINT@x
  2006  0750  3002               	movlw	2
  2007  0751  00F6               	movwf	LCD_POINT@y
  2008  0752  3000               	movlw	0
  2009  0753  00F7               	movwf	LCD_POINT@y+1
  2010  0754  3027               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2011  0755  00FB               	movwf	??_LCDVAL1
  2012  0756  087B               	movf	??_LCDVAL1,w
  2013  0757  00F8               	movwf	LCD_POINT@D
  2014  0758  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2015                           
  2016                           ;SETLCD.c: 96:             break;
  2017  075D  2FF1               	goto	l237
  2018  075E                     l1427:
  2019                           
  2020                           ;SETLCD.c: 98:             LCD_POINT (x,2,"C");
  2021  075E  0835               	movf	LCDVAL1@x+1,w
  2022  075F  00F5               	movwf	LCD_POINT@x+1
  2023  0760  0834               	movf	LCDVAL1@x,w
  2024  0761  00F4               	movwf	LCD_POINT@x
  2025  0762  3002               	movlw	2
  2026  0763  00F6               	movwf	LCD_POINT@y
  2027  0764  3000               	movlw	0
  2028  0765  00F7               	movwf	LCD_POINT@y+1
  2029  0766  3029               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2030  0767  00FB               	movwf	??_LCDVAL1
  2031  0768  087B               	movf	??_LCDVAL1,w
  2032  0769  00F8               	movwf	LCD_POINT@D
  2033  076A  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2034                           
  2035                           ;SETLCD.c: 99:             break;
  2036  076F  2FF1               	goto	l237
  2037  0770                     l1429:
  2038                           
  2039                           ;SETLCD.c: 101:             LCD_POINT (x,2,"D");
  2040  0770  0835               	movf	LCDVAL1@x+1,w
  2041  0771  00F5               	movwf	LCD_POINT@x+1
  2042  0772  0834               	movf	LCDVAL1@x,w
  2043  0773  00F4               	movwf	LCD_POINT@x
  2044  0774  3002               	movlw	2
  2045  0775  00F6               	movwf	LCD_POINT@y
  2046  0776  3000               	movlw	0
  2047  0777  00F7               	movwf	LCD_POINT@y+1
  2048  0778  302B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2049  0779  00FB               	movwf	??_LCDVAL1
  2050  077A  087B               	movf	??_LCDVAL1,w
  2051  077B  00F8               	movwf	LCD_POINT@D
  2052  077C  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2053                           
  2054                           ;SETLCD.c: 102:             break;
  2055  0781  2FF1               	goto	l237
  2056  0782                     l1431:
  2057                           
  2058                           ;SETLCD.c: 104:             LCD_POINT (x,2,"E");
  2059  0782  0835               	movf	LCDVAL1@x+1,w
  2060  0783  00F5               	movwf	LCD_POINT@x+1
  2061  0784  0834               	movf	LCDVAL1@x,w
  2062  0785  00F4               	movwf	LCD_POINT@x
  2063  0786  3002               	movlw	2
  2064  0787  00F6               	movwf	LCD_POINT@y
  2065  0788  3000               	movlw	0
  2066  0789  00F7               	movwf	LCD_POINT@y+1
  2067  078A  302D               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2068  078B  00FB               	movwf	??_LCDVAL1
  2069  078C  087B               	movf	??_LCDVAL1,w
  2070  078D  00F8               	movwf	LCD_POINT@D
  2071  078E  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2072                           
  2073                           ;SETLCD.c: 105:             break;
  2074  0793  2FF1               	goto	l237
  2075  0794                     l1433:
  2076                           
  2077                           ;SETLCD.c: 107:             LCD_POINT (x,2,"F");
  2078  0794  0835               	movf	LCDVAL1@x+1,w
  2079  0795  00F5               	movwf	LCD_POINT@x+1
  2080  0796  0834               	movf	LCDVAL1@x,w
  2081  0797  00F4               	movwf	LCD_POINT@x
  2082  0798  3002               	movlw	2
  2083  0799  00F6               	movwf	LCD_POINT@y
  2084  079A  3000               	movlw	0
  2085  079B  00F7               	movwf	LCD_POINT@y+1
  2086  079C  302F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2087  079D  00FB               	movwf	??_LCDVAL1
  2088  079E  087B               	movf	??_LCDVAL1,w
  2089  079F  00F8               	movwf	LCD_POINT@D
  2090  07A0  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2091                           
  2092                           ;SETLCD.c: 108:             break;
  2093  07A5  2FF1               	goto	l237
  2094  07A6                     l1435:
  2095                           
  2096                           ;SETLCD.c: 110:             LCD_POINT(x,2,".");
  2097  07A6  0835               	movf	LCDVAL1@x+1,w
  2098  07A7  00F5               	movwf	LCD_POINT@x+1
  2099  07A8  0834               	movf	LCDVAL1@x,w
  2100  07A9  00F4               	movwf	LCD_POINT@x
  2101  07AA  3002               	movlw	2
  2102  07AB  00F6               	movwf	LCD_POINT@y
  2103  07AC  3000               	movlw	0
  2104  07AD  00F7               	movwf	LCD_POINT@y+1
  2105  07AE  300F               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2106  07AF  00FB               	movwf	??_LCDVAL1
  2107  07B0  087B               	movf	??_LCDVAL1,w
  2108  07B1  00F8               	movwf	LCD_POINT@D
  2109  07B2  120A  118A  23A2  120A  118A  	fcall	_LCD_POINT
  2110                           
  2111                           ;SETLCD.c: 111:             break;
  2112  07B7  2FF1               	goto	l237
  2113  07B8                     l1439:
  2114                           
  2115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2116                           ; Switch size 1, requested type "simple"
  2117                           ; Number of cases is 1, Range of values is 0 to 0
  2118                           ; switch strategies available:
  2119                           ; Name         Instructions Cycles
  2120                           ; simple_byte            4     3 (average)
  2121                           ; direct_byte           11     8 (fixed)
  2122                           ; jumptable            260     6 (fixed)
  2123                           ;	Chosen strategy is simple_byte
  2124  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2125  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2126  07BA  0837               	movf	LCDVAL1@Z+1,w
  2127  07BB  3A00               	xorlw	0	; case 0
  2128  07BC  1903               	skipnz
  2129  07BD  2FBF               	goto	l1611
  2130  07BE  2FA6               	goto	l1435
  2131  07BF                     l1611:
  2132                           
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 16, Range of values is 0 to 15
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte           49    25 (average)
  2138                           ; direct_byte           56     8 (fixed)
  2139                           ; jumptable            260     6 (fixed)
  2140                           ;	Chosen strategy is simple_byte
  2141  07BF  0836               	movf	LCDVAL1@Z,w
  2142  07C0  3A00               	xorlw	0	; case 0
  2143  07C1  1903               	skipnz
  2144  07C2  2E86               	goto	l1403
  2145  07C3  3A01               	xorlw	1	; case 1
  2146  07C4  1903               	skipnz
  2147  07C5  2E98               	goto	l1405
  2148  07C6  3A03               	xorlw	3	; case 2
  2149  07C7  1903               	skipnz
  2150  07C8  2EAA               	goto	l1407
  2151  07C9  3A01               	xorlw	1	; case 3
  2152  07CA  1903               	skipnz
  2153  07CB  2EBC               	goto	l1409
  2154  07CC  3A07               	xorlw	7	; case 4
  2155  07CD  1903               	skipnz
  2156  07CE  2ECE               	goto	l1411
  2157  07CF  3A01               	xorlw	1	; case 5
  2158  07D0  1903               	skipnz
  2159  07D1  2EE0               	goto	l1413
  2160  07D2  3A03               	xorlw	3	; case 6
  2161  07D3  1903               	skipnz
  2162  07D4  2EF2               	goto	l1415
  2163  07D5  3A01               	xorlw	1	; case 7
  2164  07D6  1903               	skipnz
  2165  07D7  2F04               	goto	l1417
  2166  07D8  3A0F               	xorlw	15	; case 8
  2167  07D9  1903               	skipnz
  2168  07DA  2F16               	goto	l1419
  2169  07DB  3A01               	xorlw	1	; case 9
  2170  07DC  1903               	skipnz
  2171  07DD  2F28               	goto	l1421
  2172  07DE  3A03               	xorlw	3	; case 10
  2173  07DF  1903               	skipnz
  2174  07E0  2F3A               	goto	l1423
  2175  07E1  3A01               	xorlw	1	; case 11
  2176  07E2  1903               	skipnz
  2177  07E3  2F4C               	goto	l1425
  2178  07E4  3A07               	xorlw	7	; case 12
  2179  07E5  1903               	skipnz
  2180  07E6  2F5E               	goto	l1427
  2181  07E7  3A01               	xorlw	1	; case 13
  2182  07E8  1903               	skipnz
  2183  07E9  2F70               	goto	l1429
  2184  07EA  3A03               	xorlw	3	; case 14
  2185  07EB  1903               	skipnz
  2186  07EC  2F82               	goto	l1431
  2187  07ED  3A01               	xorlw	1	; case 15
  2188  07EE  1903               	skipnz
  2189  07EF  2F94               	goto	l1433
  2190  07F0  2FA6               	goto	l1435
  2191  07F1                     l237:
  2192  07F1  0008               	return
  2193  07F2                     __end_of_LCDVAL1:
  2194                           
  2195                           	psect	text9
  2196  03A2                     __ptext9:	
  2197 ;; *************** function _LCD_POINT *****************
  2198 ;; Defined at:
  2199 ;;		line 43 in file "SETLCD.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  x               2    4[COMMON] int 
  2202 ;;  y               2    6[COMMON] int 
  2203 ;;  D               1    8[COMMON] PTR unsigned char 
  2204 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2205 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2206 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2207 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2208 ;;		 -> STR_2(2), STR_1(14), 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  LOC             1   10[COMMON] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         5       0       0       0       0
  2221 ;;      Locals:         1       0       0       0       0
  2222 ;;      Temps:          1       0       0       0       0
  2223 ;;      Totals:         7       0       0       0       0
  2224 ;;Total ram usage:        7 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    3
  2227 ;; This function calls:
  2228 ;;		_LCD_ON
  2229 ;;		_LCD_P
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;;		_LCDVAL1
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _LCD_POINT
  2238  03A2                     _LCD_POINT:
  2239  03A2                     l1259:	
  2240                           ;incstack = 0
  2241                           ; Regs used in _LCD_POINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2242                           
  2243                           
  2244                           ;SETLCD.c: 44:     char LOC;;SETLCD.c: 45:     switch (y){
  2245  03A2  2BAF               	goto	l1269
  2246  03A3                     l1261:
  2247                           
  2248                           ;SETLCD.c: 47:             LOC = 0x80 + x;
  2249  03A3  0874               	movf	LCD_POINT@x,w
  2250  03A4  3E80               	addlw	128
  2251  03A5  00F9               	movwf	??_LCD_POINT
  2252  03A6  0879               	movf	??_LCD_POINT,w
  2253  03A7  00FA               	movwf	LCD_POINT@LOC
  2254                           
  2255                           ;SETLCD.c: 48:             break;
  2256  03A8  2BBC               	goto	l1271
  2257  03A9                     l1263:
  2258                           
  2259                           ;SETLCD.c: 50:             LOC = 0xC0 + x;
  2260  03A9  0874               	movf	LCD_POINT@x,w
  2261  03AA  3EC0               	addlw	192
  2262  03AB  00F9               	movwf	??_LCD_POINT
  2263  03AC  0879               	movf	??_LCD_POINT,w
  2264  03AD  00FA               	movwf	LCD_POINT@LOC
  2265                           
  2266                           ;SETLCD.c: 51:             break;
  2267  03AE  2BBC               	goto	l1271
  2268  03AF                     l1269:
  2269                           
  2270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2271                           ; Switch size 1, requested type "simple"
  2272                           ; Number of cases is 1, Range of values is 0 to 0
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte            4     3 (average)
  2276                           ; direct_byte           11     8 (fixed)
  2277                           ; jumptable            260     6 (fixed)
  2278                           ;	Chosen strategy is simple_byte
  2279  03AF  0877               	movf	LCD_POINT@y+1,w
  2280  03B0  3A00               	xorlw	0	; case 0
  2281  03B1  1903               	skipnz
  2282  03B2  2BB4               	goto	l1613
  2283  03B3  2BA3               	goto	l1261
  2284  03B4                     l1613:
  2285                           
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 2, Range of values is 1 to 2
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            7     4 (average)
  2291                           ; direct_byte           17    11 (fixed)
  2292                           ; jumptable            263     9 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  03B4  0876               	movf	LCD_POINT@y,w
  2295  03B5  3A01               	xorlw	1	; case 1
  2296  03B6  1903               	skipnz
  2297  03B7  2BA3               	goto	l1261
  2298  03B8  3A03               	xorlw	3	; case 2
  2299  03B9  1903               	skipnz
  2300  03BA  2BA9               	goto	l1263
  2301  03BB  2BA3               	goto	l1261
  2302  03BC                     l1271:
  2303                           
  2304                           ;SETLCD.c: 56:     LCD_ON(LOC);
  2305  03BC  087A               	movf	LCD_POINT@LOC,w
  2306  03BD  120A  118A  231E  120A  118A  	fcall	_LCD_ON
  2307  03C2                     l1273:
  2308                           
  2309                           ;SETLCD.c: 57:     LCD_P(D);
  2310  03C2  0878               	movf	LCD_POINT@D,w
  2311  03C3  120A  118A  235E  120A  118A  	fcall	_LCD_P
  2312  03C8                     l215:
  2313  03C8  0008               	return
  2314  03C9                     __end_of_LCD_POINT:
  2315                           
  2316                           	psect	text10
  2317  035E                     __ptext10:	
  2318 ;; *************** function _LCD_P *****************
  2319 ;; Defined at:
  2320 ;;		line 37 in file "SETLCD.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  D               1    wreg     PTR unsigned char 
  2323 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2324 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2325 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2326 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2327 ;;		 -> STR_2(2), STR_1(14), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  D               1    3[COMMON] PTR unsigned char 
  2330 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2331 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2332 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2333 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2334 ;;		 -> STR_2(2), STR_1(14), 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0
  2346 ;;      Temps:          1       0       0       0       0
  2347 ;;      Totals:         2       0       0       0       0
  2348 ;;Total ram usage:        2 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		_LCD_PLAY
  2353 ;; This function is called by:
  2354 ;;		_LCD_POINT
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _LCD_P
  2360  035E                     _LCD_P:
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _LCD_P: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2364                           ;LCD_P@D stored from wreg
  2365  035E  00F3               	movwf	LCD_P@D
  2366  035F                     l1251:
  2367                           
  2368                           ;SETLCD.c: 38:     while (*D){
  2369  035F  2B70               	goto	l1257
  2370  0360                     l1253:
  2371                           
  2372                           ;SETLCD.c: 39:         LCD_PLAY(*D);
  2373  0360  0873               	movf	LCD_P@D,w
  2374  0361  0084               	movwf	4
  2375  0362  120A  118A  2003  120A  118A  	fcall	stringdir
  2376  0367  120A  118A  22F8  120A  118A  	fcall	_LCD_PLAY
  2377  036C                     l1255:
  2378                           
  2379                           ;SETLCD.c: 40:         D++;
  2380  036C  3001               	movlw	1
  2381  036D  00F2               	movwf	??_LCD_P
  2382  036E  0872               	movf	??_LCD_P,w
  2383  036F  07F3               	addwf	LCD_P@D,f
  2384  0370                     l1257:
  2385                           
  2386                           ;SETLCD.c: 38:     while (*D){
  2387  0370  0873               	movf	LCD_P@D,w
  2388  0371  0084               	movwf	4
  2389  0372  120A  118A  2003  120A  118A  	fcall	stringdir
  2390  0377  3A00               	xorlw	0
  2391  0378  1D03               	skipz
  2392  0379  2B7B               	goto	u201
  2393  037A  2B7C               	goto	u200
  2394  037B                     u201:
  2395  037B  2B60               	goto	l1253
  2396  037C                     u200:
  2397  037C                     l207:
  2398  037C  0008               	return
  2399  037D                     __end_of_LCD_P:
  2400                           
  2401                           	psect	text11
  2402  02F8                     __ptext11:	
  2403 ;; *************** function _LCD_PLAY *****************
  2404 ;; Defined at:
  2405 ;;		line 28 in file "SETLCD.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  D               1    wreg     unsigned char 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  D               1    1[COMMON] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         0       0       0       0       0
  2420 ;;      Locals:         1       0       0       0       0
  2421 ;;      Temps:          1       0       0       0       0
  2422 ;;      Totals:         2       0       0       0       0
  2423 ;;Total ram usage:        2 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    1
  2426 ;; This function calls:
  2427 ;;		_LCD_TIM
  2428 ;; This function is called by:
  2429 ;;		_LCD_P
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _LCD_PLAY
  2435  02F8                     _LCD_PLAY:
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _LCD_PLAY: [wreg+status,2+status,0+pclath+cstack]
  2439                           ;LCD_PLAY@D stored from wreg
  2440  02F8  00F1               	movwf	LCD_PLAY@D
  2441  02F9                     l1235:
  2442                           
  2443                           ;SETLCD.c: 29:     PORTDbits.RD6=1;
  2444  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2445  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2446  02FB  1708               	bsf	8,6	;volatile
  2447  02FC                     l1237:
  2448                           
  2449                           ;SETLCD.c: 30:     PORTB=D;
  2450  02FC  0871               	movf	LCD_PLAY@D,w
  2451  02FD  0086               	movwf	6	;volatile
  2452  02FE                     l1239:
  2453                           
  2454                           ;SETLCD.c: 31:     LCD_TIM();
  2455  02FE  120A  118A  22EB  120A  118A  	fcall	_LCD_TIM
  2456  0303                     l1241:
  2457                           
  2458                           ;SETLCD.c: 32:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2459  0303  3010               	movlw	16
  2460  0304  00F0               	movwf	??_LCD_PLAY
  2461  0305                     u447:
  2462  0305  0BF0               	decfsz	??_LCD_PLAY,f
  2463  0306  2B05               	goto	u447
  2464  0307  0000               	nop
  2465  0308                     l198:
  2466  0308  0008               	return
  2467  0309                     __end_of_LCD_PLAY:
  2468                           
  2469                           	psect	text12
  2470  031E                     __ptext12:	
  2471 ;; *************** function _LCD_ON *****************
  2472 ;; Defined at:
  2473 ;;		line 17 in file "SETLCD.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  C               1    wreg     unsigned char 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  C               1    2[COMMON] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       0       0
  2488 ;;      Locals:         1       0       0       0       0
  2489 ;;      Temps:          2       0       0       0       0
  2490 ;;      Totals:         3       0       0       0       0
  2491 ;;Total ram usage:        3 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    1
  2494 ;; This function calls:
  2495 ;;		_LCD_TIM
  2496 ;; This function is called by:
  2497 ;;		_LCD_IN
  2498 ;;		_LCD_CL
  2499 ;;		_LCD_POINT
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function _LCD_ON
  2505  031E                     _LCD_ON:
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  2509                           ;LCD_ON@C stored from wreg
  2510  031E  00F2               	movwf	LCD_ON@C
  2511  031F                     l1243:
  2512                           
  2513                           ;SETLCD.c: 18:     PORTDbits.RD6=0;
  2514  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0321  1308               	bcf	8,6	;volatile
  2517  0322                     l1245:
  2518                           
  2519                           ;SETLCD.c: 19:     PORTB=C;
  2520  0322  0872               	movf	LCD_ON@C,w
  2521  0323  0086               	movwf	6	;volatile
  2522  0324                     l1247:
  2523                           
  2524                           ;SETLCD.c: 20:     LCD_TIM();
  2525  0324  120A  118A  22EB  120A  118A  	fcall	_LCD_TIM
  2526  0329                     l1249:
  2527                           
  2528                           ;SETLCD.c: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2529  0329  3003               	movlw	3
  2530  032A  00F1               	movwf	??_LCD_ON+1
  2531  032B  3097               	movlw	151
  2532  032C  00F0               	movwf	??_LCD_ON
  2533  032D                     u457:
  2534  032D  0BF0               	decfsz	??_LCD_ON,f
  2535  032E  2B2D               	goto	u457
  2536  032F  0BF1               	decfsz	??_LCD_ON+1,f
  2537  0330  2B2D               	goto	u457
  2538  0331  2B32               	nop2
  2539  0332                     l192:
  2540  0332  0008               	return
  2541  0333                     __end_of_LCD_ON:
  2542                           
  2543                           	psect	text13
  2544  02EB                     __ptext13:	
  2545 ;; *************** function _LCD_TIM *****************
  2546 ;; Defined at:
  2547 ;;		line 23 in file "SETLCD.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		None
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_LCD_ON
  2571 ;;		_LCD_PLAY
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _LCD_TIM
  2577  02EB                     _LCD_TIM:
  2578  02EB                     l1233:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _LCD_TIM: []
  2581                           
  2582                           
  2583                           ;SETLCD.c: 24:     PORTDbits.RD7 = 1;
  2584  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2585  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2586  02ED  1788               	bsf	8,7	;volatile
  2587                           
  2588                           ;SETLCD.c: 25:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2589  02EE  2AEF               	nop2	;2 cycle nop
  2590  02EF  2AF0               	nop2	;2 cycle nop
  2591  02F0  0000               	nop
  2592                           
  2593                           ;SETLCD.c: 26:     PORTDbits.RD7 = 0;
  2594  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2595  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2596  02F3  1388               	bcf	8,7	;volatile
  2597                           
  2598                           ;SETLCD.c: 27:     _delay((unsigned long)((5)*(4000000/4000000.0)));}
  2599  02F4  2AF5               	nop2	;2 cycle nop
  2600  02F5  2AF6               	nop2	;2 cycle nop
  2601  02F6  0000               	nop
  2602  02F7                     l195:
  2603  02F7  0008               	return
  2604  02F8                     __end_of_LCD_TIM:
  2605                           
  2606                           	psect	text14
  2607  03F5                     __ptext14:	
  2608 ;; *************** function _CONVET_cont *****************
  2609 ;; Defined at:
  2610 ;;		line 154 in file "master.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0
  2626 ;;      Temps:          0       4       0       0       0
  2627 ;;      Totals:         0       4       0       0       0
  2628 ;;Total ram usage:        4 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    1
  2631 ;; This function calls:
  2632 ;;		___awdiv
  2633 ;;		___bmul
  2634 ;;		___wmul
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           
  2641                           ;psect for function _CONVET_cont
  2642  03F5                     _CONVET_cont:
  2643  03F5                     l1399:	
  2644                           ;incstack = 0
  2645                           ; Regs used in _CONVET_cont: [wreg+status,2+status,0+pclath+cstack]
  2646                           
  2647                           
  2648                           ;master.c: 155:     cont_1=(cont/100);
  2649  03F5  3064               	movlw	100
  2650  03F6  00F6               	movwf	___awdiv@divisor
  2651  03F7  3000               	movlw	0
  2652  03F8  00F7               	movwf	___awdiv@divisor+1
  2653  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2654  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2655  03FB  0826               	movf	_cont,w
  2656  03FC  00B8               	movwf	??_CONVET_cont
  2657  03FD  01B9               	clrf	??_CONVET_cont+1
  2658  03FE  0838               	movf	??_CONVET_cont,w
  2659  03FF  00F8               	movwf	___awdiv@dividend
  2660  0400  0839               	movf	??_CONVET_cont+1,w
  2661  0401  00F9               	movwf	___awdiv@dividend+1
  2662  0402  120A  118A  2454  120A  118A  	fcall	___awdiv
  2663  0407  0876               	movf	?___awdiv,w
  2664  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2666  040A  00BA               	movwf	??_CONVET_cont+2
  2667  040B  083A               	movf	??_CONVET_cont+2,w
  2668  040C  00A9               	movwf	_cont_1
  2669                           
  2670                           ;master.c: 156:     cont_2=((cont)-(cont_1*100))/10;
  2671  040D  300A               	movlw	10
  2672  040E  00F6               	movwf	___awdiv@divisor
  2673  040F  3000               	movlw	0
  2674  0410  00F7               	movwf	___awdiv@divisor+1
  2675  0411  0829               	movf	_cont_1,w
  2676  0412  00B8               	movwf	??_CONVET_cont
  2677  0413  01B9               	clrf	??_CONVET_cont+1
  2678  0414  0838               	movf	??_CONVET_cont,w
  2679  0415  00F0               	movwf	___wmul@multiplier
  2680  0416  0839               	movf	??_CONVET_cont+1,w
  2681  0417  00F1               	movwf	___wmul@multiplier+1
  2682  0418  309C               	movlw	156
  2683  0419  00F2               	movwf	___wmul@multiplicand
  2684  041A  30FF               	movlw	255
  2685  041B  00F3               	movwf	___wmul@multiplicand+1
  2686  041C  120A  118A  237D  120A  118A  	fcall	___wmul
  2687  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0423  0826               	movf	_cont,w
  2690  0424  0770               	addwf	?___wmul,w
  2691  0425  00F8               	movwf	___awdiv@dividend
  2692  0426  0871               	movf	?___wmul+1,w
  2693  0427  1803               	skipnc
  2694  0428  0A71               	incf	?___wmul+1,w
  2695  0429  00F9               	movwf	___awdiv@dividend+1
  2696  042A  120A  118A  2454  120A  118A  	fcall	___awdiv
  2697  042F  0876               	movf	?___awdiv,w
  2698  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0432  00BA               	movwf	??_CONVET_cont+2
  2701  0433  083A               	movf	??_CONVET_cont+2,w
  2702  0434  00A8               	movwf	_cont_2
  2703                           
  2704                           ;master.c: 157:     cont_3=((cont)-(cont_1*100)-(cont_2*10));
  2705  0435  309C               	movlw	156
  2706  0436  00B8               	movwf	??_CONVET_cont
  2707  0437  0838               	movf	??_CONVET_cont,w
  2708  0438  00F0               	movwf	___bmul@multiplicand
  2709  0439  0829               	movf	_cont_1,w
  2710  043A  120A  118A  2309  120A  118A  	fcall	___bmul
  2711  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0441  00B9               	movwf	??_CONVET_cont+1
  2714  0442  30F6               	movlw	246
  2715  0443  00BA               	movwf	??_CONVET_cont+2
  2716  0444  083A               	movf	??_CONVET_cont+2,w
  2717  0445  00F0               	movwf	___bmul@multiplicand
  2718  0446  0828               	movf	_cont_2,w
  2719  0447  120A  118A  2309  120A  118A  	fcall	___bmul
  2720  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2721  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2722  044E  0739               	addwf	??_CONVET_cont+1,w
  2723  044F  0726               	addwf	_cont,w
  2724  0450  00BB               	movwf	??_CONVET_cont+3
  2725  0451  083B               	movf	??_CONVET_cont+3,w
  2726  0452  00A7               	movwf	_cont_3
  2727  0453                     l117:
  2728  0453  0008               	return
  2729  0454                     __end_of_CONVET_cont:
  2730                           
  2731                           	psect	text15
  2732  04BD                     __ptext15:	
  2733 ;; *************** function _CONV *****************
  2734 ;; Defined at:
  2735 ;;		line 143 in file "master.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, pclath, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         0       0       0       0       0
  2750 ;;      Locals:         2       0       0       0       0
  2751 ;;      Temps:          0       8       0       0       0
  2752 ;;      Totals:         2       8       0       0       0
  2753 ;;Total ram usage:       10 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    1
  2756 ;; This function calls:
  2757 ;;		___awdiv
  2758 ;;		___bmul
  2759 ;;		___wmul
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _CONV
  2767  04BD                     _CONV:
  2768  04BD                     l1445:	
  2769                           ;incstack = 0
  2770                           ; Regs used in _CONV: [wreg+status,2+status,0+pclath+cstack]
  2771                           
  2772                           
  2773                           ;master.c: 145:     POT1_U=(L/51);
  2774  04BD  3033               	movlw	51
  2775  04BE  00F6               	movwf	___awdiv@divisor
  2776  04BF  3000               	movlw	0
  2777  04C0  00F7               	movwf	___awdiv@divisor+1
  2778  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2779  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2780  04C3  0833               	movf	_L,w
  2781  04C4  00B8               	movwf	??_CONV
  2782  04C5  01B9               	clrf	??_CONV+1
  2783  04C6  0838               	movf	??_CONV,w
  2784  04C7  00F8               	movwf	___awdiv@dividend
  2785  04C8  0839               	movf	??_CONV+1,w
  2786  04C9  00F9               	movwf	___awdiv@dividend+1
  2787  04CA  120A  118A  2454  120A  118A  	fcall	___awdiv
  2788  04CF  0876               	movf	?___awdiv,w
  2789  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2790  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2791  04D2  00BA               	movwf	??_CONV+2
  2792  04D3  083A               	movf	??_CONV+2,w
  2793  04D4  00FD               	movwf	_POT1_U
  2794                           
  2795                           ;master.c: 146:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  2796  04D5  3033               	movlw	51
  2797  04D6  00F6               	movwf	___awdiv@divisor
  2798  04D7  3000               	movlw	0
  2799  04D8  00F7               	movwf	___awdiv@divisor+1
  2800  04D9  0833               	movf	_L,w
  2801  04DA  00B8               	movwf	??_CONV
  2802  04DB  01B9               	clrf	??_CONV+1
  2803  04DC  0838               	movf	??_CONV,w
  2804  04DD  00F0               	movwf	___wmul@multiplier
  2805  04DE  0839               	movf	??_CONV+1,w
  2806  04DF  00F1               	movwf	___wmul@multiplier+1
  2807  04E0  3064               	movlw	100
  2808  04E1  00F2               	movwf	___wmul@multiplicand
  2809  04E2  3000               	movlw	0
  2810  04E3  00F3               	movwf	___wmul@multiplicand+1
  2811  04E4  120A  118A  237D  120A  118A  	fcall	___wmul
  2812  04E9  0871               	movf	?___wmul+1,w
  2813  04EA  00F9               	movwf	___awdiv@dividend+1
  2814  04EB  0870               	movf	?___wmul,w
  2815  04EC  00F8               	movwf	___awdiv@dividend
  2816  04ED  120A  118A  2454  120A  118A  	fcall	___awdiv
  2817  04F2  0876               	movf	?___awdiv,w
  2818  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2819  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2820  04F5  00BA               	movwf	??_CONV+2
  2821  04F6  0877               	movf	?___awdiv+1,w
  2822  04F7  00BB               	movwf	??_CONV+3
  2823  04F8  087D               	movf	_POT1_U,w
  2824  04F9  00BC               	movwf	??_CONV+4
  2825  04FA  01BD               	clrf	??_CONV+5
  2826  04FB  083C               	movf	??_CONV+4,w
  2827  04FC  00F0               	movwf	___wmul@multiplier
  2828  04FD  083D               	movf	??_CONV+5,w
  2829  04FE  00F1               	movwf	___wmul@multiplier+1
  2830  04FF  309C               	movlw	156
  2831  0500  00F2               	movwf	___wmul@multiplicand
  2832  0501  30FF               	movlw	255
  2833  0502  00F3               	movwf	___wmul@multiplicand+1
  2834  0503  120A  118A  237D  120A  118A  	fcall	___wmul
  2835  0508  0870               	movf	?___wmul,w
  2836  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2837  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2838  050B  073A               	addwf	??_CONV+2,w
  2839  050C  00FB               	movwf	_CONV$1189
  2840  050D  0871               	movf	?___wmul+1,w
  2841  050E  1803               	skipnc
  2842  050F  0A71               	incf	?___wmul+1,w
  2843  0510  073B               	addwf	??_CONV+3,w
  2844  0511  00FC               	movwf	_CONV$1189+1
  2845                           
  2846                           ;master.c: 146:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  2847  0512  300A               	movlw	10
  2848  0513  00F6               	movwf	___awdiv@divisor
  2849  0514  3000               	movlw	0
  2850  0515  00F7               	movwf	___awdiv@divisor+1
  2851  0516  087C               	movf	_CONV$1189+1,w
  2852  0517  00F9               	movwf	___awdiv@dividend+1
  2853  0518  087B               	movf	_CONV$1189,w
  2854  0519  00F8               	movwf	___awdiv@dividend
  2855  051A  120A  118A  2454  120A  118A  	fcall	___awdiv
  2856  051F  0876               	movf	?___awdiv,w
  2857  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0522  00B8               	movwf	??_CONV
  2860  0523  0838               	movf	??_CONV,w
  2861  0524  00AE               	movwf	_POT1_T
  2862                           
  2863                           ;master.c: 147:     POT1_H=((L*100/51)-(POT1_U*100)-(POT1_T*10));
  2864  0525  3033               	movlw	51
  2865  0526  00F6               	movwf	___awdiv@divisor
  2866  0527  3000               	movlw	0
  2867  0528  00F7               	movwf	___awdiv@divisor+1
  2868  0529  0833               	movf	_L,w
  2869  052A  00B8               	movwf	??_CONV
  2870  052B  01B9               	clrf	??_CONV+1
  2871  052C  0838               	movf	??_CONV,w
  2872  052D  00F0               	movwf	___wmul@multiplier
  2873  052E  0839               	movf	??_CONV+1,w
  2874  052F  00F1               	movwf	___wmul@multiplier+1
  2875  0530  3064               	movlw	100
  2876  0531  00F2               	movwf	___wmul@multiplicand
  2877  0532  3000               	movlw	0
  2878  0533  00F3               	movwf	___wmul@multiplicand+1
  2879  0534  120A  118A  237D  120A  118A  	fcall	___wmul
  2880  0539  0871               	movf	?___wmul+1,w
  2881  053A  00F9               	movwf	___awdiv@dividend+1
  2882  053B  0870               	movf	?___wmul,w
  2883  053C  00F8               	movwf	___awdiv@dividend
  2884  053D  120A  118A  2454  120A  118A  	fcall	___awdiv
  2885  0542  0876               	movf	?___awdiv,w
  2886  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0545  00BA               	movwf	??_CONV+2
  2889  0546  0877               	movf	?___awdiv+1,w
  2890  0547  00BB               	movwf	??_CONV+3
  2891  0548  309C               	movlw	156
  2892  0549  00BC               	movwf	??_CONV+4
  2893  054A  083C               	movf	??_CONV+4,w
  2894  054B  00F0               	movwf	___bmul@multiplicand
  2895  054C  087D               	movf	_POT1_U,w
  2896  054D  120A  118A  2309  120A  118A  	fcall	___bmul
  2897  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0554  00BD               	movwf	??_CONV+5
  2900  0555  30F6               	movlw	246
  2901  0556  00BE               	movwf	??_CONV+6
  2902  0557  083E               	movf	??_CONV+6,w
  2903  0558  00F0               	movwf	___bmul@multiplicand
  2904  0559  082E               	movf	_POT1_T,w
  2905  055A  120A  118A  2309  120A  118A  	fcall	___bmul
  2906  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0561  073D               	addwf	??_CONV+5,w
  2909  0562  073A               	addwf	??_CONV+2,w
  2910  0563  00BF               	movwf	??_CONV+7
  2911  0564  083F               	movf	??_CONV+7,w
  2912  0565  00AF               	movwf	_POT1_H
  2913  0566                     l111:
  2914  0566  0008               	return
  2915  0567                     __end_of_CONV:
  2916                           
  2917                           	psect	text16
  2918  037D                     __ptext16:	
  2919 ;; *************** function ___wmul *****************
  2920 ;; Defined at:
  2921 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  multiplier      2    0[COMMON] unsigned int 
  2924 ;;  multiplicand    2    2[COMMON] unsigned int 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  product         2    4[COMMON] unsigned int 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  2    0[COMMON] unsigned int 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         4       0       0       0       0
  2937 ;;      Locals:         2       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0
  2939 ;;      Totals:         6       0       0       0       0
  2940 ;;Total ram usage:        6 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_CONV
  2946 ;;		_CONVET_cont
  2947 ;;		_CONT
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function ___wmul
  2953  037D                     ___wmul:
  2954  037D                     l1281:	
  2955                           ;incstack = 0
  2956                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2957                           
  2958  037D  01F4               	clrf	___wmul@product
  2959  037E  01F5               	clrf	___wmul@product+1
  2960  037F                     l1283:
  2961  037F  1C70               	btfss	___wmul@multiplier,0
  2962  0380  2B82               	goto	u221
  2963  0381  2B83               	goto	u220
  2964  0382                     u221:
  2965  0382  2B89               	goto	l339
  2966  0383                     u220:
  2967  0383                     l1285:
  2968  0383  0872               	movf	___wmul@multiplicand,w
  2969  0384  07F4               	addwf	___wmul@product,f
  2970  0385  1803               	skipnc
  2971  0386  0AF5               	incf	___wmul@product+1,f
  2972  0387  0873               	movf	___wmul@multiplicand+1,w
  2973  0388  07F5               	addwf	___wmul@product+1,f
  2974  0389                     l339:
  2975  0389  3001               	movlw	1
  2976  038A                     u235:
  2977  038A  1003               	clrc
  2978  038B  0DF2               	rlf	___wmul@multiplicand,f
  2979  038C  0DF3               	rlf	___wmul@multiplicand+1,f
  2980  038D  3EFF               	addlw	-1
  2981  038E  1D03               	skipz
  2982  038F  2B8A               	goto	u235
  2983  0390                     l1287:
  2984  0390  3001               	movlw	1
  2985  0391                     u245:
  2986  0391  1003               	clrc
  2987  0392  0CF1               	rrf	___wmul@multiplier+1,f
  2988  0393  0CF0               	rrf	___wmul@multiplier,f
  2989  0394  3EFF               	addlw	-1
  2990  0395  1D03               	skipz
  2991  0396  2B91               	goto	u245
  2992  0397                     l1289:
  2993  0397  0870               	movf	___wmul@multiplier,w
  2994  0398  0471               	iorwf	___wmul@multiplier+1,w
  2995  0399  1D03               	btfss	3,2
  2996  039A  2B9C               	goto	u251
  2997  039B  2B9D               	goto	u250
  2998  039C                     u251:
  2999  039C  2B7F               	goto	l1283
  3000  039D                     u250:
  3001  039D                     l1291:
  3002  039D  0875               	movf	___wmul@product+1,w
  3003  039E  00F1               	movwf	?___wmul+1
  3004  039F  0874               	movf	___wmul@product,w
  3005  03A0  00F0               	movwf	?___wmul
  3006  03A1                     l341:
  3007  03A1  0008               	return
  3008  03A2                     __end_of___wmul:
  3009                           
  3010                           	psect	text17
  3011  0309                     __ptext17:	
  3012 ;; *************** function ___bmul *****************
  3013 ;; Defined at:
  3014 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  multiplier      1    wreg     unsigned char 
  3017 ;;  multiplicand    1    0[COMMON] unsigned char 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  multiplier      1    3[COMMON] unsigned char 
  3020 ;;  product         1    2[COMMON] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         1       0       0       0       0
  3031 ;;      Locals:         2       0       0       0       0
  3032 ;;      Temps:          1       0       0       0       0
  3033 ;;      Totals:         4       0       0       0       0
  3034 ;;Total ram usage:        4 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_CONV
  3040 ;;		_CONVET_cont
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function ___bmul
  3046  0309                     ___bmul:
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3050                           ;___bmul@multiplier stored from wreg
  3051  0309  00F3               	movwf	___bmul@multiplier
  3052  030A                     l1295:
  3053  030A  01F2               	clrf	___bmul@product
  3054  030B                     l1297:
  3055  030B  1C73               	btfss	___bmul@multiplier,0
  3056  030C  2B0E               	goto	u261
  3057  030D  2B0F               	goto	u260
  3058  030E                     u261:
  3059  030E  2B13               	goto	l1301
  3060  030F                     u260:
  3061  030F                     l1299:
  3062  030F  0870               	movf	___bmul@multiplicand,w
  3063  0310  00F1               	movwf	??___bmul
  3064  0311  0871               	movf	??___bmul,w
  3065  0312  07F2               	addwf	___bmul@product,f
  3066  0313                     l1301:
  3067  0313  1003               	clrc
  3068  0314  0DF0               	rlf	___bmul@multiplicand,f
  3069  0315                     l1303:
  3070  0315  1003               	clrc
  3071  0316  0CF3               	rrf	___bmul@multiplier,f
  3072  0317  0873               	movf	___bmul@multiplier,w
  3073  0318  1D03               	btfss	3,2
  3074  0319  2B1B               	goto	u271
  3075  031A  2B1C               	goto	u270
  3076  031B                     u271:
  3077  031B  2B0B               	goto	l1297
  3078  031C                     u270:
  3079  031C                     l1305:
  3080  031C  0872               	movf	___bmul@product,w
  3081  031D                     l365:
  3082  031D  0008               	return
  3083  031E                     __end_of___bmul:
  3084                           
  3085                           	psect	text18
  3086  0454                     __ptext18:	
  3087 ;; *************** function ___awdiv *****************
  3088 ;; Defined at:
  3089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  divisor         2    6[COMMON] int 
  3092 ;;  dividend        2    8[COMMON] int 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  quotient        2    2[BANK0 ] int 
  3095 ;;  sign            1    1[BANK0 ] unsigned char 
  3096 ;;  counter         1    0[BANK0 ] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2    6[COMMON] int 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         4       0       0       0       0
  3107 ;;      Locals:         0       4       0       0       0
  3108 ;;      Temps:          1       0       0       0       0
  3109 ;;      Totals:         5       4       0       0       0
  3110 ;;Total ram usage:        9 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_CONV
  3116 ;;		_CONVET_cont
  3117 ;;		_CONT
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function ___awdiv
  3123  0454                     ___awdiv:
  3124  0454                     l1309:	
  3125                           ;incstack = 0
  3126                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3127                           
  3128  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0456  01B5               	clrf	___awdiv@sign
  3131  0457                     l1311:
  3132  0457  1FF7               	btfss	___awdiv@divisor+1,7
  3133  0458  2C5A               	goto	u281
  3134  0459  2C5B               	goto	u280
  3135  045A                     u281:
  3136  045A  2C62               	goto	l1317
  3137  045B                     u280:
  3138  045B                     l1313:
  3139  045B  09F6               	comf	___awdiv@divisor,f
  3140  045C  09F7               	comf	___awdiv@divisor+1,f
  3141  045D  0AF6               	incf	___awdiv@divisor,f
  3142  045E  1903               	skipnz
  3143  045F  0AF7               	incf	___awdiv@divisor+1,f
  3144  0460                     l1315:
  3145  0460  01B5               	clrf	___awdiv@sign
  3146  0461  0AB5               	incf	___awdiv@sign,f
  3147  0462                     l1317:
  3148  0462  1FF9               	btfss	___awdiv@dividend+1,7
  3149  0463  2C65               	goto	u291
  3150  0464  2C66               	goto	u290
  3151  0465                     u291:
  3152  0465  2C6F               	goto	l1323
  3153  0466                     u290:
  3154  0466                     l1319:
  3155  0466  09F8               	comf	___awdiv@dividend,f
  3156  0467  09F9               	comf	___awdiv@dividend+1,f
  3157  0468  0AF8               	incf	___awdiv@dividend,f
  3158  0469  1903               	skipnz
  3159  046A  0AF9               	incf	___awdiv@dividend+1,f
  3160  046B                     l1321:
  3161  046B  3001               	movlw	1
  3162  046C  00FA               	movwf	??___awdiv
  3163  046D  087A               	movf	??___awdiv,w
  3164  046E  06B5               	xorwf	___awdiv@sign,f
  3165  046F                     l1323:
  3166  046F  01B6               	clrf	___awdiv@quotient
  3167  0470  01B7               	clrf	___awdiv@quotient+1
  3168  0471                     l1325:
  3169  0471  0876               	movf	___awdiv@divisor,w
  3170  0472  0477               	iorwf	___awdiv@divisor+1,w
  3171  0473  1903               	btfsc	3,2
  3172  0474  2C76               	goto	u301
  3173  0475  2C77               	goto	u300
  3174  0476                     u301:
  3175  0476  2CAE               	goto	l1345
  3176  0477                     u300:
  3177  0477                     l1327:
  3178  0477  01B4               	clrf	___awdiv@counter
  3179  0478  0AB4               	incf	___awdiv@counter,f
  3180  0479  2C85               	goto	l1333
  3181  047A                     l1329:
  3182  047A  3001               	movlw	1
  3183  047B                     u315:
  3184  047B  1003               	clrc
  3185  047C  0DF6               	rlf	___awdiv@divisor,f
  3186  047D  0DF7               	rlf	___awdiv@divisor+1,f
  3187  047E  3EFF               	addlw	-1
  3188  047F  1D03               	skipz
  3189  0480  2C7B               	goto	u315
  3190  0481                     l1331:
  3191  0481  3001               	movlw	1
  3192  0482  00FA               	movwf	??___awdiv
  3193  0483  087A               	movf	??___awdiv,w
  3194  0484  07B4               	addwf	___awdiv@counter,f
  3195  0485                     l1333:
  3196  0485  1FF7               	btfss	___awdiv@divisor+1,7
  3197  0486  2C88               	goto	u321
  3198  0487  2C89               	goto	u320
  3199  0488                     u321:
  3200  0488  2C7A               	goto	l1329
  3201  0489                     u320:
  3202  0489                     l1335:
  3203  0489  3001               	movlw	1
  3204  048A                     u335:
  3205  048A  1003               	clrc
  3206  048B  0DB6               	rlf	___awdiv@quotient,f
  3207  048C  0DB7               	rlf	___awdiv@quotient+1,f
  3208  048D  3EFF               	addlw	-1
  3209  048E  1D03               	skipz
  3210  048F  2C8A               	goto	u335
  3211  0490  0877               	movf	___awdiv@divisor+1,w
  3212  0491  0279               	subwf	___awdiv@dividend+1,w
  3213  0492  1D03               	skipz
  3214  0493  2C96               	goto	u345
  3215  0494  0876               	movf	___awdiv@divisor,w
  3216  0495  0278               	subwf	___awdiv@dividend,w
  3217  0496                     u345:
  3218  0496  1C03               	skipc
  3219  0497  2C99               	goto	u341
  3220  0498  2C9A               	goto	u340
  3221  0499                     u341:
  3222  0499  2CA1               	goto	l1341
  3223  049A                     u340:
  3224  049A                     l1337:
  3225  049A  0876               	movf	___awdiv@divisor,w
  3226  049B  02F8               	subwf	___awdiv@dividend,f
  3227  049C  0877               	movf	___awdiv@divisor+1,w
  3228  049D  1C03               	skipc
  3229  049E  03F9               	decf	___awdiv@dividend+1,f
  3230  049F  02F9               	subwf	___awdiv@dividend+1,f
  3231  04A0                     l1339:
  3232  04A0  1436               	bsf	___awdiv@quotient,0
  3233  04A1                     l1341:
  3234  04A1  3001               	movlw	1
  3235  04A2                     u355:
  3236  04A2  1003               	clrc
  3237  04A3  0CF7               	rrf	___awdiv@divisor+1,f
  3238  04A4  0CF6               	rrf	___awdiv@divisor,f
  3239  04A5  3EFF               	addlw	-1
  3240  04A6  1D03               	skipz
  3241  04A7  2CA2               	goto	u355
  3242  04A8                     l1343:
  3243  04A8  3001               	movlw	1
  3244  04A9  02B4               	subwf	___awdiv@counter,f
  3245  04AA  1D03               	btfss	3,2
  3246  04AB  2CAD               	goto	u361
  3247  04AC  2CAE               	goto	u360
  3248  04AD                     u361:
  3249  04AD  2C89               	goto	l1335
  3250  04AE                     u360:
  3251  04AE                     l1345:
  3252  04AE  0835               	movf	___awdiv@sign,w
  3253  04AF  1903               	btfsc	3,2
  3254  04B0  2CB2               	goto	u371
  3255  04B1  2CB3               	goto	u370
  3256  04B2                     u371:
  3257  04B2  2CB8               	goto	l1349
  3258  04B3                     u370:
  3259  04B3                     l1347:
  3260  04B3  09B6               	comf	___awdiv@quotient,f
  3261  04B4  09B7               	comf	___awdiv@quotient+1,f
  3262  04B5  0AB6               	incf	___awdiv@quotient,f
  3263  04B6  1903               	skipnz
  3264  04B7  0AB7               	incf	___awdiv@quotient+1,f
  3265  04B8                     l1349:
  3266  04B8  0837               	movf	___awdiv@quotient+1,w
  3267  04B9  00F7               	movwf	?___awdiv+1
  3268  04BA  0836               	movf	___awdiv@quotient,w
  3269  04BB  00F6               	movwf	?___awdiv
  3270  04BC                     l492:
  3271  04BC  0008               	return
  3272  04BD                     __end_of___awdiv:
  3273  007E                     btemp	set	126	;btemp
  3274  007E                     wtemp0	set	126
  3275                           
  3276                           	psect	config
  3277                           
  3278                           ;Config register CONFIG1 @ 0x2007
  3279                           ;	Oscillator Selection bits
  3280                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3281                           ;	Watchdog Timer Enable bit
  3282                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3283                           ;	Power-up Timer Enable bit
  3284                           ;	PWRTE = OFF, PWRT disabled
  3285                           ;	RE3/MCLR pin function select bit
  3286                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3287                           ;	Code Protection bit
  3288                           ;	CP = OFF, Program memory code protection is disabled
  3289                           ;	Data Code Protection bit
  3290                           ;	CPD = OFF, Data memory code protection is disabled
  3291                           ;	Brown Out Reset Selection bits
  3292                           ;	BOREN = OFF, BOR disabled
  3293                           ;	Internal External Switchover bit
  3294                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3295                           ;	Fail-Safe Clock Monitor Enabled bit
  3296                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3297                           ;	Low Voltage Programming Enable bit
  3298                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3299                           ;	In-Circuit Debugger Mode bit
  3300                           ;	DEBUG = 0x1, unprogrammed default
  3301  2007                     	org	8199
  3302  2007  20D4               	dw	8404
  3303                           
  3304                           ;Config register CONFIG2 @ 0x2008
  3305                           ;	Brown-out Reset Selection bit
  3306                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3307                           ;	Flash Program Memory Self Write Enable bits
  3308                           ;	WRT = OFF, Write protection off
  3309  2008                     	org	8200
  3310  2008  3FFF               	dw	16383

Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     14      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_POINT@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 

    LCD_P@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_CONV
    _LCD_IN->_LCD_ON
    _LCD_CL->_LCD_ON
    _LCDVAL1->_LCD_POINT
    _LCD_POINT->_LCD_P
    _LCD_P->_LCD_PLAY
    _CONVET_cont->___awdiv
    _CONV->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_CONV
    _CONVET_cont->___awdiv
    _CONV->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16671
                                             12 BANK0      2     2      0
                               _CONV
                        _CONVET_cont
                            _LCDVAL1
                             _LCD_CL
                             _LCD_IN
                          _LCD_POINT
                              _Setup
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_IN                                               2     2      0      22
                                              3 COMMON     2     2      0
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCD_CL                                               0     0      0      22
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCDVAL1                                              5     1      4    5821
                                             11 COMMON     1     1      0
                                              0 BANK0      4     0      4
                          _LCD_POINT
 ---------------------------------------------------------------------------------
 (1) _LCD_POINT                                            7     2      5    4361
                                              4 COMMON     7     2      5
                             _LCD_ON
                              _LCD_P
 ---------------------------------------------------------------------------------
 (2) _LCD_P                                                2     2      0     100
                                              2 COMMON     2     2      0
                           _LCD_PLAY
 ---------------------------------------------------------------------------------
 (3) _LCD_PLAY                                             2     2      0      22
                                              0 COMMON     2     2      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               3     3      0      22
                                              0 COMMON     3     3      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (4) _LCD_TIM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVET_cont                                          4     4      0    3020
                                              4 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _CONV                                                10    10      0    3043
                                             11 COMMON     2     2      0
                                              4 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     988
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     396
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1636
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONV
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _CONVET_cont
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _LCDVAL1
     _LCD_POINT
       _LCD_ON
         _LCD_TIM
       _LCD_P
         _LCD_PLAY
           _LCD_TIM
   _LCD_CL
     _LCD_ON
       _LCD_TIM
   _LCD_IN
     _LCD_ON
       _LCD_TIM
   _LCD_POINT
     _LCD_ON
       _LCD_TIM
     _LCD_P
       _LCD_PLAY
         _LCD_TIM
   _Setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 19:07:35 2021

                      _L 0033                        _Z 0031                        _l 0032  
                      _z 0030                        pc 0002           ___bmul@product 0072  
            _SSPSTATbits 0094                       l99 059A             ___awdiv@sign 0035  
                     fsr 0004      ___wmul@multiplicand 0072                      l101 0601  
                    l102 066F                      l111 0566                      l201 02D2  
                    l108 0347                      l117 0453                      l207 037C  
                    l215 03C8                      l161 02D9                      l154 0358  
                    l155 035D                      l172 02EA                      l164 02CB  
                    l341 03A1                      l237 07F1                      l158 02D3  
                    l192 0332                      l339 0389                      l195 02F7  
                    l365 031D                      l189 03F4                      l198 0308  
                    l492 04BC                      u200 037C                      u201 037B  
                    u210 02D9                      u211 02D8                      u300 0477  
                    u220 0383                      u301 0476                      u221 0382  
                    u320 0489                      u321 0488                      u250 039D  
                    u315 047B                      u251 039C                      u235 038A  
                    u340 049A                      u260 030F                      u341 0499  
                    u261 030E                      u245 0391                      u270 031C  
                    u335 048A                      u271 031B                      u407 05C0  
                    u360 04AE                      u280 045B                      u361 04AD  
                    u345 0496                      u281 045A                      u417 060E  
                    u370 04B3                      u290 0466                      u371 04B2  
                    u355 04A2                      u291 0465                      u427 0625  
                    u380 0350                      u437 03D7                      u381 034F  
                    u447 0305                      u457 032D                      u397 05A7  
                    fsr0 0004                      indf 0000             LCD_POINT@LOC 007A  
        __end_of_LCDVAL1 07F2          __end_of_LCD_TIM 02F8                     l1301 0313  
                   l1311 0457                     l1303 0315                     l1321 046B  
                   l1313 045B                     l1305 031C                     l1233 02EB  
                   l1241 0303                     l1401 0685                     l1331 0481  
                   l1323 046F                     l1315 0460                     l1243 031F  
                   l1235 02F9                     l1251 035F                     l1411 06CE  
                   l1403 0686                     l1341 04A1                     l1333 0485  
                   l1325 0471                     l1317 0462                     l1309 0454  
                   l1245 0322                     l1237 02FC                     l1253 0360  
                   l1261 03A3                     l1421 0728                     l1413 06E0  
                   l1405 0698                     l1343 04A8                     l1335 0489  
                   l1327 0477                     l1319 0466                     l1247 0324  
                   l1239 02FE                     l1255 036C                     l1263 03A9  
                   l1271 03BC                     l1431 0782                     l1423 073A  
                   l1415 06F2                     l1407 06AA                     l1337 049A  
                   l1329 047A                     l1345 04AE                     l1281 037D  
                   l1249 0329                     l1257 0370                     l1273 03C2  
                   l1433 0794                     l1425 074C                     l1417 0704  
                   l1409 06BC                     l1361 0357                     l1353 0349  
                   l1347 04B3                     l1339 04A0                     l1291 039D  
                   l1283 037F                     l1259 03A2                     l1611 07BF  
                   l1435 07A6                     l1427 075E                     l1419 0716  
                   l1371 03C9                     l1363 0333                     l1355 0350  
                   l1451 057A                     l1349 04B8                     l1285 0383  
                   l1445 04BD                     l1613 03B4                     l1269 03AF  
                   l1429 0770                     l1381 03DC                     l1373 03CD  
                   l1365 0344                     l1357 0352                     l1461 05A3  
                   l1453 057F                     l1295 030A                     l1287 0390  
                   l1439 07B8                     l1383 03E2                     l1375 03CE  
                   l1367 0345                     l1359 0354                     l1279 02D3  
                   l1391 02C7                     l1471 05D6                     l1463 05AB  
                   l1455 0584                     l1447 0567                     l1297 030B  
                   l1289 0397                     l1385 03E8                     l1377 03D1  
                   l1369 0346                     l1393 02E2                     l1609 067A  
                   l1481 0612                     l1473 05E8                     l1465 05B7  
                   l1457 0596                     l1449 0575                     l1299 030F  
                   l1387 03EE                     l1379 03D3                     l1395 02E7  
                   l1491 064A                     l1483 061C                     l1475 05FA  
                   l1467 05BC                     l1459 059D                     l1389 02CC  
                   l1493 065C                     l1485 0621                     l1477 0604  
                   l1469 05C4                     l1399 03F5                     l1487 0629  
                   l1479 060A                     l1489 063B                     l1499 0672  
                   STR_1 0009                     STR_2 0019                     STR_3 001B  
                   STR_4 001D                     STR_5 001F                     STR_6 0021  
                   STR_7 0023                     STR_8 0025                     STR_9 0027  
                   _CONV 04BD       __size_of_LCD_POINT 0027                     _cont 0026  
                   _main 0567                     btemp 007E                     start 0000  
      ___bmul@multiplier 0073         __end_of_LCD_PLAY 0309                    ?_CONV 0070  
                  ?_main 0070          __end_of___awdiv 04BD                    STR_10 0029  
                  STR_11 002B                    STR_12 002D                    STR_13 002F  
                  STR_14 0031                    STR_15 0033                    STR_16 0035  
                  STR_17 0037                    STR_18 0017                    _ANSEL 0188  
        ___awdiv@divisor 0076                    _LCD_P 035E          ___awdiv@counter 0034  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TEM_T 002C                    _TEM_U 002D                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _Setup 0333                    pclath 000A  
        __end_of_spiInit 035E          __end_of_spiRead 02EB                    status 0003  
                  wtemp0 007E             __end_of_CONV 0567          __initialization 07F2  
           __end_of_main 0685                   ??_CONV 0038        __end_of_LCD_POINT 03C9  
                 ??_main 0040                ??_LCDVAL1 007B                   ?_LCD_P 0070  
                 LCD_P@D 0073                ??_LCD_TIM 0070                   ?_Setup 0070  
       ___awdiv@dividend 0078                   _ANSELH 0189     __size_of_CONVET_cont 005F  
                 _LCD_CL 02CC                   _LCD_IN 03C9                   _LCD_ON 031E  
                 _POT1_H 002F                   _POT1_T 002E                   _POT1_U 007D  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   ___bmul 0309                   ___wmul 037D  
              ??___awdiv 007A                   _cont_1 0029                   _cont_2 0028  
                 _cont_3 0027         ___awdiv@quotient 0036         __end_of_spiWrite 02CC  
              ??_spiInit 0073                ??_spiRead 0070                ?_LCD_PLAY 0070  
__end_of__initialization 07FC                LCD_PLAY@D 0071            __end_of_LCD_P 037D  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070            __end_of_Setup 0348  
                ??_LCD_P 0072                  ??_Setup 0070                  ?_LCD_CL 0070  
             __pbssBANK0 0020                  ?_LCD_IN 0070                  ?_LCD_ON 0070  
                LCD_ON@C 0072               ??_LCD_PLAY 0070               __pmaintext 0567  
                ?___bmul 0070                  ?___wmul 0070  __size_of_spiReceiveWait 0007  
                _LCDVAL1 0685                  _LCD_TIM 02EB                  _TEM_TAS 002A  
                _TEM_UAS 002B                  _SSPSTAT 0094               __stringtab 0003  
        __size_of_LCD_CL 0007          __size_of_LCD_IN 002C          __size_of_LCD_ON 0015  
              ?_spiWrite 0070          __size_of___bmul 0015                _CONV$1189 007B  
                ___awdiv 0454          __size_of___wmul 0025                  __ptext1 02C6  
                __ptext2 02E2                  __ptext3 02D3                  __ptext4 0348  
                __ptext5 0333                  __ptext6 03C9                  __ptext7 02CC  
                __ptext8 0685                  __ptext9 03A2                _LCD_POINT 03A2  
                _spiInit 0348                  _spiRead 02E2                  clrloop0 02DB  
   end_of_initialization 07FC                _RCSTAbits 0018               ??_spiWrite 0070  
              _PORTDbits 0008                _PORTEbits 0009               ?_LCD_POINT 0074  
          ??_CONVET_cont 0038                _TRISDbits 0088              spiWrite@dat 0070  
             LCD_POINT@D 0078               LCD_POINT@x 0074               LCD_POINT@y 0076  
         __end_of_LCD_CL 02D3           __end_of_LCD_IN 03F5           __end_of_LCD_ON 0333  
              _TXSTAbits 0098        __size_of_LCD_PLAY 0011           _spiReceiveWait 02D3  
         __end_of___bmul 031E           __end_of___wmul 03A2              _BAUDCTLbits 0187  
    start_initialization 07F2                 ??_LCD_CL 0073                 ??_LCD_IN 0073  
               ??_LCD_ON 0070      __end_of_CONVET_cont 0454   __end_of_spiReceiveWait 02DA  
               ??___bmul 0071                 ??___wmul 0074                 LCDVAL1@Z 0036  
               LCDVAL1@x 0034                 ?_LCDVAL1 0034                 ?_LCD_TIM 0070  
            __pbssCOMMON 007D                ___latbits 0002              ??_LCD_POINT 0079  
          __pcstackBANK0 0034          ?_spiReceiveWait 0070                 ?___awdiv 0076  
      __size_of_spiWrite 0006                __pstrings 0003           __size_of_LCD_P 001F  
               ?_spiInit 0070                 ?_spiRead 0070              _CONVET_cont 03F5  
         __size_of_Setup 0015                 _LCD_PLAY 02F8     spiInit@sTransmitEdge 0072  
         ___wmul@product 0074                clear_ram0 02DA                 _PIE1bits 008C  
     spiInit@sDataSample 0070                 _POT1_Has 0021                 _POT1_Tas 0020  
               _POT1_Uas 0022              __stringbase 0008        ___wmul@multiplier 0070  
       __size_of_LCDVAL1 016D         __size_of_LCD_TIM 000D         __size_of___awdiv 0069  
     __end_of__stringtab 0009                 __ptext10 035E                 __ptext11 02F8  
               __ptext12 031E                 __ptext13 02EB                 __ptext14 03F5  
               __ptext15 04BD                 __ptext16 037D                 __ptext17 0309  
               __ptext18 0454         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _cont_1AS 0025                 _cont_2AS 0024                 _cont_3AS 0023  
          __size_of_CONV 00AA            __size_of_main 011E                 _spiWrite 02C6  
           spiInit@sType 0073        spiInit@sClockIdle 0071               _INTCONbits 000B  
       ??_spiReceiveWait 0070                stringcode 0003                 stringdir 0003  
               stringtab 0003             ?_CONVET_cont 0070  
