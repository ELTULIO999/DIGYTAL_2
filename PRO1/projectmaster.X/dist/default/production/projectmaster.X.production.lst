

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 21:54:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000E                     	;# 
   480  000F                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0014                     	;# 
   486  0015                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  0081                     	;# 
   500  0085                     	;# 
   501  0086                     	;# 
   502  0087                     	;# 
   503  0088                     	;# 
   504  0089                     	;# 
   505  008C                     	;# 
   506  008D                     	;# 
   507  008E                     	;# 
   508  008F                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  0105                     	;# 
   528  0107                     	;# 
   529  0108                     	;# 
   530  0109                     	;# 
   531  010C                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0185                     	;# 
   537  0187                     	;# 
   538  0188                     	;# 
   539  0189                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542  0018                     _RCSTAbits	set	24
   543  0008                     _PORTDbits	set	8
   544  0013                     _SSPBUF	set	19
   545  0014                     _SSPCON	set	20
   546  0019                     _TXREG	set	25
   547  0009                     _PORTE	set	9
   548  0008                     _PORTD	set	8
   549  0007                     _PORTC	set	7
   550  0006                     _PORTB	set	6
   551  0005                     _PORTA	set	5
   552  0009                     _PORTEbits	set	9
   553  0001                     _TMR0	set	1
   554  000B                     _INTCONbits	set	11
   555  000C                     _PIR1bits	set	12
   556  008F                     _OSCCONbits	set	143
   557  009A                     _SPBRGH	set	154
   558  0099                     _SPBRG	set	153
   559  0098                     _TXSTAbits	set	152
   560  0088                     _TRISDbits	set	136
   561  0094                     _SSPSTATbits	set	148
   562  0094                     _SSPSTAT	set	148
   563  0081                     _OPTION_REGbits	set	129
   564  0089                     _TRISE	set	137
   565  0088                     _TRISD	set	136
   566  0087                     _TRISC	set	135
   567  0086                     _TRISB	set	134
   568  0085                     _TRISA	set	133
   569  008C                     _PIE1bits	set	140
   570  043B                     _TRISC3	set	1083
   571  043D                     _TRISC5	set	1085
   572  0187                     _BAUDCTLbits	set	391
   573  0189                     _ANSELH	set	393
   574  0188                     _ANSEL	set	392
   575                           
   576                           	psect	strings
   577  0660                     __pstrings:
   578  0660                     stringtab:
   579  0660                     __stringtab:
   580  0660                     stringcode:	
   581                           ;	String table - string pointers are 1 byte each
   582                           
   583  0660                     stringdir:
   584  0660  3006               	movlw	high stringdir
   585  0661  008A               	movwf	10
   586  0662  0804               	movf	4,w
   587  0663  0A84               	incf	4,f
   588  0664  0782               	addwf	2,f
   589  0665                     __stringbase:
   590  0665  3400               	retlw	0
   591  0666                     __end_of__stringtab:
   592  0666                     STR_1:
   593  0666  3441               	retlw	65	;'A'
   594  0667  3444               	retlw	68	;'D'
   595  0668  3443               	retlw	67	;'C'
   596  0669  3420               	retlw	32	;' '
   597  066A  3420               	retlw	32	;' '
   598  066B  3420               	retlw	32	;' '
   599  066C  3454               	retlw	84	;'T'
   600  066D  3445               	retlw	69	;'E'
   601  066E  344D               	retlw	77	;'M'
   602  066F  3450               	retlw	80	;'P'
   603  0670  3420               	retlw	32	;' '
   604  0671  3420               	retlw	32	;' '
   605  0672  3420               	retlw	32	;' '
   606  0673  3443               	retlw	67	;'C'
   607  0674  344F               	retlw	79	;'O'
   608  0675  344E               	retlw	78	;'N'
   609  0676  3454               	retlw	84	;'T'
   610  0677  3400               	retlw	0
   611  0678                     STR_21:
   612  0678  34C2               	retlw	-62
   613  0679  34B0               	retlw	-80
   614  067A  3400               	retlw	0
   615  067B                     STR_22:
   616  067B  3420               	retlw	32	;' '
   617  067C  3400               	retlw	0
   618  067D                     STR_19:
   619  067D  342B               	retlw	43	;'+'
   620  067E  3400               	retlw	0
   621  067F                     STR_20:
   622  067F  342D               	retlw	45	;'-'
   623  0680  3400               	retlw	0
   624  0681                     STR_18:
   625  0681  342E               	retlw	46	;'.'
   626  0682  3400               	retlw	0
   627  0683                     STR_2:
   628  0683  3430               	retlw	48	;'0'
   629  0684  3400               	retlw	0
   630  0685                     STR_3:
   631  0685  3431               	retlw	49	;'1'
   632  0686  3400               	retlw	0
   633  0687                     STR_4:
   634  0687  3432               	retlw	50	;'2'
   635  0688  3400               	retlw	0
   636  0689                     STR_5:
   637  0689  3433               	retlw	51	;'3'
   638  068A  3400               	retlw	0
   639  068B                     STR_6:
   640  068B  3434               	retlw	52	;'4'
   641  068C  3400               	retlw	0
   642  068D                     STR_7:
   643  068D  3435               	retlw	53	;'5'
   644  068E  3400               	retlw	0
   645  068F                     STR_8:
   646  068F  3436               	retlw	54	;'6'
   647  0690  3400               	retlw	0
   648  0691                     STR_9:
   649  0691  3437               	retlw	55	;'7'
   650  0692  3400               	retlw	0
   651  0693                     STR_10:
   652  0693  3438               	retlw	56	;'8'
   653  0694  3400               	retlw	0
   654  0695                     STR_11:
   655  0695  3439               	retlw	57	;'9'
   656  0696  3400               	retlw	0
   657  0697                     STR_23:
   658  0697  3440               	retlw	64	;'@'
   659  0698  3400               	retlw	0
   660  0699                     STR_12:
   661  0699  3441               	retlw	65	;'A'
   662  069A  3400               	retlw	0
   663  069B                     STR_13:
   664  069B  3442               	retlw	66	;'B'
   665  069C  3400               	retlw	0
   666  069D                     STR_14:
   667  069D  3443               	retlw	67	;'C'
   668  069E  3400               	retlw	0
   669  069F                     STR_15:
   670  069F  3444               	retlw	68	;'D'
   671  06A0  3400               	retlw	0
   672  06A1                     STR_16:
   673  06A1  3445               	retlw	69	;'E'
   674  06A2  3400               	retlw	0
   675  06A3                     STR_17:
   676  06A3  3446               	retlw	70	;'F'
   677  06A4  3400               	retlw	0
   678                           
   679                           	psect	cinit
   680  0011                     start_initialization:	
   681                           ; #config settings
   682                           
   683  0011                     __initialization:
   684                           
   685                           ; Clear objects allocated to COMMON
   686  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   687  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   688  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   689  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   690  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   691  0016  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   692                           
   693                           ; Clear objects allocated to BANK0
   694  0017  1383               	bcf	3,7	;select IRP bank0
   695  0018  303B               	movlw	low __pbssBANK0
   696  0019  0084               	movwf	4
   697  001A  3051               	movlw	low (__pbssBANK0+22)
   698  001B  120A  158A  279F  120A  118A  	fcall	clear_ram0
   699  0020                     end_of_initialization:	
   700                           ;End of C runtime variable initialization code
   701                           
   702  0020                     __end_of__initialization:
   703  0020  0183               	clrf	3
   704  0021  120A  118A  29FA   	ljmp	_main	;jump to C main() function
   705                           
   706                           	psect	bssCOMMON
   707  0070                     __pbssCOMMON:
   708  0070                     _POT1_Uas:
   709  0070                     	ds	1
   710  0071                     _cont_1AS:
   711  0071                     	ds	1
   712  0072                     _TEM_HAS:
   713  0072                     	ds	1
   714  0073                     _TEM_TAS:
   715  0073                     	ds	1
   716  0074                     _TEM_UAS:
   717  0074                     	ds	1
   718  0075                     _r:
   719  0075                     	ds	1
   720                           
   721                           	psect	bssBANK0
   722  003B                     __pbssBANK0:
   723  003B                     _POT1_Tas:
   724  003B                     	ds	1
   725  003C                     _POT1_Has:
   726  003C                     	ds	1
   727  003D                     _cont_3AS:
   728  003D                     	ds	1
   729  003E                     _cont_2AS:
   730  003E                     	ds	1
   731  003F                     _cont:
   732  003F                     	ds	1
   733  0040                     _cont_3:
   734  0040                     	ds	1
   735  0041                     _cont_2:
   736  0041                     	ds	1
   737  0042                     _cont_1:
   738  0042                     	ds	1
   739  0043                     _TEM_H:
   740  0043                     	ds	1
   741  0044                     _TEM_T:
   742  0044                     	ds	1
   743  0045                     _TEM_U:
   744  0045                     	ds	1
   745  0046                     _POT1_T:
   746  0046                     	ds	1
   747  0047                     _POT1_H:
   748  0047                     	ds	1
   749  0048                     _POT1_U:
   750  0048                     	ds	1
   751  0049                     _bro:
   752  0049                     	ds	1
   753  004A                     _sign:
   754  004A                     	ds	1
   755  004B                     _c:
   756  004B                     	ds	1
   757  004C                     _C:
   758  004C                     	ds	1
   759  004D                     _z:
   760  004D                     	ds	1
   761  004E                     _Z:
   762  004E                     	ds	1
   763  004F                     _R:
   764  004F                     	ds	1
   765  0050                     _L:
   766  0050                     	ds	1
   767                           
   768                           	psect	clrtext
   769  0F9F                     clear_ram0:	
   770                           ;	Called with FSR containing the base address, and
   771                           ;	W with the last address+1
   772                           
   773  0F9F  0064               	clrwdt	;clear the watchdog before getting into this loop
   774  0FA0                     clrloop0:
   775  0FA0  0180               	clrf	0	;clear RAM location pointed to by FSR
   776  0FA1  0A84               	incf	4,f	;increment pointer
   777  0FA2  0604               	xorwf	4,w	;XOR with final address
   778  0FA3  1903               	btfsc	3,2	;have we reached the end yet?
   779  0FA4  3400               	retlw	0	;all done for this memory range, return
   780  0FA5  0604               	xorwf	4,w	;XOR again to restore value
   781  0FA6  2FA0               	goto	clrloop0	;do the next byte
   782                           
   783                           	psect	cstackCOMMON
   784  0076                     __pcstackCOMMON:
   785  0076                     ?_send:
   786  0076                     ??_send:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0076                     ?_SET_TXR:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0076                     ?_SET_RXT:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0076                     ?_Setup:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0076                     ?_LCD_IN:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0076                     ?_LCD_CL:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0076                     ?_spiWrite:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0076                     ?_spiRead:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0076                     ?_CONVET_cont:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0076                     ?_CONV:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0076                     ?_CONT:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0076                     ?_CONV_AS:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0076                     ?_LCD_ON:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0076                     ?_LCD_TIM:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0076                     ?_isr:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0076                     ?_main:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0076                     ?_spiReceiveWait:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0076                     ?_LCD_PLAY:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0076                     ?_LCD_P:	
   841                           ; 1 bytes @ 0x0
   842                           
   843                           
   844                           ; 1 bytes @ 0x0
   845  0076                     	ds	2
   846  0078                     ??_isr:
   847                           
   848                           ; 1 bytes @ 0x2
   849  0078                     	ds	4
   850                           
   851                           	psect	cstackBANK0
   852  0020                     __pcstackBANK0:
   853  0020                     ??_SET_TXR:
   854  0020                     ??_SET_RXT:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     ?_spiInit:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0020                     ??_Setup:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0020                     ??_spiWrite:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0020                     ??_spiRead:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0020                     ??_CONV_AS:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0020                     ??_LCD_ON:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0020                     ??_LCD_TIM:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0020                     ??_spiReceiveWait:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0020                     ??_LCD_PLAY:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0020                     ?___bmul:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0020                     ?___wmul:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0020                     spiInit@sDataSample:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0020                     spiWrite@dat:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0020                     ___bmul@multiplicand:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0020                     ___wmul@multiplier:	
   900                           ; 1 bytes @ 0x0
   901                           
   902                           
   903                           ; 2 bytes @ 0x0
   904  0020                     	ds	1
   905  0021                     ??___bmul:
   906  0021                     spiInit@sClockIdle:	
   907                           ; 1 bytes @ 0x1
   908                           
   909  0021                     LCD_PLAY@D:	
   910                           ; 1 bytes @ 0x1
   911                           
   912                           
   913                           ; 1 bytes @ 0x1
   914  0021                     	ds	1
   915  0022                     ??_LCD_P:
   916  0022                     spiInit@sTransmitEdge:	
   917                           ; 1 bytes @ 0x2
   918                           
   919  0022                     LCD_ON@C:	
   920                           ; 1 bytes @ 0x2
   921                           
   922  0022                     ___bmul@product:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0022                     ___wmul@multiplicand:	
   926                           ; 1 bytes @ 0x2
   927                           
   928                           
   929                           ; 2 bytes @ 0x2
   930  0022                     	ds	1
   931  0023                     ??_spiInit:
   932  0023                     ??_LCD_IN:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0023                     ??_LCD_CL:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0023                     spiInit@sType:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0023                     LCD_P@D:	
   942                           ; 1 bytes @ 0x3
   943                           
   944  0023                     ___bmul@multiplier:	
   945                           ; 1 bytes @ 0x3
   946                           
   947                           
   948                           ; 1 bytes @ 0x3
   949  0023                     	ds	1
   950  0024                     ?_LCD_POINT:
   951  0024                     ??___wmul:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0024                     LCD_POINT@x:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0024                     ___wmul@product:	
   958                           ; 2 bytes @ 0x4
   959                           
   960                           
   961                           ; 2 bytes @ 0x4
   962  0024                     	ds	2
   963  0026                     ?___awdiv:
   964  0026                     LCD_POINT@y:	
   965                           ; 2 bytes @ 0x6
   966                           
   967  0026                     ___awdiv@divisor:	
   968                           ; 2 bytes @ 0x6
   969                           
   970                           
   971                           ; 2 bytes @ 0x6
   972  0026                     	ds	2
   973  0028                     LCD_POINT@D:
   974  0028                     ___awdiv@dividend:	
   975                           ; 1 bytes @ 0x8
   976                           
   977                           
   978                           ; 2 bytes @ 0x8
   979  0028                     	ds	1
   980  0029                     ??_LCD_POINT:
   981                           
   982                           ; 1 bytes @ 0x9
   983  0029                     	ds	1
   984  002A                     ??___awdiv:
   985  002A                     LCD_POINT@LOC:	
   986                           ; 1 bytes @ 0xA
   987                           
   988                           
   989                           ; 1 bytes @ 0xA
   990  002A                     	ds	1
   991  002B                     ?_LCDVAL1:
   992  002B                     ___awdiv@counter:	
   993                           ; 1 bytes @ 0xB
   994                           
   995  002B                     LCDVAL1@x:	
   996                           ; 1 bytes @ 0xB
   997                           
   998                           
   999                           ; 2 bytes @ 0xB
  1000  002B                     	ds	1
  1001  002C                     ___awdiv@sign:
  1002                           
  1003                           ; 1 bytes @ 0xC
  1004  002C                     	ds	1
  1005  002D                     LCDVAL1@Z:
  1006  002D                     ___awdiv@quotient:	
  1007                           ; 2 bytes @ 0xD
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0xD
  1011  002D                     	ds	2
  1012  002F                     ??_CONVET_cont:
  1013  002F                     ??_LCDVAL1:	
  1014                           ; 1 bytes @ 0xF
  1015                           
  1016  002F                     ??_CONV:	
  1017                           ; 1 bytes @ 0xF
  1018                           
  1019  002F                     ??_CONT:	
  1020                           ; 1 bytes @ 0xF
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xF
  1024  002F                     	ds	8
  1025  0037                     _CONV$1331:
  1026                           
  1027                           ; 2 bytes @ 0x17
  1028  0037                     	ds	2
  1029  0039                     ??_main:
  1030                           
  1031                           ; 1 bytes @ 0x19
  1032  0039                     	ds	2
  1033                           
  1034                           	psect	maintext
  1035  01FA                     __pmaintext:	
  1036 ;;
  1037 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1038 ;;
  1039 ;; *************** function _main *****************
  1040 ;; Defined at:
  1041 ;;		line 71 in file "master.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : B00/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          0       2       0       0       0
  1058 ;;      Totals:         0       2       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels required when called:    7
  1061 ;; This function calls:
  1062 ;;		_CONT
  1063 ;;		_CONV
  1064 ;;		_CONVET_cont
  1065 ;;		_CONV_AS
  1066 ;;		_LCDVAL1
  1067 ;;		_LCD_CL
  1068 ;;		_LCD_IN
  1069 ;;		_LCD_POINT
  1070 ;;		_SET_RXT
  1071 ;;		_SET_TXR
  1072 ;;		_Setup
  1073 ;;		_spiInit
  1074 ;;		_spiRead
  1075 ;;		_spiWrite
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _main
  1083  01FA                     _main:
  1084  01FA                     l2118:	
  1085                           ;incstack = 0
  1086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1087                           
  1088                           
  1089                           ;master.c: 72:     SET_TXR();
  1090  01FA  120A  158A  27C8  120A  118A  	fcall	_SET_TXR
  1091  01FF                     l2120:
  1092                           
  1093                           ;master.c: 73:     SET_RXT();
  1094  01FF  120A  158A  27B0  120A  118A  	fcall	_SET_RXT
  1095  0204                     l2122:
  1096                           
  1097                           ;master.c: 74:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
  1098  0204  3080               	movlw	128
  1099  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0207  00B9               	movwf	??_main
  1102  0208  0839               	movf	??_main,w
  1103  0209  00A0               	movwf	spiInit@sDataSample
  1104  020A  01A1               	clrf	spiInit@sClockIdle
  1105  020B  01A2               	clrf	spiInit@sTransmitEdge
  1106  020C  3020               	movlw	32
  1107  020D  120A  118A  27CA  120A  118A  	fcall	_spiInit
  1108  0212                     l2124:
  1109                           
  1110                           ;master.c: 75:     Setup();
  1111  0212  120A  118A  27A9  120A  118A  	fcall	_Setup
  1112  0217                     l2126:
  1113                           
  1114                           ;master.c: 76:     LCD_IN();
  1115  0217  120A  118A  2706  120A  118A  	fcall	_LCD_IN
  1116  021C                     l2128:
  1117                           
  1118                           ;master.c: 77:     LCD_CL();
  1119  021C  120A  158A  2791  120A  118A  	fcall	_LCD_CL
  1120  0221                     l2130:
  1121                           
  1122                           ;master.c: 78:     LCD_POINT(0,1,"ADC   TEMP   CONT");
  1123  0221  3000               	movlw	0
  1124  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0224  00A4               	movwf	LCD_POINT@x
  1127  0225  00A5               	movwf	LCD_POINT@x+1
  1128  0226  3001               	movlw	1
  1129  0227  00A6               	movwf	LCD_POINT@y
  1130  0228  3000               	movlw	0
  1131  0229  00A7               	movwf	LCD_POINT@y+1
  1132  022A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1133  022B  00B9               	movwf	??_main
  1134  022C  0839               	movf	??_main,w
  1135  022D  00A8               	movwf	LCD_POINT@D
  1136  022E  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  1137  0233                     l2132:
  1138                           
  1139                           ;master.c: 79:     Z=0;
  1140  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0235  01CE               	clrf	_Z
  1143  0236                     l2134:
  1144                           
  1145                           ;master.c: 80:     z=0;
  1146  0236  01CD               	clrf	_z
  1147  0237  2B4C               	goto	l2172
  1148  0238                     l139:	
  1149                           ;master.c: 87:             case 0:
  1150                           
  1151                           
  1152                           ;master.c: 88:                 PORTEbits.RE0=0;
  1153  0238  1009               	bcf	9,0	;volatile
  1154                           
  1155                           ;master.c: 89:                 PORTEbits.RE1=1;
  1156  0239  1489               	bsf	9,1	;volatile
  1157                           
  1158                           ;master.c: 90:                 PORTEbits.RE2=1;
  1159  023A  1509               	bsf	9,2	;volatile
  1160  023B                     l2136:
  1161                           
  1162                           ;master.c: 91:                 spiWrite(0x00);
  1163  023B  3000               	movlw	0
  1164  023C  120A  158A  278B  120A  118A  	fcall	_spiWrite
  1165                           
  1166                           ;master.c: 92:                 cont=spiRead();
  1167  0241  120A  158A  27A7  120A  118A  	fcall	_spiRead
  1168  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0248  00B9               	movwf	??_main
  1171  0249  0839               	movf	??_main,w
  1172  024A  00BF               	movwf	_cont
  1173                           
  1174                           ;master.c: 93:                 CONVET_cont();
  1175  024B  120A  118A  2601  120A  118A  	fcall	_CONVET_cont
  1176  0250                     l2138:
  1177                           
  1178                           ;master.c: 94:                 LCDVAL1 (13,cont_1);
  1179  0250  300D               	movlw	13
  1180  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0253  00AB               	movwf	LCDVAL1@x
  1183  0254  3000               	movlw	0
  1184  0255  00AC               	movwf	LCDVAL1@x+1
  1185  0256  0842               	movf	_cont_1,w
  1186  0257  00B9               	movwf	??_main
  1187  0258  01BA               	clrf	??_main+1
  1188  0259  0839               	movf	??_main,w
  1189  025A  00AD               	movwf	LCDVAL1@Z
  1190  025B  083A               	movf	??_main+1,w
  1191  025C  00AE               	movwf	LCDVAL1@Z+1
  1192  025D  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1193  0262                     l2140:
  1194                           
  1195                           ;master.c: 95:                 LCDVAL1 (14,cont_2);
  1196  0262  300E               	movlw	14
  1197  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0265  00AB               	movwf	LCDVAL1@x
  1200  0266  3000               	movlw	0
  1201  0267  00AC               	movwf	LCDVAL1@x+1
  1202  0268  0841               	movf	_cont_2,w
  1203  0269  00B9               	movwf	??_main
  1204  026A  01BA               	clrf	??_main+1
  1205  026B  0839               	movf	??_main,w
  1206  026C  00AD               	movwf	LCDVAL1@Z
  1207  026D  083A               	movf	??_main+1,w
  1208  026E  00AE               	movwf	LCDVAL1@Z+1
  1209  026F  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1210  0274                     l2142:
  1211                           
  1212                           ;master.c: 96:                 LCDVAL1 (15,cont_3);
  1213  0274  300F               	movlw	15
  1214  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0277  00AB               	movwf	LCDVAL1@x
  1217  0278  3000               	movlw	0
  1218  0279  00AC               	movwf	LCDVAL1@x+1
  1219  027A  0840               	movf	_cont_3,w
  1220  027B  00B9               	movwf	??_main
  1221  027C  01BA               	clrf	??_main+1
  1222  027D  0839               	movf	??_main,w
  1223  027E  00AD               	movwf	LCDVAL1@Z
  1224  027F  083A               	movf	??_main+1,w
  1225  0280  00AE               	movwf	LCDVAL1@Z+1
  1226  0281  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1227  0286                     l2144:
  1228                           
  1229                           ;master.c: 97:                 Z++;
  1230  0286  3001               	movlw	1
  1231  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0289  00B9               	movwf	??_main
  1234  028A  0839               	movf	??_main,w
  1235  028B  07CE               	addwf	_Z,f
  1236                           
  1237                           ;master.c: 98:                 break;
  1238  028C  2B61               	goto	l2174
  1239  028D                     l141:	
  1240                           ;master.c: 99:             case 1:
  1241                           
  1242                           
  1243                           ;master.c: 100:                 PORTEbits.RE0=1;
  1244  028D  1409               	bsf	9,0	;volatile
  1245                           
  1246                           ;master.c: 101:                 PORTEbits.RE1=0;
  1247  028E  1089               	bcf	9,1	;volatile
  1248                           
  1249                           ;master.c: 102:                 PORTEbits.RE2=1;
  1250  028F  1509               	bsf	9,2	;volatile
  1251  0290                     l2146:
  1252                           
  1253                           ;master.c: 103:                 spiWrite(0x00);
  1254  0290  3000               	movlw	0
  1255  0291  120A  158A  278B  120A  118A  	fcall	_spiWrite
  1256                           
  1257                           ;master.c: 104:                 L=spiRead();
  1258  0296  120A  158A  27A7  120A  118A  	fcall	_spiRead
  1259  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1260  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1261  029D  00B9               	movwf	??_main
  1262  029E  0839               	movf	??_main,w
  1263  029F  00D0               	movwf	_L
  1264                           
  1265                           ;master.c: 105:                 CONV();
  1266  02A0  120A  118A  248A  120A  118A  	fcall	_CONV
  1267  02A5                     l2148:
  1268                           
  1269                           ;master.c: 106:                 LCDVAL1 (0,POT1_U);
  1270  02A5  3000               	movlw	0
  1271  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1272  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1273  02A8  00AB               	movwf	LCDVAL1@x
  1274  02A9  00AC               	movwf	LCDVAL1@x+1
  1275  02AA  0848               	movf	_POT1_U,w
  1276  02AB  00B9               	movwf	??_main
  1277  02AC  01BA               	clrf	??_main+1
  1278  02AD  0839               	movf	??_main,w
  1279  02AE  00AD               	movwf	LCDVAL1@Z
  1280  02AF  083A               	movf	??_main+1,w
  1281  02B0  00AE               	movwf	LCDVAL1@Z+1
  1282  02B1  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1283  02B6                     l2150:
  1284                           
  1285                           ;master.c: 107:                 LCDVAL1 (1,16);
  1286  02B6  3001               	movlw	1
  1287  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1288  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1289  02B9  00AB               	movwf	LCDVAL1@x
  1290  02BA  3000               	movlw	0
  1291  02BB  00AC               	movwf	LCDVAL1@x+1
  1292  02BC  3010               	movlw	16
  1293  02BD  00AD               	movwf	LCDVAL1@Z
  1294  02BE  3000               	movlw	0
  1295  02BF  00AE               	movwf	LCDVAL1@Z+1
  1296  02C0  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1297  02C5                     l2152:
  1298                           
  1299                           ;master.c: 108:                 LCDVAL1 (2,POT1_T);
  1300  02C5  3002               	movlw	2
  1301  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1302  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1303  02C8  00AB               	movwf	LCDVAL1@x
  1304  02C9  3000               	movlw	0
  1305  02CA  00AC               	movwf	LCDVAL1@x+1
  1306  02CB  0846               	movf	_POT1_T,w
  1307  02CC  00B9               	movwf	??_main
  1308  02CD  01BA               	clrf	??_main+1
  1309  02CE  0839               	movf	??_main,w
  1310  02CF  00AD               	movwf	LCDVAL1@Z
  1311  02D0  083A               	movf	??_main+1,w
  1312  02D1  00AE               	movwf	LCDVAL1@Z+1
  1313  02D2  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1314  02D7                     l2154:
  1315                           
  1316                           ;master.c: 109:                 LCDVAL1 (3,POT1_H);
  1317  02D7  3003               	movlw	3
  1318  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1319  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1320  02DA  00AB               	movwf	LCDVAL1@x
  1321  02DB  3000               	movlw	0
  1322  02DC  00AC               	movwf	LCDVAL1@x+1
  1323  02DD  0847               	movf	_POT1_H,w
  1324  02DE  00B9               	movwf	??_main
  1325  02DF  01BA               	clrf	??_main+1
  1326  02E0  0839               	movf	??_main,w
  1327  02E1  00AD               	movwf	LCDVAL1@Z
  1328  02E2  083A               	movf	??_main+1,w
  1329  02E3  00AE               	movwf	LCDVAL1@Z+1
  1330  02E4  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1331  02E9  2A86               	goto	l2144
  1332  02EA                     l142:	
  1333                           ;master.c: 112:             case 2:
  1334                           
  1335                           
  1336                           ;master.c: 113:                 PORTEbits.RE0=1;
  1337  02EA  1409               	bsf	9,0	;volatile
  1338                           
  1339                           ;master.c: 114:                 PORTEbits.RE1=1;
  1340  02EB  1489               	bsf	9,1	;volatile
  1341                           
  1342                           ;master.c: 115:                 PORTEbits.RE2=0;
  1343  02EC  1109               	bcf	9,2	;volatile
  1344  02ED                     l2158:
  1345                           
  1346                           ;master.c: 116:                 spiWrite(0x00);
  1347  02ED  3000               	movlw	0
  1348  02EE  120A  158A  278B  120A  118A  	fcall	_spiWrite
  1349                           
  1350                           ;master.c: 117:                 C=spiRead();
  1351  02F3  120A  158A  27A7  120A  118A  	fcall	_spiRead
  1352  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1353  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1354  02FA  00B9               	movwf	??_main
  1355  02FB  0839               	movf	??_main,w
  1356  02FC  00CC               	movwf	_C
  1357  02FD                     l2160:
  1358                           
  1359                           ;master.c: 118:                 LCDVAL1 (6,bro);
  1360  02FD  3006               	movlw	6
  1361  02FE  00AB               	movwf	LCDVAL1@x
  1362  02FF  3000               	movlw	0
  1363  0300  00AC               	movwf	LCDVAL1@x+1
  1364  0301  0849               	movf	_bro,w
  1365  0302  00B9               	movwf	??_main
  1366  0303  01BA               	clrf	??_main+1
  1367  0304  0839               	movf	??_main,w
  1368  0305  00AD               	movwf	LCDVAL1@Z
  1369  0306  083A               	movf	??_main+1,w
  1370  0307  00AE               	movwf	LCDVAL1@Z+1
  1371  0308  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1372  030D                     l2162:
  1373                           
  1374                           ;master.c: 119:                 LCDVAL1 (7,TEM_U);
  1375  030D  3007               	movlw	7
  1376  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1377  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0310  00AB               	movwf	LCDVAL1@x
  1379  0311  3000               	movlw	0
  1380  0312  00AC               	movwf	LCDVAL1@x+1
  1381  0313  0845               	movf	_TEM_U,w
  1382  0314  00B9               	movwf	??_main
  1383  0315  01BA               	clrf	??_main+1
  1384  0316  0839               	movf	??_main,w
  1385  0317  00AD               	movwf	LCDVAL1@Z
  1386  0318  083A               	movf	??_main+1,w
  1387  0319  00AE               	movwf	LCDVAL1@Z+1
  1388  031A  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1389  031F                     l2164:
  1390                           
  1391                           ;master.c: 120:                 LCDVAL1 (8,TEM_T);
  1392  031F  3008               	movlw	8
  1393  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0322  00AB               	movwf	LCDVAL1@x
  1396  0323  3000               	movlw	0
  1397  0324  00AC               	movwf	LCDVAL1@x+1
  1398  0325  0844               	movf	_TEM_T,w
  1399  0326  00B9               	movwf	??_main
  1400  0327  01BA               	clrf	??_main+1
  1401  0328  0839               	movf	??_main,w
  1402  0329  00AD               	movwf	LCDVAL1@Z
  1403  032A  083A               	movf	??_main+1,w
  1404  032B  00AE               	movwf	LCDVAL1@Z+1
  1405  032C  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1406  0331                     l2166:
  1407                           
  1408                           ;master.c: 121:                 LCDVAL1 (9,TEM_H);
  1409  0331  3009               	movlw	9
  1410  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0334  00AB               	movwf	LCDVAL1@x
  1413  0335  3000               	movlw	0
  1414  0336  00AC               	movwf	LCDVAL1@x+1
  1415  0337  0843               	movf	_TEM_H,w
  1416  0338  00B9               	movwf	??_main
  1417  0339  01BA               	clrf	??_main+1
  1418  033A  0839               	movf	??_main,w
  1419  033B  00AD               	movwf	LCDVAL1@Z
  1420  033C  083A               	movf	??_main+1,w
  1421  033D  00AE               	movwf	LCDVAL1@Z+1
  1422  033E  120A  118A  2024  120A  118A  	fcall	_LCDVAL1
  1423                           
  1424                           ;master.c: 122:                 CONT();
  1425  0343  120A  118A  236A  120A  118A  	fcall	_CONT
  1426  0348                     l2168:
  1427                           
  1428                           ;master.c: 123:                 Z=0;
  1429  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1431  034A  01CE               	clrf	_Z
  1432                           
  1433                           ;master.c: 124:                 break;
  1434  034B  2B61               	goto	l2174
  1435  034C                     l2172:
  1436  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1437  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1438  034E  084E               	movf	_Z,w
  1439  034F  00B9               	movwf	??_main
  1440  0350  01BA               	clrf	??_main+1
  1441                           
  1442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1443                           ; Switch size 1, requested type "simple"
  1444                           ; Number of cases is 1, Range of values is 0 to 0
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte            4     3 (average)
  1448                           ; direct_byte           11     8 (fixed)
  1449                           ; jumptable            260     6 (fixed)
  1450                           ;	Chosen strategy is simple_byte
  1451  0351  083A               	movf	??_main+1,w
  1452  0352  3A00               	xorlw	0	; case 0
  1453  0353  1903               	skipnz
  1454  0354  2B56               	goto	l2260
  1455  0355  2B61               	goto	l2174
  1456  0356                     l2260:
  1457                           
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 3, Range of values is 0 to 2
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte           10     6 (average)
  1463                           ; direct_byte           17     8 (fixed)
  1464                           ; jumptable            260     6 (fixed)
  1465                           ;	Chosen strategy is simple_byte
  1466  0356  0839               	movf	??_main,w
  1467  0357  3A00               	xorlw	0	; case 0
  1468  0358  1903               	skipnz
  1469  0359  2A38               	goto	l139
  1470  035A  3A01               	xorlw	1	; case 1
  1471  035B  1903               	skipnz
  1472  035C  2A8D               	goto	l141
  1473  035D  3A03               	xorlw	3	; case 2
  1474  035E  1903               	skipnz
  1475  035F  2AEA               	goto	l142
  1476  0360  2B61               	goto	l2174
  1477  0361                     l2174:
  1478                           
  1479                           ;master.c: 126:         CONV_AS();
  1480  0361  120A  118A  26D6  120A  118A  	fcall	_CONV_AS
  1481  0366  2B4C               	goto	l2172
  1482  0367  120A  118A  280E   	ljmp	start
  1483  036A                     __end_of_main:
  1484                           
  1485                           	psect	text1
  1486  0F8B                     __ptext1:	
  1487 ;; *************** function _spiWrite *****************
  1488 ;; Defined at:
  1489 ;;		line 28 in file "MSSP.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  dat             1    wreg     unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  dat             1    0[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         0       1       0       0       0
  1505 ;;      Temps:          0       0       0       0       0
  1506 ;;      Totals:         0       1       0       0       0
  1507 ;;Total ram usage:        1 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    2
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _spiWrite
  1519  0F8B                     _spiWrite:
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _spiWrite: [wreg]
  1523                           ;spiWrite@dat stored from wreg
  1524  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0F8D  00A0               	movwf	spiWrite@dat
  1527  0F8E                     l2036:
  1528                           
  1529                           ;MSSP.c: 28: void spiWrite(char dat);MSSP.c: 29: {;MSSP.c: 30:     SSPBUF = dat;
  1530  0F8E  0820               	movf	spiWrite@dat,w
  1531  0F8F  0093               	movwf	19	;volatile
  1532  0F90                     l208:
  1533  0F90  0008               	return
  1534  0F91                     __end_of_spiWrite:
  1535                           
  1536                           	psect	text2
  1537  0FA7                     __ptext2:	
  1538 ;; *************** function _spiRead *****************
  1539 ;; Defined at:
  1540 ;;		line 41 in file "MSSP.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      unsigned char 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    3
  1561 ;; This function calls:
  1562 ;;		_spiReceiveWait
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _spiRead
  1570  0FA7                     _spiRead:
  1571  0FA7                     l2038:	
  1572                           ;incstack = 0
  1573                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1574                           
  1575                           
  1576                           ;MSSP.c: 43:     spiReceiveWait();
  1577  0FA7  120A  158A  2798  120A  158A  	fcall	_spiReceiveWait
  1578  0FAC                     l2040:
  1579                           
  1580                           ;MSSP.c: 44:     return(SSPBUF);
  1581  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0FAE  0813               	movf	19,w	;volatile
  1584  0FAF                     l216:
  1585  0FAF  0008               	return
  1586  0FB0                     __end_of_spiRead:
  1587                           
  1588                           	psect	text3
  1589  0F98                     __ptext3:	
  1590 ;; *************** function _spiReceiveWait *****************
  1591 ;; Defined at:
  1592 ;;		line 23 in file "MSSP.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		None
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0
  1609 ;;      Totals:         0       0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    2
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_spiRead
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _spiReceiveWait
  1622  0F98                     _spiReceiveWait:
  1623  0F98                     l1934:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _spiReceiveWait: []
  1626                           
  1627  0F98                     l202:	
  1628                           ;MSSP.c: 25:     while ( !SSPSTATbits.BF );
  1629                           
  1630  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0F9A  1C14               	btfss	20,0	;volatile
  1633  0F9B  2F9D               	goto	u481
  1634  0F9C  2F9E               	goto	u480
  1635  0F9D                     u481:
  1636  0F9D  2F98               	goto	l202
  1637  0F9E                     u480:
  1638  0F9E                     l205:
  1639  0F9E  0008               	return
  1640  0F9F                     __end_of_spiReceiveWait:
  1641                           
  1642                           	psect	text4
  1643  07CA                     __ptext4:	
  1644 ;; *************** function _spiInit *****************
  1645 ;; Defined at:
  1646 ;;		line 6 in file "MSSP.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  sType           1    wreg     enum E1264
  1649 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1650 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1651 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  sType           1    3[BANK0 ] enum E1264
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       3       0       0       0
  1664 ;;      Locals:         0       1       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         0       4       0       0       0
  1667 ;;Total ram usage:        4 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    2
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _spiInit
  1679  07CA                     _spiInit:
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1683                           ;spiInit@sType stored from wreg
  1684  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1685  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1686  07CC  00A3               	movwf	spiInit@sType
  1687  07CD                     l1972:
  1688                           
  1689                           ;MSSP.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);MSSP.c: 7: {;MSSP.c: 8:     TRISC5 = 0;
  1690  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  1691  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  1692  07CF  1287               	bcf	7,5	;volatile
  1693                           
  1694                           ;MSSP.c: 9:     if(sType & 0b00000100)
  1695  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1696  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1697  07D2  1D23               	btfss	spiInit@sType,2
  1698  07D3  2FD5               	goto	u551
  1699  07D4  2FD6               	goto	u550
  1700  07D5                     u551:
  1701  07D5  2FDC               	goto	l1978
  1702  07D6                     u550:
  1703  07D6                     l1974:
  1704                           
  1705                           ;MSSP.c: 10:     {;MSSP.c: 11:         SSPSTAT = sTransmitEdge;
  1706  07D6  0822               	movf	spiInit@sTransmitEdge,w
  1707  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  1708  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  1709  07D9  0094               	movwf	20	;volatile
  1710  07DA                     l1976:
  1711                           
  1712                           ;MSSP.c: 12:         TRISC3 = 1;
  1713  07DA  1587               	bsf	7,3	;volatile
  1714                           
  1715                           ;MSSP.c: 13:     }
  1716  07DB  2FE2               	goto	l198
  1717  07DC                     l1978:
  1718                           
  1719                           ;MSSP.c: 15:     {;MSSP.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
  1720  07DC  0820               	movf	spiInit@sDataSample,w
  1721  07DD  0422               	iorwf	spiInit@sTransmitEdge,w
  1722  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  1723  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  1724  07E0  0094               	movwf	20	;volatile
  1725  07E1                     l1980:
  1726                           
  1727                           ;MSSP.c: 17:         TRISC3 = 0;
  1728  07E1  1187               	bcf	7,3	;volatile
  1729  07E2                     l198:	
  1730                           ;MSSP.c: 18:     }
  1731                           
  1732                           
  1733                           ;MSSP.c: 20:     SSPCON = sType | sClockIdle;
  1734  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1735  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1736  07E4  0823               	movf	spiInit@sType,w
  1737  07E5  0421               	iorwf	spiInit@sClockIdle,w
  1738  07E6  0094               	movwf	20	;volatile
  1739  07E7                     l199:
  1740  07E7  0008               	return
  1741  07E8                     __end_of_spiInit:
  1742                           
  1743                           	psect	text5
  1744  07A9                     __ptext5:	
  1745 ;; *************** function _Setup *****************
  1746 ;; Defined at:
  1747 ;;		line 132 in file "master.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    2
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           
  1776                           ;psect for function _Setup
  1777  07A9                     _Setup:
  1778  07A9                     l1982:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _Setup: [wreg+status,2]
  1781                           
  1782                           
  1783                           ;master.c: 134:     PORTA = 0;
  1784  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1785  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1786  07AB  0185               	clrf	5	;volatile
  1787                           
  1788                           ;master.c: 135:     PORTB = 0;
  1789  07AC  0186               	clrf	6	;volatile
  1790                           
  1791                           ;master.c: 136:     PORTC = 0;
  1792  07AD  0187               	clrf	7	;volatile
  1793                           
  1794                           ;master.c: 137:     PORTD = 0;
  1795  07AE  0188               	clrf	8	;volatile
  1796                           
  1797                           ;master.c: 138:     PORTE = 0;
  1798  07AF  0189               	clrf	9	;volatile
  1799                           
  1800                           ;master.c: 140:     TRISA = 0B00000000;
  1801  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1802  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1803  07B2  0185               	clrf	5	;volatile
  1804                           
  1805                           ;master.c: 141:     TRISB = 0B00000000;
  1806  07B3  0186               	clrf	6	;volatile
  1807  07B4                     l1984:
  1808                           
  1809                           ;master.c: 142:     TRISC = 0B00010000;
  1810  07B4  3010               	movlw	16
  1811  07B5  0087               	movwf	7	;volatile
  1812  07B6                     l1986:
  1813                           
  1814                           ;master.c: 143:     TRISD = 0B00000000;
  1815  07B6  0188               	clrf	8	;volatile
  1816  07B7                     l1988:
  1817                           
  1818                           ;master.c: 144:     TRISE = 0B0000;
  1819  07B7  0189               	clrf	9	;volatile
  1820  07B8                     l1990:
  1821                           
  1822                           ;master.c: 146:     ANSEL = 0B00000000;
  1823  07B8  1683               	bsf	3,5	;RP0=1, select bank3
  1824  07B9  1703               	bsf	3,6	;RP1=1, select bank3
  1825  07BA  0188               	clrf	8	;volatile
  1826  07BB                     l1992:
  1827                           
  1828                           ;master.c: 147:     ANSELH = 0B00000000;
  1829  07BB  0189               	clrf	9	;volatile
  1830  07BC                     l1994:
  1831                           
  1832                           ;master.c: 150:     INTCONbits.GIE=1;
  1833  07BC  178B               	bsf	11,7	;volatile
  1834  07BD                     l1996:
  1835                           
  1836                           ;master.c: 151:     INTCONbits.PEIE=1;
  1837  07BD  170B               	bsf	11,6	;volatile
  1838  07BE                     l1998:
  1839                           
  1840                           ;master.c: 152:     INTCONbits.TMR0IE=1;
  1841  07BE  168B               	bsf	11,5	;volatile
  1842  07BF                     l2000:
  1843                           
  1844                           ;master.c: 153:     INTCONbits.TMR0IF=0;
  1845  07BF  110B               	bcf	11,2	;volatile
  1846  07C0                     l2002:
  1847                           
  1848                           ;master.c: 154:     PIE1bits.TXIE = 1;
  1849  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  1850  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  1851  07C2  160C               	bsf	12,4	;volatile
  1852  07C3                     l2004:
  1853                           
  1854                           ;master.c: 155:     OPTION_REGbits.T0CS=0;
  1855  07C3  1281               	bcf	1,5	;volatile
  1856  07C4                     l2006:
  1857                           
  1858                           ;master.c: 156:     OPTION_REGbits.T0SE=0;
  1859  07C4  1201               	bcf	1,4	;volatile
  1860  07C5                     l2008:
  1861                           
  1862                           ;master.c: 157:     OPTION_REGbits.PSA=0;
  1863  07C5  1181               	bcf	1,3	;volatile
  1864  07C6                     l2010:
  1865                           
  1866                           ;master.c: 159:     OPTION_REGbits.PS0=1;
  1867  07C6  1401               	bsf	1,0	;volatile
  1868  07C7                     l2012:
  1869                           
  1870                           ;master.c: 160:     OPTION_REGbits.PS1=1;
  1871  07C7  1481               	bsf	1,1	;volatile
  1872  07C8                     l2014:
  1873                           
  1874                           ;master.c: 161:     OPTION_REGbits.PS2=1;
  1875  07C8  1501               	bsf	1,2	;volatile
  1876  07C9                     l148:
  1877  07C9  0008               	return
  1878  07CA                     __end_of_Setup:
  1879                           
  1880                           	psect	text6
  1881  0FC8                     __ptext6:	
  1882 ;; *************** function _SET_TXR *****************
  1883 ;; Defined at:
  1884 ;;		line 3 in file "EUSART.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0
  1901 ;;      Totals:         0       0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    2
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _SET_TXR
  1914  0FC8                     _SET_TXR:
  1915  0FC8                     l1964:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _SET_TXR: [wreg+status,2]
  1918                           
  1919                           
  1920                           ;EUSART.c: 4:     TXSTAbits.SYNC=0;
  1921  0FC8  1683               	bsf	3,5	;RP0=1, select bank1
  1922  0FC9  1303               	bcf	3,6	;RP1=0, select bank1
  1923  0FCA  1218               	bcf	24,4	;volatile
  1924                           
  1925                           ;EUSART.c: 5:     TXSTAbits.TXEN=1;
  1926  0FCB  1698               	bsf	24,5	;volatile
  1927                           
  1928                           ;EUSART.c: 6:     TXSTAbits.BRGH=1;
  1929  0FCC  1518               	bsf	24,2	;volatile
  1930                           
  1931                           ;EUSART.c: 7:     TXSTAbits.TX9=0;
  1932  0FCD  1318               	bcf	24,6	;volatile
  1933                           
  1934                           ;EUSART.c: 8:     BAUDCTLbits.BRG16=0;
  1935  0FCE  1683               	bsf	3,5	;RP0=1, select bank3
  1936  0FCF  1703               	bsf	3,6	;RP1=1, select bank3
  1937  0FD0  1187               	bcf	7,3	;volatile
  1938  0FD1                     l1966:
  1939                           
  1940                           ;EUSART.c: 9:     SPBRG=25;
  1941  0FD1  3019               	movlw	25
  1942  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0FD4  0099               	movwf	25	;volatile
  1945  0FD5                     l1968:
  1946                           
  1947                           ;EUSART.c: 10:     SPBRGH=0;
  1948  0FD5  019A               	clrf	26	;volatile
  1949  0FD6                     l301:
  1950  0FD6  0008               	return
  1951  0FD7                     __end_of_SET_TXR:
  1952                           
  1953                           	psect	text7
  1954  0FB0                     __ptext7:	
  1955 ;; *************** function _SET_RXT *****************
  1956 ;; Defined at:
  1957 ;;		line 12 in file "EUSART.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		None
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    2
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _SET_RXT
  1987  0FB0                     _SET_RXT:
  1988  0FB0                     l1970:	
  1989                           ;incstack = 0
  1990                           ; Regs used in _SET_RXT: []
  1991                           
  1992                           
  1993                           ;EUSART.c: 13:     RCSTAbits.SPEN=1;
  1994  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0FB2  1798               	bsf	24,7	;volatile
  1997                           
  1998                           ;EUSART.c: 14:     RCSTAbits.CREN=1;
  1999  0FB3  1618               	bsf	24,4	;volatile
  2000                           
  2001                           ;EUSART.c: 15:     RCSTAbits.FERR=0;
  2002  0FB4  1118               	bcf	24,2	;volatile
  2003                           
  2004                           ;EUSART.c: 16:     RCSTAbits.OERR=0;
  2005  0FB5  1098               	bcf	24,1	;volatile
  2006                           
  2007                           ;EUSART.c: 17:     RCSTAbits.RX9=0;
  2008  0FB6  1318               	bcf	24,6	;volatile
  2009                           
  2010                           ;EUSART.c: 18:     PIE1bits.RCIE=1;
  2011  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  2013  0FB9  168C               	bsf	12,5	;volatile
  2014  0FBA                     l304:
  2015  0FBA  0008               	return
  2016  0FBB                     __end_of_SET_RXT:
  2017                           
  2018                           	psect	text8
  2019  0706                     __ptext8:	
  2020 ;; *************** function _LCD_IN *****************
  2021 ;; Defined at:
  2022 ;;		line 4 in file "SETLCD.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0
  2038 ;;      Temps:          0       2       0       0       0
  2039 ;;      Totals:         0       2       0       0       0
  2040 ;;Total ram usage:        2 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    4
  2043 ;; This function calls:
  2044 ;;		_LCD_ON
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _LCD_IN
  2052  0706                     _LCD_IN:
  2053  0706                     l2016:	
  2054                           ;incstack = 0
  2055                           ; Regs used in _LCD_IN: [wreg+status,2+status,0+pclath+cstack]
  2056                           
  2057                           
  2058                           ;SETLCD.c: 5:     TRISDbits.TRISD6 = 0;
  2059  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2060  0707  1303               	bcf	3,6	;RP1=0, select bank1
  2061  0708  1308               	bcf	8,6	;volatile
  2062                           
  2063                           ;SETLCD.c: 6:     TRISDbits.TRISD7 = 0;
  2064  0709  1388               	bcf	8,7	;volatile
  2065  070A                     l2018:
  2066                           
  2067                           ;SETLCD.c: 7:     TRISB = 0;
  2068  070A  0186               	clrf	6	;volatile
  2069  070B                     l2020:
  2070                           
  2071                           ;SETLCD.c: 8:     PORTDbits.RD6 = 0;
  2072  070B  1283               	bcf	3,5	;RP0=0, select bank0
  2073  070C  1303               	bcf	3,6	;RP1=0, select bank0
  2074  070D  1308               	bcf	8,6	;volatile
  2075  070E                     l2022:
  2076                           
  2077                           ;SETLCD.c: 9:     PORTDbits.RD7 = 0;
  2078  070E  1388               	bcf	8,7	;volatile
  2079                           
  2080                           ;SETLCD.c: 10:     PORTB = 0;
  2081  070F  0186               	clrf	6	;volatile
  2082  0710                     l2024:
  2083                           
  2084                           ;SETLCD.c: 11:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2085  0710  3041               	movlw	65
  2086  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0712  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0713  00A4               	movwf	??_LCD_IN+1
  2089  0714  30ED               	movlw	237
  2090  0715  00A3               	movwf	??_LCD_IN
  2091  0716                     u577:
  2092  0716  0BA3               	decfsz	??_LCD_IN,f
  2093  0717  2F16               	goto	u577
  2094  0718  0BA4               	decfsz	??_LCD_IN+1,f
  2095  0719  2F16               	goto	u577
  2096  071A  2F1B               	nop2
  2097  071B                     l2026:
  2098                           
  2099                           ;SETLCD.c: 12:     LCD_ON(0x02);
  2100  071B  3002               	movlw	2
  2101  071C  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  2102  0721                     l2028:
  2103                           
  2104                           ;SETLCD.c: 13:     LCD_ON(0x38);
  2105  0721  3038               	movlw	56
  2106  0722  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  2107  0727                     l2030:
  2108                           
  2109                           ;SETLCD.c: 14:     LCD_ON(0x0C);
  2110  0727  300C               	movlw	12
  2111  0728  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  2112  072D                     l2032:
  2113                           
  2114                           ;SETLCD.c: 15:     LCD_ON(0x06);
  2115  072D  3006               	movlw	6
  2116  072E  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  2117  0733                     l233:
  2118  0733  0008               	return
  2119  0734                     __end_of_LCD_IN:
  2120                           
  2121                           	psect	text9
  2122  0F91                     __ptext9:	
  2123 ;; *************** function _LCD_CL *****************
  2124 ;; Defined at:
  2125 ;;		line 34 in file "SETLCD.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    4
  2146 ;; This function calls:
  2147 ;;		_LCD_ON
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _LCD_CL
  2155  0F91                     _LCD_CL:
  2156  0F91                     l2034:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _LCD_CL: [wreg+status,2+status,0+pclath+cstack]
  2159                           
  2160                           
  2161                           ;SETLCD.c: 35:     LCD_ON(0x01);
  2162  0F91  3001               	movlw	1
  2163  0F92  120A  158A  27EA  120A  158A  	fcall	_LCD_ON
  2164  0F97                     l245:
  2165  0F97  0008               	return
  2166  0F98                     __end_of_LCD_CL:
  2167                           
  2168                           	psect	text10
  2169  0024                     __ptext10:	
  2170 ;; *************** function _LCDVAL1 *****************
  2171 ;; Defined at:
  2172 ;;		line 59 in file "SETLCD.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  x               2   11[BANK0 ] int 
  2175 ;;  Z               2   13[BANK0 ] int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       4       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       1       0       0       0
  2190 ;;      Totals:         0       5       0       0       0
  2191 ;;Total ram usage:        5 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    6
  2194 ;; This function calls:
  2195 ;;		_LCD_POINT
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _LCDVAL1
  2203  0024                     _LCDVAL1:
  2204  0024                     l2046:	
  2205                           ;incstack = 0
  2206                           ; Regs used in _LCDVAL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2207                           
  2208                           
  2209                           ;SETLCD.c: 60:     switch (Z){
  2210  0024  29B1               	goto	l2094
  2211  0025                     l2048:
  2212                           
  2213                           ;SETLCD.c: 62:             LCD_POINT(x,2,"0");
  2214  0025  082C               	movf	LCDVAL1@x+1,w
  2215  0026  00A5               	movwf	LCD_POINT@x+1
  2216  0027  082B               	movf	LCDVAL1@x,w
  2217  0028  00A4               	movwf	LCD_POINT@x
  2218  0029  3002               	movlw	2
  2219  002A  00A6               	movwf	LCD_POINT@y
  2220  002B  3000               	movlw	0
  2221  002C  00A7               	movwf	LCD_POINT@y+1
  2222  002D  301E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2223  002E  00AF               	movwf	??_LCDVAL1
  2224  002F  082F               	movf	??_LCDVAL1,w
  2225  0030  00A8               	movwf	LCD_POINT@D
  2226  0031  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2227                           
  2228                           ;SETLCD.c: 63:             break;
  2229  0036  29F9               	goto	l286
  2230  0037                     l2050:
  2231                           
  2232                           ;SETLCD.c: 65:             LCD_POINT(x,2,"1");
  2233  0037  082C               	movf	LCDVAL1@x+1,w
  2234  0038  00A5               	movwf	LCD_POINT@x+1
  2235  0039  082B               	movf	LCDVAL1@x,w
  2236  003A  00A4               	movwf	LCD_POINT@x
  2237  003B  3002               	movlw	2
  2238  003C  00A6               	movwf	LCD_POINT@y
  2239  003D  3000               	movlw	0
  2240  003E  00A7               	movwf	LCD_POINT@y+1
  2241  003F  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2242  0040  00AF               	movwf	??_LCDVAL1
  2243  0041  082F               	movf	??_LCDVAL1,w
  2244  0042  00A8               	movwf	LCD_POINT@D
  2245  0043  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2246                           
  2247                           ;SETLCD.c: 66:             break;
  2248  0048  29F9               	goto	l286
  2249  0049                     l2052:
  2250                           
  2251                           ;SETLCD.c: 68:             LCD_POINT(x,2,"2");
  2252  0049  082C               	movf	LCDVAL1@x+1,w
  2253  004A  00A5               	movwf	LCD_POINT@x+1
  2254  004B  082B               	movf	LCDVAL1@x,w
  2255  004C  00A4               	movwf	LCD_POINT@x
  2256  004D  3002               	movlw	2
  2257  004E  00A6               	movwf	LCD_POINT@y
  2258  004F  3000               	movlw	0
  2259  0050  00A7               	movwf	LCD_POINT@y+1
  2260  0051  3022               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2261  0052  00AF               	movwf	??_LCDVAL1
  2262  0053  082F               	movf	??_LCDVAL1,w
  2263  0054  00A8               	movwf	LCD_POINT@D
  2264  0055  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2265                           
  2266                           ;SETLCD.c: 69:             break;
  2267  005A  29F9               	goto	l286
  2268  005B                     l2054:
  2269                           
  2270                           ;SETLCD.c: 71:             LCD_POINT(x,2,"3");
  2271  005B  082C               	movf	LCDVAL1@x+1,w
  2272  005C  00A5               	movwf	LCD_POINT@x+1
  2273  005D  082B               	movf	LCDVAL1@x,w
  2274  005E  00A4               	movwf	LCD_POINT@x
  2275  005F  3002               	movlw	2
  2276  0060  00A6               	movwf	LCD_POINT@y
  2277  0061  3000               	movlw	0
  2278  0062  00A7               	movwf	LCD_POINT@y+1
  2279  0063  3024               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2280  0064  00AF               	movwf	??_LCDVAL1
  2281  0065  082F               	movf	??_LCDVAL1,w
  2282  0066  00A8               	movwf	LCD_POINT@D
  2283  0067  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2284                           
  2285                           ;SETLCD.c: 72:             break;
  2286  006C  29F9               	goto	l286
  2287  006D                     l2056:
  2288                           
  2289                           ;SETLCD.c: 74:             LCD_POINT(x,2,"4");
  2290  006D  082C               	movf	LCDVAL1@x+1,w
  2291  006E  00A5               	movwf	LCD_POINT@x+1
  2292  006F  082B               	movf	LCDVAL1@x,w
  2293  0070  00A4               	movwf	LCD_POINT@x
  2294  0071  3002               	movlw	2
  2295  0072  00A6               	movwf	LCD_POINT@y
  2296  0073  3000               	movlw	0
  2297  0074  00A7               	movwf	LCD_POINT@y+1
  2298  0075  3026               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2299  0076  00AF               	movwf	??_LCDVAL1
  2300  0077  082F               	movf	??_LCDVAL1,w
  2301  0078  00A8               	movwf	LCD_POINT@D
  2302  0079  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2303                           
  2304                           ;SETLCD.c: 75:             break;
  2305  007E  29F9               	goto	l286
  2306  007F                     l2058:
  2307                           
  2308                           ;SETLCD.c: 77:             LCD_POINT(x,2,"5");
  2309  007F  082C               	movf	LCDVAL1@x+1,w
  2310  0080  00A5               	movwf	LCD_POINT@x+1
  2311  0081  082B               	movf	LCDVAL1@x,w
  2312  0082  00A4               	movwf	LCD_POINT@x
  2313  0083  3002               	movlw	2
  2314  0084  00A6               	movwf	LCD_POINT@y
  2315  0085  3000               	movlw	0
  2316  0086  00A7               	movwf	LCD_POINT@y+1
  2317  0087  3028               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2318  0088  00AF               	movwf	??_LCDVAL1
  2319  0089  082F               	movf	??_LCDVAL1,w
  2320  008A  00A8               	movwf	LCD_POINT@D
  2321  008B  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2322                           
  2323                           ;SETLCD.c: 78:             break;
  2324  0090  29F9               	goto	l286
  2325  0091                     l2060:
  2326                           
  2327                           ;SETLCD.c: 80:             LCD_POINT(x,2,"6");
  2328  0091  082C               	movf	LCDVAL1@x+1,w
  2329  0092  00A5               	movwf	LCD_POINT@x+1
  2330  0093  082B               	movf	LCDVAL1@x,w
  2331  0094  00A4               	movwf	LCD_POINT@x
  2332  0095  3002               	movlw	2
  2333  0096  00A6               	movwf	LCD_POINT@y
  2334  0097  3000               	movlw	0
  2335  0098  00A7               	movwf	LCD_POINT@y+1
  2336  0099  302A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2337  009A  00AF               	movwf	??_LCDVAL1
  2338  009B  082F               	movf	??_LCDVAL1,w
  2339  009C  00A8               	movwf	LCD_POINT@D
  2340  009D  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2341                           
  2342                           ;SETLCD.c: 81:             break;
  2343  00A2  29F9               	goto	l286
  2344  00A3                     l2062:
  2345                           
  2346                           ;SETLCD.c: 83:             LCD_POINT(x,2,"7");
  2347  00A3  082C               	movf	LCDVAL1@x+1,w
  2348  00A4  00A5               	movwf	LCD_POINT@x+1
  2349  00A5  082B               	movf	LCDVAL1@x,w
  2350  00A6  00A4               	movwf	LCD_POINT@x
  2351  00A7  3002               	movlw	2
  2352  00A8  00A6               	movwf	LCD_POINT@y
  2353  00A9  3000               	movlw	0
  2354  00AA  00A7               	movwf	LCD_POINT@y+1
  2355  00AB  302C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2356  00AC  00AF               	movwf	??_LCDVAL1
  2357  00AD  082F               	movf	??_LCDVAL1,w
  2358  00AE  00A8               	movwf	LCD_POINT@D
  2359  00AF  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2360                           
  2361                           ;SETLCD.c: 84:             break;
  2362  00B4  29F9               	goto	l286
  2363  00B5                     l2064:
  2364                           
  2365                           ;SETLCD.c: 86:             LCD_POINT(x,2,"8");
  2366  00B5  082C               	movf	LCDVAL1@x+1,w
  2367  00B6  00A5               	movwf	LCD_POINT@x+1
  2368  00B7  082B               	movf	LCDVAL1@x,w
  2369  00B8  00A4               	movwf	LCD_POINT@x
  2370  00B9  3002               	movlw	2
  2371  00BA  00A6               	movwf	LCD_POINT@y
  2372  00BB  3000               	movlw	0
  2373  00BC  00A7               	movwf	LCD_POINT@y+1
  2374  00BD  302E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2375  00BE  00AF               	movwf	??_LCDVAL1
  2376  00BF  082F               	movf	??_LCDVAL1,w
  2377  00C0  00A8               	movwf	LCD_POINT@D
  2378  00C1  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2379                           
  2380                           ;SETLCD.c: 87:             break;
  2381  00C6  29F9               	goto	l286
  2382  00C7                     l2066:
  2383                           
  2384                           ;SETLCD.c: 89:             LCD_POINT(x,2,"9");
  2385  00C7  082C               	movf	LCDVAL1@x+1,w
  2386  00C8  00A5               	movwf	LCD_POINT@x+1
  2387  00C9  082B               	movf	LCDVAL1@x,w
  2388  00CA  00A4               	movwf	LCD_POINT@x
  2389  00CB  3002               	movlw	2
  2390  00CC  00A6               	movwf	LCD_POINT@y
  2391  00CD  3000               	movlw	0
  2392  00CE  00A7               	movwf	LCD_POINT@y+1
  2393  00CF  3030               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2394  00D0  00AF               	movwf	??_LCDVAL1
  2395  00D1  082F               	movf	??_LCDVAL1,w
  2396  00D2  00A8               	movwf	LCD_POINT@D
  2397  00D3  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2398                           
  2399                           ;SETLCD.c: 90:             break;
  2400  00D8  29F9               	goto	l286
  2401  00D9                     l2068:
  2402                           
  2403                           ;SETLCD.c: 92:             LCD_POINT (x,2,"A");
  2404  00D9  082C               	movf	LCDVAL1@x+1,w
  2405  00DA  00A5               	movwf	LCD_POINT@x+1
  2406  00DB  082B               	movf	LCDVAL1@x,w
  2407  00DC  00A4               	movwf	LCD_POINT@x
  2408  00DD  3002               	movlw	2
  2409  00DE  00A6               	movwf	LCD_POINT@y
  2410  00DF  3000               	movlw	0
  2411  00E0  00A7               	movwf	LCD_POINT@y+1
  2412  00E1  3034               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2413  00E2  00AF               	movwf	??_LCDVAL1
  2414  00E3  082F               	movf	??_LCDVAL1,w
  2415  00E4  00A8               	movwf	LCD_POINT@D
  2416  00E5  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2417                           
  2418                           ;SETLCD.c: 93:             break;
  2419  00EA  29F9               	goto	l286
  2420  00EB                     l2070:
  2421                           
  2422                           ;SETLCD.c: 95:             LCD_POINT (x,2,"B");
  2423  00EB  082C               	movf	LCDVAL1@x+1,w
  2424  00EC  00A5               	movwf	LCD_POINT@x+1
  2425  00ED  082B               	movf	LCDVAL1@x,w
  2426  00EE  00A4               	movwf	LCD_POINT@x
  2427  00EF  3002               	movlw	2
  2428  00F0  00A6               	movwf	LCD_POINT@y
  2429  00F1  3000               	movlw	0
  2430  00F2  00A7               	movwf	LCD_POINT@y+1
  2431  00F3  3036               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2432  00F4  00AF               	movwf	??_LCDVAL1
  2433  00F5  082F               	movf	??_LCDVAL1,w
  2434  00F6  00A8               	movwf	LCD_POINT@D
  2435  00F7  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2436                           
  2437                           ;SETLCD.c: 96:             break;
  2438  00FC  29F9               	goto	l286
  2439  00FD                     l2072:
  2440                           
  2441                           ;SETLCD.c: 98:             LCD_POINT (x,2,"C");
  2442  00FD  082C               	movf	LCDVAL1@x+1,w
  2443  00FE  00A5               	movwf	LCD_POINT@x+1
  2444  00FF  082B               	movf	LCDVAL1@x,w
  2445  0100  00A4               	movwf	LCD_POINT@x
  2446  0101  3002               	movlw	2
  2447  0102  00A6               	movwf	LCD_POINT@y
  2448  0103  3000               	movlw	0
  2449  0104  00A7               	movwf	LCD_POINT@y+1
  2450  0105  3038               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2451  0106  00AF               	movwf	??_LCDVAL1
  2452  0107  082F               	movf	??_LCDVAL1,w
  2453  0108  00A8               	movwf	LCD_POINT@D
  2454  0109  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2455                           
  2456                           ;SETLCD.c: 99:             break;
  2457  010E  29F9               	goto	l286
  2458  010F                     l2074:
  2459                           
  2460                           ;SETLCD.c: 101:             LCD_POINT (x,2,"D");
  2461  010F  082C               	movf	LCDVAL1@x+1,w
  2462  0110  00A5               	movwf	LCD_POINT@x+1
  2463  0111  082B               	movf	LCDVAL1@x,w
  2464  0112  00A4               	movwf	LCD_POINT@x
  2465  0113  3002               	movlw	2
  2466  0114  00A6               	movwf	LCD_POINT@y
  2467  0115  3000               	movlw	0
  2468  0116  00A7               	movwf	LCD_POINT@y+1
  2469  0117  303A               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2470  0118  00AF               	movwf	??_LCDVAL1
  2471  0119  082F               	movf	??_LCDVAL1,w
  2472  011A  00A8               	movwf	LCD_POINT@D
  2473  011B  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2474                           
  2475                           ;SETLCD.c: 102:             break;
  2476  0120  29F9               	goto	l286
  2477  0121                     l2076:
  2478                           
  2479                           ;SETLCD.c: 104:             LCD_POINT (x,2,"E");
  2480  0121  082C               	movf	LCDVAL1@x+1,w
  2481  0122  00A5               	movwf	LCD_POINT@x+1
  2482  0123  082B               	movf	LCDVAL1@x,w
  2483  0124  00A4               	movwf	LCD_POINT@x
  2484  0125  3002               	movlw	2
  2485  0126  00A6               	movwf	LCD_POINT@y
  2486  0127  3000               	movlw	0
  2487  0128  00A7               	movwf	LCD_POINT@y+1
  2488  0129  303C               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2489  012A  00AF               	movwf	??_LCDVAL1
  2490  012B  082F               	movf	??_LCDVAL1,w
  2491  012C  00A8               	movwf	LCD_POINT@D
  2492  012D  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2493                           
  2494                           ;SETLCD.c: 105:             break;
  2495  0132  29F9               	goto	l286
  2496  0133                     l2078:
  2497                           
  2498                           ;SETLCD.c: 107:             LCD_POINT (x,2,"F");
  2499  0133  082C               	movf	LCDVAL1@x+1,w
  2500  0134  00A5               	movwf	LCD_POINT@x+1
  2501  0135  082B               	movf	LCDVAL1@x,w
  2502  0136  00A4               	movwf	LCD_POINT@x
  2503  0137  3002               	movlw	2
  2504  0138  00A6               	movwf	LCD_POINT@y
  2505  0139  3000               	movlw	0
  2506  013A  00A7               	movwf	LCD_POINT@y+1
  2507  013B  303E               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2508  013C  00AF               	movwf	??_LCDVAL1
  2509  013D  082F               	movf	??_LCDVAL1,w
  2510  013E  00A8               	movwf	LCD_POINT@D
  2511  013F  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2512                           
  2513                           ;SETLCD.c: 108:             break;
  2514  0144  29F9               	goto	l286
  2515  0145                     l2080:
  2516                           
  2517                           ;SETLCD.c: 110:             LCD_POINT (x,2,".");
  2518  0145  082C               	movf	LCDVAL1@x+1,w
  2519  0146  00A5               	movwf	LCD_POINT@x+1
  2520  0147  082B               	movf	LCDVAL1@x,w
  2521  0148  00A4               	movwf	LCD_POINT@x
  2522  0149  3002               	movlw	2
  2523  014A  00A6               	movwf	LCD_POINT@y
  2524  014B  3000               	movlw	0
  2525  014C  00A7               	movwf	LCD_POINT@y+1
  2526  014D  301C               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2527  014E  00AF               	movwf	??_LCDVAL1
  2528  014F  082F               	movf	??_LCDVAL1,w
  2529  0150  00A8               	movwf	LCD_POINT@D
  2530  0151  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2531                           
  2532                           ;SETLCD.c: 111:             break;
  2533  0156  29F9               	goto	l286
  2534  0157                     l2082:
  2535                           
  2536                           ;SETLCD.c: 113:             LCD_POINT (x,2,"+");
  2537  0157  082C               	movf	LCDVAL1@x+1,w
  2538  0158  00A5               	movwf	LCD_POINT@x+1
  2539  0159  082B               	movf	LCDVAL1@x,w
  2540  015A  00A4               	movwf	LCD_POINT@x
  2541  015B  3002               	movlw	2
  2542  015C  00A6               	movwf	LCD_POINT@y
  2543  015D  3000               	movlw	0
  2544  015E  00A7               	movwf	LCD_POINT@y+1
  2545  015F  3018               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2546  0160  00AF               	movwf	??_LCDVAL1
  2547  0161  082F               	movf	??_LCDVAL1,w
  2548  0162  00A8               	movwf	LCD_POINT@D
  2549  0163  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2550                           
  2551                           ;SETLCD.c: 114:             break;
  2552  0168  29F9               	goto	l286
  2553  0169                     l2084:
  2554                           
  2555                           ;SETLCD.c: 116:             LCD_POINT (x,2,"-");
  2556  0169  082C               	movf	LCDVAL1@x+1,w
  2557  016A  00A5               	movwf	LCD_POINT@x+1
  2558  016B  082B               	movf	LCDVAL1@x,w
  2559  016C  00A4               	movwf	LCD_POINT@x
  2560  016D  3002               	movlw	2
  2561  016E  00A6               	movwf	LCD_POINT@y
  2562  016F  3000               	movlw	0
  2563  0170  00A7               	movwf	LCD_POINT@y+1
  2564  0171  301A               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2565  0172  00AF               	movwf	??_LCDVAL1
  2566  0173  082F               	movf	??_LCDVAL1,w
  2567  0174  00A8               	movwf	LCD_POINT@D
  2568  0175  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2569                           
  2570                           ;SETLCD.c: 117:             break;
  2571  017A  29F9               	goto	l286
  2572  017B                     l2086:
  2573                           
  2574                           ;SETLCD.c: 119:             LCD_POINT (x,2,"Â°");
  2575  017B  082C               	movf	LCDVAL1@x+1,w
  2576  017C  00A5               	movwf	LCD_POINT@x+1
  2577  017D  082B               	movf	LCDVAL1@x,w
  2578  017E  00A4               	movwf	LCD_POINT@x
  2579  017F  3002               	movlw	2
  2580  0180  00A6               	movwf	LCD_POINT@y
  2581  0181  3000               	movlw	0
  2582  0182  00A7               	movwf	LCD_POINT@y+1
  2583  0183  3013               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2584  0184  00AF               	movwf	??_LCDVAL1
  2585  0185  082F               	movf	??_LCDVAL1,w
  2586  0186  00A8               	movwf	LCD_POINT@D
  2587  0187  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2588                           
  2589                           ;SETLCD.c: 120:             break;
  2590  018C  29F9               	goto	l286
  2591  018D                     l2088:
  2592                           
  2593                           ;SETLCD.c: 122:             LCD_POINT (x,2," ");
  2594  018D  082C               	movf	LCDVAL1@x+1,w
  2595  018E  00A5               	movwf	LCD_POINT@x+1
  2596  018F  082B               	movf	LCDVAL1@x,w
  2597  0190  00A4               	movwf	LCD_POINT@x
  2598  0191  3002               	movlw	2
  2599  0192  00A6               	movwf	LCD_POINT@y
  2600  0193  3000               	movlw	0
  2601  0194  00A7               	movwf	LCD_POINT@y+1
  2602  0195  3016               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2603  0196  00AF               	movwf	??_LCDVAL1
  2604  0197  082F               	movf	??_LCDVAL1,w
  2605  0198  00A8               	movwf	LCD_POINT@D
  2606  0199  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2607                           
  2608                           ;SETLCD.c: 123:             break;
  2609  019E  29F9               	goto	l286
  2610  019F                     l2090:
  2611                           
  2612                           ;SETLCD.c: 125:             LCD_POINT(x,2,"@");
  2613  019F  082C               	movf	LCDVAL1@x+1,w
  2614  01A0  00A5               	movwf	LCD_POINT@x+1
  2615  01A1  082B               	movf	LCDVAL1@x,w
  2616  01A2  00A4               	movwf	LCD_POINT@x
  2617  01A3  3002               	movlw	2
  2618  01A4  00A6               	movwf	LCD_POINT@y
  2619  01A5  3000               	movlw	0
  2620  01A6  00A7               	movwf	LCD_POINT@y+1
  2621  01A7  3032               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2622  01A8  00AF               	movwf	??_LCDVAL1
  2623  01A9  082F               	movf	??_LCDVAL1,w
  2624  01AA  00A8               	movwf	LCD_POINT@D
  2625  01AB  120A  118A  2734  120A  118A  	fcall	_LCD_POINT
  2626                           
  2627                           ;SETLCD.c: 126:             break;
  2628  01B0  29F9               	goto	l286
  2629  01B1                     l2094:
  2630                           
  2631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2632                           ; Switch size 1, requested type "simple"
  2633                           ; Number of cases is 1, Range of values is 0 to 0
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte            4     3 (average)
  2637                           ; direct_byte           11     8 (fixed)
  2638                           ; jumptable            260     6 (fixed)
  2639                           ;	Chosen strategy is simple_byte
  2640  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2641  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2642  01B3  082E               	movf	LCDVAL1@Z+1,w
  2643  01B4  3A00               	xorlw	0	; case 0
  2644  01B5  1903               	skipnz
  2645  01B6  29B8               	goto	l2262
  2646  01B7  299F               	goto	l2090
  2647  01B8                     l2262:
  2648                           
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 21, Range of values is 0 to 20
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           64    33 (average)
  2654                           ; direct_byte           71     8 (fixed)
  2655                           ; jumptable            260     6 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657  01B8  082D               	movf	LCDVAL1@Z,w
  2658  01B9  3A00               	xorlw	0	; case 0
  2659  01BA  1903               	skipnz
  2660  01BB  2825               	goto	l2048
  2661  01BC  3A01               	xorlw	1	; case 1
  2662  01BD  1903               	skipnz
  2663  01BE  2837               	goto	l2050
  2664  01BF  3A03               	xorlw	3	; case 2
  2665  01C0  1903               	skipnz
  2666  01C1  2849               	goto	l2052
  2667  01C2  3A01               	xorlw	1	; case 3
  2668  01C3  1903               	skipnz
  2669  01C4  285B               	goto	l2054
  2670  01C5  3A07               	xorlw	7	; case 4
  2671  01C6  1903               	skipnz
  2672  01C7  286D               	goto	l2056
  2673  01C8  3A01               	xorlw	1	; case 5
  2674  01C9  1903               	skipnz
  2675  01CA  287F               	goto	l2058
  2676  01CB  3A03               	xorlw	3	; case 6
  2677  01CC  1903               	skipnz
  2678  01CD  2891               	goto	l2060
  2679  01CE  3A01               	xorlw	1	; case 7
  2680  01CF  1903               	skipnz
  2681  01D0  28A3               	goto	l2062
  2682  01D1  3A0F               	xorlw	15	; case 8
  2683  01D2  1903               	skipnz
  2684  01D3  28B5               	goto	l2064
  2685  01D4  3A01               	xorlw	1	; case 9
  2686  01D5  1903               	skipnz
  2687  01D6  28C7               	goto	l2066
  2688  01D7  3A03               	xorlw	3	; case 10
  2689  01D8  1903               	skipnz
  2690  01D9  28D9               	goto	l2068
  2691  01DA  3A01               	xorlw	1	; case 11
  2692  01DB  1903               	skipnz
  2693  01DC  28EB               	goto	l2070
  2694  01DD  3A07               	xorlw	7	; case 12
  2695  01DE  1903               	skipnz
  2696  01DF  28FD               	goto	l2072
  2697  01E0  3A01               	xorlw	1	; case 13
  2698  01E1  1903               	skipnz
  2699  01E2  290F               	goto	l2074
  2700  01E3  3A03               	xorlw	3	; case 14
  2701  01E4  1903               	skipnz
  2702  01E5  2921               	goto	l2076
  2703  01E6  3A01               	xorlw	1	; case 15
  2704  01E7  1903               	skipnz
  2705  01E8  2933               	goto	l2078
  2706  01E9  3A1F               	xorlw	31	; case 16
  2707  01EA  1903               	skipnz
  2708  01EB  2945               	goto	l2080
  2709  01EC  3A01               	xorlw	1	; case 17
  2710  01ED  1903               	skipnz
  2711  01EE  2957               	goto	l2082
  2712  01EF  3A03               	xorlw	3	; case 18
  2713  01F0  1903               	skipnz
  2714  01F1  2969               	goto	l2084
  2715  01F2  3A01               	xorlw	1	; case 19
  2716  01F3  1903               	skipnz
  2717  01F4  297B               	goto	l2086
  2718  01F5  3A07               	xorlw	7	; case 20
  2719  01F6  1903               	skipnz
  2720  01F7  298D               	goto	l2088
  2721  01F8  299F               	goto	l2090
  2722  01F9                     l286:
  2723  01F9  0008               	return
  2724  01FA                     __end_of_LCDVAL1:
  2725                           
  2726                           	psect	text11
  2727  0734                     __ptext11:	
  2728 ;; *************** function _LCD_POINT *****************
  2729 ;; Defined at:
  2730 ;;		line 43 in file "SETLCD.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  x               2    4[BANK0 ] int 
  2733 ;;  y               2    6[BANK0 ] int 
  2734 ;;  D               1    8[BANK0 ] PTR unsigned char 
  2735 ;;		 -> STR_23(2), STR_22(2), STR_21(3), STR_20(2), 
  2736 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2737 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  2738 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  2739 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  2740 ;;		 -> STR_3(2), STR_2(2), STR_1(18), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  LOC             1   10[BANK0 ] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         0       5       0       0       0
  2753 ;;      Locals:         0       1       0       0       0
  2754 ;;      Temps:          0       1       0       0       0
  2755 ;;      Totals:         0       7       0       0       0
  2756 ;;Total ram usage:        7 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    5
  2759 ;; This function calls:
  2760 ;;		_LCD_ON
  2761 ;;		_LCD_P
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;;		_LCDVAL1
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function _LCD_POINT
  2770  0734                     _LCD_POINT:
  2771  0734                     l1914:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _LCD_POINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2774                           
  2775                           
  2776                           ;SETLCD.c: 44:     char LOC;;SETLCD.c: 45:     switch (y){
  2777  0734  2F41               	goto	l1924
  2778  0735                     l1916:
  2779                           
  2780                           ;SETLCD.c: 47:             LOC = 0x80 + x;
  2781  0735  0824               	movf	LCD_POINT@x,w
  2782  0736  3E80               	addlw	128
  2783  0737  00A9               	movwf	??_LCD_POINT
  2784  0738  0829               	movf	??_LCD_POINT,w
  2785  0739  00AA               	movwf	LCD_POINT@LOC
  2786                           
  2787                           ;SETLCD.c: 48:             break;
  2788  073A  2F50               	goto	l1926
  2789  073B                     l1918:
  2790                           
  2791                           ;SETLCD.c: 50:             LOC = 0xC0 + x;
  2792  073B  0824               	movf	LCD_POINT@x,w
  2793  073C  3EC0               	addlw	192
  2794  073D  00A9               	movwf	??_LCD_POINT
  2795  073E  0829               	movf	??_LCD_POINT,w
  2796  073F  00AA               	movwf	LCD_POINT@LOC
  2797                           
  2798                           ;SETLCD.c: 51:             break;
  2799  0740  2F50               	goto	l1926
  2800  0741                     l1924:
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ; direct_byte           11     8 (fixed)
  2809                           ; jumptable            260     6 (fixed)
  2810                           ;	Chosen strategy is simple_byte
  2811  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0743  0827               	movf	LCD_POINT@y+1,w
  2814  0744  3A00               	xorlw	0	; case 0
  2815  0745  1903               	skipnz
  2816  0746  2F48               	goto	l2264
  2817  0747  2F35               	goto	l1916
  2818  0748                     l2264:
  2819                           
  2820                           ; Switch size 1, requested type "simple"
  2821                           ; Number of cases is 2, Range of values is 1 to 2
  2822                           ; switch strategies available:
  2823                           ; Name         Instructions Cycles
  2824                           ; simple_byte            7     4 (average)
  2825                           ; direct_byte           17    11 (fixed)
  2826                           ; jumptable            263     9 (fixed)
  2827                           ;	Chosen strategy is simple_byte
  2828  0748  0826               	movf	LCD_POINT@y,w
  2829  0749  3A01               	xorlw	1	; case 1
  2830  074A  1903               	skipnz
  2831  074B  2F35               	goto	l1916
  2832  074C  3A03               	xorlw	3	; case 2
  2833  074D  1903               	skipnz
  2834  074E  2F3B               	goto	l1918
  2835  074F  2F35               	goto	l1916
  2836  0750                     l1926:
  2837                           
  2838                           ;SETLCD.c: 56:     LCD_ON(LOC);
  2839  0750  082A               	movf	LCD_POINT@LOC,w
  2840  0751  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  2841  0756                     l1928:
  2842                           
  2843                           ;SETLCD.c: 57:     LCD_P(D);
  2844  0756  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0757  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0758  0828               	movf	LCD_POINT@D,w
  2847  0759  120A  118A  2786  120A  118A  	fcall	_LCD_P
  2848  075E                     l259:
  2849  075E  0008               	return
  2850  075F                     __end_of_LCD_POINT:
  2851                           
  2852                           	psect	text12
  2853  0786                     __ptext12:	
  2854 ;; *************** function _LCD_P *****************
  2855 ;; Defined at:
  2856 ;;		line 37 in file "SETLCD.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  D               1    wreg     PTR unsigned char 
  2859 ;;		 -> STR_23(2), STR_22(2), STR_21(3), STR_20(2), 
  2860 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2861 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  2862 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  2863 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  2864 ;;		 -> STR_3(2), STR_2(2), STR_1(18), 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  D               1    3[BANK0 ] PTR unsigned char 
  2867 ;;		 -> STR_23(2), STR_22(2), STR_21(3), STR_20(2), 
  2868 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2869 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  2870 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  2871 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  2872 ;;		 -> STR_3(2), STR_2(2), STR_1(18), 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       1       0       0       0
  2884 ;;      Temps:          0       1       0       0       0
  2885 ;;      Totals:         0       2       0       0       0
  2886 ;;Total ram usage:        2 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    4
  2889 ;; This function calls:
  2890 ;;		_LCD_PLAY
  2891 ;; This function is called by:
  2892 ;;		_LCD_POINT
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _LCD_P
  2898  0786                     _LCD_P:
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _LCD_P: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2902                           ;LCD_P@D stored from wreg
  2903  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0788  00A3               	movwf	LCD_P@D
  2906  0789                     l1906:
  2907                           
  2908                           ;SETLCD.c: 38:     while (*D){
  2909  0789  2F9C               	goto	l1912
  2910  078A                     l1908:
  2911                           
  2912                           ;SETLCD.c: 39:         LCD_PLAY(*D);
  2913  078A  0823               	movf	LCD_P@D,w
  2914  078B  0084               	movwf	4
  2915  078C  120A  118A  2660  120A  118A  	fcall	stringdir
  2916  0791  120A  158A  27D7  120A  118A  	fcall	_LCD_PLAY
  2917  0796                     l1910:
  2918                           
  2919                           ;SETLCD.c: 40:         D++;
  2920  0796  3001               	movlw	1
  2921  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0799  00A2               	movwf	??_LCD_P
  2924  079A  0822               	movf	??_LCD_P,w
  2925  079B  07A3               	addwf	LCD_P@D,f
  2926  079C                     l1912:
  2927                           
  2928                           ;SETLCD.c: 38:     while (*D){
  2929  079C  0823               	movf	LCD_P@D,w
  2930  079D  0084               	movwf	4
  2931  079E  120A  118A  2660  120A  118A  	fcall	stringdir
  2932  07A3  3A00               	xorlw	0
  2933  07A4  1D03               	skipz
  2934  07A5  2FA7               	goto	u471
  2935  07A6  2FA8               	goto	u470
  2936  07A7                     u471:
  2937  07A7  2F8A               	goto	l1908
  2938  07A8                     u470:
  2939  07A8                     l251:
  2940  07A8  0008               	return
  2941  07A9                     __end_of_LCD_P:
  2942                           
  2943                           	psect	text13
  2944  0FD7                     __ptext13:	
  2945 ;; *************** function _LCD_PLAY *****************
  2946 ;; Defined at:
  2947 ;;		line 28 in file "SETLCD.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  D               1    wreg     unsigned char 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  D               1    1[BANK0 ] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2961 ;;      Params:         0       0       0       0       0
  2962 ;;      Locals:         0       1       0       0       0
  2963 ;;      Temps:          0       1       0       0       0
  2964 ;;      Totals:         0       2       0       0       0
  2965 ;;Total ram usage:        2 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    3
  2968 ;; This function calls:
  2969 ;;		_LCD_TIM
  2970 ;; This function is called by:
  2971 ;;		_LCD_P
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _LCD_PLAY
  2977  0FD7                     _LCD_PLAY:
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in _LCD_PLAY: [wreg+status,2+status,0+pclath+cstack]
  2981                           ;LCD_PLAY@D stored from wreg
  2982  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0FD9  00A1               	movwf	LCD_PLAY@D
  2985  0FDA                     l1890:
  2986                           
  2987                           ;SETLCD.c: 29:     PORTDbits.RD6=1;
  2988  0FDA  1708               	bsf	8,6	;volatile
  2989  0FDB                     l1892:
  2990                           
  2991                           ;SETLCD.c: 30:     PORTB=D;
  2992  0FDB  0821               	movf	LCD_PLAY@D,w
  2993  0FDC  0086               	movwf	6	;volatile
  2994  0FDD                     l1894:
  2995                           
  2996                           ;SETLCD.c: 31:     LCD_TIM();
  2997  0FDD  120A  158A  27BB  120A  158A  	fcall	_LCD_TIM
  2998  0FE2                     l1896:
  2999                           
  3000                           ;SETLCD.c: 32:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  3001  0FE2  300F               	movlw	15
  3002  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0FE5  00A0               	movwf	??_LCD_PLAY
  3005  0FE6                     u587:
  3006  0FE6  0BA0               	decfsz	??_LCD_PLAY,f
  3007  0FE7  2FE6               	goto	u587
  3008  0FE8  2FE9               	nop2
  3009  0FE9                     l242:
  3010  0FE9  0008               	return
  3011  0FEA                     __end_of_LCD_PLAY:
  3012                           
  3013                           	psect	text14
  3014  0FEA                     __ptext14:	
  3015 ;; *************** function _LCD_ON *****************
  3016 ;; Defined at:
  3017 ;;		line 17 in file "SETLCD.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  C               1    wreg     unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  C               1    2[BANK0 ] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         0       0       0       0       0
  3032 ;;      Locals:         0       1       0       0       0
  3033 ;;      Temps:          0       2       0       0       0
  3034 ;;      Totals:         0       3       0       0       0
  3035 ;;Total ram usage:        3 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    3
  3038 ;; This function calls:
  3039 ;;		_LCD_TIM
  3040 ;; This function is called by:
  3041 ;;		_LCD_IN
  3042 ;;		_LCD_CL
  3043 ;;		_LCD_POINT
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _LCD_ON
  3049  0FEA                     _LCD_ON:
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  3053                           ;LCD_ON@C stored from wreg
  3054  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0FEC  00A2               	movwf	LCD_ON@C
  3057  0FED                     l1898:
  3058                           
  3059                           ;SETLCD.c: 18:     PORTDbits.RD6=0;
  3060  0FED  1308               	bcf	8,6	;volatile
  3061  0FEE                     l1900:
  3062                           
  3063                           ;SETLCD.c: 19:     PORTB=C;
  3064  0FEE  0822               	movf	LCD_ON@C,w
  3065  0FEF  0086               	movwf	6	;volatile
  3066  0FF0                     l1902:
  3067                           
  3068                           ;SETLCD.c: 20:     LCD_TIM();
  3069  0FF0  120A  158A  27BB  120A  158A  	fcall	_LCD_TIM
  3070  0FF5                     l1904:
  3071                           
  3072                           ;SETLCD.c: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3073  0FF5  3003               	movlw	3
  3074  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0FF8  00A1               	movwf	??_LCD_ON+1
  3077  0FF9  3097               	movlw	151
  3078  0FFA  00A0               	movwf	??_LCD_ON
  3079  0FFB                     u597:
  3080  0FFB  0BA0               	decfsz	??_LCD_ON,f
  3081  0FFC  2FFB               	goto	u597
  3082  0FFD  0BA1               	decfsz	??_LCD_ON+1,f
  3083  0FFE  2FFB               	goto	u597
  3084  0FFF                     l236:
  3085  0FFF  0008               	return
  3086  1000                     __end_of_LCD_ON:
  3087                           
  3088                           	psect	text15
  3089  0FBB                     __ptext15:	
  3090 ;; *************** function _LCD_TIM *****************
  3091 ;; Defined at:
  3092 ;;		line 23 in file "SETLCD.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    2
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_LCD_ON
  3117 ;;		_LCD_PLAY
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _LCD_TIM
  3123  0FBB                     _LCD_TIM:
  3124  0FBB                     l1888:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _LCD_TIM: []
  3127                           
  3128                           
  3129                           ;SETLCD.c: 24:     PORTDbits.RD7 = 1;
  3130  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0FBD  1788               	bsf	8,7	;volatile
  3133                           
  3134                           ;SETLCD.c: 25:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3135  0FBE  2FBF               	nop2	;2 cycle nop
  3136  0FBF  2FC0               	nop2	;2 cycle nop
  3137  0FC0  0000               	nop
  3138                           
  3139                           ;SETLCD.c: 26:     PORTDbits.RD7 = 0;
  3140  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0FC3  1388               	bcf	8,7	;volatile
  3143                           
  3144                           ;SETLCD.c: 27:     _delay((unsigned long)((5)*(4000000/4000000.0)));}
  3145  0FC4  2FC5               	nop2	;2 cycle nop
  3146  0FC5  2FC6               	nop2	;2 cycle nop
  3147  0FC6  0000               	nop
  3148  0FC7                     l239:
  3149  0FC7  0008               	return
  3150  0FC8                     __end_of_LCD_TIM:
  3151                           
  3152                           	psect	text16
  3153  06D6                     __ptext16:	
  3154 ;; *************** function _CONV_AS *****************
  3155 ;; Defined at:
  3156 ;;		line 198 in file "master.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0
  3172 ;;      Temps:          0       1       0       0       0
  3173 ;;      Totals:         0       1       0       0       0
  3174 ;;Total ram usage:        1 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    2
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _CONV_AS
  3186  06D6                     _CONV_AS:
  3187  06D6                     l2116:	
  3188                           ;incstack = 0
  3189                           ; Regs used in _CONV_AS: [wreg+status,2+status,0]
  3190                           
  3191                           
  3192                           ;master.c: 200:     POT1_Uas=(POT1_U+0x30);
  3193  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3194  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3195  06D8  0848               	movf	_POT1_U,w
  3196  06D9  3E30               	addlw	48
  3197  06DA  00A0               	movwf	??_CONV_AS
  3198  06DB  0820               	movf	??_CONV_AS,w
  3199  06DC  00F0               	movwf	_POT1_Uas
  3200                           
  3201                           ;master.c: 201:     POT1_Tas=(POT1_T+0x30);
  3202  06DD  0846               	movf	_POT1_T,w
  3203  06DE  3E30               	addlw	48
  3204  06DF  00A0               	movwf	??_CONV_AS
  3205  06E0  0820               	movf	??_CONV_AS,w
  3206  06E1  00BB               	movwf	_POT1_Tas
  3207                           
  3208                           ;master.c: 202:     POT1_Has=(POT1_H+0x30);
  3209  06E2  0847               	movf	_POT1_H,w
  3210  06E3  3E30               	addlw	48
  3211  06E4  00A0               	movwf	??_CONV_AS
  3212  06E5  0820               	movf	??_CONV_AS,w
  3213  06E6  00BC               	movwf	_POT1_Has
  3214                           
  3215                           ;master.c: 203:     cont_1AS=(cont_1+0X30);
  3216  06E7  0842               	movf	_cont_1,w
  3217  06E8  3E30               	addlw	48
  3218  06E9  00A0               	movwf	??_CONV_AS
  3219  06EA  0820               	movf	??_CONV_AS,w
  3220  06EB  00F1               	movwf	_cont_1AS
  3221                           
  3222                           ;master.c: 204:     cont_2AS=(cont_2+0X30);
  3223  06EC  0841               	movf	_cont_2,w
  3224  06ED  3E30               	addlw	48
  3225  06EE  00A0               	movwf	??_CONV_AS
  3226  06EF  0820               	movf	??_CONV_AS,w
  3227  06F0  00BE               	movwf	_cont_2AS
  3228                           
  3229                           ;master.c: 205:     cont_3AS=(cont_3+0X30);
  3230  06F1  0840               	movf	_cont_3,w
  3231  06F2  3E30               	addlw	48
  3232  06F3  00A0               	movwf	??_CONV_AS
  3233  06F4  0820               	movf	??_CONV_AS,w
  3234  06F5  00BD               	movwf	_cont_3AS
  3235                           
  3236                           ;master.c: 206:     TEM_UAS=(TEM_U+0X30);
  3237  06F6  0845               	movf	_TEM_U,w
  3238  06F7  3E30               	addlw	48
  3239  06F8  00A0               	movwf	??_CONV_AS
  3240  06F9  0820               	movf	??_CONV_AS,w
  3241  06FA  00F4               	movwf	_TEM_UAS
  3242                           
  3243                           ;master.c: 207:     TEM_TAS=(TEM_T+0X30);
  3244  06FB  0844               	movf	_TEM_T,w
  3245  06FC  3E30               	addlw	48
  3246  06FD  00A0               	movwf	??_CONV_AS
  3247  06FE  0820               	movf	??_CONV_AS,w
  3248  06FF  00F3               	movwf	_TEM_TAS
  3249                           
  3250                           ;master.c: 208:     TEM_HAS=(TEM_H+0X30);
  3251  0700  0843               	movf	_TEM_H,w
  3252  0701  3E30               	addlw	48
  3253  0702  00A0               	movwf	??_CONV_AS
  3254  0703  0820               	movf	??_CONV_AS,w
  3255  0704  00F2               	movwf	_TEM_HAS
  3256  0705                     l162:
  3257  0705  0008               	return
  3258  0706                     __end_of_CONV_AS:
  3259                           
  3260                           	psect	text17
  3261  0601                     __ptext17:	
  3262 ;; *************** function _CONVET_cont *****************
  3263 ;; Defined at:
  3264 ;;		line 193 in file "master.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0
  3280 ;;      Temps:          0       4       0       0       0
  3281 ;;      Totals:         0       4       0       0       0
  3282 ;;Total ram usage:        4 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		___awdiv
  3287 ;;		___bmul
  3288 ;;		___wmul
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _CONVET_cont
  3296  0601                     _CONVET_cont:
  3297  0601                     l2044:	
  3298                           ;incstack = 0
  3299                           ; Regs used in _CONVET_cont: [wreg+status,2+status,0+pclath+cstack]
  3300                           
  3301                           
  3302                           ;master.c: 194:     cont_1=(cont/100);
  3303  0601  3064               	movlw	100
  3304  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0604  00A6               	movwf	___awdiv@divisor
  3307  0605  3000               	movlw	0
  3308  0606  00A7               	movwf	___awdiv@divisor+1
  3309  0607  083F               	movf	_cont,w
  3310  0608  00AF               	movwf	??_CONVET_cont
  3311  0609  01B0               	clrf	??_CONVET_cont+1
  3312  060A  082F               	movf	??_CONVET_cont,w
  3313  060B  00A8               	movwf	___awdiv@dividend
  3314  060C  0830               	movf	??_CONVET_cont+1,w
  3315  060D  00A9               	movwf	___awdiv@dividend+1
  3316  060E  120A  118A  2538  120A  118A  	fcall	___awdiv
  3317  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0614  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0615  0826               	movf	?___awdiv,w
  3320  0616  00B1               	movwf	??_CONVET_cont+2
  3321  0617  0831               	movf	??_CONVET_cont+2,w
  3322  0618  00C2               	movwf	_cont_1
  3323                           
  3324                           ;master.c: 195:     cont_2=((cont)-(cont_1*100))/10;
  3325  0619  300A               	movlw	10
  3326  061A  00A6               	movwf	___awdiv@divisor
  3327  061B  3000               	movlw	0
  3328  061C  00A7               	movwf	___awdiv@divisor+1
  3329  061D  0842               	movf	_cont_1,w
  3330  061E  00AF               	movwf	??_CONVET_cont
  3331  061F  01B0               	clrf	??_CONVET_cont+1
  3332  0620  082F               	movf	??_CONVET_cont,w
  3333  0621  00A0               	movwf	___wmul@multiplier
  3334  0622  0830               	movf	??_CONVET_cont+1,w
  3335  0623  00A1               	movwf	___wmul@multiplier+1
  3336  0624  309C               	movlw	156
  3337  0625  00A2               	movwf	___wmul@multiplicand
  3338  0626  30FF               	movlw	255
  3339  0627  00A3               	movwf	___wmul@multiplicand+1
  3340  0628  120A  118A  275F  120A  118A  	fcall	___wmul
  3341  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3342  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3343  062F  083F               	movf	_cont,w
  3344  0630  0720               	addwf	?___wmul,w
  3345  0631  00A8               	movwf	___awdiv@dividend
  3346  0632  0821               	movf	?___wmul+1,w
  3347  0633  1803               	skipnc
  3348  0634  0A21               	incf	?___wmul+1,w
  3349  0635  00A9               	movwf	___awdiv@dividend+1
  3350  0636  120A  118A  2538  120A  118A  	fcall	___awdiv
  3351  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3352  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3353  063D  0826               	movf	?___awdiv,w
  3354  063E  00B1               	movwf	??_CONVET_cont+2
  3355  063F  0831               	movf	??_CONVET_cont+2,w
  3356  0640  00C1               	movwf	_cont_2
  3357                           
  3358                           ;master.c: 196:     cont_3=((cont)-(cont_1*100)-(cont_2*10));
  3359  0641  309C               	movlw	156
  3360  0642  00AF               	movwf	??_CONVET_cont
  3361  0643  082F               	movf	??_CONVET_cont,w
  3362  0644  00A0               	movwf	___bmul@multiplicand
  3363  0645  0842               	movf	_cont_1,w
  3364  0646  120A  118A  27E8  120A  118A  	fcall	___bmul
  3365  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3366  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3367  064D  00B0               	movwf	??_CONVET_cont+1
  3368  064E  30F6               	movlw	246
  3369  064F  00B1               	movwf	??_CONVET_cont+2
  3370  0650  0831               	movf	??_CONVET_cont+2,w
  3371  0651  00A0               	movwf	___bmul@multiplicand
  3372  0652  0841               	movf	_cont_2,w
  3373  0653  120A  118A  27E8  120A  118A  	fcall	___bmul
  3374  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3376  065A  0730               	addwf	??_CONVET_cont+1,w
  3377  065B  073F               	addwf	_cont,w
  3378  065C  00B2               	movwf	??_CONVET_cont+3
  3379  065D  0832               	movf	??_CONVET_cont+3,w
  3380  065E  00C0               	movwf	_cont_3
  3381  065F                     l159:
  3382  065F  0008               	return
  3383  0660                     __end_of_CONVET_cont:
  3384                           
  3385                           	psect	text18
  3386  048A                     __ptext18:	
  3387 ;; *************** function _CONV *****************
  3388 ;; Defined at:
  3389 ;;		line 168 in file "master.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       2       0       0       0
  3405 ;;      Temps:          0       8       0       0       0
  3406 ;;      Totals:         0      10       0       0       0
  3407 ;;Total ram usage:       10 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    3
  3410 ;; This function calls:
  3411 ;;		___awdiv
  3412 ;;		___bmul
  3413 ;;		___wmul
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _CONV
  3421  048A                     _CONV:
  3422  048A                     l2100:	
  3423                           ;incstack = 0
  3424                           ; Regs used in _CONV: [wreg+status,2+status,0+pclath+cstack]
  3425                           
  3426                           
  3427                           ;master.c: 170:     POT1_U=(L/51);
  3428  048A  3033               	movlw	51
  3429  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3430  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3431  048D  00A6               	movwf	___awdiv@divisor
  3432  048E  3000               	movlw	0
  3433  048F  00A7               	movwf	___awdiv@divisor+1
  3434  0490  0850               	movf	_L,w
  3435  0491  00AF               	movwf	??_CONV
  3436  0492  01B0               	clrf	??_CONV+1
  3437  0493  082F               	movf	??_CONV,w
  3438  0494  00A8               	movwf	___awdiv@dividend
  3439  0495  0830               	movf	??_CONV+1,w
  3440  0496  00A9               	movwf	___awdiv@dividend+1
  3441  0497  120A  118A  2538  120A  118A  	fcall	___awdiv
  3442  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3443  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3444  049E  0826               	movf	?___awdiv,w
  3445  049F  00B1               	movwf	??_CONV+2
  3446  04A0  0831               	movf	??_CONV+2,w
  3447  04A1  00C8               	movwf	_POT1_U
  3448                           
  3449                           ;master.c: 171:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  3450  04A2  3033               	movlw	51
  3451  04A3  00A6               	movwf	___awdiv@divisor
  3452  04A4  3000               	movlw	0
  3453  04A5  00A7               	movwf	___awdiv@divisor+1
  3454  04A6  0850               	movf	_L,w
  3455  04A7  00AF               	movwf	??_CONV
  3456  04A8  01B0               	clrf	??_CONV+1
  3457  04A9  082F               	movf	??_CONV,w
  3458  04AA  00A0               	movwf	___wmul@multiplier
  3459  04AB  0830               	movf	??_CONV+1,w
  3460  04AC  00A1               	movwf	___wmul@multiplier+1
  3461  04AD  3064               	movlw	100
  3462  04AE  00A2               	movwf	___wmul@multiplicand
  3463  04AF  3000               	movlw	0
  3464  04B0  00A3               	movwf	___wmul@multiplicand+1
  3465  04B1  120A  118A  275F  120A  118A  	fcall	___wmul
  3466  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3467  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3468  04B8  0821               	movf	?___wmul+1,w
  3469  04B9  00A9               	movwf	___awdiv@dividend+1
  3470  04BA  0820               	movf	?___wmul,w
  3471  04BB  00A8               	movwf	___awdiv@dividend
  3472  04BC  120A  118A  2538  120A  118A  	fcall	___awdiv
  3473  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  3474  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  3475  04C3  0826               	movf	?___awdiv,w
  3476  04C4  00B1               	movwf	??_CONV+2
  3477  04C5  0827               	movf	?___awdiv+1,w
  3478  04C6  00B2               	movwf	??_CONV+3
  3479  04C7  0848               	movf	_POT1_U,w
  3480  04C8  00B3               	movwf	??_CONV+4
  3481  04C9  01B4               	clrf	??_CONV+5
  3482  04CA  0833               	movf	??_CONV+4,w
  3483  04CB  00A0               	movwf	___wmul@multiplier
  3484  04CC  0834               	movf	??_CONV+5,w
  3485  04CD  00A1               	movwf	___wmul@multiplier+1
  3486  04CE  309C               	movlw	156
  3487  04CF  00A2               	movwf	___wmul@multiplicand
  3488  04D0  30FF               	movlw	255
  3489  04D1  00A3               	movwf	___wmul@multiplicand+1
  3490  04D2  120A  118A  275F  120A  118A  	fcall	___wmul
  3491  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3492  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3493  04D9  0820               	movf	?___wmul,w
  3494  04DA  0731               	addwf	??_CONV+2,w
  3495  04DB  00B7               	movwf	_CONV$1331
  3496  04DC  0821               	movf	?___wmul+1,w
  3497  04DD  1803               	skipnc
  3498  04DE  0A21               	incf	?___wmul+1,w
  3499  04DF  0732               	addwf	??_CONV+3,w
  3500  04E0  00B8               	movwf	_CONV$1331+1
  3501                           
  3502                           ;master.c: 171:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  3503  04E1  300A               	movlw	10
  3504  04E2  00A6               	movwf	___awdiv@divisor
  3505  04E3  3000               	movlw	0
  3506  04E4  00A7               	movwf	___awdiv@divisor+1
  3507  04E5  0838               	movf	_CONV$1331+1,w
  3508  04E6  00A9               	movwf	___awdiv@dividend+1
  3509  04E7  0837               	movf	_CONV$1331,w
  3510  04E8  00A8               	movwf	___awdiv@dividend
  3511  04E9  120A  118A  2538  120A  118A  	fcall	___awdiv
  3512  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3513  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3514  04F0  0826               	movf	?___awdiv,w
  3515  04F1  00AF               	movwf	??_CONV
  3516  04F2  082F               	movf	??_CONV,w
  3517  04F3  00C6               	movwf	_POT1_T
  3518                           
  3519                           ;master.c: 172:     POT1_H=((L*100/51)-(POT1_U*100)-(POT1_T*10));
  3520  04F4  3033               	movlw	51
  3521  04F5  00A6               	movwf	___awdiv@divisor
  3522  04F6  3000               	movlw	0
  3523  04F7  00A7               	movwf	___awdiv@divisor+1
  3524  04F8  0850               	movf	_L,w
  3525  04F9  00AF               	movwf	??_CONV
  3526  04FA  01B0               	clrf	??_CONV+1
  3527  04FB  082F               	movf	??_CONV,w
  3528  04FC  00A0               	movwf	___wmul@multiplier
  3529  04FD  0830               	movf	??_CONV+1,w
  3530  04FE  00A1               	movwf	___wmul@multiplier+1
  3531  04FF  3064               	movlw	100
  3532  0500  00A2               	movwf	___wmul@multiplicand
  3533  0501  3000               	movlw	0
  3534  0502  00A3               	movwf	___wmul@multiplicand+1
  3535  0503  120A  118A  275F  120A  118A  	fcall	___wmul
  3536  0508  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0509  1303               	bcf	3,6	;RP1=0, select bank0
  3538  050A  0821               	movf	?___wmul+1,w
  3539  050B  00A9               	movwf	___awdiv@dividend+1
  3540  050C  0820               	movf	?___wmul,w
  3541  050D  00A8               	movwf	___awdiv@dividend
  3542  050E  120A  118A  2538  120A  118A  	fcall	___awdiv
  3543  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0515  0826               	movf	?___awdiv,w
  3546  0516  00B1               	movwf	??_CONV+2
  3547  0517  0827               	movf	?___awdiv+1,w
  3548  0518  00B2               	movwf	??_CONV+3
  3549  0519  309C               	movlw	156
  3550  051A  00B3               	movwf	??_CONV+4
  3551  051B  0833               	movf	??_CONV+4,w
  3552  051C  00A0               	movwf	___bmul@multiplicand
  3553  051D  0848               	movf	_POT1_U,w
  3554  051E  120A  118A  27E8  120A  118A  	fcall	___bmul
  3555  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0525  00B4               	movwf	??_CONV+5
  3558  0526  30F6               	movlw	246
  3559  0527  00B5               	movwf	??_CONV+6
  3560  0528  0835               	movf	??_CONV+6,w
  3561  0529  00A0               	movwf	___bmul@multiplicand
  3562  052A  0846               	movf	_POT1_T,w
  3563  052B  120A  118A  27E8  120A  118A  	fcall	___bmul
  3564  0530  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0531  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0532  0734               	addwf	??_CONV+5,w
  3567  0533  0731               	addwf	??_CONV+2,w
  3568  0534  00B6               	movwf	??_CONV+7
  3569  0535  0836               	movf	??_CONV+7,w
  3570  0536  00C7               	movwf	_POT1_H
  3571  0537                     l151:
  3572  0537  0008               	return
  3573  0538                     __end_of_CONV:
  3574                           
  3575                           	psect	text19
  3576  036A                     __ptext19:	
  3577 ;; *************** function _CONT *****************
  3578 ;; Defined at:
  3579 ;;		line 174 in file "master.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0
  3595 ;;      Temps:          0       4       0       0       0
  3596 ;;      Totals:         0       4       0       0       0
  3597 ;;Total ram usage:        4 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    3
  3600 ;; This function calls:
  3601 ;;		___awdiv
  3602 ;;		___bmul
  3603 ;;		___wmul
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _CONT
  3611  036A                     _CONT:
  3612  036A                     l2102:	
  3613                           ;incstack = 0
  3614                           ; Regs used in _CONT: [wreg+status,2+status,0+pclath+cstack]
  3615                           
  3616                           
  3617                           ;master.c: 175:     R=C;
  3618  036A  1283               	bcf	3,5	;RP0=0, select bank0
  3619  036B  1303               	bcf	3,6	;RP1=0, select bank0
  3620  036C  084C               	movf	_C,w
  3621  036D  00AF               	movwf	??_CONT
  3622  036E  082F               	movf	??_CONT,w
  3623  036F  00CF               	movwf	_R
  3624                           
  3625                           ;master.c: 176:     if (R>=65){
  3626  0370  3041               	movlw	65
  3627  0371  024F               	subwf	_R,w
  3628  0372  1C03               	skipc
  3629  0373  2B75               	goto	u561
  3630  0374  2B76               	goto	u560
  3631  0375                     u561:
  3632  0375  2C00               	goto	l2110
  3633  0376                     u560:
  3634  0376                     l2104:
  3635                           
  3636                           ;master.c: 177:         c =(((R-65)*150)/190);
  3637  0376  30BE               	movlw	190
  3638  0377  00A6               	movwf	___awdiv@divisor
  3639  0378  3000               	movlw	0
  3640  0379  00A7               	movwf	___awdiv@divisor+1
  3641  037A  084F               	movf	_R,w
  3642  037B  3EBF               	addlw	191
  3643  037C  00A0               	movwf	___wmul@multiplier
  3644  037D  30FF               	movlw	255
  3645  037E  1803               	skipnc
  3646  037F  3000               	movlw	0
  3647  0380  00A1               	movwf	___wmul@multiplier+1
  3648  0381  3096               	movlw	150
  3649  0382  00A2               	movwf	___wmul@multiplicand
  3650  0383  3000               	movlw	0
  3651  0384  00A3               	movwf	___wmul@multiplicand+1
  3652  0385  120A  118A  275F  120A  118A  	fcall	___wmul
  3653  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3654  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3655  038C  0821               	movf	?___wmul+1,w
  3656  038D  00A9               	movwf	___awdiv@dividend+1
  3657  038E  0820               	movf	?___wmul,w
  3658  038F  00A8               	movwf	___awdiv@dividend
  3659  0390  120A  118A  2538  120A  118A  	fcall	___awdiv
  3660  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0397  0826               	movf	?___awdiv,w
  3663  0398  00AF               	movwf	??_CONT
  3664  0399  082F               	movf	??_CONT,w
  3665  039A  00CB               	movwf	_c
  3666                           
  3667                           ;master.c: 178:         TEM_U=(c/100);
  3668  039B  3064               	movlw	100
  3669  039C  00A6               	movwf	___awdiv@divisor
  3670  039D  3000               	movlw	0
  3671  039E  00A7               	movwf	___awdiv@divisor+1
  3672  039F  084B               	movf	_c,w
  3673  03A0  00AF               	movwf	??_CONT
  3674  03A1  01B0               	clrf	??_CONT+1
  3675  03A2  082F               	movf	??_CONT,w
  3676  03A3  00A8               	movwf	___awdiv@dividend
  3677  03A4  0830               	movf	??_CONT+1,w
  3678  03A5  00A9               	movwf	___awdiv@dividend+1
  3679  03A6  120A  118A  2538  120A  118A  	fcall	___awdiv
  3680  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3681  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3682  03AD  0826               	movf	?___awdiv,w
  3683  03AE  00B1               	movwf	??_CONT+2
  3684  03AF  0831               	movf	??_CONT+2,w
  3685  03B0  00C5               	movwf	_TEM_U
  3686                           
  3687                           ;master.c: 179:         TEM_T=(c-(TEM_U*100))/10;
  3688  03B1  300A               	movlw	10
  3689  03B2  00A6               	movwf	___awdiv@divisor
  3690  03B3  3000               	movlw	0
  3691  03B4  00A7               	movwf	___awdiv@divisor+1
  3692  03B5  0845               	movf	_TEM_U,w
  3693  03B6  00AF               	movwf	??_CONT
  3694  03B7  01B0               	clrf	??_CONT+1
  3695  03B8  082F               	movf	??_CONT,w
  3696  03B9  00A0               	movwf	___wmul@multiplier
  3697  03BA  0830               	movf	??_CONT+1,w
  3698  03BB  00A1               	movwf	___wmul@multiplier+1
  3699  03BC  309C               	movlw	156
  3700  03BD  00A2               	movwf	___wmul@multiplicand
  3701  03BE  30FF               	movlw	255
  3702  03BF  00A3               	movwf	___wmul@multiplicand+1
  3703  03C0  120A  118A  275F  120A  118A  	fcall	___wmul
  3704  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3705  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3706  03C7  084B               	movf	_c,w
  3707  03C8  0720               	addwf	?___wmul,w
  3708  03C9  00A8               	movwf	___awdiv@dividend
  3709  03CA  0821               	movf	?___wmul+1,w
  3710  03CB  1803               	skipnc
  3711  03CC  0A21               	incf	?___wmul+1,w
  3712  03CD  00A9               	movwf	___awdiv@dividend+1
  3713  03CE  120A  118A  2538  120A  118A  	fcall	___awdiv
  3714  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3715  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3716  03D5  0826               	movf	?___awdiv,w
  3717  03D6  00B1               	movwf	??_CONT+2
  3718  03D7  0831               	movf	??_CONT+2,w
  3719  03D8  00C4               	movwf	_TEM_T
  3720                           
  3721                           ;master.c: 180:         TEM_H=(c-(TEM_U*100)-(TEM_T*10));
  3722  03D9  309C               	movlw	156
  3723  03DA  00AF               	movwf	??_CONT
  3724  03DB  082F               	movf	??_CONT,w
  3725  03DC  00A0               	movwf	___bmul@multiplicand
  3726  03DD  0845               	movf	_TEM_U,w
  3727  03DE  120A  118A  27E8  120A  118A  	fcall	___bmul
  3728  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3729  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3730  03E5  00B0               	movwf	??_CONT+1
  3731  03E6  30F6               	movlw	246
  3732  03E7  00B1               	movwf	??_CONT+2
  3733  03E8  0831               	movf	??_CONT+2,w
  3734  03E9  00A0               	movwf	___bmul@multiplicand
  3735  03EA  0844               	movf	_TEM_T,w
  3736  03EB  120A  118A  27E8  120A  118A  	fcall	___bmul
  3737  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  3738  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  3739  03F2  0730               	addwf	??_CONT+1,w
  3740  03F3  074B               	addwf	_c,w
  3741  03F4  00B2               	movwf	??_CONT+3
  3742  03F5  0832               	movf	??_CONT+3,w
  3743  03F6  00C3               	movwf	_TEM_H
  3744  03F7                     l2106:
  3745                           
  3746                           ;master.c: 181:         sign=0x20;
  3747  03F7  3020               	movlw	32
  3748  03F8  00AF               	movwf	??_CONT
  3749  03F9  082F               	movf	??_CONT,w
  3750  03FA  00CA               	movwf	_sign
  3751  03FB                     l2108:
  3752                           
  3753                           ;master.c: 182:         bro=20;
  3754  03FB  3014               	movlw	20
  3755  03FC  00AF               	movwf	??_CONT
  3756  03FD  082F               	movf	??_CONT,w
  3757  03FE  00C9               	movwf	_bro
  3758                           
  3759                           ;master.c: 183:     }
  3760  03FF  2C89               	goto	l156
  3761  0400                     l2110:
  3762                           
  3763                           ;master.c: 185:         c=-((R-65)*55)/65;
  3764  0400  30BF               	movlw	191
  3765  0401  00A6               	movwf	___awdiv@divisor
  3766  0402  30FF               	movlw	255
  3767  0403  00A7               	movwf	___awdiv@divisor+1
  3768  0404  084F               	movf	_R,w
  3769  0405  3EBF               	addlw	191
  3770  0406  00A0               	movwf	___wmul@multiplier
  3771  0407  30FF               	movlw	255
  3772  0408  1803               	skipnc
  3773  0409  3000               	movlw	0
  3774  040A  00A1               	movwf	___wmul@multiplier+1
  3775  040B  3037               	movlw	55
  3776  040C  00A2               	movwf	___wmul@multiplicand
  3777  040D  3000               	movlw	0
  3778  040E  00A3               	movwf	___wmul@multiplicand+1
  3779  040F  120A  118A  275F  120A  118A  	fcall	___wmul
  3780  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0416  0821               	movf	?___wmul+1,w
  3783  0417  00A9               	movwf	___awdiv@dividend+1
  3784  0418  0820               	movf	?___wmul,w
  3785  0419  00A8               	movwf	___awdiv@dividend
  3786  041A  120A  118A  2538  120A  118A  	fcall	___awdiv
  3787  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0421  0826               	movf	?___awdiv,w
  3790  0422  00AF               	movwf	??_CONT
  3791  0423  082F               	movf	??_CONT,w
  3792  0424  00CB               	movwf	_c
  3793                           
  3794                           ;master.c: 186:         TEM_U=(c/100);
  3795  0425  3064               	movlw	100
  3796  0426  00A6               	movwf	___awdiv@divisor
  3797  0427  3000               	movlw	0
  3798  0428  00A7               	movwf	___awdiv@divisor+1
  3799  0429  084B               	movf	_c,w
  3800  042A  00AF               	movwf	??_CONT
  3801  042B  01B0               	clrf	??_CONT+1
  3802  042C  082F               	movf	??_CONT,w
  3803  042D  00A8               	movwf	___awdiv@dividend
  3804  042E  0830               	movf	??_CONT+1,w
  3805  042F  00A9               	movwf	___awdiv@dividend+1
  3806  0430  120A  118A  2538  120A  118A  	fcall	___awdiv
  3807  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0437  0826               	movf	?___awdiv,w
  3810  0438  00B1               	movwf	??_CONT+2
  3811  0439  0831               	movf	??_CONT+2,w
  3812  043A  00C5               	movwf	_TEM_U
  3813                           
  3814                           ;master.c: 187:         TEM_T=(c-(TEM_U*100))/10;
  3815  043B  300A               	movlw	10
  3816  043C  00A6               	movwf	___awdiv@divisor
  3817  043D  3000               	movlw	0
  3818  043E  00A7               	movwf	___awdiv@divisor+1
  3819  043F  0845               	movf	_TEM_U,w
  3820  0440  00AF               	movwf	??_CONT
  3821  0441  01B0               	clrf	??_CONT+1
  3822  0442  082F               	movf	??_CONT,w
  3823  0443  00A0               	movwf	___wmul@multiplier
  3824  0444  0830               	movf	??_CONT+1,w
  3825  0445  00A1               	movwf	___wmul@multiplier+1
  3826  0446  309C               	movlw	156
  3827  0447  00A2               	movwf	___wmul@multiplicand
  3828  0448  30FF               	movlw	255
  3829  0449  00A3               	movwf	___wmul@multiplicand+1
  3830  044A  120A  118A  275F  120A  118A  	fcall	___wmul
  3831  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0450  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0451  084B               	movf	_c,w
  3834  0452  0720               	addwf	?___wmul,w
  3835  0453  00A8               	movwf	___awdiv@dividend
  3836  0454  0821               	movf	?___wmul+1,w
  3837  0455  1803               	skipnc
  3838  0456  0A21               	incf	?___wmul+1,w
  3839  0457  00A9               	movwf	___awdiv@dividend+1
  3840  0458  120A  118A  2538  120A  118A  	fcall	___awdiv
  3841  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3842  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3843  045F  0826               	movf	?___awdiv,w
  3844  0460  00B1               	movwf	??_CONT+2
  3845  0461  0831               	movf	??_CONT+2,w
  3846  0462  00C4               	movwf	_TEM_T
  3847                           
  3848                           ;master.c: 188:         TEM_H=(c-(TEM_U*100)-(TEM_T*10));
  3849  0463  309C               	movlw	156
  3850  0464  00AF               	movwf	??_CONT
  3851  0465  082F               	movf	??_CONT,w
  3852  0466  00A0               	movwf	___bmul@multiplicand
  3853  0467  0845               	movf	_TEM_U,w
  3854  0468  120A  118A  27E8  120A  118A  	fcall	___bmul
  3855  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3856  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3857  046F  00B0               	movwf	??_CONT+1
  3858  0470  30F6               	movlw	246
  3859  0471  00B1               	movwf	??_CONT+2
  3860  0472  0831               	movf	??_CONT+2,w
  3861  0473  00A0               	movwf	___bmul@multiplicand
  3862  0474  0844               	movf	_TEM_T,w
  3863  0475  120A  118A  27E8  120A  118A  	fcall	___bmul
  3864  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3865  047B  1303               	bcf	3,6	;RP1=0, select bank0
  3866  047C  0730               	addwf	??_CONT+1,w
  3867  047D  074B               	addwf	_c,w
  3868  047E  00B2               	movwf	??_CONT+3
  3869  047F  0832               	movf	??_CONT+3,w
  3870  0480  00C3               	movwf	_TEM_H
  3871  0481                     l2112:
  3872                           
  3873                           ;master.c: 189:         sign=0x2D;
  3874  0481  302D               	movlw	45
  3875  0482  00AF               	movwf	??_CONT
  3876  0483  082F               	movf	??_CONT,w
  3877  0484  00CA               	movwf	_sign
  3878  0485                     l2114:
  3879                           
  3880                           ;master.c: 190:         bro=18;
  3881  0485  3012               	movlw	18
  3882  0486  00AF               	movwf	??_CONT
  3883  0487  082F               	movf	??_CONT,w
  3884  0488  00C9               	movwf	_bro
  3885  0489                     l156:
  3886  0489  0008               	return
  3887  048A                     __end_of_CONT:
  3888                           
  3889                           	psect	text20
  3890  075F                     __ptext20:	
  3891 ;; *************** function ___wmul *****************
  3892 ;; Defined at:
  3893 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3896 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  product         2    4[BANK0 ] unsigned int 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    0[BANK0 ] unsigned int 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3908 ;;      Params:         0       4       0       0       0
  3909 ;;      Locals:         0       2       0       0       0
  3910 ;;      Temps:          0       0       0       0       0
  3911 ;;      Totals:         0       6       0       0       0
  3912 ;;Total ram usage:        6 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    2
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_CONV
  3919 ;;		_CONT
  3920 ;;		_CONVET_cont
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           
  3925                           ;psect for function ___wmul
  3926  075F                     ___wmul:
  3927  075F                     l1936:	
  3928                           ;incstack = 0
  3929                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3930                           
  3931  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0761  01A4               	clrf	___wmul@product
  3934  0762  01A5               	clrf	___wmul@product+1
  3935  0763                     l1938:
  3936  0763  1C20               	btfss	___wmul@multiplier,0
  3937  0764  2F66               	goto	u491
  3938  0765  2F67               	goto	u490
  3939  0766                     u491:
  3940  0766  2F6D               	goto	l406
  3941  0767                     u490:
  3942  0767                     l1940:
  3943  0767  0822               	movf	___wmul@multiplicand,w
  3944  0768  07A4               	addwf	___wmul@product,f
  3945  0769  1803               	skipnc
  3946  076A  0AA5               	incf	___wmul@product+1,f
  3947  076B  0823               	movf	___wmul@multiplicand+1,w
  3948  076C  07A5               	addwf	___wmul@product+1,f
  3949  076D                     l406:
  3950  076D  3001               	movlw	1
  3951  076E                     u505:
  3952  076E  1003               	clrc
  3953  076F  0DA2               	rlf	___wmul@multiplicand,f
  3954  0770  0DA3               	rlf	___wmul@multiplicand+1,f
  3955  0771  3EFF               	addlw	-1
  3956  0772  1D03               	skipz
  3957  0773  2F6E               	goto	u505
  3958  0774                     l1942:
  3959  0774  3001               	movlw	1
  3960  0775                     u515:
  3961  0775  1003               	clrc
  3962  0776  0CA1               	rrf	___wmul@multiplier+1,f
  3963  0777  0CA0               	rrf	___wmul@multiplier,f
  3964  0778  3EFF               	addlw	-1
  3965  0779  1D03               	skipz
  3966  077A  2F75               	goto	u515
  3967  077B                     l1944:
  3968  077B  0820               	movf	___wmul@multiplier,w
  3969  077C  0421               	iorwf	___wmul@multiplier+1,w
  3970  077D  1D03               	btfss	3,2
  3971  077E  2F80               	goto	u521
  3972  077F  2F81               	goto	u520
  3973  0780                     u521:
  3974  0780  2F63               	goto	l1938
  3975  0781                     u520:
  3976  0781                     l1946:
  3977  0781  0825               	movf	___wmul@product+1,w
  3978  0782  00A1               	movwf	?___wmul+1
  3979  0783  0824               	movf	___wmul@product,w
  3980  0784  00A0               	movwf	?___wmul
  3981  0785                     l408:
  3982  0785  0008               	return
  3983  0786                     __end_of___wmul:
  3984                           
  3985                           	psect	text21
  3986  07E8                     __ptext21:	
  3987 ;; *************** function ___bmul *****************
  3988 ;; Defined at:
  3989 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  multiplier      1    wreg     unsigned char 
  3992 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3995 ;;  product         1    2[BANK0 ] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       1       0       0       0
  4006 ;;      Locals:         0       2       0       0       0
  4007 ;;      Temps:          0       1       0       0       0
  4008 ;;      Totals:         0       4       0       0       0
  4009 ;;Total ram usage:        4 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    2
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_CONV
  4016 ;;		_CONT
  4017 ;;		_CONVET_cont
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function ___bmul
  4023  07E8                     ___bmul:
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4027                           ;___bmul@multiplier stored from wreg
  4028  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4029  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  4030  07EA  00A3               	movwf	___bmul@multiplier
  4031  07EB                     l1950:
  4032  07EB  01A2               	clrf	___bmul@product
  4033  07EC                     l1952:
  4034  07EC  1C23               	btfss	___bmul@multiplier,0
  4035  07ED  2FEF               	goto	u531
  4036  07EE  2FF0               	goto	u530
  4037  07EF                     u531:
  4038  07EF  2FF4               	goto	l1956
  4039  07F0                     u530:
  4040  07F0                     l1954:
  4041  07F0  0820               	movf	___bmul@multiplicand,w
  4042  07F1  00A1               	movwf	??___bmul
  4043  07F2  0821               	movf	??___bmul,w
  4044  07F3  07A2               	addwf	___bmul@product,f
  4045  07F4                     l1956:
  4046  07F4  1003               	clrc
  4047  07F5  0DA0               	rlf	___bmul@multiplicand,f
  4048  07F6                     l1958:
  4049  07F6  1003               	clrc
  4050  07F7  0CA3               	rrf	___bmul@multiplier,f
  4051  07F8  0823               	movf	___bmul@multiplier,w
  4052  07F9  1D03               	btfss	3,2
  4053  07FA  2FFC               	goto	u541
  4054  07FB  2FFD               	goto	u540
  4055  07FC                     u541:
  4056  07FC  2FEC               	goto	l1952
  4057  07FD                     u540:
  4058  07FD                     l1960:
  4059  07FD  0822               	movf	___bmul@product,w
  4060  07FE                     l432:
  4061  07FE  0008               	return
  4062  07FF                     __end_of___bmul:
  4063                           
  4064                           	psect	text22
  4065  0538                     __ptext22:	
  4066 ;; *************** function ___awdiv *****************
  4067 ;; Defined at:
  4068 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  divisor         2    6[BANK0 ] int 
  4071 ;;  dividend        2    8[BANK0 ] int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  quotient        2   13[BANK0 ] int 
  4074 ;;  sign            1   12[BANK0 ] unsigned char 
  4075 ;;  counter         1   11[BANK0 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    6[BANK0 ] int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4085 ;;      Params:         0       4       0       0       0
  4086 ;;      Locals:         0       4       0       0       0
  4087 ;;      Temps:          0       1       0       0       0
  4088 ;;      Totals:         0       9       0       0       0
  4089 ;;Total ram usage:        9 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    2
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_CONV
  4096 ;;		_CONT
  4097 ;;		_CONVET_cont
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function ___awdiv
  4103  0538                     ___awdiv:
  4104  0538                     l1484:	
  4105                           ;incstack = 0
  4106                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4107                           
  4108  0538  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0539  1303               	bcf	3,6	;RP1=0, select bank0
  4110  053A  01AC               	clrf	___awdiv@sign
  4111  053B                     l1486:
  4112  053B  1FA7               	btfss	___awdiv@divisor+1,7
  4113  053C  2D3E               	goto	u321
  4114  053D  2D3F               	goto	u320
  4115  053E                     u321:
  4116  053E  2D46               	goto	l1492
  4117  053F                     u320:
  4118  053F                     l1488:
  4119  053F  09A6               	comf	___awdiv@divisor,f
  4120  0540  09A7               	comf	___awdiv@divisor+1,f
  4121  0541  0AA6               	incf	___awdiv@divisor,f
  4122  0542  1903               	skipnz
  4123  0543  0AA7               	incf	___awdiv@divisor+1,f
  4124  0544                     l1490:
  4125  0544  01AC               	clrf	___awdiv@sign
  4126  0545  0AAC               	incf	___awdiv@sign,f
  4127  0546                     l1492:
  4128  0546  1FA9               	btfss	___awdiv@dividend+1,7
  4129  0547  2D49               	goto	u331
  4130  0548  2D4A               	goto	u330
  4131  0549                     u331:
  4132  0549  2D53               	goto	l1498
  4133  054A                     u330:
  4134  054A                     l1494:
  4135  054A  09A8               	comf	___awdiv@dividend,f
  4136  054B  09A9               	comf	___awdiv@dividend+1,f
  4137  054C  0AA8               	incf	___awdiv@dividend,f
  4138  054D  1903               	skipnz
  4139  054E  0AA9               	incf	___awdiv@dividend+1,f
  4140  054F                     l1496:
  4141  054F  3001               	movlw	1
  4142  0550  00AA               	movwf	??___awdiv
  4143  0551  082A               	movf	??___awdiv,w
  4144  0552  06AC               	xorwf	___awdiv@sign,f
  4145  0553                     l1498:
  4146  0553  01AD               	clrf	___awdiv@quotient
  4147  0554  01AE               	clrf	___awdiv@quotient+1
  4148  0555                     l1500:
  4149  0555  0826               	movf	___awdiv@divisor,w
  4150  0556  0427               	iorwf	___awdiv@divisor+1,w
  4151  0557  1903               	btfsc	3,2
  4152  0558  2D5A               	goto	u341
  4153  0559  2D5B               	goto	u340
  4154  055A                     u341:
  4155  055A  2D92               	goto	l1520
  4156  055B                     u340:
  4157  055B                     l1502:
  4158  055B  01AB               	clrf	___awdiv@counter
  4159  055C  0AAB               	incf	___awdiv@counter,f
  4160  055D  2D69               	goto	l1508
  4161  055E                     l1504:
  4162  055E  3001               	movlw	1
  4163  055F                     u355:
  4164  055F  1003               	clrc
  4165  0560  0DA6               	rlf	___awdiv@divisor,f
  4166  0561  0DA7               	rlf	___awdiv@divisor+1,f
  4167  0562  3EFF               	addlw	-1
  4168  0563  1D03               	skipz
  4169  0564  2D5F               	goto	u355
  4170  0565                     l1506:
  4171  0565  3001               	movlw	1
  4172  0566  00AA               	movwf	??___awdiv
  4173  0567  082A               	movf	??___awdiv,w
  4174  0568  07AB               	addwf	___awdiv@counter,f
  4175  0569                     l1508:
  4176  0569  1FA7               	btfss	___awdiv@divisor+1,7
  4177  056A  2D6C               	goto	u361
  4178  056B  2D6D               	goto	u360
  4179  056C                     u361:
  4180  056C  2D5E               	goto	l1504
  4181  056D                     u360:
  4182  056D                     l1510:
  4183  056D  3001               	movlw	1
  4184  056E                     u375:
  4185  056E  1003               	clrc
  4186  056F  0DAD               	rlf	___awdiv@quotient,f
  4187  0570  0DAE               	rlf	___awdiv@quotient+1,f
  4188  0571  3EFF               	addlw	-1
  4189  0572  1D03               	skipz
  4190  0573  2D6E               	goto	u375
  4191  0574  0827               	movf	___awdiv@divisor+1,w
  4192  0575  0229               	subwf	___awdiv@dividend+1,w
  4193  0576  1D03               	skipz
  4194  0577  2D7A               	goto	u385
  4195  0578  0826               	movf	___awdiv@divisor,w
  4196  0579  0228               	subwf	___awdiv@dividend,w
  4197  057A                     u385:
  4198  057A  1C03               	skipc
  4199  057B  2D7D               	goto	u381
  4200  057C  2D7E               	goto	u380
  4201  057D                     u381:
  4202  057D  2D85               	goto	l1516
  4203  057E                     u380:
  4204  057E                     l1512:
  4205  057E  0826               	movf	___awdiv@divisor,w
  4206  057F  02A8               	subwf	___awdiv@dividend,f
  4207  0580  0827               	movf	___awdiv@divisor+1,w
  4208  0581  1C03               	skipc
  4209  0582  03A9               	decf	___awdiv@dividend+1,f
  4210  0583  02A9               	subwf	___awdiv@dividend+1,f
  4211  0584                     l1514:
  4212  0584  142D               	bsf	___awdiv@quotient,0
  4213  0585                     l1516:
  4214  0585  3001               	movlw	1
  4215  0586                     u395:
  4216  0586  1003               	clrc
  4217  0587  0CA7               	rrf	___awdiv@divisor+1,f
  4218  0588  0CA6               	rrf	___awdiv@divisor,f
  4219  0589  3EFF               	addlw	-1
  4220  058A  1D03               	skipz
  4221  058B  2D86               	goto	u395
  4222  058C                     l1518:
  4223  058C  3001               	movlw	1
  4224  058D  02AB               	subwf	___awdiv@counter,f
  4225  058E  1D03               	btfss	3,2
  4226  058F  2D91               	goto	u401
  4227  0590  2D92               	goto	u400
  4228  0591                     u401:
  4229  0591  2D6D               	goto	l1510
  4230  0592                     u400:
  4231  0592                     l1520:
  4232  0592  082C               	movf	___awdiv@sign,w
  4233  0593  1903               	btfsc	3,2
  4234  0594  2D96               	goto	u411
  4235  0595  2D97               	goto	u410
  4236  0596                     u411:
  4237  0596  2D9C               	goto	l1524
  4238  0597                     u410:
  4239  0597                     l1522:
  4240  0597  09AD               	comf	___awdiv@quotient,f
  4241  0598  09AE               	comf	___awdiv@quotient+1,f
  4242  0599  0AAD               	incf	___awdiv@quotient,f
  4243  059A  1903               	skipnz
  4244  059B  0AAE               	incf	___awdiv@quotient+1,f
  4245  059C                     l1524:
  4246  059C  082E               	movf	___awdiv@quotient+1,w
  4247  059D  00A7               	movwf	?___awdiv+1
  4248  059E  082D               	movf	___awdiv@quotient,w
  4249  059F  00A6               	movwf	?___awdiv
  4250  05A0                     l559:
  4251  05A0  0008               	return
  4252  05A1                     __end_of___awdiv:
  4253                           
  4254                           	psect	text23
  4255  06A5                     __ptext23:	
  4256 ;; *************** function _isr *****************
  4257 ;; Defined at:
  4258 ;;		line 54 in file "master.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4272 ;;      Params:         0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0
  4274 ;;      Temps:          4       0       0       0       0
  4275 ;;      Totals:         4       0       0       0       0
  4276 ;;Total ram usage:        4 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    1
  4279 ;; This function calls:
  4280 ;;		_send
  4281 ;; This function is called by:
  4282 ;;		Interrupt level 1
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _isr
  4288  06A5                     _isr:
  4289  06A5                     i1l1724:
  4290                           
  4291                           ;master.c: 55:     if (PIR1bits.TXIF == 1){
  4292  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  4293  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  4294  06A7  1E0C               	btfss	12,4	;volatile
  4295  06A8  2EAA               	goto	u44_21
  4296  06A9  2EAB               	goto	u44_20
  4297  06AA                     u44_21:
  4298  06AA  2EB7               	goto	i1l1732
  4299  06AB                     u44_20:
  4300  06AB                     i1l1726:
  4301                           
  4302                           ;master.c: 56:         z++;
  4303  06AB  3001               	movlw	1
  4304  06AC  00F8               	movwf	??_isr
  4305  06AD  0878               	movf	??_isr,w
  4306  06AE  07CD               	addwf	_z,f
  4307  06AF                     i1l1728:
  4308                           
  4309                           ;master.c: 57:         send();
  4310  06AF  120A  118A  25A1  120A  118A  	fcall	_send
  4311  06B4                     i1l1730:
  4312                           
  4313                           ;master.c: 58:         PIE1bits.TXIE = 0;}
  4314  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  4315  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  4316  06B6  120C               	bcf	12,4	;volatile
  4317  06B7                     i1l1732:
  4318                           
  4319                           ;master.c: 59:     if (INTCONbits.TMR0IF==1){
  4320  06B7  1D0B               	btfss	11,2	;volatile
  4321  06B8  2EBA               	goto	u45_21
  4322  06B9  2EBB               	goto	u45_20
  4323  06BA                     u45_21:
  4324  06BA  2ECD               	goto	i1l132
  4325  06BB                     u45_20:
  4326  06BB                     i1l1734:
  4327                           
  4328                           ;master.c: 60:         TMR0=250;
  4329  06BB  30FA               	movlw	250
  4330  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  4331  06BD  0081               	movwf	1	;volatile
  4332  06BE                     i1l1736:
  4333                           
  4334                           ;master.c: 61:         INTCONbits.TMR0IF=0;
  4335  06BE  110B               	bcf	11,2	;volatile
  4336  06BF                     i1l1738:
  4337                           
  4338                           ;master.c: 62:         r++;
  4339  06BF  3001               	movlw	1
  4340  06C0  00F8               	movwf	??_isr
  4341  06C1  0878               	movf	??_isr,w
  4342  06C2  07F5               	addwf	_r,f
  4343  06C3                     i1l1740:
  4344                           
  4345                           ;master.c: 63:         if(r==100){
  4346  06C3  3064               	movlw	100
  4347  06C4  0675               	xorwf	_r,w
  4348  06C5  1D03               	btfss	3,2
  4349  06C6  2EC8               	goto	u46_21
  4350  06C7  2EC9               	goto	u46_20
  4351  06C8                     u46_21:
  4352  06C8  2ECD               	goto	i1l132
  4353  06C9                     u46_20:
  4354  06C9                     i1l1742:
  4355                           
  4356                           ;master.c: 64:             r=0;
  4357  06C9  01F5               	clrf	_r
  4358  06CA                     i1l1744:
  4359                           
  4360                           ;master.c: 65:             PIE1bits.TXIE = 1;}
  4361  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  4362  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  4363  06CC  160C               	bsf	12,4	;volatile
  4364  06CD                     i1l132:
  4365  06CD  087B               	movf	??_isr+3,w
  4366  06CE  008A               	movwf	10
  4367  06CF  087A               	movf	??_isr+2,w
  4368  06D0  0084               	movwf	4
  4369  06D1  0E79               	swapf	??_isr+1,w
  4370  06D2  0083               	movwf	3
  4371  06D3  0EFE               	swapf	btemp,f
  4372  06D4  0E7E               	swapf	btemp,w
  4373  06D5  0009               	retfie
  4374  06D6                     __end_of_isr:
  4375                           
  4376                           	psect	intentry
  4377  0004                     __pintentry:	
  4378                           ;incstack = 0
  4379                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4380                           
  4381  0004                     interrupt_function:
  4382  007E                     saved_w	set	btemp
  4383  0004  00FE               	movwf	btemp
  4384  0005  0E03               	swapf	3,w
  4385  0006  00F9               	movwf	??_isr+1
  4386  0007  0804               	movf	4,w
  4387  0008  00FA               	movwf	??_isr+2
  4388  0009  080A               	movf	10,w
  4389  000A  00FB               	movwf	??_isr+3
  4390  000B  120A  118A  2EA5   	ljmp	_isr
  4391                           
  4392                           	psect	text24
  4393  05A1                     __ptext24:	
  4394 ;; *************** function _send *****************
  4395 ;; Defined at:
  4396 ;;		line 210 in file "master.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0
  4412 ;;      Temps:          2       0       0       0       0
  4413 ;;      Totals:         2       0       0       0       0
  4414 ;;Total ram usage:        2 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_isr
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _send
  4425  05A1                     _send:
  4426  05A1                     i1l1528:	
  4427                           ;incstack = 0
  4428                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0]
  4429                           
  4430                           
  4431                           ;master.c: 212:     switch (z){
  4432  05A1  2DCA               	goto	i1l1564
  4433  05A2                     i1l1530:
  4434                           
  4435                           ;master.c: 214:             TXREG = POT1_Uas;
  4436  05A2  0870               	movf	_POT1_Uas,w
  4437  05A3  0099               	movwf	25	;volatile
  4438                           
  4439                           ;master.c: 215:             break;
  4440  05A4  2E00               	goto	i1l182
  4441  05A5                     i1l1534:
  4442                           
  4443                           ;master.c: 220:             TXREG = 0x2E;
  4444  05A5  302E               	movlw	46
  4445  05A6  0099               	movwf	25	;volatile
  4446                           
  4447                           ;master.c: 221:             break;
  4448  05A7  2E00               	goto	i1l182
  4449  05A8                     i1l1536:
  4450                           
  4451                           ;master.c: 223:             TXREG = POT1_Tas;
  4452  05A8  083B               	movf	_POT1_Tas,w
  4453  05A9  0099               	movwf	25	;volatile
  4454                           
  4455                           ;master.c: 224:             break;
  4456  05AA  2E00               	goto	i1l182
  4457  05AB                     i1l1538:
  4458                           
  4459                           ;master.c: 226:             TXREG = POT1_Has;
  4460  05AB  083C               	movf	_POT1_Has,w
  4461  05AC  0099               	movwf	25	;volatile
  4462                           
  4463                           ;master.c: 227:             break;
  4464  05AD  2E00               	goto	i1l182
  4465  05AE                     i1l1540:
  4466                           
  4467                           ;master.c: 229:             TXREG = 0x20;
  4468  05AE  3020               	movlw	32
  4469  05AF  0099               	movwf	25	;volatile
  4470                           
  4471                           ;master.c: 230:             break;
  4472  05B0  2E00               	goto	i1l182
  4473  05B1                     i1l1542:
  4474                           
  4475                           ;master.c: 232:             TXREG = sign;
  4476  05B1  084A               	movf	_sign,w
  4477  05B2  0099               	movwf	25	;volatile
  4478                           
  4479                           ;master.c: 233:             break;
  4480  05B3  2E00               	goto	i1l182
  4481  05B4                     i1l1544:
  4482                           
  4483                           ;master.c: 235:             TXREG = TEM_UAS;
  4484  05B4  0874               	movf	_TEM_UAS,w
  4485  05B5  0099               	movwf	25	;volatile
  4486                           
  4487                           ;master.c: 236:             break;
  4488  05B6  2E00               	goto	i1l182
  4489  05B7                     i1l1546:
  4490                           
  4491                           ;master.c: 238:             TXREG = TEM_TAS;
  4492  05B7  0873               	movf	_TEM_TAS,w
  4493  05B8  0099               	movwf	25	;volatile
  4494                           
  4495                           ;master.c: 239:             break;
  4496  05B9  2E00               	goto	i1l182
  4497  05BA                     i1l1548:
  4498                           
  4499                           ;master.c: 241:             TXREG = TEM_HAS;
  4500  05BA  0872               	movf	_TEM_HAS,w
  4501  05BB  0099               	movwf	25	;volatile
  4502                           
  4503                           ;master.c: 242:             break;
  4504  05BC  2E00               	goto	i1l182
  4505  05BD                     i1l1552:
  4506                           
  4507                           ;master.c: 247:             TXREG = cont_1AS;
  4508  05BD  0871               	movf	_cont_1AS,w
  4509  05BE  0099               	movwf	25	;volatile
  4510                           
  4511                           ;master.c: 248:             break;
  4512  05BF  2E00               	goto	i1l182
  4513  05C0                     i1l1554:
  4514                           
  4515                           ;master.c: 250:             TXREG = cont_2AS;
  4516  05C0  083E               	movf	_cont_2AS,w
  4517  05C1  0099               	movwf	25	;volatile
  4518                           
  4519                           ;master.c: 251:             break;
  4520  05C2  2E00               	goto	i1l182
  4521  05C3                     i1l1556:
  4522                           
  4523                           ;master.c: 253:             TXREG = cont_3AS;
  4524  05C3  083D               	movf	_cont_3AS,w
  4525  05C4  0099               	movwf	25	;volatile
  4526                           
  4527                           ;master.c: 254:             break;
  4528  05C5  2E00               	goto	i1l182
  4529  05C6                     i1l1558:
  4530                           
  4531                           ;master.c: 256:              TXREG = 0x0D;
  4532  05C6  300D               	movlw	13
  4533  05C7  0099               	movwf	25	;volatile
  4534  05C8                     i1l1560:
  4535                           
  4536                           ;master.c: 257:              z=0;
  4537  05C8  01CD               	clrf	_z
  4538                           
  4539                           ;master.c: 258:             break;
  4540  05C9  2E00               	goto	i1l182
  4541  05CA                     i1l1564:
  4542  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  4543  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  4544  05CC  084D               	movf	_z,w
  4545  05CD  00F6               	movwf	??_send
  4546  05CE  01F7               	clrf	??_send+1
  4547                           
  4548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4549                           ; Switch size 1, requested type "simple"
  4550                           ; Number of cases is 1, Range of values is 0 to 0
  4551                           ; switch strategies available:
  4552                           ; Name         Instructions Cycles
  4553                           ; simple_byte            4     3 (average)
  4554                           ; direct_byte           11     8 (fixed)
  4555                           ; jumptable            260     6 (fixed)
  4556                           ;	Chosen strategy is simple_byte
  4557  05CF  0877               	movf	??_send+1,w
  4558  05D0  3A00               	xorlw	0	; case 0
  4559  05D1  1903               	skipnz
  4560  05D2  2DD4               	goto	i1l2266
  4561  05D3  2DC6               	goto	i1l1558
  4562  05D4                     i1l2266:
  4563                           
  4564                           ; Switch size 1, requested type "simple"
  4565                           ; Number of cases is 14, Range of values is 0 to 13
  4566                           ; switch strategies available:
  4567                           ; Name         Instructions Cycles
  4568                           ; simple_byte           43    22 (average)
  4569                           ; direct_byte           50     8 (fixed)
  4570                           ; jumptable            260     6 (fixed)
  4571                           ;	Chosen strategy is simple_byte
  4572  05D4  0876               	movf	??_send,w
  4573  05D5  3A00               	xorlw	0	; case 0
  4574  05D6  1903               	skipnz
  4575  05D7  2DA2               	goto	i1l1530
  4576  05D8  3A01               	xorlw	1	; case 1
  4577  05D9  1903               	skipnz
  4578  05DA  2DA2               	goto	i1l1530
  4579  05DB  3A03               	xorlw	3	; case 2
  4580  05DC  1903               	skipnz
  4581  05DD  2DA5               	goto	i1l1534
  4582  05DE  3A01               	xorlw	1	; case 3
  4583  05DF  1903               	skipnz
  4584  05E0  2DA8               	goto	i1l1536
  4585  05E1  3A07               	xorlw	7	; case 4
  4586  05E2  1903               	skipnz
  4587  05E3  2DAB               	goto	i1l1538
  4588  05E4  3A01               	xorlw	1	; case 5
  4589  05E5  1903               	skipnz
  4590  05E6  2DAE               	goto	i1l1540
  4591  05E7  3A03               	xorlw	3	; case 6
  4592  05E8  1903               	skipnz
  4593  05E9  2DB1               	goto	i1l1542
  4594  05EA  3A01               	xorlw	1	; case 7
  4595  05EB  1903               	skipnz
  4596  05EC  2DB4               	goto	i1l1544
  4597  05ED  3A0F               	xorlw	15	; case 8
  4598  05EE  1903               	skipnz
  4599  05EF  2DB7               	goto	i1l1546
  4600  05F0  3A01               	xorlw	1	; case 9
  4601  05F1  1903               	skipnz
  4602  05F2  2DBA               	goto	i1l1548
  4603  05F3  3A03               	xorlw	3	; case 10
  4604  05F4  1903               	skipnz
  4605  05F5  2DAE               	goto	i1l1540
  4606  05F6  3A01               	xorlw	1	; case 11
  4607  05F7  1903               	skipnz
  4608  05F8  2DBD               	goto	i1l1552
  4609  05F9  3A07               	xorlw	7	; case 12
  4610  05FA  1903               	skipnz
  4611  05FB  2DC0               	goto	i1l1554
  4612  05FC  3A01               	xorlw	1	; case 13
  4613  05FD  1903               	skipnz
  4614  05FE  2DC3               	goto	i1l1556
  4615  05FF  2DC6               	goto	i1l1558
  4616  0600                     i1l182:
  4617  0600  0008               	return
  4618  0601                     __end_of_send:
  4619  007E                     btemp	set	126	;btemp
  4620  007E                     wtemp0	set	126
  4621                           
  4622                           	psect	config
  4623                           
  4624                           ;Config register CONFIG1 @ 0x2007
  4625                           ;	Oscillator Selection bits
  4626                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4627                           ;	Watchdog Timer Enable bit
  4628                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4629                           ;	Power-up Timer Enable bit
  4630                           ;	PWRTE = OFF, PWRT disabled
  4631                           ;	RE3/MCLR pin function select bit
  4632                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4633                           ;	Code Protection bit
  4634                           ;	CP = OFF, Program memory code protection is disabled
  4635                           ;	Data Code Protection bit
  4636                           ;	CPD = OFF, Data memory code protection is disabled
  4637                           ;	Brown Out Reset Selection bits
  4638                           ;	BOREN = OFF, BOR disabled
  4639                           ;	Internal External Switchover bit
  4640                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4641                           ;	Fail-Safe Clock Monitor Enabled bit
  4642                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4643                           ;	Low Voltage Programming Enable bit
  4644                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4645                           ;	In-Circuit Debugger Mode bit
  4646                           ;	DEBUG = 0x1, unprogrammed default
  4647  2007                     	org	8199
  4648  2007  20D4               	dw	8404
  4649                           
  4650                           ;Config register CONFIG2 @ 0x2008
  4651                           ;	Brown-out Reset Selection bit
  4652                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4653                           ;	Flash Program Memory Self Write Enable bits
  4654                           ;	WRT = OFF, Write protection off
  4655  2008                     	org	8200
  4656  2008  3FFF               	dw	16383

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     27      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_POINT@D	PTR unsigned char  size(1) Largest target is 18
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[3]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[18]), 

    LCD_P@D	PTR unsigned char  size(1) Largest target is 18
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[3]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_send

Critical Paths under _main in BANK0

    _main->_CONV
    _LCD_IN->_LCD_ON
    _LCD_CL->_LCD_ON
    _LCDVAL1->_LCD_POINT
    _LCD_POINT->_LCD_P
    _LCD_P->_LCD_PLAY
    _CONVET_cont->___awdiv
    _CONV->___awdiv
    _CONT->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30080
                                             25 BANK0      2     2      0
                               _CONT
                               _CONV
                        _CONVET_cont
                            _CONV_AS
                            _LCDVAL1
                             _LCD_CL
                             _LCD_IN
                          _LCD_POINT
                            _SET_RXT
                            _SET_TXR
                              _Setup
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_IN                                               2     2      0      31
                                              3 BANK0      2     2      0
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCD_CL                                               0     0      0      31
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCDVAL1                                              5     1      4    9261
                                             11 BANK0      5     1      4
                          _LCD_POINT
 ---------------------------------------------------------------------------------
 (1) _LCD_POINT                                            7     2      5    6568
                                              4 BANK0      7     2      5
                             _LCD_ON
                              _LCD_P
 ---------------------------------------------------------------------------------
 (2) _LCD_P                                                2     2      0     132
                                              2 BANK0      2     2      0
                           _LCD_PLAY
 ---------------------------------------------------------------------------------
 (3) _LCD_PLAY                                             2     2      0      31
                                              0 BANK0      2     2      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               3     3      0      31
                                              0 BANK0      3     3      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (4) _LCD_TIM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONV_AS                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONVET_cont                                          4     4      0    4556
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _CONV                                                10    10      0    4590
                                             15 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _CONT                                                 4     4      0    4556
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1576
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2124
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                               _send
 ---------------------------------------------------------------------------------
 (7) _send                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONT
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _CONV
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _CONVET_cont
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _CONV_AS
   _LCDVAL1
     _LCD_POINT
       _LCD_ON
         _LCD_TIM
       _LCD_P
         _LCD_PLAY
           _LCD_TIM
   _LCD_CL
     _LCD_ON
       _LCD_TIM
   _LCD_IN
     _LCD_ON
       _LCD_TIM
   _LCD_POINT
     _LCD_ON
       _LCD_TIM
     _LCD_P
       _LCD_PLAY
         _LCD_TIM
   _SET_RXT
   _SET_TXR
   _Setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)
   _send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 21:54:40 2021

                      _C 004C                        _L 0050                        _R 004F  
                      _Z 004E                        _c 004B                        _r 0075  
                      _z 004D                        pc 0002           ___bmul@product 0022  
            _SSPSTATbits 0094             ___awdiv@sign 002C                       fsr 0004  
    ___wmul@multiplicand 0022                      l202 0F98                      l301 0FD6  
                    l205 0F9E                      l141 028D                      l142 02EA  
                    l151 0537                      l304 0FBA                      l216 0FAF  
                    l208 0F90                      l233 0733                      l162 0705  
                    l242 0FE9                      l251 07A8                      l139 0238  
                    l156 0489                      l236 0FFF                      l148 07C9  
                    l245 0F97                      l406 076D                      l159 065F  
                    l239 0FC7                      l432 07FE                      l408 0785  
                    l259 075E                      l286 01F9                      l198 07E2  
                    l199 07E7                      l559 05A0                      u400 0592  
                    u320 053F                      u401 0591                      u321 053E  
                    u410 0597                      u330 054A                      u411 0596  
                    u331 0549                      u340 055B                      u341 055A  
                    u360 056D                      u520 0781                      u361 056C  
                    u521 0780                      u505 076E                      u530 07F0  
                    u355 055F                      u531 07EF                      u515 0775  
                    u380 057E                      u540 07FD                      u381 057D  
                    u541 07FC                      u470 07A8                      u550 07D6  
                    u375 056E                      u471 07A7                      u551 07D5  
                    u560 0376                      u480 0F9E                      u385 057A  
                    u561 0375                      u481 0F9D                      u490 0767  
                    u395 0586                      u491 0766                      u577 0716  
                    u587 0FE6                      u597 0FFB                      _bro 0049  
                    _isr 06A5                      fsr0 0004                      indf 0000  
           LCD_POINT@LOC 002A          __end_of_LCDVAL1 01FA          __end_of_CONV_AS 0706  
        __end_of_LCD_TIM 0FC8                     l2000 07BF                     l2010 07C6  
                   l2002 07C0                     l2100 048A                     l2020 070B  
                   l2012 07C7                     l2004 07C3                     l2110 0400  
                   l2102 036A                     l2030 0727                     l2022 070E  
                   l2014 07C8                     l2006 07C4                     l2112 0481  
                   l2104 0376                     l2032 072D                     l2024 0710  
                   l2016 0706                     l2008 07C5                     l2040 0FAC  
                   l2120 01FF                     l2114 0485                     l2106 03F7  
                   l2050 0037                     l2034 0F91                     l2026 071B  
                   l2018 070A                     l2130 0221                     l2122 0204  
                   l1500 0555                     l2108 03FB                     l2044 0601  
                   l2116 06D6                     l2060 0091                     l2052 0049  
                   l2028 0721                     l2036 0F8E                     l2140 0262  
                   l2132 0233                     l2124 0212                     l1510 056D  
                   l1502 055B                     l2070 00EB                     l2062 00A3  
                   l2054 005B                     l2046 0024                     l2038 0FA7  
                   l2150 02B6                     l2142 0274                     l2134 0236  
                   l2126 0217                     l2118 01FA                     l1512 057E  
                   l1504 055E                     l1520 0592                     l2080 0145  
                   l2072 00FD                     l2064 00B5                     l2056 006D  
                   l2048 0025                     l2160 02FD                     l2152 02C5  
                   l2144 0286                     l2136 023B                     l2128 021C  
                   l1522 0597                     l1514 0584                     l1506 0565  
                   l2090 019F                     l2082 0157                     l2074 010F  
                   l2066 00C7                     l2058 007F                     l2162 030D  
                   l2154 02D7                     l2146 0290                     l2138 0250  
                   l1524 059C                     l1516 0585                     l1508 0569  
                   l2084 0169                     l2076 0121                     l2068 00D9  
                   l2260 0356                     l2164 031F                     l2148 02A5  
                   l2172 034C                     l1518 058C                     l2262 01B8  
                   l2086 017B                     l2078 0133                     l2094 01B1  
                   l2166 0331                     l2158 02ED                     l2174 0361  
                   l2264 0748                     l2088 018D                     l2168 0348  
                   l1490 0544                     l1492 0546                     l1484 0538  
                   l1900 0FEE                     l1494 054A                     l1486 053B  
                   l1902 0FF0                     l1910 0796                     l1496 054F  
                   l1488 053F                     l1904 0FF5                     l1912 079C  
                   l1498 0553                     l1906 0789                     l1914 0734  
                   l1940 0767                     l1908 078A                     l1916 0735  
                   l1924 0741                     l1950 07EB                     l1942 0774  
                   l1918 073B                     l1926 0750                     l1934 0F98  
                   l1960 07FD                     l1952 07EC                     l1944 077B  
                   l1936 075F                     l1928 0756                     l1954 07F0  
                   l1946 0781                     l1938 0763                     l1890 0FDA  
                   l1970 0FB0                     l1956 07F4                     l1892 0FDB  
                   l1964 0FC8                     l1980 07E1                     l1972 07CD  
                   l1958 07F6                     l1894 0FDD                     l1966 0FD1  
                   l1990 07B8                     l1982 07A9                     l1974 07D6  
                   l1888 0FBB                     l1896 0FE2                     l1968 0FD5  
                   l1992 07BB                     l1984 07B4                     l1976 07DA  
                   l1898 0FED                     l1994 07BC                     l1986 07B6  
                   l1978 07DC                     l1996 07BD                     l1988 07B7  
                   l1998 07BE                     ?_isr 0076                     STR_1 0666  
                   STR_2 0683                     STR_3 0685                     STR_4 0687  
                   STR_5 0689                     STR_6 068B                     STR_7 068D  
                   STR_8 068F                     STR_9 0691                     _CONT 036A  
                   _CONV 048A                     _TMR0 0001       __size_of_LCD_POINT 002B  
        __end_of_SET_RXT 0FBB          __end_of_SET_TXR 0FD7                     _cont 003F  
                   _main 01FA                     _send 05A1                     _sign 004A  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
       __end_of_LCD_PLAY 0FEA                    ??_isr 0078                    ?_CONT 0076  
                  ?_CONV 0076                    ?_main 0076          __end_of___awdiv 05A1  
                  ?_send 0076                    STR_10 0693                    STR_11 0695  
                  STR_12 0699                    STR_20 067F                    STR_13 069B  
                  STR_21 0678                    STR_14 069D                    STR_22 067B  
                  STR_15 069F                    STR_23 0697                    STR_16 06A1  
                  STR_17 06A3                    STR_18 0681                    STR_19 067D  
                  _ANSEL 0188          ___awdiv@divisor 0026                    _LCD_P 0786  
                  i1l132 06CD                    i1l182 0600          ___awdiv@counter 002B  
                  _TEM_H 0043                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TEM_T 0044                    _TEM_U 0045  
                  u44_20 06AB                    u44_21 06AA                    u45_20 06BB  
                  u45_21 06BA                    u46_20 06C9                    u46_21 06C8  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
                  _Setup 07A9                    pclath 000A          __end_of_spiInit 07E8  
        __end_of_spiRead 0FB0                    status 0003                    wtemp0 007E  
           __end_of_CONT 048A             __end_of_CONV 0538          __initialization 0011  
           __end_of_main 036A             __end_of_send 0601                   ??_CONT 002F  
                 ??_CONV 002F        __end_of_LCD_POINT 075F                   ??_main 0039  
                 ??_send 0076                ??_LCDVAL1 002F                   ?_LCD_P 0076  
                 LCD_P@D 0023                ??_CONV_AS 0020                ??_LCD_TIM 0020  
                 ?_Setup 0076                ??_SET_RXT 0020                ??_SET_TXR 0020  
       ___awdiv@dividend 0028                   _ANSELH 0189     __size_of_CONVET_cont 005F  
                 _LCD_CL 0F91                   _LCD_IN 0706                   _LCD_ON 0FEA  
                 i1l1530 05A2                   i1l1540 05AE                   i1l1542 05B1  
                 i1l1534 05A5                   i1l1560 05C8                   i1l1552 05BD  
                 i1l1544 05B4                   i1l1536 05A8                   i1l1528 05A1  
                 i1l2266 05D4                   i1l1554 05C0                   i1l1546 05B7  
                 i1l1538 05AB                   i1l1730 06B4                   i1l1556 05C3  
                 i1l1548 05BA                   i1l1564 05CA                   i1l1740 06C3  
                 i1l1732 06B7                   i1l1724 06A5                   i1l1558 05C6  
                 i1l1742 06C9                   i1l1734 06BB                   i1l1726 06AB  
                 i1l1744 06CA                   i1l1736 06BE                   i1l1728 06AF  
                 i1l1738 06BF                   _POT1_H 0047                   _POT1_T 0046  
                 _POT1_U 0048                   _SPBRGH 009A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 ___bmul 07E8                   ___wmul 075F                ??___awdiv 002A  
                 _cont_1 0042                   _cont_2 0041                   _cont_3 0040  
       ___awdiv@quotient 002D                   saved_w 007E         __end_of_spiWrite 0F91  
              ??_spiInit 0023                ??_spiRead 0020                ?_LCD_PLAY 0076  
__end_of__initialization 0020                LCD_PLAY@D 0021            __end_of_LCD_P 07A9  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0076            __end_of_Setup 07CA  
                ??_LCD_P 0022           _OPTION_REGbits 0081                  ??_Setup 0020  
                ?_LCD_CL 0076               __pbssBANK0 003B                  ?_LCD_IN 0076  
                ?_LCD_ON 0076                  LCD_ON@C 0022               ??_LCD_PLAY 0020  
             __pmaintext 01FA                  ?___bmul 0020                  ?___wmul 0020  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _LCDVAL1 0024  
                _CONV_AS 06D6                  _LCD_TIM 0FBB                  _TEM_HAS 0072  
                _TEM_TAS 0073                  _TEM_UAS 0074                  _SET_RXT 0FB0  
                _SET_TXR 0FC8                  _SSPSTAT 0094               __stringtab 0660  
        __size_of_LCD_CL 0007          __size_of_LCD_IN 002E          __size_of_LCD_ON 0016  
              ?_spiWrite 0076          __size_of___bmul 0017                _CONV$1331 0037  
                ___awdiv 0538          __size_of___wmul 0027                  __ptext1 0F8B  
                __ptext2 0FA7                  __ptext3 0F98                  __ptext4 07CA  
                __ptext5 07A9                  __ptext6 0FC8                  __ptext7 0FB0  
                __ptext8 0706                  __ptext9 0F91             __size_of_isr 0031  
              _LCD_POINT 0734                  _spiInit 07CA                  _spiRead 0FA7  
                clrloop0 0FA0     end_of_initialization 0020                _RCSTAbits 0018  
             ??_spiWrite 0020                _PORTDbits 0008                _PORTEbits 0009  
             ?_LCD_POINT 0024            ??_CONVET_cont 002F                _TRISDbits 0088  
            spiWrite@dat 0020               LCD_POINT@D 0028               LCD_POINT@x 0024  
             LCD_POINT@y 0026           __end_of_LCD_CL 0F98           __end_of_LCD_IN 0734  
         __end_of_LCD_ON 1000                _TXSTAbits 0098        __size_of_LCD_PLAY 0013  
         _spiReceiveWait 0F98           __end_of___bmul 07FF           __end_of___wmul 0786  
            _BAUDCTLbits 0187      start_initialization 0011              __end_of_isr 06D6  
               ??_LCD_CL 0023                 ??_LCD_IN 0023                 ??_LCD_ON 0020  
    __end_of_CONVET_cont 0660   __end_of_spiReceiveWait 0F9F                 ??___bmul 0021  
               ??___wmul 0024                 LCDVAL1@Z 002D                 LCDVAL1@x 002B  
               ?_LCDVAL1 002B                 ?_CONV_AS 0076                 ?_LCD_TIM 0076  
            __pbssCOMMON 0070                ___latbits 0002              ??_LCD_POINT 0029  
          __pcstackBANK0 0020                 ?_SET_RXT 0076                 ?_SET_TXR 0076  
        ?_spiReceiveWait 0076                 ?___awdiv 0026        __size_of_spiWrite 0006  
              __pstrings 0660           __size_of_LCD_P 0023                 ?_spiInit 0020  
               ?_spiRead 0076              _CONVET_cont 0601           __size_of_Setup 0021  
               _LCD_PLAY 0FD7     spiInit@sTransmitEdge 0022        interrupt_function 0004  
         ___wmul@product 0024                clear_ram0 0F9F                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C                 _POT1_Has 003C  
               _POT1_Tas 003B                 _POT1_Uas 0070              __stringbase 0665  
      ___wmul@multiplier 0020         __size_of_LCDVAL1 01D6         __size_of_CONV_AS 0030  
       __size_of_LCD_TIM 000D         __size_of_SET_RXT 000B         __size_of_SET_TXR 000F  
       __size_of___awdiv 0069       __end_of__stringtab 0666                 __ptext10 0024  
               __ptext11 0734                 __ptext20 075F                 __ptext12 0786  
               __ptext21 07E8                 __ptext13 0FD7                 __ptext22 0538  
               __ptext14 0FEA                 __ptext23 06A5                 __ptext15 0FBB  
               __ptext24 05A1                 __ptext16 06D6                 __ptext17 0601  
               __ptext18 048A                 __ptext19 036A         __size_of_spiInit 001E  
       __size_of_spiRead 0009                 _cont_1AS 0071                 _cont_2AS 003E  
               _cont_3AS 003D            __size_of_CONT 0120            __size_of_CONV 00AE  
          __size_of_main 0170            __size_of_send 0060                 _spiWrite 0F8B  
           spiInit@sType 0023        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0020                stringcode 0660  
             _OSCCONbits 008F                 stringdir 0660                 stringtab 0660  
           ?_CONVET_cont 0076  
