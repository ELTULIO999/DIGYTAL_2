

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 14:42:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  0008                     _PORTDbits	set	8
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0019                     _TXREG	set	25
   460  000B                     _INTCONbits	set	11
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0007                     _PORTC	set	7
   464  0006                     _PORTB	set	6
   465  0005                     _PORTA	set	5
   466  0009                     _PORTEbits	set	9
   467  008C                     _PIE1bits	set	140
   468  0099                     _SPBRG	set	153
   469  0098                     _TXSTAbits	set	152
   470  0088                     _TRISDbits	set	136
   471  0094                     _SSPSTATbits	set	148
   472  0094                     _SSPSTAT	set	148
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0087                     _TRISC	set	135
   476  0086                     _TRISB	set	134
   477  0085                     _TRISA	set	133
   478  043B                     _TRISC3	set	1083
   479  043D                     _TRISC5	set	1085
   480  0187                     _BAUDCTLbits	set	391
   481  0189                     _ANSELH	set	393
   482  0188                     _ANSEL	set	392
   483                           
   484                           	psect	strings
   485  0003                     __pstrings:
   486  0003                     stringtab:
   487  0003                     __stringtab:
   488  0003                     stringcode:	
   489                           ;	String table - string pointers are 1 byte each
   490                           
   491  0003                     stringdir:
   492  0003  3000               	movlw	high stringdir
   493  0004  008A               	movwf	10
   494  0005  0804               	movf	4,w
   495  0006  0A84               	incf	4,f
   496  0007  0782               	addwf	2,f
   497  0008                     __stringbase:
   498  0008  3400               	retlw	0
   499  0009                     __end_of__stringtab:
   500  0009                     STR_1:
   501  0009  3441               	retlw	65	;'A'
   502  000A  3444               	retlw	68	;'D'
   503  000B  3443               	retlw	67	;'C'
   504  000C  3420               	retlw	32	;' '
   505  000D  3454               	retlw	84	;'T'
   506  000E  3445               	retlw	69	;'E'
   507  000F  344D               	retlw	77	;'M'
   508  0010  3450               	retlw	80	;'P'
   509  0011  3420               	retlw	32	;' '
   510  0012  3443               	retlw	67	;'C'
   511  0013  344F               	retlw	79	;'O'
   512  0014  344E               	retlw	78	;'N'
   513  0015  3454               	retlw	84	;'T'
   514  0016  3400               	retlw	0
   515  0017                     STR_18:
   516  0017  342E               	retlw	46	;'.'
   517  0018  3400               	retlw	0
   518  0019                     STR_2:
   519  0019  3430               	retlw	48	;'0'
   520  001A  3400               	retlw	0
   521  001B                     STR_3:
   522  001B  3431               	retlw	49	;'1'
   523  001C  3400               	retlw	0
   524  001D                     STR_4:
   525  001D  3432               	retlw	50	;'2'
   526  001E  3400               	retlw	0
   527  001F                     STR_5:
   528  001F  3433               	retlw	51	;'3'
   529  0020  3400               	retlw	0
   530  0021                     STR_6:
   531  0021  3434               	retlw	52	;'4'
   532  0022  3400               	retlw	0
   533  0023                     STR_7:
   534  0023  3435               	retlw	53	;'5'
   535  0024  3400               	retlw	0
   536  0025                     STR_8:
   537  0025  3436               	retlw	54	;'6'
   538  0026  3400               	retlw	0
   539  0027                     STR_9:
   540  0027  3437               	retlw	55	;'7'
   541  0028  3400               	retlw	0
   542  0029                     STR_10:
   543  0029  3438               	retlw	56	;'8'
   544  002A  3400               	retlw	0
   545  002B                     STR_11:
   546  002B  3439               	retlw	57	;'9'
   547  002C  3400               	retlw	0
   548  002D                     STR_12:
   549  002D  3441               	retlw	65	;'A'
   550  002E  3400               	retlw	0
   551  002F                     STR_13:
   552  002F  3442               	retlw	66	;'B'
   553  0030  3400               	retlw	0
   554  0031                     STR_14:
   555  0031  3443               	retlw	67	;'C'
   556  0032  3400               	retlw	0
   557  0033                     STR_15:
   558  0033  3444               	retlw	68	;'D'
   559  0034  3400               	retlw	0
   560  0035                     STR_16:
   561  0035  3445               	retlw	69	;'E'
   562  0036  3400               	retlw	0
   563  0037                     STR_17:
   564  0037  3446               	retlw	70	;'F'
   565  0038  3400               	retlw	0
   566                           
   567                           	psect	cinit
   568  07F3                     start_initialization:	
   569                           ; #config settings
   570                           
   571  07F3                     __initialization:
   572                           
   573                           ; Clear objects allocated to BANK0
   574  07F3  1383               	bcf	3,7	;select IRP bank0
   575  07F4  3020               	movlw	low __pbssBANK0
   576  07F5  0084               	movwf	4
   577  07F6  3035               	movlw	low (__pbssBANK0+21)
   578  07F7  120A  118A  2408  120A  118A  	fcall	clear_ram0
   579  07FC                     end_of_initialization:	
   580                           ;End of C runtime variable initialization code
   581                           
   582  07FC                     __end_of__initialization:
   583  07FC  0183               	clrf	3
   584  07FD  120A  118A  2DEE   	ljmp	_main	;jump to C main() function
   585                           
   586                           	psect	bssBANK0
   587  0020                     __pbssBANK0:
   588  0020                     _POT1_Tas:
   589  0020                     	ds	1
   590  0021                     _POT1_Has:
   591  0021                     	ds	1
   592  0022                     _POT1_Uas:
   593  0022                     	ds	1
   594  0023                     _cont_3AS:
   595  0023                     	ds	1
   596  0024                     _cont_2AS:
   597  0024                     	ds	1
   598  0025                     _cont_1AS:
   599  0025                     	ds	1
   600  0026                     _cont:
   601  0026                     	ds	1
   602  0027                     _cont_3:
   603  0027                     	ds	1
   604  0028                     _cont_2:
   605  0028                     	ds	1
   606  0029                     _cont_1:
   607  0029                     	ds	1
   608  002A                     _TEM_TAS:
   609  002A                     	ds	1
   610  002B                     _TEM_UAS:
   611  002B                     	ds	1
   612  002C                     _TEM_T:
   613  002C                     	ds	1
   614  002D                     _TEM_U:
   615  002D                     	ds	1
   616  002E                     _POT1_T:
   617  002E                     	ds	1
   618  002F                     _POT1_H:
   619  002F                     	ds	1
   620  0030                     _POT1_U:
   621  0030                     	ds	1
   622  0031                     _z:
   623  0031                     	ds	1
   624  0032                     _Z:
   625  0032                     	ds	1
   626  0033                     _l:
   627  0033                     	ds	1
   628  0034                     _L:
   629  0034                     	ds	1
   630                           
   631                           	psect	clrtext
   632  0408                     clear_ram0:	
   633                           ;	Called with FSR containing the base address, and
   634                           ;	W with the last address+1
   635                           
   636  0408  0064               	clrwdt	;clear the watchdog before getting into this loop
   637  0409                     clrloop0:
   638  0409  0180               	clrf	0	;clear RAM location pointed to by FSR
   639  040A  0A84               	incf	4,f	;increment pointer
   640  040B  0604               	xorwf	4,w	;XOR with final address
   641  040C  1903               	btfsc	3,2	;have we reached the end yet?
   642  040D  3400               	retlw	0	;all done for this memory range, return
   643  040E  0604               	xorwf	4,w	;XOR again to restore value
   644  040F  2C09               	goto	clrloop0	;do the next byte
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:
   648  0070                     ?_spiInit:
   649  0070                     ?_Setup:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_Setup:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_LCD_IN:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_LCD_CL:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_spiWrite:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_spiWrite:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_spiRead:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_spiRead:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_CONVET_cont:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_LCD_ON:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_LCD_ON:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_LCD_TIM:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_LCD_TIM:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_main:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_spiReceiveWait:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_spiReceiveWait:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_LCD_PLAY:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_LCD_PLAY:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_LCD_P:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?___bmul:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?___wmul:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     spiInit@sDataSample:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     spiWrite@dat:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ___bmul@multiplicand:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ___wmul@multiplier:	
   722                           ; 1 bytes @ 0x0
   723                           
   724                           
   725                           ; 2 bytes @ 0x0
   726  0070                     	ds	1
   727  0071                     ??___bmul:
   728  0071                     spiInit@sClockIdle:	
   729                           ; 1 bytes @ 0x1
   730                           
   731  0071                     LCD_PLAY@D:	
   732                           ; 1 bytes @ 0x1
   733                           
   734                           
   735                           ; 1 bytes @ 0x1
   736  0071                     	ds	1
   737  0072                     ??_LCD_P:
   738  0072                     spiInit@sTransmitEdge:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     LCD_ON@C:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     ___bmul@product:	
   745                           ; 1 bytes @ 0x2
   746                           
   747  0072                     ___wmul@multiplicand:	
   748                           ; 1 bytes @ 0x2
   749                           
   750                           
   751                           ; 2 bytes @ 0x2
   752  0072                     	ds	1
   753  0073                     ??_spiInit:
   754  0073                     ??_LCD_IN:	
   755                           ; 1 bytes @ 0x3
   756                           
   757  0073                     ??_LCD_CL:	
   758                           ; 1 bytes @ 0x3
   759                           
   760  0073                     spiInit@sType:	
   761                           ; 1 bytes @ 0x3
   762                           
   763  0073                     LCD_P@D:	
   764                           ; 1 bytes @ 0x3
   765                           
   766  0073                     ___bmul@multiplier:	
   767                           ; 1 bytes @ 0x3
   768                           
   769                           
   770                           ; 1 bytes @ 0x3
   771  0073                     	ds	1
   772  0074                     ?_LCD_POINT:
   773  0074                     ??___wmul:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     LCD_POINT@x:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     ___wmul@product:	
   780                           ; 2 bytes @ 0x4
   781                           
   782                           
   783                           ; 2 bytes @ 0x4
   784  0074                     	ds	2
   785  0076                     ?___awdiv:
   786  0076                     LCD_POINT@y:	
   787                           ; 2 bytes @ 0x6
   788                           
   789  0076                     ___awdiv@divisor:	
   790                           ; 2 bytes @ 0x6
   791                           
   792                           
   793                           ; 2 bytes @ 0x6
   794  0076                     	ds	2
   795  0078                     LCD_POINT@D:
   796  0078                     ___awdiv@dividend:	
   797                           ; 1 bytes @ 0x8
   798                           
   799                           
   800                           ; 2 bytes @ 0x8
   801  0078                     	ds	1
   802  0079                     ??_LCD_POINT:
   803                           
   804                           ; 1 bytes @ 0x9
   805  0079                     	ds	1
   806  007A                     ??___awdiv:
   807  007A                     LCD_POINT@LOC:	
   808                           ; 1 bytes @ 0xA
   809                           
   810                           
   811                           ; 1 bytes @ 0xA
   812  007A                     	ds	1
   813  007B                     ??_LCDVAL1:
   814                           
   815                           ; 1 bytes @ 0xB
   816  007B                     	ds	1
   817  007C                     ??_main:
   818                           
   819                           ; 1 bytes @ 0xC
   820  007C                     	ds	2
   821                           
   822                           	psect	cstackBANK0
   823  0035                     __pcstackBANK0:
   824  0035                     ?_LCDVAL1:
   825  0035                     ___awdiv@counter:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0035                     LCDVAL1@x:	
   829                           ; 1 bytes @ 0x0
   830                           
   831                           
   832                           ; 2 bytes @ 0x0
   833  0035                     	ds	1
   834  0036                     ___awdiv@sign:
   835                           
   836                           ; 1 bytes @ 0x1
   837  0036                     	ds	1
   838  0037                     LCDVAL1@Z:
   839  0037                     ___awdiv@quotient:	
   840                           ; 2 bytes @ 0x2
   841                           
   842                           
   843                           ; 2 bytes @ 0x2
   844  0037                     	ds	2
   845  0039                     ??_CONVET_cont:
   846                           
   847                           ; 1 bytes @ 0x4
   848  0039                     	ds	4
   849                           
   850                           	psect	maintext
   851  05EE                     __pmaintext:	
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 55 in file "master.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : B00/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          2       0       0       0       0
   874 ;;      Totals:         2       0       0       0       0
   875 ;;Total ram usage:        2 bytes
   876 ;; Hardware stack levels required when called:    5
   877 ;; This function calls:
   878 ;;		_CONVET_cont
   879 ;;		_LCDVAL1
   880 ;;		_LCD_CL
   881 ;;		_LCD_IN
   882 ;;		_LCD_POINT
   883 ;;		_Setup
   884 ;;		_spiInit
   885 ;;		_spiRead
   886 ;;		_spiWrite
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _main
   894  05EE                     _main:
   895  05EE                     l1427:	
   896                           ;incstack = 0
   897                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   898                           
   899                           
   900                           ;master.c: 56:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   901  05EE  01F0               	clrf	spiInit@sDataSample
   902  05EF  01F1               	clrf	spiInit@sClockIdle
   903  05F0  01F2               	clrf	spiInit@sTransmitEdge
   904  05F1  3020               	movlw	32
   905  05F2  120A  118A  2461  120A  118A  	fcall	_spiInit
   906                           
   907                           ;master.c: 57:     Setup();
   908  05F7  120A  118A  2477  120A  118A  	fcall	_Setup
   909                           
   910                           ;master.c: 58:     LCD_IN();
   911  05FC  120A  118A  24FA  120A  118A  	fcall	_LCD_IN
   912                           
   913                           ;master.c: 59:     LCD_CL();
   914  0601  120A  118A  23FA  120A  118A  	fcall	_LCD_CL
   915  0606                     l1429:
   916                           
   917                           ;master.c: 60:     LCD_POINT(0,1,"ADC TEMP CONT");
   918  0606  3000               	movlw	0
   919  0607  00F4               	movwf	LCD_POINT@x
   920  0608  00F5               	movwf	LCD_POINT@x+1
   921  0609  3001               	movlw	1
   922  060A  00F6               	movwf	LCD_POINT@y
   923  060B  3000               	movlw	0
   924  060C  00F7               	movwf	LCD_POINT@y+1
   925  060D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   926  060E  00FC               	movwf	??_main
   927  060F  087C               	movf	??_main,w
   928  0610  00F8               	movwf	LCD_POINT@D
   929  0611  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
   930  0616                     l1431:
   931                           
   932                           ;master.c: 61:     Z=0;
   933  0616  1283               	bcf	3,5	;RP0=0, select bank0
   934  0617  1303               	bcf	3,6	;RP1=0, select bank0
   935  0618  01B2               	clrf	_Z
   936  0619                     l1433:
   937                           
   938                           ;master.c: 67:     LCDVAL1 (10,cont_1);
   939  0619  300A               	movlw	10
   940  061A  1283               	bcf	3,5	;RP0=0, select bank0
   941  061B  1303               	bcf	3,6	;RP1=0, select bank0
   942  061C  00B5               	movwf	LCDVAL1@x
   943  061D  3000               	movlw	0
   944  061E  00B6               	movwf	LCDVAL1@x+1
   945  061F  0829               	movf	_cont_1,w
   946  0620  00FC               	movwf	??_main
   947  0621  01FD               	clrf	??_main+1
   948  0622  087C               	movf	??_main,w
   949  0623  00B7               	movwf	LCDVAL1@Z
   950  0624  087D               	movf	??_main+1,w
   951  0625  00B8               	movwf	LCDVAL1@Z+1
   952  0626  120A  118A  2686  120A  118A  	fcall	_LCDVAL1
   953  062B                     l1435:
   954                           
   955                           ;master.c: 68:     LCDVAL1 (11,cont_2);
   956  062B  300B               	movlw	11
   957  062C  1283               	bcf	3,5	;RP0=0, select bank0
   958  062D  1303               	bcf	3,6	;RP1=0, select bank0
   959  062E  00B5               	movwf	LCDVAL1@x
   960  062F  3000               	movlw	0
   961  0630  00B6               	movwf	LCDVAL1@x+1
   962  0631  0828               	movf	_cont_2,w
   963  0632  00FC               	movwf	??_main
   964  0633  01FD               	clrf	??_main+1
   965  0634  087C               	movf	??_main,w
   966  0635  00B7               	movwf	LCDVAL1@Z
   967  0636  087D               	movf	??_main+1,w
   968  0637  00B8               	movwf	LCDVAL1@Z+1
   969  0638  120A  118A  2686  120A  118A  	fcall	_LCDVAL1
   970  063D                     l1437:
   971                           
   972                           ;master.c: 69:     LCDVAL1 (12,cont_3);
   973  063D  300C               	movlw	12
   974  063E  1283               	bcf	3,5	;RP0=0, select bank0
   975  063F  1303               	bcf	3,6	;RP1=0, select bank0
   976  0640  00B5               	movwf	LCDVAL1@x
   977  0641  3000               	movlw	0
   978  0642  00B6               	movwf	LCDVAL1@x+1
   979  0643  0827               	movf	_cont_3,w
   980  0644  00FC               	movwf	??_main
   981  0645  01FD               	clrf	??_main+1
   982  0646  087C               	movf	??_main,w
   983  0647  00B7               	movwf	LCDVAL1@Z
   984  0648  087D               	movf	??_main+1,w
   985  0649  00B8               	movwf	LCDVAL1@Z+1
   986  064A  120A  118A  2686  120A  118A  	fcall	_LCDVAL1
   987                           
   988                           ;master.c: 70:         switch (Z){
   989  064F  2E71               	goto	l1443
   990  0650                     l97:	
   991                           ;master.c: 71:             case 0:
   992                           
   993                           
   994                           ;master.c: 72:                 PORTEbits.RE0=0;
   995  0650  1009               	bcf	9,0	;volatile
   996                           
   997                           ;master.c: 73:                 PORTEbits.RE1=1;
   998  0651  1489               	bsf	9,1	;volatile
   999                           
  1000                           ;master.c: 74:                 PORTEbits.RE2=1;
  1001  0652  1509               	bsf	9,2	;volatile
  1002  0653                     l1439:
  1003                           
  1004                           ;master.c: 76:                 spiWrite(0x00);
  1005  0653  3000               	movlw	0
  1006  0654  120A  118A  23F4  120A  118A  	fcall	_spiWrite
  1007                           
  1008                           ;master.c: 77:                 cont=spiRead();
  1009  0659  120A  118A  2410  120A  118A  	fcall	_spiRead
  1010  065E  00FC               	movwf	??_main
  1011  065F  087C               	movf	??_main,w
  1012  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0662  00A6               	movwf	_cont
  1015                           
  1016                           ;master.c: 78:                 CONVET_cont();
  1017  0663  120A  118A  2526  120A  118A  	fcall	_CONVET_cont
  1018                           
  1019                           ;master.c: 80:                 break;
  1020  0668  2E19               	goto	l1433
  1021  0669                     l99:	
  1022                           ;master.c: 81:             case 1:
  1023                           
  1024                           
  1025                           ;master.c: 82:                 PORTEbits.RE0=1;
  1026  0669  1409               	bsf	9,0	;volatile
  1027                           
  1028                           ;master.c: 83:                 PORTEbits.RE1=0;
  1029  066A  1089               	bcf	9,1	;volatile
  1030                           
  1031                           ;master.c: 84:                 PORTEbits.RE2=1;
  1032  066B  1509               	bsf	9,2	;volatile
  1033                           
  1034                           ;master.c: 85:                 break;
  1035  066C  2E19               	goto	l1433
  1036  066D                     l100:	
  1037                           ;master.c: 86:             default:
  1038                           
  1039                           
  1040                           ;master.c: 87:                 PORTEbits.RE0=1;
  1041  066D  1409               	bsf	9,0	;volatile
  1042                           
  1043                           ;master.c: 88:                 PORTEbits.RE1=1;
  1044  066E  1489               	bsf	9,1	;volatile
  1045                           
  1046                           ;master.c: 89:                 PORTEbits.RE2=0;
  1047  066F  1109               	bcf	9,2	;volatile
  1048                           
  1049                           ;master.c: 90:                 break;
  1050  0670  2E19               	goto	l1433
  1051  0671                     l1443:
  1052  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0673  0832               	movf	_Z,w
  1055  0674  00FC               	movwf	??_main
  1056  0675  01FD               	clrf	??_main+1
  1057                           
  1058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1059                           ; Switch size 1, requested type "simple"
  1060                           ; Number of cases is 1, Range of values is 0 to 0
  1061                           ; switch strategies available:
  1062                           ; Name         Instructions Cycles
  1063                           ; simple_byte            4     3 (average)
  1064                           ; direct_byte           11     8 (fixed)
  1065                           ; jumptable            260     6 (fixed)
  1066                           ;	Chosen strategy is simple_byte
  1067  0676  087D               	movf	??_main+1,w
  1068  0677  3A00               	xorlw	0	; case 0
  1069  0678  1903               	skipnz
  1070  0679  2E7B               	goto	l1559
  1071  067A  2E6D               	goto	l100
  1072  067B                     l1559:
  1073                           
  1074                           ; Switch size 1, requested type "simple"
  1075                           ; Number of cases is 2, Range of values is 0 to 1
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte            7     4 (average)
  1079                           ; direct_byte           14     8 (fixed)
  1080                           ; jumptable            260     6 (fixed)
  1081                           ;	Chosen strategy is simple_byte
  1082  067B  087C               	movf	??_main,w
  1083  067C  3A00               	xorlw	0	; case 0
  1084  067D  1903               	skipnz
  1085  067E  2E50               	goto	l97
  1086  067F  3A01               	xorlw	1	; case 1
  1087  0680  1903               	skipnz
  1088  0681  2E69               	goto	l99
  1089  0682  2E6D               	goto	l100
  1090  0683  120A  118A  2800   	ljmp	start
  1091  0686                     __end_of_main:
  1092                           
  1093                           	psect	text1
  1094  03F4                     __ptext1:	
  1095 ;; *************** function _spiWrite *****************
  1096 ;; Defined at:
  1097 ;;		line 28 in file "MSSP.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  dat             1    wreg     unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  dat             1    0[COMMON] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         1       0       0       0       0
  1115 ;;Total ram usage:        1 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _spiWrite
  1126  03F4                     _spiWrite:
  1127                           
  1128                           ;incstack = 0
  1129                           ; Regs used in _spiWrite: [wreg]
  1130                           ;spiWrite@dat stored from wreg
  1131  03F4  00F0               	movwf	spiWrite@dat
  1132  03F5                     l1417:
  1133                           
  1134                           ;MSSP.c: 28: void spiWrite(char dat);MSSP.c: 29: {;MSSP.c: 30:     SSPBUF = dat;
  1135  03F5  0870               	movf	spiWrite@dat,w
  1136  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1137  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1138  03F8  0093               	movwf	19	;volatile
  1139  03F9                     l162:
  1140  03F9  0008               	return
  1141  03FA                     __end_of_spiWrite:
  1142                           
  1143                           	psect	text2
  1144  0410                     __ptext2:	
  1145 ;; *************** function _spiRead *****************
  1146 ;; Defined at:
  1147 ;;		line 41 in file "MSSP.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      unsigned char 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    1
  1168 ;; This function calls:
  1169 ;;		_spiReceiveWait
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _spiRead
  1177  0410                     _spiRead:
  1178  0410                     l1419:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1181                           
  1182                           
  1183                           ;MSSP.c: 43:     spiReceiveWait();
  1184  0410  120A  118A  2401  120A  118A  	fcall	_spiReceiveWait
  1185  0415                     l1421:
  1186                           
  1187                           ;MSSP.c: 44:     return(SSPBUF);
  1188  0415  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0416  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0417  0813               	movf	19,w	;volatile
  1191  0418                     l170:
  1192  0418  0008               	return
  1193  0419                     __end_of_spiRead:
  1194                           
  1195                           	psect	text3
  1196  0401                     __ptext3:	
  1197 ;; *************** function _spiReceiveWait *****************
  1198 ;; Defined at:
  1199 ;;		line 23 in file "MSSP.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		None
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_spiRead
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _spiReceiveWait
  1228  0401                     _spiReceiveWait:
  1229  0401                     l1253:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _spiReceiveWait: []
  1232                           
  1233  0401                     l156:	
  1234                           ;MSSP.c: 25:     while ( !SSPSTATbits.BF );
  1235                           
  1236  0401  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0402  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0403  1C14               	btfss	20,0	;volatile
  1239  0404  2C06               	goto	u211
  1240  0405  2C07               	goto	u210
  1241  0406                     u211:
  1242  0406  2C01               	goto	l156
  1243  0407                     u210:
  1244  0407                     l159:
  1245  0407  0008               	return
  1246  0408                     __end_of_spiReceiveWait:
  1247                           
  1248                           	psect	text4
  1249  0461                     __ptext4:	
  1250 ;; *************** function _spiInit *****************
  1251 ;; Defined at:
  1252 ;;		line 6 in file "MSSP.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  sType           1    wreg     enum E1264
  1255 ;;  sDataSample     1    0[COMMON] enum E1272
  1256 ;;  sClockIdle      1    1[COMMON] enum E1276
  1257 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  sType           1    3[COMMON] enum E1264
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         3       0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         4       0       0       0       0
  1273 ;;Total ram usage:        4 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _spiInit
  1284  0461                     _spiInit:
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1288                           ;spiInit@sType stored from wreg
  1289  0461  00F3               	movwf	spiInit@sType
  1290  0462                     l1327:
  1291                           
  1292                           ;MSSP.c: 6: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);MSSP.c: 7: {;MSSP.c: 8:     TRISC5 = 0;
  1293  0462  1683               	bsf	3,5	;RP0=1, select bank1
  1294  0463  1303               	bcf	3,6	;RP1=0, select bank1
  1295  0464  1287               	bcf	7,5	;volatile
  1296                           
  1297                           ;MSSP.c: 9:     if(sType & 0b00000100)
  1298  0465  1D73               	btfss	spiInit@sType,2
  1299  0466  2C68               	goto	u381
  1300  0467  2C69               	goto	u380
  1301  0468                     u381:
  1302  0468  2C6D               	goto	l1333
  1303  0469                     u380:
  1304  0469                     l1329:
  1305                           
  1306                           ;MSSP.c: 10:     {;MSSP.c: 11:         SSPSTAT = sTransmitEdge;
  1307  0469  0872               	movf	spiInit@sTransmitEdge,w
  1308  046A  0094               	movwf	20	;volatile
  1309  046B                     l1331:
  1310                           
  1311                           ;MSSP.c: 12:         TRISC3 = 1;
  1312  046B  1587               	bsf	7,3	;volatile
  1313                           
  1314                           ;MSSP.c: 13:     }
  1315  046C  2C71               	goto	l152
  1316  046D                     l1333:
  1317                           
  1318                           ;MSSP.c: 15:     {;MSSP.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
  1319  046D  0870               	movf	spiInit@sDataSample,w
  1320  046E  0472               	iorwf	spiInit@sTransmitEdge,w
  1321  046F  0094               	movwf	20	;volatile
  1322  0470                     l1335:
  1323                           
  1324                           ;MSSP.c: 17:         TRISC3 = 0;
  1325  0470  1187               	bcf	7,3	;volatile
  1326  0471                     l152:	
  1327                           ;MSSP.c: 18:     }
  1328                           
  1329                           
  1330                           ;MSSP.c: 20:     SSPCON = sType | sClockIdle;
  1331  0471  0873               	movf	spiInit@sType,w
  1332  0472  0471               	iorwf	spiInit@sClockIdle,w
  1333  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0475  0094               	movwf	20	;volatile
  1336  0476                     l153:
  1337  0476  0008               	return
  1338  0477                     __end_of_spiInit:
  1339                           
  1340                           	psect	text5
  1341  0477                     __ptext5:	
  1342 ;; *************** function _Setup *****************
  1343 ;; Defined at:
  1344 ;;		line 97 in file "master.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _Setup
  1373  0477                     _Setup:
  1374  0477                     l1337:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _Setup: [wreg+status,2]
  1377                           
  1378                           
  1379                           ;master.c: 99:     PORTA = 0;
  1380  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0479  0185               	clrf	5	;volatile
  1383                           
  1384                           ;master.c: 100:     PORTB = 0;
  1385  047A  0186               	clrf	6	;volatile
  1386                           
  1387                           ;master.c: 101:     PORTC = 0;
  1388  047B  0187               	clrf	7	;volatile
  1389                           
  1390                           ;master.c: 102:     PORTD = 0;
  1391  047C  0188               	clrf	8	;volatile
  1392                           
  1393                           ;master.c: 103:     PORTE = 0;
  1394  047D  0189               	clrf	9	;volatile
  1395                           
  1396                           ;master.c: 105:     TRISA = 0B00000000;
  1397  047E  1683               	bsf	3,5	;RP0=1, select bank1
  1398  047F  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0480  0185               	clrf	5	;volatile
  1400                           
  1401                           ;master.c: 106:     TRISB = 0B00000000;
  1402  0481  0186               	clrf	6	;volatile
  1403  0482                     l1339:
  1404                           
  1405                           ;master.c: 107:     TRISC = 0B00010000;
  1406  0482  3010               	movlw	16
  1407  0483  0087               	movwf	7	;volatile
  1408  0484                     l1341:
  1409                           
  1410                           ;master.c: 108:     TRISD = 0B00000000;
  1411  0484  0188               	clrf	8	;volatile
  1412                           
  1413                           ;master.c: 109:     TRISE = 1 ;
  1414  0485  3001               	movlw	1
  1415  0486  0089               	movwf	9	;volatile
  1416  0487                     l1343:
  1417                           
  1418                           ;master.c: 111:     ANSEL = 0B00000000;
  1419  0487  1683               	bsf	3,5	;RP0=1, select bank3
  1420  0488  1703               	bsf	3,6	;RP1=1, select bank3
  1421  0489  0188               	clrf	8	;volatile
  1422  048A                     l1345:
  1423                           
  1424                           ;master.c: 112:     ANSELH = 0B00000000;
  1425  048A  0189               	clrf	9	;volatile
  1426  048B                     l1347:
  1427                           
  1428                           ;master.c: 115:     INTCONbits.GIE=1;
  1429  048B  178B               	bsf	11,7	;volatile
  1430  048C                     l1349:
  1431                           
  1432                           ;master.c: 116:     INTCONbits.PEIE=1;
  1433  048C  170B               	bsf	11,6	;volatile
  1434  048D                     l1351:
  1435                           
  1436                           ;master.c: 117:     INTCONbits.RBIE=1;
  1437  048D  158B               	bsf	11,3	;volatile
  1438  048E                     l106:
  1439  048E  0008               	return
  1440  048F                     __end_of_Setup:
  1441                           
  1442                           	psect	text6
  1443  04FA                     __ptext6:	
  1444 ;; *************** function _LCD_IN *****************
  1445 ;; Defined at:
  1446 ;;		line 4 in file "SETLCD.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0
  1462 ;;      Temps:          2       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		_LCD_ON
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _LCD_IN
  1476  04FA                     _LCD_IN:
  1477  04FA                     l1353:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _LCD_IN: [wreg+status,2+status,0+pclath+cstack]
  1480                           
  1481                           
  1482                           ;SETLCD.c: 5:     TRISDbits.TRISD6 = 0;
  1483  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1484  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1485  04FC  1308               	bcf	8,6	;volatile
  1486                           
  1487                           ;SETLCD.c: 6:     TRISDbits.TRISD7 = 0;
  1488  04FD  1388               	bcf	8,7	;volatile
  1489  04FE                     l1355:
  1490                           
  1491                           ;SETLCD.c: 7:     TRISB = 0;
  1492  04FE  0186               	clrf	6	;volatile
  1493  04FF                     l1357:
  1494                           
  1495                           ;SETLCD.c: 8:     PORTDbits.RD6 = 0;
  1496  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0501  1308               	bcf	8,6	;volatile
  1499  0502                     l1359:
  1500                           
  1501                           ;SETLCD.c: 9:     PORTDbits.RD7 = 0;
  1502  0502  1388               	bcf	8,7	;volatile
  1503                           
  1504                           ;SETLCD.c: 10:     PORTB = 0;
  1505  0503  0186               	clrf	6	;volatile
  1506  0504                     l1361:
  1507                           
  1508                           ;SETLCD.c: 11:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1509  0504  3041               	movlw	65
  1510  0505  00F4               	movwf	??_LCD_IN+1
  1511  0506  30EE               	movlw	238
  1512  0507  00F3               	movwf	??_LCD_IN
  1513  0508                     u397:
  1514  0508  0BF3               	decfsz	??_LCD_IN,f
  1515  0509  2D08               	goto	u397
  1516  050A  0BF4               	decfsz	??_LCD_IN+1,f
  1517  050B  2D08               	goto	u397
  1518  050C  0000               	nop
  1519  050D                     l1363:
  1520                           
  1521                           ;SETLCD.c: 12:     LCD_ON(0x02);
  1522  050D  3002               	movlw	2
  1523  050E  120A  118A  244C  120A  118A  	fcall	_LCD_ON
  1524  0513                     l1365:
  1525                           
  1526                           ;SETLCD.c: 13:     LCD_ON(0x38);
  1527  0513  3038               	movlw	56
  1528  0514  120A  118A  244C  120A  118A  	fcall	_LCD_ON
  1529  0519                     l1367:
  1530                           
  1531                           ;SETLCD.c: 14:     LCD_ON(0x0C);
  1532  0519  300C               	movlw	12
  1533  051A  120A  118A  244C  120A  118A  	fcall	_LCD_ON
  1534  051F                     l1369:
  1535                           
  1536                           ;SETLCD.c: 15:     LCD_ON(0x06);
  1537  051F  3006               	movlw	6
  1538  0520  120A  118A  244C  120A  118A  	fcall	_LCD_ON
  1539  0525                     l187:
  1540  0525  0008               	return
  1541  0526                     __end_of_LCD_IN:
  1542                           
  1543                           	psect	text7
  1544  03FA                     __ptext7:	
  1545 ;; *************** function _LCD_CL *****************
  1546 ;; Defined at:
  1547 ;;		line 34 in file "SETLCD.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, pclath, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    2
  1568 ;; This function calls:
  1569 ;;		_LCD_ON
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function _LCD_CL
  1577  03FA                     _LCD_CL:
  1578  03FA                     l1371:	
  1579                           ;incstack = 0
  1580                           ; Regs used in _LCD_CL: [wreg+status,2+status,0+pclath+cstack]
  1581                           
  1582                           
  1583                           ;SETLCD.c: 35:     LCD_ON(0x01);
  1584  03FA  3001               	movlw	1
  1585  03FB  120A  118A  244C  120A  118A  	fcall	_LCD_ON
  1586  0400                     l199:
  1587  0400  0008               	return
  1588  0401                     __end_of_LCD_CL:
  1589                           
  1590                           	psect	text8
  1591  0686                     __ptext8:	
  1592 ;; *************** function _LCDVAL1 *****************
  1593 ;; Defined at:
  1594 ;;		line 59 in file "SETLCD.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  x               2    0[BANK0 ] int 
  1597 ;;  Z               2    2[BANK0 ] int 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         0       4       0       0       0
  1610 ;;      Locals:         0       0       0       0       0
  1611 ;;      Temps:          1       0       0       0       0
  1612 ;;      Totals:         1       4       0       0       0
  1613 ;;Total ram usage:        5 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    4
  1616 ;; This function calls:
  1617 ;;		_LCD_POINT
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _LCDVAL1
  1625  0686                     _LCDVAL1:
  1626  0686                     l1373:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _LCDVAL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1629                           
  1630                           
  1631                           ;SETLCD.c: 60:     switch (Z){
  1632  0686  2FB9               	goto	l1411
  1633  0687                     l1375:
  1634                           
  1635                           ;SETLCD.c: 62:             LCD_POINT(x,2,"0");
  1636  0687  0836               	movf	LCDVAL1@x+1,w
  1637  0688  00F5               	movwf	LCD_POINT@x+1
  1638  0689  0835               	movf	LCDVAL1@x,w
  1639  068A  00F4               	movwf	LCD_POINT@x
  1640  068B  3002               	movlw	2
  1641  068C  00F6               	movwf	LCD_POINT@y
  1642  068D  3000               	movlw	0
  1643  068E  00F7               	movwf	LCD_POINT@y+1
  1644  068F  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1645  0690  00FB               	movwf	??_LCDVAL1
  1646  0691  087B               	movf	??_LCDVAL1,w
  1647  0692  00F8               	movwf	LCD_POINT@D
  1648  0693  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1649                           
  1650                           ;SETLCD.c: 63:             break;
  1651  0698  2FF2               	goto	l235
  1652  0699                     l1377:
  1653                           
  1654                           ;SETLCD.c: 65:             LCD_POINT(x,2,"1");
  1655  0699  0836               	movf	LCDVAL1@x+1,w
  1656  069A  00F5               	movwf	LCD_POINT@x+1
  1657  069B  0835               	movf	LCDVAL1@x,w
  1658  069C  00F4               	movwf	LCD_POINT@x
  1659  069D  3002               	movlw	2
  1660  069E  00F6               	movwf	LCD_POINT@y
  1661  069F  3000               	movlw	0
  1662  06A0  00F7               	movwf	LCD_POINT@y+1
  1663  06A1  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1664  06A2  00FB               	movwf	??_LCDVAL1
  1665  06A3  087B               	movf	??_LCDVAL1,w
  1666  06A4  00F8               	movwf	LCD_POINT@D
  1667  06A5  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1668                           
  1669                           ;SETLCD.c: 66:             break;
  1670  06AA  2FF2               	goto	l235
  1671  06AB                     l1379:
  1672                           
  1673                           ;SETLCD.c: 68:             LCD_POINT(x,2,"2");
  1674  06AB  0836               	movf	LCDVAL1@x+1,w
  1675  06AC  00F5               	movwf	LCD_POINT@x+1
  1676  06AD  0835               	movf	LCDVAL1@x,w
  1677  06AE  00F4               	movwf	LCD_POINT@x
  1678  06AF  3002               	movlw	2
  1679  06B0  00F6               	movwf	LCD_POINT@y
  1680  06B1  3000               	movlw	0
  1681  06B2  00F7               	movwf	LCD_POINT@y+1
  1682  06B3  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1683  06B4  00FB               	movwf	??_LCDVAL1
  1684  06B5  087B               	movf	??_LCDVAL1,w
  1685  06B6  00F8               	movwf	LCD_POINT@D
  1686  06B7  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1687                           
  1688                           ;SETLCD.c: 69:             break;
  1689  06BC  2FF2               	goto	l235
  1690  06BD                     l1381:
  1691                           
  1692                           ;SETLCD.c: 71:             LCD_POINT(x,2,"3");
  1693  06BD  0836               	movf	LCDVAL1@x+1,w
  1694  06BE  00F5               	movwf	LCD_POINT@x+1
  1695  06BF  0835               	movf	LCDVAL1@x,w
  1696  06C0  00F4               	movwf	LCD_POINT@x
  1697  06C1  3002               	movlw	2
  1698  06C2  00F6               	movwf	LCD_POINT@y
  1699  06C3  3000               	movlw	0
  1700  06C4  00F7               	movwf	LCD_POINT@y+1
  1701  06C5  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1702  06C6  00FB               	movwf	??_LCDVAL1
  1703  06C7  087B               	movf	??_LCDVAL1,w
  1704  06C8  00F8               	movwf	LCD_POINT@D
  1705  06C9  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1706                           
  1707                           ;SETLCD.c: 72:             break;
  1708  06CE  2FF2               	goto	l235
  1709  06CF                     l1383:
  1710                           
  1711                           ;SETLCD.c: 74:             LCD_POINT(x,2,"4");
  1712  06CF  0836               	movf	LCDVAL1@x+1,w
  1713  06D0  00F5               	movwf	LCD_POINT@x+1
  1714  06D1  0835               	movf	LCDVAL1@x,w
  1715  06D2  00F4               	movwf	LCD_POINT@x
  1716  06D3  3002               	movlw	2
  1717  06D4  00F6               	movwf	LCD_POINT@y
  1718  06D5  3000               	movlw	0
  1719  06D6  00F7               	movwf	LCD_POINT@y+1
  1720  06D7  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1721  06D8  00FB               	movwf	??_LCDVAL1
  1722  06D9  087B               	movf	??_LCDVAL1,w
  1723  06DA  00F8               	movwf	LCD_POINT@D
  1724  06DB  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1725                           
  1726                           ;SETLCD.c: 75:             break;
  1727  06E0  2FF2               	goto	l235
  1728  06E1                     l1385:
  1729                           
  1730                           ;SETLCD.c: 77:             LCD_POINT(x,2,"5");
  1731  06E1  0836               	movf	LCDVAL1@x+1,w
  1732  06E2  00F5               	movwf	LCD_POINT@x+1
  1733  06E3  0835               	movf	LCDVAL1@x,w
  1734  06E4  00F4               	movwf	LCD_POINT@x
  1735  06E5  3002               	movlw	2
  1736  06E6  00F6               	movwf	LCD_POINT@y
  1737  06E7  3000               	movlw	0
  1738  06E8  00F7               	movwf	LCD_POINT@y+1
  1739  06E9  301B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1740  06EA  00FB               	movwf	??_LCDVAL1
  1741  06EB  087B               	movf	??_LCDVAL1,w
  1742  06EC  00F8               	movwf	LCD_POINT@D
  1743  06ED  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1744                           
  1745                           ;SETLCD.c: 78:             break;
  1746  06F2  2FF2               	goto	l235
  1747  06F3                     l1387:
  1748                           
  1749                           ;SETLCD.c: 80:             LCD_POINT(x,2,"6");
  1750  06F3  0836               	movf	LCDVAL1@x+1,w
  1751  06F4  00F5               	movwf	LCD_POINT@x+1
  1752  06F5  0835               	movf	LCDVAL1@x,w
  1753  06F6  00F4               	movwf	LCD_POINT@x
  1754  06F7  3002               	movlw	2
  1755  06F8  00F6               	movwf	LCD_POINT@y
  1756  06F9  3000               	movlw	0
  1757  06FA  00F7               	movwf	LCD_POINT@y+1
  1758  06FB  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1759  06FC  00FB               	movwf	??_LCDVAL1
  1760  06FD  087B               	movf	??_LCDVAL1,w
  1761  06FE  00F8               	movwf	LCD_POINT@D
  1762  06FF  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1763                           
  1764                           ;SETLCD.c: 81:             break;
  1765  0704  2FF2               	goto	l235
  1766  0705                     l1389:
  1767                           
  1768                           ;SETLCD.c: 83:             LCD_POINT(x,2,"7");
  1769  0705  0836               	movf	LCDVAL1@x+1,w
  1770  0706  00F5               	movwf	LCD_POINT@x+1
  1771  0707  0835               	movf	LCDVAL1@x,w
  1772  0708  00F4               	movwf	LCD_POINT@x
  1773  0709  3002               	movlw	2
  1774  070A  00F6               	movwf	LCD_POINT@y
  1775  070B  3000               	movlw	0
  1776  070C  00F7               	movwf	LCD_POINT@y+1
  1777  070D  301F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1778  070E  00FB               	movwf	??_LCDVAL1
  1779  070F  087B               	movf	??_LCDVAL1,w
  1780  0710  00F8               	movwf	LCD_POINT@D
  1781  0711  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1782                           
  1783                           ;SETLCD.c: 84:             break;
  1784  0716  2FF2               	goto	l235
  1785  0717                     l1391:
  1786                           
  1787                           ;SETLCD.c: 86:             LCD_POINT(x,2,"8");
  1788  0717  0836               	movf	LCDVAL1@x+1,w
  1789  0718  00F5               	movwf	LCD_POINT@x+1
  1790  0719  0835               	movf	LCDVAL1@x,w
  1791  071A  00F4               	movwf	LCD_POINT@x
  1792  071B  3002               	movlw	2
  1793  071C  00F6               	movwf	LCD_POINT@y
  1794  071D  3000               	movlw	0
  1795  071E  00F7               	movwf	LCD_POINT@y+1
  1796  071F  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1797  0720  00FB               	movwf	??_LCDVAL1
  1798  0721  087B               	movf	??_LCDVAL1,w
  1799  0722  00F8               	movwf	LCD_POINT@D
  1800  0723  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1801                           
  1802                           ;SETLCD.c: 87:             break;
  1803  0728  2FF2               	goto	l235
  1804  0729                     l1393:
  1805                           
  1806                           ;SETLCD.c: 89:             LCD_POINT(x,2,"9");
  1807  0729  0836               	movf	LCDVAL1@x+1,w
  1808  072A  00F5               	movwf	LCD_POINT@x+1
  1809  072B  0835               	movf	LCDVAL1@x,w
  1810  072C  00F4               	movwf	LCD_POINT@x
  1811  072D  3002               	movlw	2
  1812  072E  00F6               	movwf	LCD_POINT@y
  1813  072F  3000               	movlw	0
  1814  0730  00F7               	movwf	LCD_POINT@y+1
  1815  0731  3023               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1816  0732  00FB               	movwf	??_LCDVAL1
  1817  0733  087B               	movf	??_LCDVAL1,w
  1818  0734  00F8               	movwf	LCD_POINT@D
  1819  0735  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1820                           
  1821                           ;SETLCD.c: 90:             break;
  1822  073A  2FF2               	goto	l235
  1823  073B                     l1395:
  1824                           
  1825                           ;SETLCD.c: 92:             LCD_POINT (x,2,"A");
  1826  073B  0836               	movf	LCDVAL1@x+1,w
  1827  073C  00F5               	movwf	LCD_POINT@x+1
  1828  073D  0835               	movf	LCDVAL1@x,w
  1829  073E  00F4               	movwf	LCD_POINT@x
  1830  073F  3002               	movlw	2
  1831  0740  00F6               	movwf	LCD_POINT@y
  1832  0741  3000               	movlw	0
  1833  0742  00F7               	movwf	LCD_POINT@y+1
  1834  0743  3025               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1835  0744  00FB               	movwf	??_LCDVAL1
  1836  0745  087B               	movf	??_LCDVAL1,w
  1837  0746  00F8               	movwf	LCD_POINT@D
  1838  0747  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1839                           
  1840                           ;SETLCD.c: 93:             break;
  1841  074C  2FF2               	goto	l235
  1842  074D                     l1397:
  1843                           
  1844                           ;SETLCD.c: 95:             LCD_POINT (x,2,"B");
  1845  074D  0836               	movf	LCDVAL1@x+1,w
  1846  074E  00F5               	movwf	LCD_POINT@x+1
  1847  074F  0835               	movf	LCDVAL1@x,w
  1848  0750  00F4               	movwf	LCD_POINT@x
  1849  0751  3002               	movlw	2
  1850  0752  00F6               	movwf	LCD_POINT@y
  1851  0753  3000               	movlw	0
  1852  0754  00F7               	movwf	LCD_POINT@y+1
  1853  0755  3027               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1854  0756  00FB               	movwf	??_LCDVAL1
  1855  0757  087B               	movf	??_LCDVAL1,w
  1856  0758  00F8               	movwf	LCD_POINT@D
  1857  0759  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1858                           
  1859                           ;SETLCD.c: 96:             break;
  1860  075E  2FF2               	goto	l235
  1861  075F                     l1399:
  1862                           
  1863                           ;SETLCD.c: 98:             LCD_POINT (x,2,"C");
  1864  075F  0836               	movf	LCDVAL1@x+1,w
  1865  0760  00F5               	movwf	LCD_POINT@x+1
  1866  0761  0835               	movf	LCDVAL1@x,w
  1867  0762  00F4               	movwf	LCD_POINT@x
  1868  0763  3002               	movlw	2
  1869  0764  00F6               	movwf	LCD_POINT@y
  1870  0765  3000               	movlw	0
  1871  0766  00F7               	movwf	LCD_POINT@y+1
  1872  0767  3029               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1873  0768  00FB               	movwf	??_LCDVAL1
  1874  0769  087B               	movf	??_LCDVAL1,w
  1875  076A  00F8               	movwf	LCD_POINT@D
  1876  076B  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1877                           
  1878                           ;SETLCD.c: 99:             break;
  1879  0770  2FF2               	goto	l235
  1880  0771                     l1401:
  1881                           
  1882                           ;SETLCD.c: 101:             LCD_POINT (x,2,"D");
  1883  0771  0836               	movf	LCDVAL1@x+1,w
  1884  0772  00F5               	movwf	LCD_POINT@x+1
  1885  0773  0835               	movf	LCDVAL1@x,w
  1886  0774  00F4               	movwf	LCD_POINT@x
  1887  0775  3002               	movlw	2
  1888  0776  00F6               	movwf	LCD_POINT@y
  1889  0777  3000               	movlw	0
  1890  0778  00F7               	movwf	LCD_POINT@y+1
  1891  0779  302B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1892  077A  00FB               	movwf	??_LCDVAL1
  1893  077B  087B               	movf	??_LCDVAL1,w
  1894  077C  00F8               	movwf	LCD_POINT@D
  1895  077D  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1896                           
  1897                           ;SETLCD.c: 102:             break;
  1898  0782  2FF2               	goto	l235
  1899  0783                     l1403:
  1900                           
  1901                           ;SETLCD.c: 104:             LCD_POINT (x,2,"E");
  1902  0783  0836               	movf	LCDVAL1@x+1,w
  1903  0784  00F5               	movwf	LCD_POINT@x+1
  1904  0785  0835               	movf	LCDVAL1@x,w
  1905  0786  00F4               	movwf	LCD_POINT@x
  1906  0787  3002               	movlw	2
  1907  0788  00F6               	movwf	LCD_POINT@y
  1908  0789  3000               	movlw	0
  1909  078A  00F7               	movwf	LCD_POINT@y+1
  1910  078B  302D               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1911  078C  00FB               	movwf	??_LCDVAL1
  1912  078D  087B               	movf	??_LCDVAL1,w
  1913  078E  00F8               	movwf	LCD_POINT@D
  1914  078F  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1915                           
  1916                           ;SETLCD.c: 105:             break;
  1917  0794  2FF2               	goto	l235
  1918  0795                     l1405:
  1919                           
  1920                           ;SETLCD.c: 107:             LCD_POINT (x,2,"F");
  1921  0795  0836               	movf	LCDVAL1@x+1,w
  1922  0796  00F5               	movwf	LCD_POINT@x+1
  1923  0797  0835               	movf	LCDVAL1@x,w
  1924  0798  00F4               	movwf	LCD_POINT@x
  1925  0799  3002               	movlw	2
  1926  079A  00F6               	movwf	LCD_POINT@y
  1927  079B  3000               	movlw	0
  1928  079C  00F7               	movwf	LCD_POINT@y+1
  1929  079D  302F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1930  079E  00FB               	movwf	??_LCDVAL1
  1931  079F  087B               	movf	??_LCDVAL1,w
  1932  07A0  00F8               	movwf	LCD_POINT@D
  1933  07A1  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1934                           
  1935                           ;SETLCD.c: 108:             break;
  1936  07A6  2FF2               	goto	l235
  1937  07A7                     l1407:
  1938                           
  1939                           ;SETLCD.c: 110:             LCD_POINT(x,2,".");
  1940  07A7  0836               	movf	LCDVAL1@x+1,w
  1941  07A8  00F5               	movwf	LCD_POINT@x+1
  1942  07A9  0835               	movf	LCDVAL1@x,w
  1943  07AA  00F4               	movwf	LCD_POINT@x
  1944  07AB  3002               	movlw	2
  1945  07AC  00F6               	movwf	LCD_POINT@y
  1946  07AD  3000               	movlw	0
  1947  07AE  00F7               	movwf	LCD_POINT@y+1
  1948  07AF  300F               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1949  07B0  00FB               	movwf	??_LCDVAL1
  1950  07B1  087B               	movf	??_LCDVAL1,w
  1951  07B2  00F8               	movwf	LCD_POINT@D
  1952  07B3  120A  118A  24D3  120A  118A  	fcall	_LCD_POINT
  1953                           
  1954                           ;SETLCD.c: 111:             break;
  1955  07B8  2FF2               	goto	l235
  1956  07B9                     l1411:
  1957                           
  1958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1959                           ; Switch size 1, requested type "simple"
  1960                           ; Number of cases is 1, Range of values is 0 to 0
  1961                           ; switch strategies available:
  1962                           ; Name         Instructions Cycles
  1963                           ; simple_byte            4     3 (average)
  1964                           ; direct_byte           11     8 (fixed)
  1965                           ; jumptable            260     6 (fixed)
  1966                           ;	Chosen strategy is simple_byte
  1967  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1968  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1969  07BB  0838               	movf	LCDVAL1@Z+1,w
  1970  07BC  3A00               	xorlw	0	; case 0
  1971  07BD  1903               	skipnz
  1972  07BE  2FC0               	goto	l1561
  1973  07BF  2FA7               	goto	l1407
  1974  07C0                     l1561:
  1975                           
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 16, Range of values is 0 to 15
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte           49    25 (average)
  1981                           ; direct_byte           56     8 (fixed)
  1982                           ; jumptable            260     6 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984  07C0  0837               	movf	LCDVAL1@Z,w
  1985  07C1  3A00               	xorlw	0	; case 0
  1986  07C2  1903               	skipnz
  1987  07C3  2E87               	goto	l1375
  1988  07C4  3A01               	xorlw	1	; case 1
  1989  07C5  1903               	skipnz
  1990  07C6  2E99               	goto	l1377
  1991  07C7  3A03               	xorlw	3	; case 2
  1992  07C8  1903               	skipnz
  1993  07C9  2EAB               	goto	l1379
  1994  07CA  3A01               	xorlw	1	; case 3
  1995  07CB  1903               	skipnz
  1996  07CC  2EBD               	goto	l1381
  1997  07CD  3A07               	xorlw	7	; case 4
  1998  07CE  1903               	skipnz
  1999  07CF  2ECF               	goto	l1383
  2000  07D0  3A01               	xorlw	1	; case 5
  2001  07D1  1903               	skipnz
  2002  07D2  2EE1               	goto	l1385
  2003  07D3  3A03               	xorlw	3	; case 6
  2004  07D4  1903               	skipnz
  2005  07D5  2EF3               	goto	l1387
  2006  07D6  3A01               	xorlw	1	; case 7
  2007  07D7  1903               	skipnz
  2008  07D8  2F05               	goto	l1389
  2009  07D9  3A0F               	xorlw	15	; case 8
  2010  07DA  1903               	skipnz
  2011  07DB  2F17               	goto	l1391
  2012  07DC  3A01               	xorlw	1	; case 9
  2013  07DD  1903               	skipnz
  2014  07DE  2F29               	goto	l1393
  2015  07DF  3A03               	xorlw	3	; case 10
  2016  07E0  1903               	skipnz
  2017  07E1  2F3B               	goto	l1395
  2018  07E2  3A01               	xorlw	1	; case 11
  2019  07E3  1903               	skipnz
  2020  07E4  2F4D               	goto	l1397
  2021  07E5  3A07               	xorlw	7	; case 12
  2022  07E6  1903               	skipnz
  2023  07E7  2F5F               	goto	l1399
  2024  07E8  3A01               	xorlw	1	; case 13
  2025  07E9  1903               	skipnz
  2026  07EA  2F71               	goto	l1401
  2027  07EB  3A03               	xorlw	3	; case 14
  2028  07EC  1903               	skipnz
  2029  07ED  2F83               	goto	l1403
  2030  07EE  3A01               	xorlw	1	; case 15
  2031  07EF  1903               	skipnz
  2032  07F0  2F95               	goto	l1405
  2033  07F1  2FA7               	goto	l1407
  2034  07F2                     l235:
  2035  07F2  0008               	return
  2036  07F3                     __end_of_LCDVAL1:
  2037                           
  2038                           	psect	text9
  2039  04D3                     __ptext9:	
  2040 ;; *************** function _LCD_POINT *****************
  2041 ;; Defined at:
  2042 ;;		line 43 in file "SETLCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  x               2    4[COMMON] int 
  2045 ;;  y               2    6[COMMON] int 
  2046 ;;  D               1    8[COMMON] PTR unsigned char 
  2047 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2048 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2049 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2050 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2051 ;;		 -> STR_2(2), STR_1(14), 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  LOC             1   10[COMMON] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         5       0       0       0       0
  2064 ;;      Locals:         1       0       0       0       0
  2065 ;;      Temps:          1       0       0       0       0
  2066 ;;      Totals:         7       0       0       0       0
  2067 ;;Total ram usage:        7 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    3
  2070 ;; This function calls:
  2071 ;;		_LCD_ON
  2072 ;;		_LCD_P
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;;		_LCDVAL1
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _LCD_POINT
  2081  04D3                     _LCD_POINT:
  2082  04D3                     l1233:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _LCD_POINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2085                           
  2086                           
  2087                           ;SETLCD.c: 44:     char LOC;;SETLCD.c: 45:     switch (y){
  2088  04D3  2CE0               	goto	l1243
  2089  04D4                     l1235:
  2090                           
  2091                           ;SETLCD.c: 47:             LOC = 0x80 + x;
  2092  04D4  0874               	movf	LCD_POINT@x,w
  2093  04D5  3E80               	addlw	128
  2094  04D6  00F9               	movwf	??_LCD_POINT
  2095  04D7  0879               	movf	??_LCD_POINT,w
  2096  04D8  00FA               	movwf	LCD_POINT@LOC
  2097                           
  2098                           ;SETLCD.c: 48:             break;
  2099  04D9  2CED               	goto	l1245
  2100  04DA                     l1237:
  2101                           
  2102                           ;SETLCD.c: 50:             LOC = 0xC0 + x;
  2103  04DA  0874               	movf	LCD_POINT@x,w
  2104  04DB  3EC0               	addlw	192
  2105  04DC  00F9               	movwf	??_LCD_POINT
  2106  04DD  0879               	movf	??_LCD_POINT,w
  2107  04DE  00FA               	movwf	LCD_POINT@LOC
  2108                           
  2109                           ;SETLCD.c: 51:             break;
  2110  04DF  2CED               	goto	l1245
  2111  04E0                     l1243:
  2112                           
  2113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2114                           ; Switch size 1, requested type "simple"
  2115                           ; Number of cases is 1, Range of values is 0 to 0
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte            4     3 (average)
  2119                           ; direct_byte           11     8 (fixed)
  2120                           ; jumptable            260     6 (fixed)
  2121                           ;	Chosen strategy is simple_byte
  2122  04E0  0877               	movf	LCD_POINT@y+1,w
  2123  04E1  3A00               	xorlw	0	; case 0
  2124  04E2  1903               	skipnz
  2125  04E3  2CE5               	goto	l1563
  2126  04E4  2CD4               	goto	l1235
  2127  04E5                     l1563:
  2128                           
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 2, Range of values is 1 to 2
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            7     4 (average)
  2134                           ; direct_byte           17    11 (fixed)
  2135                           ; jumptable            263     9 (fixed)
  2136                           ;	Chosen strategy is simple_byte
  2137  04E5  0876               	movf	LCD_POINT@y,w
  2138  04E6  3A01               	xorlw	1	; case 1
  2139  04E7  1903               	skipnz
  2140  04E8  2CD4               	goto	l1235
  2141  04E9  3A03               	xorlw	3	; case 2
  2142  04EA  1903               	skipnz
  2143  04EB  2CDA               	goto	l1237
  2144  04EC  2CD4               	goto	l1235
  2145  04ED                     l1245:
  2146                           
  2147                           ;SETLCD.c: 56:     LCD_ON(LOC);
  2148  04ED  087A               	movf	LCD_POINT@LOC,w
  2149  04EE  120A  118A  244C  120A  118A  	fcall	_LCD_ON
  2150  04F3                     l1247:
  2151                           
  2152                           ;SETLCD.c: 57:     LCD_P(D);
  2153  04F3  0878               	movf	LCD_POINT@D,w
  2154  04F4  120A  118A  248F  120A  118A  	fcall	_LCD_P
  2155  04F9                     l213:
  2156  04F9  0008               	return
  2157  04FA                     __end_of_LCD_POINT:
  2158                           
  2159                           	psect	text10
  2160  048F                     __ptext10:	
  2161 ;; *************** function _LCD_P *****************
  2162 ;; Defined at:
  2163 ;;		line 37 in file "SETLCD.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  D               1    wreg     PTR unsigned char 
  2166 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2167 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2168 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2169 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2170 ;;		 -> STR_2(2), STR_1(14), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  D               1    3[COMMON] PTR unsigned char 
  2173 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2174 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2175 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2176 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2177 ;;		 -> STR_2(2), STR_1(14), 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         1       0       0       0       0
  2189 ;;      Temps:          1       0       0       0       0
  2190 ;;      Totals:         2       0       0       0       0
  2191 ;;Total ram usage:        2 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		_LCD_PLAY
  2196 ;; This function is called by:
  2197 ;;		_LCD_POINT
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _LCD_P
  2203  048F                     _LCD_P:
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _LCD_P: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2207                           ;LCD_P@D stored from wreg
  2208  048F  00F3               	movwf	LCD_P@D
  2209  0490                     l1225:
  2210                           
  2211                           ;SETLCD.c: 38:     while (*D){
  2212  0490  2CA1               	goto	l1231
  2213  0491                     l1227:
  2214                           
  2215                           ;SETLCD.c: 39:         LCD_PLAY(*D);
  2216  0491  0873               	movf	LCD_P@D,w
  2217  0492  0084               	movwf	4
  2218  0493  120A  118A  2003  120A  118A  	fcall	stringdir
  2219  0498  120A  118A  2426  120A  118A  	fcall	_LCD_PLAY
  2220  049D                     l1229:
  2221                           
  2222                           ;SETLCD.c: 40:         D++;
  2223  049D  3001               	movlw	1
  2224  049E  00F2               	movwf	??_LCD_P
  2225  049F  0872               	movf	??_LCD_P,w
  2226  04A0  07F3               	addwf	LCD_P@D,f
  2227  04A1                     l1231:
  2228                           
  2229                           ;SETLCD.c: 38:     while (*D){
  2230  04A1  0873               	movf	LCD_P@D,w
  2231  04A2  0084               	movwf	4
  2232  04A3  120A  118A  2003  120A  118A  	fcall	stringdir
  2233  04A8  3A00               	xorlw	0
  2234  04A9  1D03               	skipz
  2235  04AA  2CAC               	goto	u201
  2236  04AB  2CAD               	goto	u200
  2237  04AC                     u201:
  2238  04AC  2C91               	goto	l1227
  2239  04AD                     u200:
  2240  04AD                     l205:
  2241  04AD  0008               	return
  2242  04AE                     __end_of_LCD_P:
  2243                           
  2244                           	psect	text11
  2245  0426                     __ptext11:	
  2246 ;; *************** function _LCD_PLAY *****************
  2247 ;; Defined at:
  2248 ;;		line 28 in file "SETLCD.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  D               1    wreg     unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  D               1    1[COMMON] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0
  2264 ;;      Temps:          1       0       0       0       0
  2265 ;;      Totals:         2       0       0       0       0
  2266 ;;Total ram usage:        2 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		_LCD_TIM
  2271 ;; This function is called by:
  2272 ;;		_LCD_P
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _LCD_PLAY
  2278  0426                     _LCD_PLAY:
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in _LCD_PLAY: [wreg+status,2+status,0+pclath+cstack]
  2282                           ;LCD_PLAY@D stored from wreg
  2283  0426  00F1               	movwf	LCD_PLAY@D
  2284  0427                     l1209:
  2285                           
  2286                           ;SETLCD.c: 29:     PORTDbits.RD6=1;
  2287  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0429  1708               	bsf	8,6	;volatile
  2290  042A                     l1211:
  2291                           
  2292                           ;SETLCD.c: 30:     PORTB=D;
  2293  042A  0871               	movf	LCD_PLAY@D,w
  2294  042B  0086               	movwf	6	;volatile
  2295  042C                     l1213:
  2296                           
  2297                           ;SETLCD.c: 31:     LCD_TIM();
  2298  042C  120A  118A  2419  120A  118A  	fcall	_LCD_TIM
  2299  0431                     l1215:
  2300                           
  2301                           ;SETLCD.c: 32:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2302  0431  3010               	movlw	16
  2303  0432  00F0               	movwf	??_LCD_PLAY
  2304  0433                     u407:
  2305  0433  0BF0               	decfsz	??_LCD_PLAY,f
  2306  0434  2C33               	goto	u407
  2307  0435  0000               	nop
  2308  0436                     l196:
  2309  0436  0008               	return
  2310  0437                     __end_of_LCD_PLAY:
  2311                           
  2312                           	psect	text12
  2313  044C                     __ptext12:	
  2314 ;; *************** function _LCD_ON *****************
  2315 ;; Defined at:
  2316 ;;		line 17 in file "SETLCD.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  C               1    wreg     unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  C               1    2[COMMON] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, pclath, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       0       0       0       0
  2331 ;;      Locals:         1       0       0       0       0
  2332 ;;      Temps:          2       0       0       0       0
  2333 ;;      Totals:         3       0       0       0       0
  2334 ;;Total ram usage:        3 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    1
  2337 ;; This function calls:
  2338 ;;		_LCD_TIM
  2339 ;; This function is called by:
  2340 ;;		_LCD_IN
  2341 ;;		_LCD_CL
  2342 ;;		_LCD_POINT
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _LCD_ON
  2348  044C                     _LCD_ON:
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  2352                           ;LCD_ON@C stored from wreg
  2353  044C  00F2               	movwf	LCD_ON@C
  2354  044D                     l1217:
  2355                           
  2356                           ;SETLCD.c: 18:     PORTDbits.RD6=0;
  2357  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2358  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2359  044F  1308               	bcf	8,6	;volatile
  2360  0450                     l1219:
  2361                           
  2362                           ;SETLCD.c: 19:     PORTB=C;
  2363  0450  0872               	movf	LCD_ON@C,w
  2364  0451  0086               	movwf	6	;volatile
  2365  0452                     l1221:
  2366                           
  2367                           ;SETLCD.c: 20:     LCD_TIM();
  2368  0452  120A  118A  2419  120A  118A  	fcall	_LCD_TIM
  2369  0457                     l1223:
  2370                           
  2371                           ;SETLCD.c: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2372  0457  3003               	movlw	3
  2373  0458  00F1               	movwf	??_LCD_ON+1
  2374  0459  3097               	movlw	151
  2375  045A  00F0               	movwf	??_LCD_ON
  2376  045B                     u417:
  2377  045B  0BF0               	decfsz	??_LCD_ON,f
  2378  045C  2C5B               	goto	u417
  2379  045D  0BF1               	decfsz	??_LCD_ON+1,f
  2380  045E  2C5B               	goto	u417
  2381  045F  2C60               	nop2
  2382  0460                     l190:
  2383  0460  0008               	return
  2384  0461                     __end_of_LCD_ON:
  2385                           
  2386                           	psect	text13
  2387  0419                     __ptext13:	
  2388 ;; *************** function _LCD_TIM *****************
  2389 ;; Defined at:
  2390 ;;		line 23 in file "SETLCD.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		None
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0
  2407 ;;      Totals:         0       0       0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_LCD_ON
  2414 ;;		_LCD_PLAY
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _LCD_TIM
  2420  0419                     _LCD_TIM:
  2421  0419                     l1207:	
  2422                           ;incstack = 0
  2423                           ; Regs used in _LCD_TIM: []
  2424                           
  2425                           
  2426                           ;SETLCD.c: 24:     PORTDbits.RD7 = 1;
  2427  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2428  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2429  041B  1788               	bsf	8,7	;volatile
  2430                           
  2431                           ;SETLCD.c: 25:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2432  041C  2C1D               	nop2	;2 cycle nop
  2433  041D  2C1E               	nop2	;2 cycle nop
  2434  041E  0000               	nop
  2435                           
  2436                           ;SETLCD.c: 26:     PORTDbits.RD7 = 0;
  2437  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0421  1388               	bcf	8,7	;volatile
  2440                           
  2441                           ;SETLCD.c: 27:     _delay((unsigned long)((5)*(4000000/4000000.0)));}
  2442  0422  2C23               	nop2	;2 cycle nop
  2443  0423  2C24               	nop2	;2 cycle nop
  2444  0424  0000               	nop
  2445  0425                     l193:
  2446  0425  0008               	return
  2447  0426                     __end_of_LCD_TIM:
  2448                           
  2449                           	psect	text14
  2450  0526                     __ptext14:	
  2451 ;; *************** function _CONVET_cont *****************
  2452 ;; Defined at:
  2453 ;;		line 134 in file "master.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, pclath, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2467 ;;      Params:         0       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0
  2469 ;;      Temps:          0       4       0       0       0
  2470 ;;      Totals:         0       4       0       0       0
  2471 ;;Total ram usage:        4 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    1
  2474 ;; This function calls:
  2475 ;;		___awdiv
  2476 ;;		___bmul
  2477 ;;		___wmul
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _CONVET_cont
  2485  0526                     _CONVET_cont:
  2486  0526                     l1425:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _CONVET_cont: [wreg+status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;master.c: 135:     cont_1=(cont/100);
  2492  0526  3064               	movlw	100
  2493  0527  00F6               	movwf	___awdiv@divisor
  2494  0528  3000               	movlw	0
  2495  0529  00F7               	movwf	___awdiv@divisor+1
  2496  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2497  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2498  052C  0826               	movf	_cont,w
  2499  052D  00B9               	movwf	??_CONVET_cont
  2500  052E  01BA               	clrf	??_CONVET_cont+1
  2501  052F  0839               	movf	??_CONVET_cont,w
  2502  0530  00F8               	movwf	___awdiv@dividend
  2503  0531  083A               	movf	??_CONVET_cont+1,w
  2504  0532  00F9               	movwf	___awdiv@dividend+1
  2505  0533  120A  118A  2585  120A  118A  	fcall	___awdiv
  2506  0538  0876               	movf	?___awdiv,w
  2507  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2508  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2509  053B  00BB               	movwf	??_CONVET_cont+2
  2510  053C  083B               	movf	??_CONVET_cont+2,w
  2511  053D  00A9               	movwf	_cont_1
  2512                           
  2513                           ;master.c: 136:     cont_2=((cont)-(cont_1*100))/10;
  2514  053E  300A               	movlw	10
  2515  053F  00F6               	movwf	___awdiv@divisor
  2516  0540  3000               	movlw	0
  2517  0541  00F7               	movwf	___awdiv@divisor+1
  2518  0542  0829               	movf	_cont_1,w
  2519  0543  00B9               	movwf	??_CONVET_cont
  2520  0544  01BA               	clrf	??_CONVET_cont+1
  2521  0545  0839               	movf	??_CONVET_cont,w
  2522  0546  00F0               	movwf	___wmul@multiplier
  2523  0547  083A               	movf	??_CONVET_cont+1,w
  2524  0548  00F1               	movwf	___wmul@multiplier+1
  2525  0549  309C               	movlw	156
  2526  054A  00F2               	movwf	___wmul@multiplicand
  2527  054B  30FF               	movlw	255
  2528  054C  00F3               	movwf	___wmul@multiplicand+1
  2529  054D  120A  118A  24AE  120A  118A  	fcall	___wmul
  2530  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0554  0826               	movf	_cont,w
  2533  0555  0770               	addwf	?___wmul,w
  2534  0556  00F8               	movwf	___awdiv@dividend
  2535  0557  0871               	movf	?___wmul+1,w
  2536  0558  1803               	skipnc
  2537  0559  0A71               	incf	?___wmul+1,w
  2538  055A  00F9               	movwf	___awdiv@dividend+1
  2539  055B  120A  118A  2585  120A  118A  	fcall	___awdiv
  2540  0560  0876               	movf	?___awdiv,w
  2541  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0563  00BB               	movwf	??_CONVET_cont+2
  2544  0564  083B               	movf	??_CONVET_cont+2,w
  2545  0565  00A8               	movwf	_cont_2
  2546                           
  2547                           ;master.c: 137:     cont_3=((cont)-(cont_1*100)-(cont_2*10));
  2548  0566  309C               	movlw	156
  2549  0567  00B9               	movwf	??_CONVET_cont
  2550  0568  0839               	movf	??_CONVET_cont,w
  2551  0569  00F0               	movwf	___bmul@multiplicand
  2552  056A  0829               	movf	_cont_1,w
  2553  056B  120A  118A  2437  120A  118A  	fcall	___bmul
  2554  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0572  00BA               	movwf	??_CONVET_cont+1
  2557  0573  30F6               	movlw	246
  2558  0574  00BB               	movwf	??_CONVET_cont+2
  2559  0575  083B               	movf	??_CONVET_cont+2,w
  2560  0576  00F0               	movwf	___bmul@multiplicand
  2561  0577  0828               	movf	_cont_2,w
  2562  0578  120A  118A  2437  120A  118A  	fcall	___bmul
  2563  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2564  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2565  057F  073A               	addwf	??_CONVET_cont+1,w
  2566  0580  0726               	addwf	_cont,w
  2567  0581  00BC               	movwf	??_CONVET_cont+3
  2568  0582  083C               	movf	??_CONVET_cont+3,w
  2569  0583  00A7               	movwf	_cont_3
  2570  0584                     l115:
  2571  0584  0008               	return
  2572  0585                     __end_of_CONVET_cont:
  2573                           
  2574                           	psect	text15
  2575  04AE                     __ptext15:	
  2576 ;; *************** function ___wmul *****************
  2577 ;; Defined at:
  2578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  multiplier      2    0[COMMON] unsigned int 
  2581 ;;  multiplicand    2    2[COMMON] unsigned int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  product         2    4[COMMON] unsigned int 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[COMMON] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         4       0       0       0       0
  2594 ;;      Locals:         2       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0
  2596 ;;      Totals:         6       0       0       0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_CONVET_cont
  2603 ;;		_CONV
  2604 ;;		_CONT
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function ___wmul
  2610  04AE                     ___wmul:
  2611  04AE                     l1255:	
  2612                           ;incstack = 0
  2613                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2614                           
  2615  04AE  01F4               	clrf	___wmul@product
  2616  04AF  01F5               	clrf	___wmul@product+1
  2617  04B0                     l1257:
  2618  04B0  1C70               	btfss	___wmul@multiplier,0
  2619  04B1  2CB3               	goto	u221
  2620  04B2  2CB4               	goto	u220
  2621  04B3                     u221:
  2622  04B3  2CBA               	goto	l337
  2623  04B4                     u220:
  2624  04B4                     l1259:
  2625  04B4  0872               	movf	___wmul@multiplicand,w
  2626  04B5  07F4               	addwf	___wmul@product,f
  2627  04B6  1803               	skipnc
  2628  04B7  0AF5               	incf	___wmul@product+1,f
  2629  04B8  0873               	movf	___wmul@multiplicand+1,w
  2630  04B9  07F5               	addwf	___wmul@product+1,f
  2631  04BA                     l337:
  2632  04BA  3001               	movlw	1
  2633  04BB                     u235:
  2634  04BB  1003               	clrc
  2635  04BC  0DF2               	rlf	___wmul@multiplicand,f
  2636  04BD  0DF3               	rlf	___wmul@multiplicand+1,f
  2637  04BE  3EFF               	addlw	-1
  2638  04BF  1D03               	skipz
  2639  04C0  2CBB               	goto	u235
  2640  04C1                     l1261:
  2641  04C1  3001               	movlw	1
  2642  04C2                     u245:
  2643  04C2  1003               	clrc
  2644  04C3  0CF1               	rrf	___wmul@multiplier+1,f
  2645  04C4  0CF0               	rrf	___wmul@multiplier,f
  2646  04C5  3EFF               	addlw	-1
  2647  04C6  1D03               	skipz
  2648  04C7  2CC2               	goto	u245
  2649  04C8                     l1263:
  2650  04C8  0870               	movf	___wmul@multiplier,w
  2651  04C9  0471               	iorwf	___wmul@multiplier+1,w
  2652  04CA  1D03               	btfss	3,2
  2653  04CB  2CCD               	goto	u251
  2654  04CC  2CCE               	goto	u250
  2655  04CD                     u251:
  2656  04CD  2CB0               	goto	l1257
  2657  04CE                     u250:
  2658  04CE                     l1265:
  2659  04CE  0875               	movf	___wmul@product+1,w
  2660  04CF  00F1               	movwf	?___wmul+1
  2661  04D0  0874               	movf	___wmul@product,w
  2662  04D1  00F0               	movwf	?___wmul
  2663  04D2                     l339:
  2664  04D2  0008               	return
  2665  04D3                     __end_of___wmul:
  2666                           
  2667                           	psect	text16
  2668  0437                     __ptext16:	
  2669 ;; *************** function ___bmul *****************
  2670 ;; Defined at:
  2671 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  multiplier      1    wreg     unsigned char 
  2674 ;;  multiplicand    1    0[COMMON] unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  multiplier      1    3[COMMON] unsigned char 
  2677 ;;  product         1    2[COMMON] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      unsigned char 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         1       0       0       0       0
  2688 ;;      Locals:         2       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0
  2690 ;;      Totals:         4       0       0       0       0
  2691 ;;Total ram usage:        4 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_CONVET_cont
  2697 ;;		_CONV
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function ___bmul
  2703  0437                     ___bmul:
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2707                           ;___bmul@multiplier stored from wreg
  2708  0437  00F3               	movwf	___bmul@multiplier
  2709  0438                     l1269:
  2710  0438  01F2               	clrf	___bmul@product
  2711  0439                     l1271:
  2712  0439  1C73               	btfss	___bmul@multiplier,0
  2713  043A  2C3C               	goto	u261
  2714  043B  2C3D               	goto	u260
  2715  043C                     u261:
  2716  043C  2C41               	goto	l1275
  2717  043D                     u260:
  2718  043D                     l1273:
  2719  043D  0870               	movf	___bmul@multiplicand,w
  2720  043E  00F1               	movwf	??___bmul
  2721  043F  0871               	movf	??___bmul,w
  2722  0440  07F2               	addwf	___bmul@product,f
  2723  0441                     l1275:
  2724  0441  1003               	clrc
  2725  0442  0DF0               	rlf	___bmul@multiplicand,f
  2726  0443                     l1277:
  2727  0443  1003               	clrc
  2728  0444  0CF3               	rrf	___bmul@multiplier,f
  2729  0445  0873               	movf	___bmul@multiplier,w
  2730  0446  1D03               	btfss	3,2
  2731  0447  2C49               	goto	u271
  2732  0448  2C4A               	goto	u270
  2733  0449                     u271:
  2734  0449  2C39               	goto	l1271
  2735  044A                     u270:
  2736  044A                     l1279:
  2737  044A  0872               	movf	___bmul@product,w
  2738  044B                     l363:
  2739  044B  0008               	return
  2740  044C                     __end_of___bmul:
  2741                           
  2742                           	psect	text17
  2743  0585                     __ptext17:	
  2744 ;; *************** function ___awdiv *****************
  2745 ;; Defined at:
  2746 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  divisor         2    6[COMMON] int 
  2749 ;;  dividend        2    8[COMMON] int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  quotient        2    2[BANK0 ] int 
  2752 ;;  sign            1    1[BANK0 ] unsigned char 
  2753 ;;  counter         1    0[BANK0 ] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  2    6[COMMON] int 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2763 ;;      Params:         4       0       0       0       0
  2764 ;;      Locals:         0       4       0       0       0
  2765 ;;      Temps:          1       0       0       0       0
  2766 ;;      Totals:         5       4       0       0       0
  2767 ;;Total ram usage:        9 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_CONVET_cont
  2773 ;;		_CONV
  2774 ;;		_CONT
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function ___awdiv
  2780  0585                     ___awdiv:
  2781  0585                     l1283:	
  2782                           ;incstack = 0
  2783                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2784                           
  2785  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0587  01B6               	clrf	___awdiv@sign
  2788  0588                     l1285:
  2789  0588  1FF7               	btfss	___awdiv@divisor+1,7
  2790  0589  2D8B               	goto	u281
  2791  058A  2D8C               	goto	u280
  2792  058B                     u281:
  2793  058B  2D93               	goto	l1291
  2794  058C                     u280:
  2795  058C                     l1287:
  2796  058C  09F6               	comf	___awdiv@divisor,f
  2797  058D  09F7               	comf	___awdiv@divisor+1,f
  2798  058E  0AF6               	incf	___awdiv@divisor,f
  2799  058F  1903               	skipnz
  2800  0590  0AF7               	incf	___awdiv@divisor+1,f
  2801  0591                     l1289:
  2802  0591  01B6               	clrf	___awdiv@sign
  2803  0592  0AB6               	incf	___awdiv@sign,f
  2804  0593                     l1291:
  2805  0593  1FF9               	btfss	___awdiv@dividend+1,7
  2806  0594  2D96               	goto	u291
  2807  0595  2D97               	goto	u290
  2808  0596                     u291:
  2809  0596  2DA0               	goto	l1297
  2810  0597                     u290:
  2811  0597                     l1293:
  2812  0597  09F8               	comf	___awdiv@dividend,f
  2813  0598  09F9               	comf	___awdiv@dividend+1,f
  2814  0599  0AF8               	incf	___awdiv@dividend,f
  2815  059A  1903               	skipnz
  2816  059B  0AF9               	incf	___awdiv@dividend+1,f
  2817  059C                     l1295:
  2818  059C  3001               	movlw	1
  2819  059D  00FA               	movwf	??___awdiv
  2820  059E  087A               	movf	??___awdiv,w
  2821  059F  06B6               	xorwf	___awdiv@sign,f
  2822  05A0                     l1297:
  2823  05A0  01B7               	clrf	___awdiv@quotient
  2824  05A1  01B8               	clrf	___awdiv@quotient+1
  2825  05A2                     l1299:
  2826  05A2  0876               	movf	___awdiv@divisor,w
  2827  05A3  0477               	iorwf	___awdiv@divisor+1,w
  2828  05A4  1903               	btfsc	3,2
  2829  05A5  2DA7               	goto	u301
  2830  05A6  2DA8               	goto	u300
  2831  05A7                     u301:
  2832  05A7  2DDF               	goto	l1319
  2833  05A8                     u300:
  2834  05A8                     l1301:
  2835  05A8  01B5               	clrf	___awdiv@counter
  2836  05A9  0AB5               	incf	___awdiv@counter,f
  2837  05AA  2DB6               	goto	l1307
  2838  05AB                     l1303:
  2839  05AB  3001               	movlw	1
  2840  05AC                     u315:
  2841  05AC  1003               	clrc
  2842  05AD  0DF6               	rlf	___awdiv@divisor,f
  2843  05AE  0DF7               	rlf	___awdiv@divisor+1,f
  2844  05AF  3EFF               	addlw	-1
  2845  05B0  1D03               	skipz
  2846  05B1  2DAC               	goto	u315
  2847  05B2                     l1305:
  2848  05B2  3001               	movlw	1
  2849  05B3  00FA               	movwf	??___awdiv
  2850  05B4  087A               	movf	??___awdiv,w
  2851  05B5  07B5               	addwf	___awdiv@counter,f
  2852  05B6                     l1307:
  2853  05B6  1FF7               	btfss	___awdiv@divisor+1,7
  2854  05B7  2DB9               	goto	u321
  2855  05B8  2DBA               	goto	u320
  2856  05B9                     u321:
  2857  05B9  2DAB               	goto	l1303
  2858  05BA                     u320:
  2859  05BA                     l1309:
  2860  05BA  3001               	movlw	1
  2861  05BB                     u335:
  2862  05BB  1003               	clrc
  2863  05BC  0DB7               	rlf	___awdiv@quotient,f
  2864  05BD  0DB8               	rlf	___awdiv@quotient+1,f
  2865  05BE  3EFF               	addlw	-1
  2866  05BF  1D03               	skipz
  2867  05C0  2DBB               	goto	u335
  2868  05C1  0877               	movf	___awdiv@divisor+1,w
  2869  05C2  0279               	subwf	___awdiv@dividend+1,w
  2870  05C3  1D03               	skipz
  2871  05C4  2DC7               	goto	u345
  2872  05C5  0876               	movf	___awdiv@divisor,w
  2873  05C6  0278               	subwf	___awdiv@dividend,w
  2874  05C7                     u345:
  2875  05C7  1C03               	skipc
  2876  05C8  2DCA               	goto	u341
  2877  05C9  2DCB               	goto	u340
  2878  05CA                     u341:
  2879  05CA  2DD2               	goto	l1315
  2880  05CB                     u340:
  2881  05CB                     l1311:
  2882  05CB  0876               	movf	___awdiv@divisor,w
  2883  05CC  02F8               	subwf	___awdiv@dividend,f
  2884  05CD  0877               	movf	___awdiv@divisor+1,w
  2885  05CE  1C03               	skipc
  2886  05CF  03F9               	decf	___awdiv@dividend+1,f
  2887  05D0  02F9               	subwf	___awdiv@dividend+1,f
  2888  05D1                     l1313:
  2889  05D1  1437               	bsf	___awdiv@quotient,0
  2890  05D2                     l1315:
  2891  05D2  3001               	movlw	1
  2892  05D3                     u355:
  2893  05D3  1003               	clrc
  2894  05D4  0CF7               	rrf	___awdiv@divisor+1,f
  2895  05D5  0CF6               	rrf	___awdiv@divisor,f
  2896  05D6  3EFF               	addlw	-1
  2897  05D7  1D03               	skipz
  2898  05D8  2DD3               	goto	u355
  2899  05D9                     l1317:
  2900  05D9  3001               	movlw	1
  2901  05DA  02B5               	subwf	___awdiv@counter,f
  2902  05DB  1D03               	btfss	3,2
  2903  05DC  2DDE               	goto	u361
  2904  05DD  2DDF               	goto	u360
  2905  05DE                     u361:
  2906  05DE  2DBA               	goto	l1309
  2907  05DF                     u360:
  2908  05DF                     l1319:
  2909  05DF  0836               	movf	___awdiv@sign,w
  2910  05E0  1903               	btfsc	3,2
  2911  05E1  2DE3               	goto	u371
  2912  05E2  2DE4               	goto	u370
  2913  05E3                     u371:
  2914  05E3  2DE9               	goto	l1323
  2915  05E4                     u370:
  2916  05E4                     l1321:
  2917  05E4  09B7               	comf	___awdiv@quotient,f
  2918  05E5  09B8               	comf	___awdiv@quotient+1,f
  2919  05E6  0AB7               	incf	___awdiv@quotient,f
  2920  05E7  1903               	skipnz
  2921  05E8  0AB8               	incf	___awdiv@quotient+1,f
  2922  05E9                     l1323:
  2923  05E9  0838               	movf	___awdiv@quotient+1,w
  2924  05EA  00F7               	movwf	?___awdiv+1
  2925  05EB  0837               	movf	___awdiv@quotient,w
  2926  05EC  00F6               	movwf	?___awdiv
  2927  05ED                     l490:
  2928  05ED  0008               	return
  2929  05EE                     __end_of___awdiv:
  2930  007E                     btemp	set	126	;btemp
  2931  007E                     wtemp0	set	126
  2932                           
  2933                           	psect	config
  2934                           
  2935                           ;Config register CONFIG1 @ 0x2007
  2936                           ;	Oscillator Selection bits
  2937                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2938                           ;	Watchdog Timer Enable bit
  2939                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2940                           ;	Power-up Timer Enable bit
  2941                           ;	PWRTE = OFF, PWRT disabled
  2942                           ;	RE3/MCLR pin function select bit
  2943                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2944                           ;	Code Protection bit
  2945                           ;	CP = OFF, Program memory code protection is disabled
  2946                           ;	Data Code Protection bit
  2947                           ;	CPD = OFF, Data memory code protection is disabled
  2948                           ;	Brown Out Reset Selection bits
  2949                           ;	BOREN = OFF, BOR disabled
  2950                           ;	Internal External Switchover bit
  2951                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2952                           ;	Fail-Safe Clock Monitor Enabled bit
  2953                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2954                           ;	Low Voltage Programming Enable bit
  2955                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2956                           ;	In-Circuit Debugger Mode bit
  2957                           ;	DEBUG = 0x1, unprogrammed default
  2958  2007                     	org	8199
  2959  2007  20D4               	dw	8404
  2960                           
  2961                           ;Config register CONFIG2 @ 0x2008
  2962                           ;	Brown-out Reset Selection bit
  2963                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2964                           ;	Flash Program Memory Self Write Enable bits
  2965                           ;	WRT = OFF, Write protection off
  2966  2008                     	org	8200
  2967  2008  3FFF               	dw	16383

Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_POINT@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 

    LCD_P@D	PTR unsigned char  size(1) Largest target is 14
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_LCDVAL1
    _LCD_IN->_LCD_ON
    _LCD_CL->_LCD_ON
    _LCDVAL1->_LCD_POINT
    _LCD_POINT->_LCD_P
    _LCD_P->_LCD_PLAY
    _CONVET_cont->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_CONVET_cont
    _CONVET_cont->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12940
                                             12 COMMON     2     2      0
                        _CONVET_cont
                            _LCDVAL1
                             _LCD_CL
                             _LCD_IN
                          _LCD_POINT
                              _Setup
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_IN                                               2     2      0      22
                                              3 COMMON     2     2      0
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCD_CL                                               0     0      0      22
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCDVAL1                                              5     1      4    5213
                                             11 COMMON     1     1      0
                                              0 BANK0      4     0      4
                          _LCD_POINT
 ---------------------------------------------------------------------------------
 (1) _LCD_POINT                                            7     2      5    4361
                                              4 COMMON     7     2      5
                             _LCD_ON
                              _LCD_P
 ---------------------------------------------------------------------------------
 (2) _LCD_P                                                2     2      0     100
                                              2 COMMON     2     2      0
                           _LCD_PLAY
 ---------------------------------------------------------------------------------
 (3) _LCD_PLAY                                             2     2      0      22
                                              0 COMMON     2     2      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               3     3      0      22
                                              0 COMMON     3     3      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (4) _LCD_TIM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVET_cont                                          4     4      0    2940
                                              4 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     956
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     396
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1588
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET_cont
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _LCDVAL1
     _LCD_POINT
       _LCD_ON
         _LCD_TIM
       _LCD_P
         _LCD_PLAY
           _LCD_TIM
   _LCD_CL
     _LCD_ON
       _LCD_TIM
   _LCD_IN
     _LCD_ON
       _LCD_TIM
   _LCD_POINT
     _LCD_ON
       _LCD_TIM
     _LCD_P
       _LCD_PLAY
         _LCD_TIM
   _Setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 14:42:11 2021

                      _L 0034                        _Z 0032                        _l 0033  
                      _z 0031                        pc 0002           ___bmul@product 0072  
            _SSPSTATbits 0094                       l97 0650                       l99 0669  
           ___awdiv@sign 0036                       fsr 0004      ___wmul@multiplicand 0072  
                    l100 066D                      l106 048E                      l115 0584  
                    l205 04AD                      l213 04F9                      l152 0471  
                    l153 0476                      l170 0418                      l162 03F9  
                    l235 07F2                      l156 0401                      l190 0460  
                    l159 0407                      l337 04BA                      l193 0425  
                    l363 044B                      l339 04D2                      l187 0525  
                    l196 0436                      l199 0400                      l490 05ED  
                    u200 04AD                      u201 04AC                      u210 0407  
                    u211 0406                      u300 05A8                      u220 04B4  
                    u301 05A7                      u221 04B3                      u320 05BA  
                    u321 05B9                      u250 04CE                      u315 05AC  
                    u251 04CD                      u235 04BB                      u340 05CB  
                    u260 043D                      u341 05CA                      u261 043C  
                    u245 04C2                      u270 044A                      u335 05BB  
                    u271 0449                      u407 0433                      u360 05DF  
                    u280 058C                      u361 05DE                      u345 05C7  
                    u281 058B                      u417 045B                      u370 05E4  
                    u290 0597                      u371 05E3                      u355 05D3  
                    u291 0596                      u380 0469                      u381 0468  
                    u397 0508                      fsr0 0004                      indf 0000  
           LCD_POINT@LOC 007A          __end_of_LCDVAL1 07F3          __end_of_LCD_TIM 0426  
                   l1211 042A                     l1301 05A8                     l1221 0452  
                   l1213 042C                     l1311 05CB                     l1303 05AB  
                   l1207 0419                     l1223 0457                     l1215 0431  
                   l1231 04A1                     l1321 05E4                     l1313 05D1  
                   l1305 05B2                     l1217 044D                     l1209 0427  
                   l1225 0490                     l1233 04D3                     l1401 0771  
                   l1323 05E9                     l1315 05D2                     l1307 05B6  
                   l1219 0450                     l1227 0491                     l1235 04D4  
                   l1243 04E0                     l1403 0783                     l1411 07B9  
                   l1331 046B                     l1317 05D9                     l1309 05BA  
                   l1261 04C1                     l1229 049D                     l1237 04DA  
                   l1245 04ED                     l1405 0795                     l1341 0484  
                   l1333 046D                     l1253 0401                     l1421 0415  
                   l1319 05DF                     l1271 0439                     l1263 04C8  
                   l1255 04AE                     l1247 04F3                     l1407 07A7  
                   l1351 048D                     l1343 0487                     l1335 0470  
                   l1327 0462                     l1431 0616                     l1273 043D  
                   l1265 04CE                     l1257 04B0                     l1425 0526  
                   l1361 0504                     l1353 04FA                     l1345 048A  
                   l1337 0477                     l1329 0469                     l1417 03F5  
                   l1433 0619                     l1291 0593                     l1283 0585  
                   l1275 0441                     l1259 04B4                     l1371 03FA  
                   l1363 050D                     l1355 04FE                     l1347 048B  
                   l1339 0482                     l1419 0410                     l1443 0671  
                   l1435 062B                     l1427 05EE                     l1293 0597  
                   l1285 0588                     l1277 0443                     l1269 0438  
                   l1381 06BD                     l1373 0686                     l1365 0513  
                   l1357 04FF                     l1349 048C                     l1437 063D  
                   l1429 0606                     l1295 059C                     l1287 058C  
                   l1279 044A                     l1391 0717                     l1383 06CF  
                   l1375 0687                     l1367 0519                     l1359 0502  
                   l1439 0653                     l1297 05A0                     l1289 0591  
                   l1561 07C0                     l1393 0729                     l1385 06E1  
                   l1377 0699                     l1369 051F                     l1299 05A2  
                   l1563 04E5                     l1395 073B                     l1387 06F3  
                   l1379 06AB                     l1397 074D                     l1389 0705  
                   l1399 075F                     l1559 067B                     STR_1 0009  
                   STR_2 0019                     STR_3 001B                     STR_4 001D  
                   STR_5 001F                     STR_6 0021                     STR_7 0023  
                   STR_8 0025                     STR_9 0027       __size_of_LCD_POINT 0027  
                   _cont 0026                     _main 05EE                     btemp 007E  
                   start 0000        ___bmul@multiplier 0073         __end_of_LCD_PLAY 0437  
                  ?_main 0070          __end_of___awdiv 05EE                    STR_10 0029  
                  STR_11 002B                    STR_12 002D                    STR_13 002F  
                  STR_14 0031                    STR_15 0033                    STR_16 0035  
                  STR_17 0037                    STR_18 0017                    _ANSEL 0188  
        ___awdiv@divisor 0076                    _LCD_P 048F          ___awdiv@counter 0035  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TEM_T 002C                    _TEM_U 002D                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019                    _Setup 0477  
                  pclath 000A          __end_of_spiInit 0477          __end_of_spiRead 0419  
                  status 0003                    wtemp0 007E          __initialization 07F3  
           __end_of_main 0686        __end_of_LCD_POINT 04FA                   ??_main 007C  
              ??_LCDVAL1 007B                   ?_LCD_P 0070                   LCD_P@D 0073  
              ??_LCD_TIM 0070                   ?_Setup 0070         ___awdiv@dividend 0078  
                 _ANSELH 0189     __size_of_CONVET_cont 005F                   _LCD_CL 03FA  
                 _LCD_IN 04FA                   _LCD_ON 044C                   _POT1_H 002F  
                 _POT1_T 002E                   _POT1_U 0030                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 ___bmul 0437                   ___wmul 04AE                ??___awdiv 007A  
                 _cont_1 0029                   _cont_2 0028                   _cont_3 0027  
       ___awdiv@quotient 0037         __end_of_spiWrite 03FA                ??_spiInit 0073  
              ??_spiRead 0070                ?_LCD_PLAY 0070  __end_of__initialization 07FC  
              LCD_PLAY@D 0071            __end_of_LCD_P 04AE      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070            __end_of_Setup 048F                  ??_LCD_P 0072  
                ??_Setup 0070                  ?_LCD_CL 0070               __pbssBANK0 0020  
                ?_LCD_IN 0070                  ?_LCD_ON 0070                  LCD_ON@C 0072  
             ??_LCD_PLAY 0070               __pmaintext 05EE                  ?___bmul 0070  
                ?___wmul 0070  __size_of_spiReceiveWait 0007                  _LCDVAL1 0686  
                _LCD_TIM 0419                  _TEM_TAS 002A                  _TEM_UAS 002B  
                _SSPSTAT 0094               __stringtab 0003          __size_of_LCD_CL 0007  
        __size_of_LCD_IN 002C          __size_of_LCD_ON 0015                ?_spiWrite 0070  
        __size_of___bmul 0015                  ___awdiv 0585          __size_of___wmul 0025  
                __ptext1 03F4                  __ptext2 0410                  __ptext3 0401  
                __ptext4 0461                  __ptext5 0477                  __ptext6 04FA  
                __ptext7 03FA                  __ptext8 0686                  __ptext9 04D3  
              _LCD_POINT 04D3                  _spiInit 0461                  _spiRead 0410  
                clrloop0 0409     end_of_initialization 07FC                _RCSTAbits 0018  
             ??_spiWrite 0070                _PORTDbits 0008                _PORTEbits 0009  
             ?_LCD_POINT 0074            ??_CONVET_cont 0039                _TRISDbits 0088  
            spiWrite@dat 0070               LCD_POINT@D 0078               LCD_POINT@x 0074  
             LCD_POINT@y 0076           __end_of_LCD_CL 0401           __end_of_LCD_IN 0526  
         __end_of_LCD_ON 0461                _TXSTAbits 0098        __size_of_LCD_PLAY 0011  
         _spiReceiveWait 0401           __end_of___bmul 044C           __end_of___wmul 04D3  
            _BAUDCTLbits 0187      start_initialization 07F3                 ??_LCD_CL 0073  
               ??_LCD_IN 0073                 ??_LCD_ON 0070      __end_of_CONVET_cont 0585  
 __end_of_spiReceiveWait 0408                 ??___bmul 0071                 ??___wmul 0074  
               LCDVAL1@Z 0037                 LCDVAL1@x 0035                 ?_LCDVAL1 0035  
               ?_LCD_TIM 0070                ___latbits 0002              ??_LCD_POINT 0079  
          __pcstackBANK0 0035          ?_spiReceiveWait 0070                 ?___awdiv 0076  
      __size_of_spiWrite 0006                __pstrings 0003           __size_of_LCD_P 001F  
               ?_spiInit 0070                 ?_spiRead 0070              _CONVET_cont 0526  
         __size_of_Setup 0018                 _LCD_PLAY 0426     spiInit@sTransmitEdge 0072  
         ___wmul@product 0074                clear_ram0 0408                 _PIE1bits 008C  
     spiInit@sDataSample 0070                 _POT1_Has 0021                 _POT1_Tas 0020  
               _POT1_Uas 0022              __stringbase 0008        ___wmul@multiplier 0070  
       __size_of_LCDVAL1 016D         __size_of_LCD_TIM 000D         __size_of___awdiv 0069  
     __end_of__stringtab 0009                 __ptext10 048F                 __ptext11 0426  
               __ptext12 044C                 __ptext13 0419                 __ptext14 0526  
               __ptext15 04AE                 __ptext16 0437                 __ptext17 0585  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _cont_1AS 0025  
               _cont_2AS 0024                 _cont_3AS 0023            __size_of_main 0098  
               _spiWrite 03F4             spiInit@sType 0073        spiInit@sClockIdle 0071  
             _INTCONbits 000B         ??_spiReceiveWait 0070                stringcode 0003  
               stringdir 0003                 stringtab 0003             ?_CONVET_cont 0070  
