

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 25 18:37:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTDbits	set	8
   206  0007                     _PORTCbits	set	7
   207  0009                     _PORTEbits	set	9
   208  0009                     _PORTE	set	9
   209  0008                     _PORTD	set	8
   210  0007                     _PORTC	set	7
   211  0005                     _PORTA	set	5
   212  0005                     _PORTAbits	set	5
   213  0085                     _TRISAbits	set	133
   214  0089                     _TRISE	set	137
   215  0088                     _TRISD	set	136
   216  0087                     _TRISC	set	135
   217  0189                     _ANSELH	set	393
   218  0188                     _ANSEL	set	392
   219                           
   220                           	psect	cinit
   221  07F8                     start_initialization:	
   222                           ; #config settings
   223                           
   224  07F8                     __initialization:
   225                           
   226                           ; Clear objects allocated to COMMON
   227  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   228  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   229  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   230  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2F88   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0070                     __pbssCOMMON:
   240  0070                     _m:
   241  0070                     	ds	1
   242  0071                     _l:
   243  0071                     	ds	1
   244  0072                     _M:
   245  0072                     	ds	1
   246  0073                     _L:
   247  0073                     	ds	1
   248                           
   249                           	psect	cstackCOMMON
   250  0074                     __pcstackCOMMON:
   251  0074                     ?_Setup:
   252  0074                     ??_Setup:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0074                     ?_suma_C:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0074                     ??_suma_C:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0074                     ?_led_C:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0074                     ??_led_C:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0074                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0074                     led_C@n:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275  0074                     	ds	1
   276  0075                     suma_C@n:
   277                           
   278                           ; 1 bytes @ 0x1
   279  0075                     	ds	1
   280  0076                     suma_C@W:
   281                           
   282                           ; 1 bytes @ 0x2
   283  0076                     	ds	1
   284  0077                     ??_main:
   285                           
   286                           	psect	maintext
   287  0788                     __pmaintext:	
   288                           ; 1 bytes @ 0x3
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 54 in file "juego_de_carreras.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		_Setup
   316 ;;		_led_C
   317 ;;		_suma_C
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           
   324                           ;psect for function _main
   325  0788                     _main:
   326  0788                     l761:	
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   329                           
   330                           
   331                           ;juego_de_carreras.c: 55:     Setup();
   332  0788  120A  118A  2774  120A  118A  	fcall	_Setup
   333  078D                     l763:
   334                           
   335                           ;juego_de_carreras.c: 62:             suma_C ( PORTAbits.RA1 );
   336  078D  1283               	bcf	3,5	;RP0=0, select bank0
   337  078E  1303               	bcf	3,6	;RP1=0, select bank0
   338  078F  0C05               	rrf	5,w	;volatile
   339  0790  3901               	andlw	1
   340  0791  120A  118A  2763  120A  118A  	fcall	_suma_C
   341  0796                     l765:
   342                           
   343                           ;juego_de_carreras.c: 63:             led_C ( L );
   344  0796  0873               	movf	_L,w
   345  0797  120A  118A  27A0  120A  118A  	fcall	_led_C
   346  079C  2F8D               	goto	l763
   347  079D  120A  118A  2800   	ljmp	start
   348  07A0                     __end_of_main:
   349                           
   350                           	psect	text1
   351  0763                     __ptext1:	
   352 ;; *************** function _suma_C *****************
   353 ;; Defined at:
   354 ;;		line 203 in file "juego_de_carreras.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;  n               1    wreg     unsigned char 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  n               1    1[COMMON] unsigned char 
   359 ;;  W               1    2[COMMON] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         2       0       0       0       0
   371 ;;      Temps:          1       0       0       0       0
   372 ;;      Totals:         3       0       0       0       0
   373 ;;Total ram usage:        3 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _suma_C
   384  0763                     _suma_C:
   385                           
   386                           ;incstack = 0
   387                           ; Regs used in _suma_C: [wreg+status,2+status,0]
   388                           ;suma_C@n stored from wreg
   389  0763  00F5               	movwf	suma_C@n
   390  0764                     l705:
   391                           
   392                           ;juego_de_carreras.c: 204:     unsigned char W;;juego_de_carreras.c: 205:     if (n==1){
   393  0764  0375               	decf	suma_C@n,w
   394  0765  1D03               	btfss	3,2
   395  0766  2F68               	goto	u11
   396  0767  2F69               	goto	u10
   397  0768                     u11:
   398  0768  2F6A               	goto	l709
   399  0769                     u10:
   400  0769                     l707:
   401  0769  2F73               	goto	l105
   402  076A                     l709:
   403                           
   404                           ;juego_de_carreras.c: 208:         if(W==1){
   405  076A  0376               	decf	suma_C@W,w
   406  076B  1D03               	btfss	3,2
   407  076C  2F6E               	goto	u21
   408  076D  2F6F               	goto	u20
   409  076E                     u21:
   410  076E  2F73               	goto	l105
   411  076F                     u20:
   412  076F                     l711:
   413  076F                     l713:
   414                           
   415                           ;juego_de_carreras.c: 210:         L++;
   416  076F  3001               	movlw	1
   417  0770  00F4               	movwf	??_suma_C
   418  0771  0874               	movf	??_suma_C,w
   419  0772  07F3               	addwf	_L,f
   420  0773                     l105:
   421  0773  0008               	return
   422  0774                     __end_of_suma_C:
   423                           
   424                           	psect	text2
   425  07A0                     __ptext2:	
   426 ;; *************** function _led_C *****************
   427 ;; Defined at:
   428 ;;		line 117 in file "juego_de_carreras.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  n               1    wreg     unsigned char 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  n               1    0[COMMON] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          2       0       0       0       0
   445 ;;      Totals:         2       0       0       0       0
   446 ;;Total ram usage:        2 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _led_C
   457  07A0                     _led_C:
   458  07A0                     l715:	
   459                           ;incstack = 0
   460                           ; Regs used in _led_C: [wreg-fsr0h+status,2+status,0]
   461                           
   462                           
   463                           ;juego_de_carreras.c: 118:         switch (L) {
   464  07A0  2FD2               	goto	l755
   465  07A1                     l717:
   466                           
   467                           ;juego_de_carreras.c: 120:                 PORTC=0;
   468  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   469  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   470  07A3  0187               	clrf	7	;volatile
   471                           
   472                           ;juego_de_carreras.c: 121:                 break;
   473  07A4  2FF7               	goto	l84
   474  07A5                     l719:
   475                           
   476                           ;juego_de_carreras.c: 123:                 PORTC=0;
   477  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   478  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   479  07A7  0187               	clrf	7	;volatile
   480  07A8                     l721:
   481                           
   482                           ;juego_de_carreras.c: 124:                 PORTCbits.RC0 = 1;
   483  07A8  1407               	bsf	7,0	;volatile
   484                           
   485                           ;juego_de_carreras.c: 125:                 break;
   486  07A9  2FF7               	goto	l84
   487  07AA                     l723:
   488                           
   489                           ;juego_de_carreras.c: 127:                 PORTC=0;
   490  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   491  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   492  07AC  0187               	clrf	7	;volatile
   493  07AD                     l725:
   494                           
   495                           ;juego_de_carreras.c: 128:                 PORTCbits.RC1 = 1;
   496  07AD  1487               	bsf	7,1	;volatile
   497                           
   498                           ;juego_de_carreras.c: 129:                 break;
   499  07AE  2FF7               	goto	l84
   500  07AF                     l727:
   501                           
   502                           ;juego_de_carreras.c: 131:                 PORTC=0;
   503  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   504  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   505  07B1  0187               	clrf	7	;volatile
   506  07B2                     l729:
   507                           
   508                           ;juego_de_carreras.c: 132:                 PORTCbits.RC2 = 1;
   509  07B2  1507               	bsf	7,2	;volatile
   510                           
   511                           ;juego_de_carreras.c: 133:                 break;
   512  07B3  2FF7               	goto	l84
   513  07B4                     l731:
   514                           
   515                           ;juego_de_carreras.c: 135:                 PORTC=0;
   516  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   517  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   518  07B6  0187               	clrf	7	;volatile
   519  07B7                     l733:
   520                           
   521                           ;juego_de_carreras.c: 136:                 PORTCbits.RC3 = 1;
   522  07B7  1587               	bsf	7,3	;volatile
   523                           
   524                           ;juego_de_carreras.c: 137:                 break;
   525  07B8  2FF7               	goto	l84
   526  07B9                     l735:
   527                           
   528                           ;juego_de_carreras.c: 139:                 PORTC=0;
   529  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   530  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   531  07BB  0187               	clrf	7	;volatile
   532  07BC                     l737:
   533                           
   534                           ;juego_de_carreras.c: 140:                 PORTCbits.RC4 = 1;
   535  07BC  1607               	bsf	7,4	;volatile
   536                           
   537                           ;juego_de_carreras.c: 141:                 break;
   538  07BD  2FF7               	goto	l84
   539  07BE                     l739:
   540                           
   541                           ;juego_de_carreras.c: 143:                 PORTC=0;
   542  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   543  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   544  07C0  0187               	clrf	7	;volatile
   545  07C1                     l741:
   546                           
   547                           ;juego_de_carreras.c: 144:                 PORTCbits.RC5 = 1;
   548  07C1  1687               	bsf	7,5	;volatile
   549                           
   550                           ;juego_de_carreras.c: 145:                 break;
   551  07C2  2FF7               	goto	l84
   552  07C3                     l743:
   553                           
   554                           ;juego_de_carreras.c: 147:                 PORTC=0;
   555  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   556  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   557  07C5  0187               	clrf	7	;volatile
   558  07C6                     l745:
   559                           
   560                           ;juego_de_carreras.c: 148:                 PORTCbits.RC6 = 1;
   561  07C6  1707               	bsf	7,6	;volatile
   562                           
   563                           ;juego_de_carreras.c: 149:                 break;
   564  07C7  2FF7               	goto	l84
   565  07C8                     l747:
   566                           
   567                           ;juego_de_carreras.c: 151:                 PORTC=0;
   568  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   569  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   570  07CA  0187               	clrf	7	;volatile
   571  07CB                     l749:
   572                           
   573                           ;juego_de_carreras.c: 152:                 PORTCbits.RC7 = 1;
   574  07CB  1787               	bsf	7,7	;volatile
   575                           
   576                           ;juego_de_carreras.c: 153:                 break;
   577  07CC  2FF7               	goto	l84
   578  07CD                     l751:
   579                           
   580                           ;juego_de_carreras.c: 155:                 PORTC = 0;
   581  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   582  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   583  07CF  0187               	clrf	7	;volatile
   584                           
   585                           ;juego_de_carreras.c: 156:                 L =0;
   586  07D0  01F3               	clrf	_L
   587                           
   588                           ;juego_de_carreras.c: 157:                 break;
   589  07D1  2FF7               	goto	l84
   590  07D2                     l755:
   591  07D2  0873               	movf	_L,w
   592  07D3  00F4               	movwf	??_led_C
   593  07D4  01F5               	clrf	??_led_C+1
   594                           
   595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   596                           ; Switch size 1, requested type "simple"
   597                           ; Number of cases is 1, Range of values is 0 to 0
   598                           ; switch strategies available:
   599                           ; Name         Instructions Cycles
   600                           ; simple_byte            4     3 (average)
   601                           ; direct_byte           11     8 (fixed)
   602                           ; jumptable            260     6 (fixed)
   603                           ;	Chosen strategy is simple_byte
   604  07D5  0875               	movf	??_led_C+1,w
   605  07D6  3A00               	xorlw	0	; case 0
   606  07D7  1903               	skipnz
   607  07D8  2FDA               	goto	l863
   608  07D9  2FCD               	goto	l751
   609  07DA                     l863:
   610                           
   611                           ; Switch size 1, requested type "simple"
   612                           ; Number of cases is 9, Range of values is 0 to 8
   613                           ; switch strategies available:
   614                           ; Name         Instructions Cycles
   615                           ; simple_byte           28    15 (average)
   616                           ; direct_byte           35     8 (fixed)
   617                           ; jumptable            260     6 (fixed)
   618                           ;	Chosen strategy is simple_byte
   619  07DA  0874               	movf	??_led_C,w
   620  07DB  3A00               	xorlw	0	; case 0
   621  07DC  1903               	skipnz
   622  07DD  2FA1               	goto	l717
   623  07DE  3A01               	xorlw	1	; case 1
   624  07DF  1903               	skipnz
   625  07E0  2FA5               	goto	l719
   626  07E1  3A03               	xorlw	3	; case 2
   627  07E2  1903               	skipnz
   628  07E3  2FAA               	goto	l723
   629  07E4  3A01               	xorlw	1	; case 3
   630  07E5  1903               	skipnz
   631  07E6  2FAF               	goto	l727
   632  07E7  3A07               	xorlw	7	; case 4
   633  07E8  1903               	skipnz
   634  07E9  2FB4               	goto	l731
   635  07EA  3A01               	xorlw	1	; case 5
   636  07EB  1903               	skipnz
   637  07EC  2FB9               	goto	l735
   638  07ED  3A03               	xorlw	3	; case 6
   639  07EE  1903               	skipnz
   640  07EF  2FBE               	goto	l739
   641  07F0  3A01               	xorlw	1	; case 7
   642  07F1  1903               	skipnz
   643  07F2  2FC3               	goto	l743
   644  07F3  3A0F               	xorlw	15	; case 8
   645  07F4  1903               	skipnz
   646  07F5  2FC8               	goto	l747
   647  07F6  2FCD               	goto	l751
   648  07F7                     l84:
   649  07F7  0008               	return
   650  07F8                     __end_of_led_C:
   651                           
   652                           	psect	text3
   653  0774                     __ptext3:	
   654 ;; *************** function _Setup *****************
   655 ;; Defined at:
   656 ;;		line 74 in file "juego_de_carreras.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		status,2
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0
   673 ;;      Totals:         0       0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _Setup
   685  0774                     _Setup:
   686  0774                     l697:	
   687                           ;incstack = 0
   688                           ; Regs used in _Setup: [status,2]
   689                           
   690                           
   691                           ;juego_de_carreras.c: 75:     PORTA = 0;
   692  0774  1283               	bcf	3,5	;RP0=0, select bank0
   693  0775  1303               	bcf	3,6	;RP1=0, select bank0
   694  0776  0185               	clrf	5	;volatile
   695                           
   696                           ;juego_de_carreras.c: 76:     PORTC = 0;
   697  0777  0187               	clrf	7	;volatile
   698                           
   699                           ;juego_de_carreras.c: 77:     PORTD = 0;
   700  0778  0188               	clrf	8	;volatile
   701                           
   702                           ;juego_de_carreras.c: 78:     PORTE = 0;
   703  0779  0189               	clrf	9	;volatile
   704                           
   705                           ;juego_de_carreras.c: 79:     ANSEL = 0;
   706  077A  1683               	bsf	3,5	;RP0=1, select bank3
   707  077B  1703               	bsf	3,6	;RP1=1, select bank3
   708  077C  0188               	clrf	8	;volatile
   709                           
   710                           ;juego_de_carreras.c: 80:     ANSELH = 0;
   711  077D  0189               	clrf	9	;volatile
   712                           
   713                           ;juego_de_carreras.c: 81:     TRISC = 0;
   714  077E  1683               	bsf	3,5	;RP0=1, select bank1
   715  077F  1303               	bcf	3,6	;RP1=0, select bank1
   716  0780  0187               	clrf	7	;volatile
   717                           
   718                           ;juego_de_carreras.c: 82:     TRISD = 0;
   719  0781  0188               	clrf	8	;volatile
   720                           
   721                           ;juego_de_carreras.c: 83:     TRISE = 0;
   722  0782  0189               	clrf	9	;volatile
   723  0783                     l699:
   724                           
   725                           ;juego_de_carreras.c: 84:     TRISAbits.TRISA0 = 1;
   726  0783  1405               	bsf	5,0	;volatile
   727  0784                     l701:
   728                           
   729                           ;juego_de_carreras.c: 85:     TRISAbits.TRISA1 = 1;
   730  0784  1485               	bsf	5,1	;volatile
   731  0785                     l703:
   732                           
   733                           ;juego_de_carreras.c: 86:     TRISAbits.TRISA2 = 1;
   734  0785  1505               	bsf	5,2	;volatile
   735                           
   736                           ;juego_de_carreras.c: 87:     L=0;
   737  0786  01F3               	clrf	_L
   738  0787                     l55:
   739  0787  0008               	return
   740  0788                     __end_of_Setup:
   741  007E                     btemp	set	126	;btemp
   742  007E                     wtemp0	set	126
   743                           
   744                           	psect	config
   745                           
   746                           ;Config register CONFIG1 @ 0x2007
   747                           ;	Oscillator Selection bits
   748                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   749                           ;	Watchdog Timer Enable bit
   750                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   751                           ;	Power-up Timer Enable bit
   752                           ;	PWRTE = OFF, PWRT disabled
   753                           ;	RE3/MCLR pin function select bit
   754                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   755                           ;	Code Protection bit
   756                           ;	CP = OFF, Program memory code protection is disabled
   757                           ;	Data Code Protection bit
   758                           ;	CPD = OFF, Data memory code protection is disabled
   759                           ;	Brown Out Reset Selection bits
   760                           ;	BOREN = OFF, BOR disabled
   761                           ;	Internal External Switchover bit
   762                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   763                           ;	Fail-Safe Clock Monitor Enabled bit
   764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   765                           ;	Low Voltage Programming Enable bit
   766                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   767                           ;	In-Circuit Debugger Mode bit
   768                           ;	DEBUG = 0x1, unprogrammed default
   769  2007                     	org	8199
   770  2007  20D1               	dw	8401
   771                           
   772                           ;Config register CONFIG2 @ 0x2008
   773                           ;	Brown-out Reset Selection bit
   774                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   775                           ;	Flash Program Memory Self Write Enable bits
   776                           ;	WRT = OFF, Write protection off
   777  2008                     	org	8200
   778  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_suma_C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                              _Setup
                              _led_C
                             _suma_C
 ---------------------------------------------------------------------------------
 (1) _suma_C                                               3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _led_C                                                3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _led_C
   _suma_C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 25 18:37:10 2021

                      _L 0073                        _M 0072                        _l 0071  
                      _m 0070                       l55 0787                       l84 07F7  
                     u10 0769                       u11 0768                       u20 076F  
                     u21 076E                      l105 0773                      l701 0784  
                    l703 0785                      l711 076F                      l721 07A8  
                    l713 076F                      l705 0764                      l731 07B4  
                    l723 07AA                      l715 07A0                      l707 0769  
                    l741 07C1                      l733 07B7                      l725 07AD  
                    l717 07A1                      l709 076A                      l751 07CD  
                    l743 07C3                      l735 07B9                      l727 07AF  
                    l719 07A5                      l745 07C6                      l737 07BC  
                    l729 07B2                      l761 0788                      l747 07C8  
                    l739 07BE                      l755 07D2                      l763 078D  
                    l749 07CB                      l765 0796                      l863 07DA  
                    l697 0774                      l699 0783                     _main 0788  
                   btemp 007E                     start 0000                    ?_main 0074  
                  _ANSEL 0188                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _Setup 0774  
                  _led_C 07A0                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 07A0                   ??_main 0077  
                 ?_Setup 0074                   ?_led_C 0074                   _ANSELH 0189  
                 led_C@n 0074                   _suma_C 0763  __end_of__initialization 07FC  
         __pcstackCOMMON 0074            __end_of_Setup 0788            __end_of_led_C 07F8  
                ??_Setup 0074                  ??_led_C 0074               __pmaintext 0788  
                ?_suma_C 0074                  __ptext1 0763                  __ptext2 07A0  
                __ptext3 0774          __size_of_suma_C 0011     end_of_initialization 07FC  
                suma_C@W 0076                  suma_C@n 0075                _PORTAbits 0005  
              _PORTCbits 0007                _PORTDbits 0008                _PORTEbits 0009  
              _TRISAbits 0085           __end_of_suma_C 0774      start_initialization 07F8  
               ??_suma_C 0074              __pbssCOMMON 0070                ___latbits 0002  
         __size_of_Setup 0014           __size_of_led_C 0058            __size_of_main 0018  
