

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 19:07:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0006                     _PORTBbits	set	6
   368  000C                     _PIR1bits	set	12
   369  000B                     _INTCONbits	set	11
   370  0009                     _PORTE	set	9
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0008                     _PORTD	set	8
   375  0063                     _SSPIF	set	99
   376  0058                     _RBIF	set	88
   377  008F                     _OSCCONbits	set	143
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  0096                     _IOCB	set	150
   381  0095                     _WPUB	set	149
   382  0085                     _TRISAbits	set	133
   383  008C                     _PIE1bits	set	140
   384  0081                     _OPTION_REG	set	129
   385  0089                     _TRISE	set	137
   386  0088                     _TRISD	set	136
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   404  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   405  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   406  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   407  0015                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0015                     __end_of__initialization:
   411  0015  0183               	clrf	3
   412  0016  120A  118A  2882   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0070                     __pbssCOMMON:
   416  0070                     _L:
   417  0070                     	ds	1
   418  0071                     _h:
   419  0071                     	ds	1
   420  0072                     _H:
   421  0072                     	ds	1
   422  0073                     _Q:
   423  0073                     	ds	1
   424  0074                     _w:
   425  0074                     	ds	1
   426  0075                     _W:
   427  0075                     	ds	1
   428                           
   429                           	psect	cstackCOMMON
   430  0076                     __pcstackCOMMON:
   431  0076                     ?_push_0:
   432  0076                     ??_push_0:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0076                     ?_push_1:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0076                     ??_push_1:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0076                     ?_spiWrite:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0076                     ??_spiWrite:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0076                     ?_Setup:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0076                     ?_isr:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0076                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0076                     spiWrite@dat:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 1 bytes @ 0x0
   461  0076                     	ds	1
   462  0077                     ??_isr:
   463                           
   464                           ; 1 bytes @ 0x1
   465  0077                     	ds	2
   466  0079                     ??_Setup:
   467  0079                     ??_spiInit:	
   468                           ; 1 bytes @ 0x3
   469                           
   470  0079                     spiInit@sType:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475  0079                     	ds	1
   476  007A                     ??_main:
   477                           
   478                           ; 1 bytes @ 0x4
   479  007A                     	ds	1
   480                           
   481                           	psect	cstackBANK0
   482  0020                     __pcstackBANK0:
   483  0020                     ?_spiInit:
   484  0020                     spiInit@sDataSample:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489  0020                     	ds	1
   490  0021                     spiInit@sClockIdle:
   491                           
   492                           ; 1 bytes @ 0x1
   493  0021                     	ds	1
   494  0022                     spiInit@sTransmitEdge:
   495                           
   496                           ; 1 bytes @ 0x2
   497  0022                     	ds	1
   498                           
   499                           	psect	maintext
   500  0082                     __pmaintext:	
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 56 in file "salve2.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : B00/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0
   522 ;;      Temps:          1       0       0       0       0
   523 ;;      Totals:         1       0       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		_Setup
   528 ;;		_spiInit
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _main
   536  0082                     _main:
   537  0082                     l860:	
   538                           ;incstack = 0
   539                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   540                           
   541                           
   542                           ;salve2.c: 57:     Setup();
   543  0082  120A  118A  2019  120A  118A  	fcall	_Setup
   544                           
   545                           ;salve2.c: 58:     spiInit(SPI_SLAVE_SS_EN,SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW, SPI_
      +                          IDLE_2_ACTIVE);
   546  0087  3080               	movlw	128
   547  0088  00FA               	movwf	??_main
   548  0089  087A               	movf	??_main,w
   549  008A  1283               	bcf	3,5	;RP0=0, select bank0
   550  008B  1303               	bcf	3,6	;RP1=0, select bank0
   551  008C  00A0               	movwf	spiInit@sDataSample
   552  008D  01A1               	clrf	spiInit@sClockIdle
   553  008E  01A2               	clrf	spiInit@sTransmitEdge
   554  008F  3024               	movlw	36
   555  0090  120A  118A  2064  120A  118A  	fcall	_spiInit
   556  0095                     l76:	
   557                           ;salve2.c: 62:     while(1){
   558                           
   559  0095                     l77:	
   560                           ;salve2.c: 63:        }}
   561                           
   562  0095  2895               	goto	l76
   563  0096  120A  118A  280C   	ljmp	start
   564  0099                     __end_of_main:
   565                           
   566                           	psect	text1
   567  0064                     __ptext1:	
   568 ;; *************** function _spiInit *****************
   569 ;; Defined at:
   570 ;;		line 5 in file "SSSPI.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  sType           1    wreg     enum E1264
   573 ;;  sDataSample     1    0[BANK0 ] enum E1272
   574 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   575 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  sType           1    3[COMMON] enum E1264
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       3       0       0       0
   588 ;;      Locals:         1       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0
   590 ;;      Totals:         1       3       0       0       0
   591 ;;Total ram usage:        4 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    2
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _spiInit
   603  0064                     _spiInit:
   604                           
   605                           ;incstack = 0
   606                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   607                           ;spiInit@sType stored from wreg
   608  0064  00F9               	movwf	spiInit@sType
   609  0065                     l850:
   610                           
   611                           ;SSSPI.c: 5: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSSPI.c: 6: {;SSSPI.c: 7:     TRISC5 = 0;
   612  0065  1683               	bsf	3,5	;RP0=1, select bank1
   613  0066  1303               	bcf	3,6	;RP1=0, select bank1
   614  0067  1287               	bcf	7,5	;volatile
   615                           
   616                           ;SSSPI.c: 8:     if(sType & 0b00000100)
   617  0068  1D79               	btfss	spiInit@sType,2
   618  0069  286B               	goto	u101
   619  006A  286C               	goto	u100
   620  006B                     u101:
   621  006B  2874               	goto	l856
   622  006C                     u100:
   623  006C                     l852:
   624                           
   625                           ;SSSPI.c: 9:     {;SSSPI.c: 10:         SSPSTAT = sTransmitEdge;
   626  006C  1283               	bcf	3,5	;RP0=0, select bank0
   627  006D  1303               	bcf	3,6	;RP1=0, select bank0
   628  006E  0822               	movf	spiInit@sTransmitEdge,w
   629  006F  1683               	bsf	3,5	;RP0=1, select bank1
   630  0070  1303               	bcf	3,6	;RP1=0, select bank1
   631  0071  0094               	movwf	20	;volatile
   632  0072                     l854:
   633                           
   634                           ;SSSPI.c: 11:         TRISC3 = 1;
   635  0072  1587               	bsf	7,3	;volatile
   636                           
   637                           ;SSSPI.c: 12:     }
   638  0073  287C               	goto	l110
   639  0074                     l856:
   640                           
   641                           ;SSSPI.c: 14:     {;SSSPI.c: 15:         SSPSTAT = sDataSample | sTransmitEdge;
   642  0074  1283               	bcf	3,5	;RP0=0, select bank0
   643  0075  1303               	bcf	3,6	;RP1=0, select bank0
   644  0076  0820               	movf	spiInit@sDataSample,w
   645  0077  0422               	iorwf	spiInit@sTransmitEdge,w
   646  0078  1683               	bsf	3,5	;RP0=1, select bank1
   647  0079  1303               	bcf	3,6	;RP1=0, select bank1
   648  007A  0094               	movwf	20	;volatile
   649  007B                     l858:
   650                           
   651                           ;SSSPI.c: 16:         TRISC3 = 0;
   652  007B  1187               	bcf	7,3	;volatile
   653  007C                     l110:	
   654                           ;SSSPI.c: 17:     }
   655                           
   656                           
   657                           ;SSSPI.c: 19:     SSPCON = sType | sClockIdle;
   658  007C  0879               	movf	spiInit@sType,w
   659  007D  1283               	bcf	3,5	;RP0=0, select bank0
   660  007E  1303               	bcf	3,6	;RP1=0, select bank0
   661  007F  0421               	iorwf	spiInit@sClockIdle,w
   662  0080  0094               	movwf	20	;volatile
   663  0081                     l111:
   664  0081  0008               	return
   665  0082                     __end_of_spiInit:
   666                           
   667                           	psect	text2
   668  0019                     __ptext2:	
   669 ;; *************** function _Setup *****************
   670 ;; Defined at:
   671 ;;		line 67 in file "salve2.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    2
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _Setup
   701  0019                     _Setup:
   702  0019                     l758:	
   703                           ;incstack = 0
   704                           ; Regs used in _Setup: [wreg+status,2]
   705                           
   706                           
   707                           ;salve2.c: 69:     PORTA = 0;
   708  0019  1283               	bcf	3,5	;RP0=0, select bank0
   709  001A  1303               	bcf	3,6	;RP1=0, select bank0
   710  001B  0185               	clrf	5	;volatile
   711                           
   712                           ;salve2.c: 70:     PORTB = 0;
   713  001C  0186               	clrf	6	;volatile
   714                           
   715                           ;salve2.c: 71:     PORTC = 0;
   716  001D  0187               	clrf	7	;volatile
   717                           
   718                           ;salve2.c: 72:     PORTD = 0;
   719  001E  0188               	clrf	8	;volatile
   720                           
   721                           ;salve2.c: 73:     PORTE = 0;
   722  001F  0189               	clrf	9	;volatile
   723                           
   724                           ;salve2.c: 75:     TRISA = 0B00000000;
   725  0020  1683               	bsf	3,5	;RP0=1, select bank1
   726  0021  1303               	bcf	3,6	;RP1=0, select bank1
   727  0022  0185               	clrf	5	;volatile
   728  0023                     l760:
   729                           
   730                           ;salve2.c: 76:     TRISB = 0B00000011;
   731  0023  3003               	movlw	3
   732  0024  0086               	movwf	6	;volatile
   733  0025                     l762:
   734                           
   735                           ;salve2.c: 78:     TRISD = 0B00000000;
   736  0025  0188               	clrf	8	;volatile
   737  0026                     l764:
   738                           
   739                           ;salve2.c: 79:     TRISE = 0B0000;
   740  0026  0189               	clrf	9	;volatile
   741  0027                     l766:
   742                           
   743                           ;salve2.c: 81:     ANSEL = 0B00000000;
   744  0027  1683               	bsf	3,5	;RP0=1, select bank3
   745  0028  1703               	bsf	3,6	;RP1=1, select bank3
   746  0029  0188               	clrf	8	;volatile
   747  002A                     l768:
   748                           
   749                           ;salve2.c: 82:     ANSELH = 0B00000000;
   750  002A  0189               	clrf	9	;volatile
   751  002B                     l770:
   752                           
   753                           ;salve2.c: 84:     OPTION_REG =0B01010111 ;
   754  002B  3057               	movlw	87
   755  002C  1683               	bsf	3,5	;RP0=1, select bank1
   756  002D  1303               	bcf	3,6	;RP1=0, select bank1
   757  002E  0081               	movwf	1	;volatile
   758  002F                     l772:
   759                           
   760                           ;salve2.c: 86:     INTCONbits.GIE=1;
   761  002F  178B               	bsf	11,7	;volatile
   762  0030                     l774:
   763                           
   764                           ;salve2.c: 87:     INTCONbits.PEIE=1;
   765  0030  170B               	bsf	11,6	;volatile
   766  0031                     l776:
   767                           
   768                           ;salve2.c: 88:     INTCONbits.RBIE=1;
   769  0031  158B               	bsf	11,3	;volatile
   770  0032                     l778:
   771                           
   772                           ;salve2.c: 89:     INTCONbits.RBIF=0;
   773  0032  100B               	bcf	11,0	;volatile
   774  0033                     l780:
   775                           
   776                           ;salve2.c: 90:     PIR1bits.SSPIF = 0;
   777  0033  1283               	bcf	3,5	;RP0=0, select bank0
   778  0034  1303               	bcf	3,6	;RP1=0, select bank0
   779  0035  118C               	bcf	12,3	;volatile
   780  0036                     l782:
   781                           
   782                           ;salve2.c: 91:     PIE1bits.SSPIE = 1;
   783  0036  1683               	bsf	3,5	;RP0=1, select bank1
   784  0037  1303               	bcf	3,6	;RP1=0, select bank1
   785  0038  158C               	bsf	12,3	;volatile
   786  0039                     l784:
   787                           
   788                           ;salve2.c: 92:     TRISAbits.TRISA5 = 1;
   789  0039  1685               	bsf	5,5	;volatile
   790  003A                     l786:
   791                           
   792                           ;salve2.c: 93:     WPUB =0B00000011;
   793  003A  3003               	movlw	3
   794  003B  0095               	movwf	21	;volatile
   795  003C                     l788:
   796                           
   797                           ;salve2.c: 94:     IOCB = 0B00000011;
   798  003C  3003               	movlw	3
   799  003D  0096               	movwf	22	;volatile
   800  003E                     l82:
   801  003E  0008               	return
   802  003F                     __end_of_Setup:
   803                           
   804                           	psect	text3
   805  003F                     __ptext3:	
   806 ;; *************** function _isr *****************
   807 ;; Defined at:
   808 ;;		line 42 in file "salve2.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          2       0       0       0       0
   825 ;;      Totals:         2       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    1
   829 ;; This function calls:
   830 ;;		_push_0
   831 ;;		_push_1
   832 ;;		_spiWrite
   833 ;; This function is called by:
   834 ;;		Interrupt level 1
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _isr
   840  003F                     _isr:
   841  003F                     i1l802:
   842                           
   843                           ;salve2.c: 43:     if (RBIF==1){
   844  003F  1C0B               	btfss	11,0	;volatile
   845  0040  2842               	goto	u7_21
   846  0041  2843               	goto	u7_20
   847  0042                     u7_21:
   848  0042  284E               	goto	i1l808
   849  0043                     u7_20:
   850  0043                     i1l804:
   851                           
   852                           ;salve2.c: 44:          push_0 ();
   853  0043  120A  118A  2099  120A  118A  	fcall	_push_0
   854                           
   855                           ;salve2.c: 45:          push_1 ();
   856  0048  120A  118A  20AD  120A  118A  	fcall	_push_1
   857  004D                     i1l806:
   858                           
   859                           ;salve2.c: 46:          RBIF=0;}
   860  004D  100B               	bcf	11,0	;volatile
   861  004E                     i1l808:
   862                           
   863                           ;salve2.c: 47:      if(SSPIF == 1){
   864  004E  1283               	bcf	3,5	;RP0=0, select bank0
   865  004F  1303               	bcf	3,6	;RP1=0, select bank0
   866  0050  1D8C               	btfss	12,3	;volatile
   867  0051  2853               	goto	u8_21
   868  0052  2854               	goto	u8_20
   869  0053                     u8_21:
   870  0053  285D               	goto	i1l71
   871  0054                     u8_20:
   872  0054                     i1l810:
   873                           
   874                           ;salve2.c: 48:          spiWrite(PORTD);
   875  0054  0808               	movf	8,w	;volatile
   876  0055  120A  118A  20BF  120A  118A  	fcall	_spiWrite
   877  005A                     i1l812:
   878                           
   879                           ;salve2.c: 49:          SSPIF = 0;
   880  005A  1283               	bcf	3,5	;RP0=0, select bank0
   881  005B  1303               	bcf	3,6	;RP1=0, select bank0
   882  005C  118C               	bcf	12,3	;volatile
   883  005D                     i1l71:
   884  005D  0878               	movf	??_isr+1,w
   885  005E  008A               	movwf	10
   886  005F  0E77               	swapf	??_isr,w
   887  0060  0083               	movwf	3
   888  0061  0EFE               	swapf	btemp,f
   889  0062  0E7E               	swapf	btemp,w
   890  0063  0009               	retfie
   891  0064                     __end_of_isr:
   892                           
   893                           	psect	intentry
   894  0004                     __pintentry:	
   895                           ;incstack = 0
   896                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   897                           
   898  0004                     interrupt_function:
   899  007E                     saved_w	set	btemp
   900  0004  00FE               	movwf	btemp
   901  0005  0E03               	swapf	3,w
   902  0006  00F7               	movwf	??_isr
   903  0007  080A               	movf	10,w
   904  0008  00F8               	movwf	??_isr+1
   905  0009  120A  118A  283F   	ljmp	_isr
   906                           
   907                           	psect	text4
   908  00BF                     __ptext4:	
   909 ;; *************** function _spiWrite *****************
   910 ;; Defined at:
   911 ;;		line 27 in file "SSSPI.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  dat             1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  dat             1    0[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         1       0       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_isr
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _spiWrite
   940  00BF                     _spiWrite:
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _spiWrite: [wreg]
   944                           ;spiWrite@dat stored from wreg
   945  00BF  00F6               	movwf	spiWrite@dat
   946  00C0                     i1l756:
   947                           
   948                           ;SSSPI.c: 27: void spiWrite(char dat);SSSPI.c: 28: {;SSSPI.c: 29:     SSPBUF = dat;
   949  00C0  0876               	movf	spiWrite@dat,w
   950  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   951  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   952  00C3  0093               	movwf	19	;volatile
   953  00C4                     i1l120:
   954  00C4  0008               	return
   955  00C5                     __end_of_spiWrite:
   956                           
   957                           	psect	text5
   958  00AD                     __ptext5:	
   959 ;; *************** function _push_1 *****************
   960 ;; Defined at:
   961 ;;		line 110 in file "salve2.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_isr
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _push_1
   990  00AD                     _push_1:
   991  00AD                     i1l746:	
   992                           ;incstack = 0
   993                           ; Regs used in _push_1: [wreg+status,2+status,0]
   994                           
   995                           
   996                           ;salve2.c: 111:     if (PORTBbits.RB1==0){
   997  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   998  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   999  00AF  1886               	btfsc	6,1	;volatile
  1000  00B0  28B2               	goto	u3_21
  1001  00B1  28B3               	goto	u3_20
  1002  00B2                     u3_21:
  1003  00B2  28B6               	goto	i1l750
  1004  00B3                     u3_20:
  1005  00B3                     i1l748:
  1006                           
  1007                           ;salve2.c: 112:         w=1;}
  1008  00B3  01F4               	clrf	_w
  1009  00B4  0AF4               	incf	_w,f
  1010  00B5  28BE               	goto	i1l94
  1011  00B6                     i1l750:
  1012                           
  1013                           ;salve2.c: 114:         if(w==1){
  1014  00B6  0374               	decf	_w,w
  1015  00B7  1D03               	btfss	3,2
  1016  00B8  28BA               	goto	u4_21
  1017  00B9  28BB               	goto	u4_20
  1018  00BA                     u4_21:
  1019  00BA  28BE               	goto	i1l94
  1020  00BB                     u4_20:
  1021  00BB                     i1l752:
  1022                           
  1023                           ;salve2.c: 115:         w=0;
  1024  00BB  01F4               	clrf	_w
  1025  00BC                     i1l754:
  1026                           
  1027                           ;salve2.c: 116:         PORTD--;
  1028  00BC  3001               	movlw	1
  1029  00BD  0288               	subwf	8,f	;volatile
  1030  00BE                     i1l94:
  1031  00BE  0008               	return
  1032  00BF                     __end_of_push_1:
  1033                           
  1034                           	psect	text6
  1035  0099                     __ptext6:	
  1036 ;; *************** function _push_0 *****************
  1037 ;; Defined at:
  1038 ;;		line 100 in file "salve2.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_isr
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _push_0
  1067  0099                     _push_0:
  1068  0099                     i1l736:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _push_0: [wreg+status,2+status,0]
  1071                           
  1072                           
  1073                           ;salve2.c: 101:     if (PORTBbits.RB0==0){
  1074  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1075  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1076  009B  1806               	btfsc	6,0	;volatile
  1077  009C  289E               	goto	u1_21
  1078  009D  289F               	goto	u1_20
  1079  009E                     u1_21:
  1080  009E  28A2               	goto	i1l740
  1081  009F                     u1_20:
  1082  009F                     i1l738:
  1083                           
  1084                           ;salve2.c: 102:         W=1;}
  1085  009F  01F5               	clrf	_W
  1086  00A0  0AF5               	incf	_W,f
  1087  00A1  28AC               	goto	i1l88
  1088  00A2                     i1l740:
  1089                           
  1090                           ;salve2.c: 104:         if(W==1){
  1091  00A2  0375               	decf	_W,w
  1092  00A3  1D03               	btfss	3,2
  1093  00A4  28A6               	goto	u2_21
  1094  00A5  28A7               	goto	u2_20
  1095  00A6                     u2_21:
  1096  00A6  28AC               	goto	i1l88
  1097  00A7                     u2_20:
  1098  00A7                     i1l742:
  1099                           
  1100                           ;salve2.c: 105:         W=0;
  1101  00A7  01F5               	clrf	_W
  1102  00A8                     i1l744:
  1103                           
  1104                           ;salve2.c: 106:         PORTD++;
  1105  00A8  3001               	movlw	1
  1106  00A9  00F6               	movwf	??_push_0
  1107  00AA  0876               	movf	??_push_0,w
  1108  00AB  0788               	addwf	8,f	;volatile
  1109  00AC                     i1l88:
  1110  00AC  0008               	return
  1111  00AD                     __end_of_push_0:
  1112  007E                     btemp	set	126	;btemp
  1113  007E                     wtemp0	set	126
  1114                           
  1115                           	psect	config
  1116                           
  1117                           ;Config register CONFIG1 @ 0x2007
  1118                           ;	Oscillator Selection bits
  1119                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1120                           ;	Watchdog Timer Enable bit
  1121                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1122                           ;	Power-up Timer Enable bit
  1123                           ;	PWRTE = OFF, PWRT disabled
  1124                           ;	RE3/MCLR pin function select bit
  1125                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1126                           ;	Code Protection bit
  1127                           ;	CP = OFF, Program memory code protection is disabled
  1128                           ;	Data Code Protection bit
  1129                           ;	CPD = OFF, Data memory code protection is disabled
  1130                           ;	Brown Out Reset Selection bits
  1131                           ;	BOREN = OFF, BOR disabled
  1132                           ;	Internal External Switchover bit
  1133                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1134                           ;	Fail-Safe Clock Monitor Enabled bit
  1135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1136                           ;	Low Voltage Programming Enable bit
  1137                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1138                           ;	In-Circuit Debugger Mode bit
  1139                           ;	DEBUG = 0x1, unprogrammed default
  1140  2007                     	org	8199
  1141  2007  20D4               	dw	8404
  1142                           
  1143                           ;Config register CONFIG2 @ 0x2008
  1144                           ;	Brown-out Reset Selection bit
  1145                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1146                           ;	Flash Program Memory Self Write Enable bits
  1147                           ;	WRT = OFF, Write protection off
  1148  2008                     	org	8200
  1149  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_push_0
    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              4 COMMON     1     1      0
                              _Setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              3 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                             _push_0
                             _push_1
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _push_1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _push_0                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _spiInit

 _isr (ROOT)
   _push_0
   _push_1
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 19:07:30 2021

                      _H 0072                        _L 0070                        _Q 0073  
                      _W 0075                        _h 0071                        _w 0074  
            _SSPSTATbits 0094                       l82 003E                       l76 0095  
                     l77 0095                      l110 007C                      l111 0081  
                    l760 0023                      l770 002B                      l762 0025  
                    l850 0065                      l780 0033                      l772 002F  
                    l764 0026                      l852 006C                      l860 0082  
                    l782 0036                      l774 0030                      l766 0027  
                    l758 0019                      l854 0072                      l784 0039  
                    l776 0031                      l768 002A                      l856 0074  
                    l786 003A                      l778 0032                      l858 007B  
                    l788 003C                      u100 006C                      u101 006B  
                    _isr 003F                     ?_isr 0076                     _IOCB 0096  
                   _RBIF 0058                     i1l71 005D                     i1l94 00BE  
                   i1l88 00AC                     _WPUB 0095                     u1_20 009F  
                   u1_21 009E                     u2_20 00A7                     u2_21 00A6  
                   u3_20 00B3                     u3_21 00B2                     u4_20 00BB  
                   u4_21 00BA                     u7_20 0043                     u7_21 0042  
                   u8_20 0054                     u8_21 0053                     _main 0082  
                   btemp 007E                     start 000C                    ??_isr 0077  
                  ?_main 0076                    _ANSEL 0188                    i1l120 00C4  
                  i1l810 0054                    i1l802 003F                    i1l740 00A2  
                  i1l812 005A                    i1l804 0043                    i1l742 00A7  
                  i1l750 00B6                    i1l806 004D                    i1l744 00A8  
                  i1l736 0099                    i1l752 00BB                    i1l808 004E  
                  i1l738 009F                    i1l754 00BC                    i1l746 00AD  
                  i1l748 00B3                    i1l756 00C0                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _Setup 0019                    pclath 000A          __end_of_spiInit 0082  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0099                   ??_main 007A                   ?_Setup 0076  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _push_0 0099  
                 _push_1 00AD                   saved_w 007E         __end_of_spiWrite 00C5  
              ??_spiInit 0079  __end_of__initialization 0015           __pcstackCOMMON 0076  
          __end_of_Setup 003F                  ??_Setup 0079               __pmaintext 0082  
             __pintentry 0004                  ?_push_0 0076                  ?_push_1 0076  
                _SSPSTAT 0094                ?_spiWrite 0076                  __ptext1 0064  
                __ptext2 0019                  __ptext3 003F                  __ptext4 00BF  
                __ptext5 00AD                  __ptext6 0099          __size_of_push_0 0014  
        __size_of_push_1 0012             __size_of_isr 0025                  _spiInit 0064  
   end_of_initialization 0015               ??_spiWrite 0076                _PORTBbits 0006  
              _TRISAbits 0085              spiWrite@dat 0076           __end_of_push_0 00AD  
         __end_of_push_1 00BF      start_initialization 000F              __end_of_isr 0064  
               ??_push_0 0076                 ??_push_1 0076              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_spiWrite 0006  
               ?_spiInit 0020           __size_of_Setup 0026     spiInit@sTransmitEdge 0022  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C         __size_of_spiInit 001E            __size_of_main 0017  
               _spiWrite 00BF             spiInit@sType 0079        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _OPTION_REG 0081  
