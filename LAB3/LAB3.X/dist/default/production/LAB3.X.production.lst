

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 22:17:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.31
    40                           ; Generated 13/10/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000E                     	;# 
   480  000F                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0014                     	;# 
   486  0015                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  0081                     	;# 
   500  0085                     	;# 
   501  0086                     	;# 
   502  0087                     	;# 
   503  0088                     	;# 
   504  0089                     	;# 
   505  008C                     	;# 
   506  008D                     	;# 
   507  008E                     	;# 
   508  008F                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  0105                     	;# 
   528  0107                     	;# 
   529  0108                     	;# 
   530  0109                     	;# 
   531  010C                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0185                     	;# 
   537  0187                     	;# 
   538  0188                     	;# 
   539  0189                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542  0018                     _RCSTAbits	set	24
   543  0008                     _PORTDbits	set	8
   544  0019                     _TXREG	set	25
   545  001E                     _ADRESH	set	30
   546  0009                     _PORTE	set	9
   547  0008                     _PORTD	set	8
   548  0007                     _PORTC	set	7
   549  0006                     _PORTB	set	6
   550  0005                     _PORTA	set	5
   551  001F                     _ADCON0bits	set	31
   552  0001                     _TMR0	set	1
   553  000B                     _INTCONbits	set	11
   554  001A                     _RCREG	set	26
   555  000C                     _PIR1bits	set	12
   556  0066                     _ADIF	set	102
   557  0099                     _SPBRG	set	153
   558  0098                     _TXSTAbits	set	152
   559  008F                     _OSCCONbits	set	143
   560  009F                     _ADCON1	set	159
   561  0088                     _TRISDbits	set	136
   562  0089                     _TRISE	set	137
   563  0088                     _TRISD	set	136
   564  0087                     _TRISC	set	135
   565  0086                     _TRISB	set	134
   566  0085                     _TRISA	set	133
   567  008C                     _PIE1bits	set	140
   568  0187                     _BAUDCTLbits	set	391
   569  0189                     _ANSELH	set	393
   570  0188                     _ANSEL	set	392
   571                           
   572                           	psect	strings
   573  067D                     __pstrings:
   574  067D                     stringtab:
   575  067D                     __stringtab:
   576  067D                     stringcode:	
   577                           ;	String table - string pointers are 1 byte each
   578                           
   579  067D                     stringdir:
   580  067D  3006               	movlw	high stringdir
   581  067E  008A               	movwf	10
   582  067F  0804               	movf	4,w
   583  0680  0A84               	incf	4,f
   584  0681  0782               	addwf	2,f
   585  0682                     __stringbase:
   586  0682  3400               	retlw	0
   587  0683                     __end_of__stringtab:
   588  0683                     STR_1:
   589  0683  3441               	retlw	65	;'A'
   590  0684  3444               	retlw	68	;'D'
   591  0685  3443               	retlw	67	;'C'
   592  0686  3431               	retlw	49	;'1'
   593  0687  3420               	retlw	32	;' '
   594  0688  3441               	retlw	65	;'A'
   595  0689  3444               	retlw	68	;'D'
   596  068A  3443               	retlw	67	;'C'
   597  068B  3432               	retlw	50	;'2'
   598  068C  3420               	retlw	32	;' '
   599  068D  3443               	retlw	67	;'C'
   600  068E  344F               	retlw	79	;'O'
   601  068F  344E               	retlw	78	;'N'
   602  0690  3454               	retlw	84	;'T'
   603  0691  3400               	retlw	0
   604  0692                     STR_18:
   605  0692  342E               	retlw	46	;'.'
   606  0693  3400               	retlw	0
   607  0694                     STR_2:
   608  0694  3430               	retlw	48	;'0'
   609  0695  3400               	retlw	0
   610  0696                     STR_3:
   611  0696  3431               	retlw	49	;'1'
   612  0697  3400               	retlw	0
   613  0698                     STR_4:
   614  0698  3432               	retlw	50	;'2'
   615  0699  3400               	retlw	0
   616  069A                     STR_5:
   617  069A  3433               	retlw	51	;'3'
   618  069B  3400               	retlw	0
   619  069C                     STR_6:
   620  069C  3434               	retlw	52	;'4'
   621  069D  3400               	retlw	0
   622  069E                     STR_7:
   623  069E  3435               	retlw	53	;'5'
   624  069F  3400               	retlw	0
   625  06A0                     STR_8:
   626  06A0  3436               	retlw	54	;'6'
   627  06A1  3400               	retlw	0
   628  06A2                     STR_9:
   629  06A2  3437               	retlw	55	;'7'
   630  06A3  3400               	retlw	0
   631  06A4                     STR_10:
   632  06A4  3438               	retlw	56	;'8'
   633  06A5  3400               	retlw	0
   634  06A6                     STR_11:
   635  06A6  3439               	retlw	57	;'9'
   636  06A7  3400               	retlw	0
   637  06A8                     STR_12:
   638  06A8  3441               	retlw	65	;'A'
   639  06A9  3400               	retlw	0
   640  06AA                     STR_13:
   641  06AA  3442               	retlw	66	;'B'
   642  06AB  3400               	retlw	0
   643  06AC                     STR_14:
   644  06AC  3443               	retlw	67	;'C'
   645  06AD  3400               	retlw	0
   646  06AE                     STR_15:
   647  06AE  3444               	retlw	68	;'D'
   648  06AF  3400               	retlw	0
   649  06B0                     STR_16:
   650  06B0  3445               	retlw	69	;'E'
   651  06B1  3400               	retlw	0
   652  06B2                     STR_17:
   653  06B2  3446               	retlw	70	;'F'
   654  06B3  3400               	retlw	0
   655                           
   656                           	psect	cinit
   657  0011                     start_initialization:	
   658                           ; #config settings
   659                           
   660  0011                     __initialization:
   661                           
   662                           ; Clear objects allocated to COMMON
   663  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   664  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   665  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   666  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   667  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   668  0016  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   669                           
   670                           ; Clear objects allocated to BANK0
   671  0017  1383               	bcf	3,7	;select IRP bank0
   672  0018  303C               	movlw	low __pbssBANK0
   673  0019  0084               	movwf	4
   674  001A  3055               	movlw	low (__pbssBANK0+25)
   675  001B  120A  158A  27AC  120A  118A  	fcall	clear_ram0
   676  0020                     end_of_initialization:	
   677                           ;End of C runtime variable initialization code
   678                           
   679  0020                     __end_of__initialization:
   680  0020  0183               	clrf	3
   681  0021  120A  118A  2B10   	ljmp	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMMON
   684  0070                     __pbssCOMMON:
   685  0070                     _w:
   686  0070                     	ds	1
   687  0071                     _W:
   688  0071                     	ds	1
   689  0072                     _r:
   690  0072                     	ds	1
   691  0073                     _S:
   692  0073                     	ds	1
   693  0074                     _GET:
   694  0074                     	ds	1
   695  0075                     _z:
   696  0075                     	ds	1
   697                           
   698                           	psect	bssBANK0
   699  003C                     __pbssBANK0:
   700  003C                     _cont_3:
   701  003C                     	ds	1
   702  003D                     _cont_2:
   703  003D                     	ds	1
   704  003E                     _cont_1:
   705  003E                     	ds	1
   706  003F                     _POT2_Tas:
   707  003F                     	ds	1
   708  0040                     _POT1_Tas:
   709  0040                     	ds	1
   710  0041                     _POT2_Has:
   711  0041                     	ds	1
   712  0042                     _POT1_Has:
   713  0042                     	ds	1
   714  0043                     _POT2_Uas:
   715  0043                     	ds	1
   716  0044                     _POT1_Uas:
   717  0044                     	ds	1
   718  0045                     _POT2_T:
   719  0045                     	ds	1
   720  0046                     _POT1_T:
   721  0046                     	ds	1
   722  0047                     _POT2_H:
   723  0047                     	ds	1
   724  0048                     _POT1_H:
   725  0048                     	ds	1
   726  0049                     _POT2_U:
   727  0049                     	ds	1
   728  004A                     _POT1_U:
   729  004A                     	ds	1
   730  004B                     _cont:
   731  004B                     	ds	1
   732  004C                     _tem2:
   733  004C                     	ds	1
   734  004D                     _tem1:
   735  004D                     	ds	1
   736  004E                     _k:
   737  004E                     	ds	1
   738  004F                     _K:
   739  004F                     	ds	1
   740  0050                     _h:
   741  0050                     	ds	1
   742  0051                     _H:
   743  0051                     	ds	1
   744  0052                     _Q:
   745  0052                     	ds	1
   746  0053                     _l:
   747  0053                     	ds	1
   748  0054                     _L:
   749  0054                     	ds	1
   750                           
   751                           	psect	clrtext
   752  0FAC                     clear_ram0:	
   753                           ;	Called with FSR containing the base address, and
   754                           ;	W with the last address+1
   755                           
   756  0FAC  0064               	clrwdt	;clear the watchdog before getting into this loop
   757  0FAD                     clrloop0:
   758  0FAD  0180               	clrf	0	;clear RAM location pointed to by FSR
   759  0FAE  0A84               	incf	4,f	;increment pointer
   760  0FAF  0604               	xorwf	4,w	;XOR with final address
   761  0FB0  1903               	btfsc	3,2	;have we reached the end yet?
   762  0FB1  3400               	retlw	0	;all done for this memory range, return
   763  0FB2  0604               	xorwf	4,w	;XOR again to restore value
   764  0FB3  2FAD               	goto	clrloop0	;do the next byte
   765                           
   766                           	psect	cstackCOMMON
   767  0076                     __pcstackCOMMON:
   768  0076                     ?_send:
   769  0076                     ??_send:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0076                     ?_Setup:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0076                     ?_SET_RXT:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0076                     ?_SET_TXR:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0076                     ?_LCD_IN:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0076                     ?_LCD_CL:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0076                     ?_L_ADC:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0076                     ?_pull:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0076                     ?_push:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0076                     ?_CONVET_cont:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0076                     ?_initOsc:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0076                     ?_CONVET:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0076                     ?_LCD_ON:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0076                     ?_LCD_TIM:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0076                     ?_isr:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0076                     ?_main:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0076                     ?_LCD_PLAY:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0076                     ?_LCD_P:	
   821                           ; 1 bytes @ 0x0
   822                           
   823                           
   824                           ; 1 bytes @ 0x0
   825  0076                     	ds	2
   826  0078                     ??_isr:
   827                           
   828                           ; 1 bytes @ 0x2
   829  0078                     	ds	4
   830                           
   831                           	psect	cstackBANK0
   832  0020                     __pcstackBANK0:
   833  0020                     ??_SET_RXT:
   834  0020                     ??_SET_TXR:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0020                     ??_L_ADC:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0020                     ??_push:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     ??_initOsc:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     ?_ADC_CHS_CLKS:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0020                     ??_LCD_ON:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     ??_LCD_TIM:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0020                     ??_LCD_PLAY:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0020                     ?___bmul:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0020                     ?___wmul:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     ADC_CHS_CLKS@S:	
   865                           ; 2 bytes @ 0x0
   866                           
   867  0020                     ___bmul@multiplicand:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     ___wmul@multiplier:	
   871                           ; 1 bytes @ 0x0
   872                           
   873                           
   874                           ; 2 bytes @ 0x0
   875  0020                     	ds	1
   876  0021                     ??_ADC_CHS_CLKS:
   877  0021                     ??___bmul:	
   878                           ; 1 bytes @ 0x1
   879                           
   880  0021                     LCD_PLAY@D:	
   881                           ; 1 bytes @ 0x1
   882                           
   883                           
   884                           ; 1 bytes @ 0x1
   885  0021                     	ds	1
   886  0022                     ??_LCD_P:
   887  0022                     LCD_ON@C:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0022                     initOsc@IRCF:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0022                     ___bmul@product:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0022                     ___wmul@multiplicand:	
   897                           ; 1 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901  0022                     	ds	1
   902  0023                     ??_Setup:
   903  0023                     ??_LCD_IN:	
   904                           ; 1 bytes @ 0x3
   905                           
   906  0023                     ??_LCD_CL:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0023                     LCD_P@D:	
   910                           ; 1 bytes @ 0x3
   911                           
   912  0023                     ADC_CHS_CLKS@C:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0023                     ___bmul@multiplier:	
   916                           ; 1 bytes @ 0x3
   917                           
   918                           
   919                           ; 1 bytes @ 0x3
   920  0023                     	ds	1
   921  0024                     ?_LCD_POINT:
   922  0024                     ??___wmul:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0024                     LCD_POINT@x:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0024                     ___wmul@product:	
   929                           ; 2 bytes @ 0x4
   930                           
   931                           
   932                           ; 2 bytes @ 0x4
   933  0024                     	ds	2
   934  0026                     ?___awdiv:
   935  0026                     LCD_POINT@y:	
   936                           ; 2 bytes @ 0x6
   937                           
   938  0026                     ___awdiv@divisor:	
   939                           ; 2 bytes @ 0x6
   940                           
   941                           
   942                           ; 2 bytes @ 0x6
   943  0026                     	ds	2
   944  0028                     LCD_POINT@D:
   945  0028                     ___awdiv@dividend:	
   946                           ; 1 bytes @ 0x8
   947                           
   948                           
   949                           ; 2 bytes @ 0x8
   950  0028                     	ds	1
   951  0029                     ??_LCD_POINT:
   952                           
   953                           ; 1 bytes @ 0x9
   954  0029                     	ds	1
   955  002A                     ??___awdiv:
   956  002A                     LCD_POINT@LOC:	
   957                           ; 1 bytes @ 0xA
   958                           
   959                           
   960                           ; 1 bytes @ 0xA
   961  002A                     	ds	1
   962  002B                     ?_LCDVAL1:
   963  002B                     ___awdiv@counter:	
   964                           ; 1 bytes @ 0xB
   965                           
   966  002B                     LCDVAL1@x:	
   967                           ; 1 bytes @ 0xB
   968                           
   969                           
   970                           ; 2 bytes @ 0xB
   971  002B                     	ds	1
   972  002C                     ___awdiv@sign:
   973                           
   974                           ; 1 bytes @ 0xC
   975  002C                     	ds	1
   976  002D                     LCDVAL1@Z:
   977  002D                     ___awdiv@quotient:	
   978                           ; 2 bytes @ 0xD
   979                           
   980                           
   981                           ; 2 bytes @ 0xD
   982  002D                     	ds	2
   983  002F                     ??_LCDVAL1:
   984  002F                     ??_CONVET_cont:	
   985                           ; 1 bytes @ 0xF
   986                           
   987  002F                     ??_CONVET:	
   988                           ; 1 bytes @ 0xF
   989                           
   990                           
   991                           ; 1 bytes @ 0xF
   992  002F                     	ds	8
   993  0037                     _CONVET$1215:
   994                           
   995                           ; 2 bytes @ 0x17
   996  0037                     	ds	2
   997  0039                     ??_pull:
   998                           
   999                           ; 1 bytes @ 0x19
  1000  0039                     	ds	1
  1001  003A                     ??_main:
  1002                           
  1003                           ; 1 bytes @ 0x1A
  1004  003A                     	ds	2
  1005                           
  1006                           	psect	maintext
  1007  0310                     __pmaintext:	
  1008 ;;
  1009 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1010 ;;
  1011 ;; *************** function _main *****************
  1012 ;; Defined at:
  1013 ;;		line 76 in file "LCD16X2.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : B00/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          0       2       0       0       0
  1030 ;;      Totals:         0       2       0       0       0
  1031 ;;Total ram usage:        2 bytes
  1032 ;; Hardware stack levels required when called:    7
  1033 ;; This function calls:
  1034 ;;		_CONVET_cont
  1035 ;;		_LCDVAL1
  1036 ;;		_LCD_CL
  1037 ;;		_LCD_IN
  1038 ;;		_LCD_POINT
  1039 ;;		_L_ADC
  1040 ;;		_SET_RXT
  1041 ;;		_SET_TXR
  1042 ;;		_Setup
  1043 ;;		_pull
  1044 ;;		_push
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _main
  1052  0310                     _main:
  1053  0310                     l2366:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1056                           
  1057                           
  1058                           ;LCD16X2.c: 77:     Setup();
  1059  0310  120A  118A  2792  120A  118A  	fcall	_Setup
  1060  0315                     l2368:
  1061                           
  1062                           ;LCD16X2.c: 78:     SET_RXT();
  1063  0315  120A  158A  27BF  120A  118A  	fcall	_SET_RXT
  1064  031A                     l2370:
  1065                           
  1066                           ;LCD16X2.c: 79:     SET_TXR();
  1067  031A  120A  118A  27F1  120A  118A  	fcall	_SET_TXR
  1068  031F                     l2372:
  1069                           
  1070                           ;LCD16X2.c: 80:     LCD_IN();
  1071  031F  120A  118A  26E7  120A  118A  	fcall	_LCD_IN
  1072  0324                     l2374:
  1073                           
  1074                           ;LCD16X2.c: 81:     LCD_CL();
  1075  0324  120A  158A  27A5  120A  118A  	fcall	_LCD_CL
  1076  0329                     l2376:
  1077                           
  1078                           ;LCD16X2.c: 82:     LCD_POINT(0,1,"ADC1 ADC2 CONT");
  1079  0329  3000               	movlw	0
  1080  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1081  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1082  032C  00A4               	movwf	LCD_POINT@x
  1083  032D  00A5               	movwf	LCD_POINT@x+1
  1084  032E  3001               	movlw	1
  1085  032F  00A6               	movwf	LCD_POINT@y
  1086  0330  3000               	movlw	0
  1087  0331  00A7               	movwf	LCD_POINT@y+1
  1088  0332  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1089  0333  00BA               	movwf	??_main
  1090  0334  083A               	movf	??_main,w
  1091  0335  00A8               	movwf	LCD_POINT@D
  1092  0336  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  1093  033B                     l2378:
  1094                           
  1095                           ;LCD16X2.c: 83:     LCDVAL1 (1, 16);
  1096  033B  3001               	movlw	1
  1097  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1098  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1099  033E  00AB               	movwf	LCDVAL1@x
  1100  033F  3000               	movlw	0
  1101  0340  00AC               	movwf	LCDVAL1@x+1
  1102  0341  3010               	movlw	16
  1103  0342  00AD               	movwf	LCDVAL1@Z
  1104  0343  3000               	movlw	0
  1105  0344  00AE               	movwf	LCDVAL1@Z+1
  1106  0345  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1107  034A                     l2380:
  1108                           
  1109                           ;LCD16X2.c: 84:     LCDVAL1 (6, 16);
  1110  034A  3006               	movlw	6
  1111  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1112  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1113  034D  00AB               	movwf	LCDVAL1@x
  1114  034E  3000               	movlw	0
  1115  034F  00AC               	movwf	LCDVAL1@x+1
  1116  0350  3010               	movlw	16
  1117  0351  00AD               	movwf	LCDVAL1@Z
  1118  0352  3000               	movlw	0
  1119  0353  00AE               	movwf	LCDVAL1@Z+1
  1120  0354  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1121  0359                     l2382:
  1122                           
  1123                           ;LCD16X2.c: 91:     L_ADC ();
  1124  0359  120A  158A  27B4  120A  118A  	fcall	_L_ADC
  1125  035E                     l2384:
  1126                           
  1127                           ;LCD16X2.c: 92:     pull();
  1128  035E  120A  118A  2715  120A  118A  	fcall	_pull
  1129  0363                     l2386:
  1130                           
  1131                           ;LCD16X2.c: 93:     LCDVAL1 (0,POT1_U);
  1132  0363  3000               	movlw	0
  1133  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0366  00AB               	movwf	LCDVAL1@x
  1136  0367  00AC               	movwf	LCDVAL1@x+1
  1137  0368  084A               	movf	_POT1_U,w
  1138  0369  00BA               	movwf	??_main
  1139  036A  01BB               	clrf	??_main+1
  1140  036B  083A               	movf	??_main,w
  1141  036C  00AD               	movwf	LCDVAL1@Z
  1142  036D  083B               	movf	??_main+1,w
  1143  036E  00AE               	movwf	LCDVAL1@Z+1
  1144  036F  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1145  0374                     l2388:
  1146                           
  1147                           ;LCD16X2.c: 94:     LCDVAL1 (2,POT1_T);
  1148  0374  3002               	movlw	2
  1149  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0377  00AB               	movwf	LCDVAL1@x
  1152  0378  3000               	movlw	0
  1153  0379  00AC               	movwf	LCDVAL1@x+1
  1154  037A  0846               	movf	_POT1_T,w
  1155  037B  00BA               	movwf	??_main
  1156  037C  01BB               	clrf	??_main+1
  1157  037D  083A               	movf	??_main,w
  1158  037E  00AD               	movwf	LCDVAL1@Z
  1159  037F  083B               	movf	??_main+1,w
  1160  0380  00AE               	movwf	LCDVAL1@Z+1
  1161  0381  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1162  0386                     l2390:
  1163                           
  1164                           ;LCD16X2.c: 95:     LCDVAL1 (3,POT1_H);
  1165  0386  3003               	movlw	3
  1166  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0389  00AB               	movwf	LCDVAL1@x
  1169  038A  3000               	movlw	0
  1170  038B  00AC               	movwf	LCDVAL1@x+1
  1171  038C  0848               	movf	_POT1_H,w
  1172  038D  00BA               	movwf	??_main
  1173  038E  01BB               	clrf	??_main+1
  1174  038F  083A               	movf	??_main,w
  1175  0390  00AD               	movwf	LCDVAL1@Z
  1176  0391  083B               	movf	??_main+1,w
  1177  0392  00AE               	movwf	LCDVAL1@Z+1
  1178  0393  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1179  0398                     l2392:
  1180                           
  1181                           ;LCD16X2.c: 96:     LCDVAL1 (5,POT2_U);
  1182  0398  3005               	movlw	5
  1183  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1184  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1185  039B  00AB               	movwf	LCDVAL1@x
  1186  039C  3000               	movlw	0
  1187  039D  00AC               	movwf	LCDVAL1@x+1
  1188  039E  0849               	movf	_POT2_U,w
  1189  039F  00BA               	movwf	??_main
  1190  03A0  01BB               	clrf	??_main+1
  1191  03A1  083A               	movf	??_main,w
  1192  03A2  00AD               	movwf	LCDVAL1@Z
  1193  03A3  083B               	movf	??_main+1,w
  1194  03A4  00AE               	movwf	LCDVAL1@Z+1
  1195  03A5  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1196  03AA                     l2394:
  1197                           
  1198                           ;LCD16X2.c: 97:     LCDVAL1 (7,POT2_T);
  1199  03AA  3007               	movlw	7
  1200  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1201  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1202  03AD  00AB               	movwf	LCDVAL1@x
  1203  03AE  3000               	movlw	0
  1204  03AF  00AC               	movwf	LCDVAL1@x+1
  1205  03B0  0845               	movf	_POT2_T,w
  1206  03B1  00BA               	movwf	??_main
  1207  03B2  01BB               	clrf	??_main+1
  1208  03B3  083A               	movf	??_main,w
  1209  03B4  00AD               	movwf	LCDVAL1@Z
  1210  03B5  083B               	movf	??_main+1,w
  1211  03B6  00AE               	movwf	LCDVAL1@Z+1
  1212  03B7  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1213  03BC                     l2396:
  1214                           
  1215                           ;LCD16X2.c: 98:     LCDVAL1 (8,POT2_H);
  1216  03BC  3008               	movlw	8
  1217  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1218  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1219  03BF  00AB               	movwf	LCDVAL1@x
  1220  03C0  3000               	movlw	0
  1221  03C1  00AC               	movwf	LCDVAL1@x+1
  1222  03C2  0847               	movf	_POT2_H,w
  1223  03C3  00BA               	movwf	??_main
  1224  03C4  01BB               	clrf	??_main+1
  1225  03C5  083A               	movf	??_main,w
  1226  03C6  00AD               	movwf	LCDVAL1@Z
  1227  03C7  083B               	movf	??_main+1,w
  1228  03C8  00AE               	movwf	LCDVAL1@Z+1
  1229  03C9  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1230  03CE                     l2398:
  1231                           
  1232                           ;LCD16X2.c: 99:     push();
  1233  03CE  120A  118A  26B4  120A  118A  	fcall	_push
  1234  03D3                     l2400:
  1235                           
  1236                           ;LCD16X2.c: 100:     CONVET_cont();
  1237  03D3  120A  118A  252A  120A  118A  	fcall	_CONVET_cont
  1238  03D8                     l2402:
  1239                           
  1240                           ;LCD16X2.c: 101:     LCDVAL1 (10,cont_1);
  1241  03D8  300A               	movlw	10
  1242  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1243  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1244  03DB  00AB               	movwf	LCDVAL1@x
  1245  03DC  3000               	movlw	0
  1246  03DD  00AC               	movwf	LCDVAL1@x+1
  1247  03DE  083E               	movf	_cont_1,w
  1248  03DF  00BA               	movwf	??_main
  1249  03E0  01BB               	clrf	??_main+1
  1250  03E1  083A               	movf	??_main,w
  1251  03E2  00AD               	movwf	LCDVAL1@Z
  1252  03E3  083B               	movf	??_main+1,w
  1253  03E4  00AE               	movwf	LCDVAL1@Z+1
  1254  03E5  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1255  03EA                     l2404:
  1256                           
  1257                           ;LCD16X2.c: 102:     LCDVAL1 (11,cont_2);
  1258  03EA  300B               	movlw	11
  1259  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1260  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1261  03ED  00AB               	movwf	LCDVAL1@x
  1262  03EE  3000               	movlw	0
  1263  03EF  00AC               	movwf	LCDVAL1@x+1
  1264  03F0  083D               	movf	_cont_2,w
  1265  03F1  00BA               	movwf	??_main
  1266  03F2  01BB               	clrf	??_main+1
  1267  03F3  083A               	movf	??_main,w
  1268  03F4  00AD               	movwf	LCDVAL1@Z
  1269  03F5  083B               	movf	??_main+1,w
  1270  03F6  00AE               	movwf	LCDVAL1@Z+1
  1271  03F7  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1272  03FC                     l2406:
  1273                           
  1274                           ;LCD16X2.c: 103:     LCDVAL1 (12,cont_3);
  1275  03FC  300C               	movlw	12
  1276  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1277  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1278  03FF  00AB               	movwf	LCDVAL1@x
  1279  0400  3000               	movlw	0
  1280  0401  00AC               	movwf	LCDVAL1@x+1
  1281  0402  083C               	movf	_cont_3,w
  1282  0403  00BA               	movwf	??_main
  1283  0404  01BB               	clrf	??_main+1
  1284  0405  083A               	movf	??_main,w
  1285  0406  00AD               	movwf	LCDVAL1@Z
  1286  0407  083B               	movf	??_main+1,w
  1287  0408  00AE               	movwf	LCDVAL1@Z+1
  1288  0409  120A  118A  21A3  120A  118A  	fcall	_LCDVAL1
  1289  040E  2B59               	goto	l2382
  1290  040F  120A  118A  280E   	ljmp	start
  1291  0412                     __end_of_main:
  1292                           
  1293                           	psect	text1
  1294  06B4                     __ptext1:	
  1295 ;; *************** function _push *****************
  1296 ;; Defined at:
  1297 ;;		line 207 in file "LCD16X2.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0
  1313 ;;      Temps:          0       1       0       0       0
  1314 ;;      Totals:         0       1       0       0       0
  1315 ;;Total ram usage:        1 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    2
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _push
  1327  06B4                     _push:
  1328  06B4                     l2340:	
  1329                           ;incstack = 0
  1330                           ; Regs used in _push: [wreg+status,2+status,0]
  1331                           
  1332                           
  1333                           ;LCD16X2.c: 208:     if(GET==43){
  1334  06B4  302B               	movlw	43
  1335  06B5  0674               	xorwf	_GET,w
  1336  06B6  1D03               	btfss	3,2
  1337  06B7  2EB9               	goto	u701
  1338  06B8  2EBA               	goto	u700
  1339  06B9                     u701:
  1340  06B9  2EBC               	goto	l2344
  1341  06BA                     u700:
  1342  06BA                     l2342:
  1343                           
  1344                           ;LCD16X2.c: 209:         W=1;}
  1345  06BA  01F1               	clrf	_W
  1346  06BB  0AF1               	incf	_W,f
  1347  06BC                     l2344:
  1348                           
  1349                           ;LCD16X2.c: 210:     if(GET==13 && W==1 ){
  1350  06BC  300D               	movlw	13
  1351  06BD  0674               	xorwf	_GET,w
  1352  06BE  1D03               	btfss	3,2
  1353  06BF  2EC1               	goto	u711
  1354  06C0  2EC2               	goto	u710
  1355  06C1                     u711:
  1356  06C1  2ECE               	goto	l2352
  1357  06C2                     u710:
  1358  06C2                     l2346:
  1359  06C2  0371               	decf	_W,w
  1360  06C3  1D03               	btfss	3,2
  1361  06C4  2EC6               	goto	u721
  1362  06C5  2EC7               	goto	u720
  1363  06C6                     u721:
  1364  06C6  2ECE               	goto	l2352
  1365  06C7                     u720:
  1366  06C7                     l2348:
  1367                           
  1368                           ;LCD16X2.c: 211:             W=0;
  1369  06C7  01F1               	clrf	_W
  1370  06C8                     l2350:
  1371                           
  1372                           ;LCD16X2.c: 212:             cont++;}
  1373  06C8  3001               	movlw	1
  1374  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1375  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1376  06CB  00A0               	movwf	??_push
  1377  06CC  0820               	movf	??_push,w
  1378  06CD  07CB               	addwf	_cont,f
  1379  06CE                     l2352:
  1380                           
  1381                           ;LCD16X2.c: 213:     if (GET==45){
  1382  06CE  302D               	movlw	45
  1383  06CF  0674               	xorwf	_GET,w
  1384  06D0  1D03               	btfss	3,2
  1385  06D1  2ED3               	goto	u731
  1386  06D2  2ED4               	goto	u730
  1387  06D3                     u731:
  1388  06D3  2ED6               	goto	l2356
  1389  06D4                     u730:
  1390  06D4                     l2354:
  1391                           
  1392                           ;LCD16X2.c: 214:         w=1;}
  1393  06D4  01F0               	clrf	_w
  1394  06D5  0AF0               	incf	_w,f
  1395  06D6                     l2356:
  1396                           
  1397                           ;LCD16X2.c: 215:     if(GET==13 && w==1){
  1398  06D6  300D               	movlw	13
  1399  06D7  0674               	xorwf	_GET,w
  1400  06D8  1D03               	btfss	3,2
  1401  06D9  2EDB               	goto	u741
  1402  06DA  2EDC               	goto	u740
  1403  06DB                     u741:
  1404  06DB  2EE6               	goto	l191
  1405  06DC                     u740:
  1406  06DC                     l2358:
  1407  06DC  0370               	decf	_w,w
  1408  06DD  1D03               	btfss	3,2
  1409  06DE  2EE0               	goto	u751
  1410  06DF  2EE1               	goto	u750
  1411  06E0                     u751:
  1412  06E0  2EE6               	goto	l191
  1413  06E1                     u750:
  1414  06E1                     l2360:
  1415                           
  1416                           ;LCD16X2.c: 216:             W=0;
  1417  06E1  01F1               	clrf	_W
  1418  06E2                     l2362:
  1419                           
  1420                           ;LCD16X2.c: 217:             cont--;}
  1421  06E2  3001               	movlw	1
  1422  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1423  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1424  06E5  02CB               	subwf	_cont,f
  1425  06E6                     l191:
  1426  06E6  0008               	return
  1427  06E7                     __end_of_push:
  1428                           
  1429                           	psect	text2
  1430  0715                     __ptext2:	
  1431 ;; *************** function _pull *****************
  1432 ;; Defined at:
  1433 ;;		line 133 in file "LCD16X2.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       1       0       0       0
  1450 ;;      Totals:         0       1       0       0       0
  1451 ;;Total ram usage:        1 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    4
  1454 ;; This function calls:
  1455 ;;		_ADC_CHS_CLKS
  1456 ;;		_CONVET
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _pull
  1464  0715                     _pull:
  1465  0715                     l2326:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _pull: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1468                           
  1469                           
  1470                           ;LCD16X2.c: 134:     if (Q==1){
  1471  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0717  0352               	decf	_Q,w
  1474  0718  1D03               	btfss	3,2
  1475  0719  2F1B               	goto	u691
  1476  071A  2F1C               	goto	u690
  1477  071B                     u691:
  1478  071B  2F30               	goto	l2334
  1479  071C                     u690:
  1480  071C                     l2328:
  1481                           
  1482                           ;LCD16X2.c: 135:         tem1=ADRESH;
  1483  071C  081E               	movf	30,w	;volatile
  1484  071D  00B9               	movwf	??_pull
  1485  071E  0839               	movf	??_pull,w
  1486  071F  00CD               	movwf	_tem1
  1487  0720                     l2330:
  1488                           
  1489                           ;LCD16X2.c: 136:         ADC_CHS_CLKS (1,2);
  1490  0720  3002               	movlw	2
  1491  0721  00B9               	movwf	??_pull
  1492  0722  0839               	movf	??_pull,w
  1493  0723  00A0               	movwf	ADC_CHS_CLKS@S
  1494  0724  3001               	movlw	1
  1495  0725  120A  118A  2412  120A  118A  	fcall	_ADC_CHS_CLKS
  1496  072A                     l2332:
  1497                           
  1498                           ;LCD16X2.c: 137:         CONVET();
  1499  072A  120A  118A  2024  120A  118A  	fcall	_CONVET
  1500                           
  1501                           ;LCD16X2.c: 138:     }
  1502  072F  2F3F               	goto	l161
  1503  0730                     l2334:
  1504                           
  1505                           ;LCD16X2.c: 140:         tem2=ADRESH;
  1506  0730  081E               	movf	30,w	;volatile
  1507  0731  00B9               	movwf	??_pull
  1508  0732  0839               	movf	??_pull,w
  1509  0733  00CC               	movwf	_tem2
  1510  0734                     l2336:
  1511                           
  1512                           ;LCD16X2.c: 141:         ADC_CHS_CLKS (0,2);
  1513  0734  3002               	movlw	2
  1514  0735  00B9               	movwf	??_pull
  1515  0736  0839               	movf	??_pull,w
  1516  0737  00A0               	movwf	ADC_CHS_CLKS@S
  1517  0738  3000               	movlw	0
  1518  0739  120A  118A  2412  120A  118A  	fcall	_ADC_CHS_CLKS
  1519  073E  2F2A               	goto	l2332
  1520  073F                     l161:
  1521  073F  0008               	return
  1522  0740                     __end_of_pull:
  1523                           
  1524                           	psect	text3
  1525  0024                     __ptext3:	
  1526 ;; *************** function _CONVET *****************
  1527 ;; Defined at:
  1528 ;;		line 151 in file "LCD16X2.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       2       0       0       0
  1544 ;;      Temps:          0       8       0       0       0
  1545 ;;      Totals:         0      10       0       0       0
  1546 ;;Total ram usage:       10 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    3
  1549 ;; This function calls:
  1550 ;;		___awdiv
  1551 ;;		___bmul
  1552 ;;		___wmul
  1553 ;; This function is called by:
  1554 ;;		_pull
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _CONVET
  1560  0024                     _CONVET:
  1561  0024                     l2180:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _CONVET: [wreg+status,2+status,0+pclath+cstack]
  1564                           
  1565                           
  1566                           ;LCD16X2.c: 152:     L=tem1;
  1567  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0026  084D               	movf	_tem1,w
  1570  0027  00AF               	movwf	??_CONVET
  1571  0028  082F               	movf	??_CONVET,w
  1572  0029  00D4               	movwf	_L
  1573                           
  1574                           ;LCD16X2.c: 153:     l=tem2;
  1575  002A  084C               	movf	_tem2,w
  1576  002B  00AF               	movwf	??_CONVET
  1577  002C  082F               	movf	??_CONVET,w
  1578  002D  00D3               	movwf	_l
  1579  002E                     l2182:
  1580                           
  1581                           ;LCD16X2.c: 154:     POT1_U=(L/51);
  1582  002E  3033               	movlw	51
  1583  002F  00A6               	movwf	___awdiv@divisor
  1584  0030  3000               	movlw	0
  1585  0031  00A7               	movwf	___awdiv@divisor+1
  1586  0032  0854               	movf	_L,w
  1587  0033  00AF               	movwf	??_CONVET
  1588  0034  01B0               	clrf	??_CONVET+1
  1589  0035  082F               	movf	??_CONVET,w
  1590  0036  00A8               	movwf	___awdiv@dividend
  1591  0037  0830               	movf	??_CONVET+1,w
  1592  0038  00A9               	movwf	___awdiv@dividend+1
  1593  0039  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1594  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1595  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0040  0826               	movf	?___awdiv,w
  1597  0041  00B1               	movwf	??_CONVET+2
  1598  0042  0831               	movf	??_CONVET+2,w
  1599  0043  00CA               	movwf	_POT1_U
  1600  0044                     l2184:
  1601                           
  1602                           ;LCD16X2.c: 155:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  1603  0044  3033               	movlw	51
  1604  0045  00A6               	movwf	___awdiv@divisor
  1605  0046  3000               	movlw	0
  1606  0047  00A7               	movwf	___awdiv@divisor+1
  1607  0048  0854               	movf	_L,w
  1608  0049  00AF               	movwf	??_CONVET
  1609  004A  01B0               	clrf	??_CONVET+1
  1610  004B  082F               	movf	??_CONVET,w
  1611  004C  00A0               	movwf	___wmul@multiplier
  1612  004D  0830               	movf	??_CONVET+1,w
  1613  004E  00A1               	movwf	___wmul@multiplier+1
  1614  004F  3064               	movlw	100
  1615  0050  00A2               	movwf	___wmul@multiplicand
  1616  0051  3000               	movlw	0
  1617  0052  00A3               	movwf	___wmul@multiplicand+1
  1618  0053  120A  118A  276B  120A  118A  	fcall	___wmul
  1619  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1621  005A  0821               	movf	?___wmul+1,w
  1622  005B  00A9               	movwf	___awdiv@dividend+1
  1623  005C  0820               	movf	?___wmul,w
  1624  005D  00A8               	movwf	___awdiv@dividend
  1625  005E  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1626  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0065  0826               	movf	?___awdiv,w
  1629  0066  00B1               	movwf	??_CONVET+2
  1630  0067  0827               	movf	?___awdiv+1,w
  1631  0068  00B2               	movwf	??_CONVET+3
  1632  0069  084A               	movf	_POT1_U,w
  1633  006A  00B3               	movwf	??_CONVET+4
  1634  006B  01B4               	clrf	??_CONVET+5
  1635  006C  0833               	movf	??_CONVET+4,w
  1636  006D  00A0               	movwf	___wmul@multiplier
  1637  006E  0834               	movf	??_CONVET+5,w
  1638  006F  00A1               	movwf	___wmul@multiplier+1
  1639  0070  309C               	movlw	156
  1640  0071  00A2               	movwf	___wmul@multiplicand
  1641  0072  30FF               	movlw	255
  1642  0073  00A3               	movwf	___wmul@multiplicand+1
  1643  0074  120A  118A  276B  120A  118A  	fcall	___wmul
  1644  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1645  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1646  007B  0820               	movf	?___wmul,w
  1647  007C  0731               	addwf	??_CONVET+2,w
  1648  007D  00B7               	movwf	_CONVET$1215
  1649  007E  0821               	movf	?___wmul+1,w
  1650  007F  1803               	skipnc
  1651  0080  0A21               	incf	?___wmul+1,w
  1652  0081  0732               	addwf	??_CONVET+3,w
  1653  0082  00B8               	movwf	_CONVET$1215+1
  1654  0083                     l2186:
  1655                           
  1656                           ;LCD16X2.c: 155:     POT1_T=((L*100/51)-(POT1_U*100))/10;
  1657  0083  300A               	movlw	10
  1658  0084  00A6               	movwf	___awdiv@divisor
  1659  0085  3000               	movlw	0
  1660  0086  00A7               	movwf	___awdiv@divisor+1
  1661  0087  0838               	movf	_CONVET$1215+1,w
  1662  0088  00A9               	movwf	___awdiv@dividend+1
  1663  0089  0837               	movf	_CONVET$1215,w
  1664  008A  00A8               	movwf	___awdiv@dividend
  1665  008B  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1666  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0092  0826               	movf	?___awdiv,w
  1669  0093  00AF               	movwf	??_CONVET
  1670  0094  082F               	movf	??_CONVET,w
  1671  0095  00C6               	movwf	_POT1_T
  1672  0096                     l2188:
  1673                           
  1674                           ;LCD16X2.c: 156:     POT1_H=((L*100/51)-(POT1_U*100)-(POT1_T*10));
  1675  0096  3033               	movlw	51
  1676  0097  00A6               	movwf	___awdiv@divisor
  1677  0098  3000               	movlw	0
  1678  0099  00A7               	movwf	___awdiv@divisor+1
  1679  009A  0854               	movf	_L,w
  1680  009B  00AF               	movwf	??_CONVET
  1681  009C  01B0               	clrf	??_CONVET+1
  1682  009D  082F               	movf	??_CONVET,w
  1683  009E  00A0               	movwf	___wmul@multiplier
  1684  009F  0830               	movf	??_CONVET+1,w
  1685  00A0  00A1               	movwf	___wmul@multiplier+1
  1686  00A1  3064               	movlw	100
  1687  00A2  00A2               	movwf	___wmul@multiplicand
  1688  00A3  3000               	movlw	0
  1689  00A4  00A3               	movwf	___wmul@multiplicand+1
  1690  00A5  120A  118A  276B  120A  118A  	fcall	___wmul
  1691  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1692  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1693  00AC  0821               	movf	?___wmul+1,w
  1694  00AD  00A9               	movwf	___awdiv@dividend+1
  1695  00AE  0820               	movf	?___wmul,w
  1696  00AF  00A8               	movwf	___awdiv@dividend
  1697  00B0  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1698  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1699  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1700  00B7  0826               	movf	?___awdiv,w
  1701  00B8  00B1               	movwf	??_CONVET+2
  1702  00B9  0827               	movf	?___awdiv+1,w
  1703  00BA  00B2               	movwf	??_CONVET+3
  1704  00BB  309C               	movlw	156
  1705  00BC  00B3               	movwf	??_CONVET+4
  1706  00BD  0833               	movf	??_CONVET+4,w
  1707  00BE  00A0               	movwf	___bmul@multiplicand
  1708  00BF  084A               	movf	_POT1_U,w
  1709  00C0  120A  118A  27DA  120A  118A  	fcall	___bmul
  1710  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1711  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1712  00C7  00B4               	movwf	??_CONVET+5
  1713  00C8  30F6               	movlw	246
  1714  00C9  00B5               	movwf	??_CONVET+6
  1715  00CA  0835               	movf	??_CONVET+6,w
  1716  00CB  00A0               	movwf	___bmul@multiplicand
  1717  00CC  0846               	movf	_POT1_T,w
  1718  00CD  120A  118A  27DA  120A  118A  	fcall	___bmul
  1719  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1720  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1721  00D4  0734               	addwf	??_CONVET+5,w
  1722  00D5  0731               	addwf	??_CONVET+2,w
  1723  00D6  00B6               	movwf	??_CONVET+7
  1724  00D7  0836               	movf	??_CONVET+7,w
  1725  00D8  00C8               	movwf	_POT1_H
  1726  00D9                     l2190:
  1727                           
  1728                           ;LCD16X2.c: 157:     POT2_U=(l/51);
  1729  00D9  3033               	movlw	51
  1730  00DA  00A6               	movwf	___awdiv@divisor
  1731  00DB  3000               	movlw	0
  1732  00DC  00A7               	movwf	___awdiv@divisor+1
  1733  00DD  0853               	movf	_l,w
  1734  00DE  00AF               	movwf	??_CONVET
  1735  00DF  01B0               	clrf	??_CONVET+1
  1736  00E0  082F               	movf	??_CONVET,w
  1737  00E1  00A8               	movwf	___awdiv@dividend
  1738  00E2  0830               	movf	??_CONVET+1,w
  1739  00E3  00A9               	movwf	___awdiv@dividend+1
  1740  00E4  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1741  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1742  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1743  00EB  0826               	movf	?___awdiv,w
  1744  00EC  00B1               	movwf	??_CONVET+2
  1745  00ED  0831               	movf	??_CONVET+2,w
  1746  00EE  00C9               	movwf	_POT2_U
  1747  00EF                     l2192:
  1748                           
  1749                           ;LCD16X2.c: 158:     POT2_T=(((l*100)/51)-(POT2_U*100))/10;
  1750  00EF  3033               	movlw	51
  1751  00F0  00A6               	movwf	___awdiv@divisor
  1752  00F1  3000               	movlw	0
  1753  00F2  00A7               	movwf	___awdiv@divisor+1
  1754  00F3  0853               	movf	_l,w
  1755  00F4  00AF               	movwf	??_CONVET
  1756  00F5  01B0               	clrf	??_CONVET+1
  1757  00F6  082F               	movf	??_CONVET,w
  1758  00F7  00A0               	movwf	___wmul@multiplier
  1759  00F8  0830               	movf	??_CONVET+1,w
  1760  00F9  00A1               	movwf	___wmul@multiplier+1
  1761  00FA  3064               	movlw	100
  1762  00FB  00A2               	movwf	___wmul@multiplicand
  1763  00FC  3000               	movlw	0
  1764  00FD  00A3               	movwf	___wmul@multiplicand+1
  1765  00FE  120A  118A  276B  120A  118A  	fcall	___wmul
  1766  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0105  0821               	movf	?___wmul+1,w
  1769  0106  00A9               	movwf	___awdiv@dividend+1
  1770  0107  0820               	movf	?___wmul,w
  1771  0108  00A8               	movwf	___awdiv@dividend
  1772  0109  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1773  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1774  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0110  0826               	movf	?___awdiv,w
  1776  0111  00B1               	movwf	??_CONVET+2
  1777  0112  0827               	movf	?___awdiv+1,w
  1778  0113  00B2               	movwf	??_CONVET+3
  1779  0114  0849               	movf	_POT2_U,w
  1780  0115  00B3               	movwf	??_CONVET+4
  1781  0116  01B4               	clrf	??_CONVET+5
  1782  0117  0833               	movf	??_CONVET+4,w
  1783  0118  00A0               	movwf	___wmul@multiplier
  1784  0119  0834               	movf	??_CONVET+5,w
  1785  011A  00A1               	movwf	___wmul@multiplier+1
  1786  011B  309C               	movlw	156
  1787  011C  00A2               	movwf	___wmul@multiplicand
  1788  011D  30FF               	movlw	255
  1789  011E  00A3               	movwf	___wmul@multiplicand+1
  1790  011F  120A  118A  276B  120A  118A  	fcall	___wmul
  1791  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0126  0820               	movf	?___wmul,w
  1794  0127  0731               	addwf	??_CONVET+2,w
  1795  0128  00B7               	movwf	_CONVET$1215
  1796  0129  0821               	movf	?___wmul+1,w
  1797  012A  1803               	skipnc
  1798  012B  0A21               	incf	?___wmul+1,w
  1799  012C  0732               	addwf	??_CONVET+3,w
  1800  012D  00B8               	movwf	_CONVET$1215+1
  1801  012E                     l2194:
  1802                           
  1803                           ;LCD16X2.c: 158:     POT2_T=(((l*100)/51)-(POT2_U*100))/10;
  1804  012E  300A               	movlw	10
  1805  012F  00A6               	movwf	___awdiv@divisor
  1806  0130  3000               	movlw	0
  1807  0131  00A7               	movwf	___awdiv@divisor+1
  1808  0132  0838               	movf	_CONVET$1215+1,w
  1809  0133  00A9               	movwf	___awdiv@dividend+1
  1810  0134  0837               	movf	_CONVET$1215,w
  1811  0135  00A8               	movwf	___awdiv@dividend
  1812  0136  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1813  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1814  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1815  013D  0826               	movf	?___awdiv,w
  1816  013E  00AF               	movwf	??_CONVET
  1817  013F  082F               	movf	??_CONVET,w
  1818  0140  00C5               	movwf	_POT2_T
  1819  0141                     l2196:
  1820                           
  1821                           ;LCD16X2.c: 159:     POT2_H=(((l*100)/51)-(POT2_U*100)-(POT2_T*10));
  1822  0141  3033               	movlw	51
  1823  0142  00A6               	movwf	___awdiv@divisor
  1824  0143  3000               	movlw	0
  1825  0144  00A7               	movwf	___awdiv@divisor+1
  1826  0145  0853               	movf	_l,w
  1827  0146  00AF               	movwf	??_CONVET
  1828  0147  01B0               	clrf	??_CONVET+1
  1829  0148  082F               	movf	??_CONVET,w
  1830  0149  00A0               	movwf	___wmul@multiplier
  1831  014A  0830               	movf	??_CONVET+1,w
  1832  014B  00A1               	movwf	___wmul@multiplier+1
  1833  014C  3064               	movlw	100
  1834  014D  00A2               	movwf	___wmul@multiplicand
  1835  014E  3000               	movlw	0
  1836  014F  00A3               	movwf	___wmul@multiplicand+1
  1837  0150  120A  118A  276B  120A  118A  	fcall	___wmul
  1838  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0157  0821               	movf	?___wmul+1,w
  1841  0158  00A9               	movwf	___awdiv@dividend+1
  1842  0159  0820               	movf	?___wmul,w
  1843  015A  00A8               	movwf	___awdiv@dividend
  1844  015B  120A  118A  24C1  120A  118A  	fcall	___awdiv
  1845  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0162  0826               	movf	?___awdiv,w
  1848  0163  00B1               	movwf	??_CONVET+2
  1849  0164  0827               	movf	?___awdiv+1,w
  1850  0165  00B2               	movwf	??_CONVET+3
  1851  0166  309C               	movlw	156
  1852  0167  00B3               	movwf	??_CONVET+4
  1853  0168  0833               	movf	??_CONVET+4,w
  1854  0169  00A0               	movwf	___bmul@multiplicand
  1855  016A  0849               	movf	_POT2_U,w
  1856  016B  120A  118A  27DA  120A  118A  	fcall	___bmul
  1857  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0172  00B4               	movwf	??_CONVET+5
  1860  0173  30F6               	movlw	246
  1861  0174  00B5               	movwf	??_CONVET+6
  1862  0175  0835               	movf	??_CONVET+6,w
  1863  0176  00A0               	movwf	___bmul@multiplicand
  1864  0177  0845               	movf	_POT2_T,w
  1865  0178  120A  118A  27DA  120A  118A  	fcall	___bmul
  1866  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1867  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1868  017F  0734               	addwf	??_CONVET+5,w
  1869  0180  0731               	addwf	??_CONVET+2,w
  1870  0181  00B6               	movwf	??_CONVET+7
  1871  0182  0836               	movf	??_CONVET+7,w
  1872  0183  00C7               	movwf	_POT2_H
  1873  0184                     l2198:
  1874                           
  1875                           ;LCD16X2.c: 162:     POT1_Uas=(POT1_U+0x30);
  1876  0184  084A               	movf	_POT1_U,w
  1877  0185  3E30               	addlw	48
  1878  0186  00AF               	movwf	??_CONVET
  1879  0187  082F               	movf	??_CONVET,w
  1880  0188  00C4               	movwf	_POT1_Uas
  1881  0189                     l2200:
  1882                           
  1883                           ;LCD16X2.c: 163:     POT1_Tas=(POT1_T+0x30);
  1884  0189  0846               	movf	_POT1_T,w
  1885  018A  3E30               	addlw	48
  1886  018B  00AF               	movwf	??_CONVET
  1887  018C  082F               	movf	??_CONVET,w
  1888  018D  00C0               	movwf	_POT1_Tas
  1889  018E                     l2202:
  1890                           
  1891                           ;LCD16X2.c: 164:     POT1_Has=(POT1_H+0x30);
  1892  018E  0848               	movf	_POT1_H,w
  1893  018F  3E30               	addlw	48
  1894  0190  00AF               	movwf	??_CONVET
  1895  0191  082F               	movf	??_CONVET,w
  1896  0192  00C2               	movwf	_POT1_Has
  1897  0193                     l2204:
  1898                           
  1899                           ;LCD16X2.c: 165:     POT2_Uas=(POT2_U+0x30);
  1900  0193  0849               	movf	_POT2_U,w
  1901  0194  3E30               	addlw	48
  1902  0195  00AF               	movwf	??_CONVET
  1903  0196  082F               	movf	??_CONVET,w
  1904  0197  00C3               	movwf	_POT2_Uas
  1905  0198                     l2206:
  1906                           
  1907                           ;LCD16X2.c: 166:     POT2_Tas=(POT2_T+0x30);
  1908  0198  0845               	movf	_POT2_T,w
  1909  0199  3E30               	addlw	48
  1910  019A  00AF               	movwf	??_CONVET
  1911  019B  082F               	movf	??_CONVET,w
  1912  019C  00BF               	movwf	_POT2_Tas
  1913  019D                     l2208:
  1914                           
  1915                           ;LCD16X2.c: 167:     POT2_Has=(POT2_H+0x30);
  1916  019D  0847               	movf	_POT2_H,w
  1917  019E  3E30               	addlw	48
  1918  019F  00AF               	movwf	??_CONVET
  1919  01A0  082F               	movf	??_CONVET,w
  1920  01A1  00C1               	movwf	_POT2_Has
  1921  01A2                     l168:
  1922  01A2  0008               	return
  1923  01A3                     __end_of_CONVET:
  1924                           
  1925                           	psect	text4
  1926  0412                     __ptext4:	
  1927 ;; *************** function _ADC_CHS_CLKS *****************
  1928 ;; Defined at:
  1929 ;;		line 3 in file "ADC.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  C               1    wreg     unsigned char 
  1932 ;;  S               1    0[BANK0 ] unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  C               1    3[BANK0 ] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       1       0       0       0
  1945 ;;      Locals:         0       1       0       0       0
  1946 ;;      Temps:          0       2       0       0       0
  1947 ;;      Totals:         0       4       0       0       0
  1948 ;;Total ram usage:        4 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    2
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_pull
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _ADC_CHS_CLKS
  1960  0412                     _ADC_CHS_CLKS:
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _ADC_CHS_CLKS: [wreg-fsr0h+status,2+status,0]
  1964                           ;ADC_CHS_CLKS@C stored from wreg
  1965  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0414  00A3               	movwf	ADC_CHS_CLKS@C
  1968  0415                     l2132:
  1969                           
  1970                           ;ADC.c: 4: switch (C) {
  1971  0415  2C89               	goto	l2172
  1972  0416                     l267:	
  1973                           ;ADC.c: 7:     case 0:
  1974                           
  1975                           
  1976                           ;ADC.c: 8:         ADCON0bits.CHS3 = 0;
  1977  0416  129F               	bcf	31,5	;volatile
  1978                           
  1979                           ;ADC.c: 9:         ADCON0bits.CHS2 = 0;
  1980  0417  121F               	bcf	31,4	;volatile
  1981                           
  1982                           ;ADC.c: 10:         ADCON0bits.CHS1 = 0;
  1983  0418  119F               	bcf	31,3	;volatile
  1984                           
  1985                           ;ADC.c: 11:         ADCON0bits.CHS0 = 0;
  1986  0419  111F               	bcf	31,2	;volatile
  1987                           
  1988                           ;ADC.c: 12:         ADCON0bits.ADON = 1;
  1989  041A  141F               	bsf	31,0	;volatile
  1990                           
  1991                           ;ADC.c: 13:         ADCON0bits.GO = 1;
  1992  041B  149F               	bsf	31,1	;volatile
  1993  041C                     l2134:
  1994                           
  1995                           ;ADC.c: 14:         ADCON1 = 0;
  1996  041C  1683               	bsf	3,5	;RP0=1, select bank1
  1997  041D  1303               	bcf	3,6	;RP1=0, select bank1
  1998  041E  019F               	clrf	31	;volatile
  1999                           
  2000                           ;ADC.c: 15:     break;
  2001  041F  2CC0               	goto	l290
  2002  0420                     l269:	
  2003                           ;ADC.c: 16:     case 1:
  2004                           
  2005                           
  2006                           ;ADC.c: 17:         ADCON0bits.CHS3=0;
  2007  0420  129F               	bcf	31,5	;volatile
  2008                           
  2009                           ;ADC.c: 18:         ADCON0bits.CHS2=0;
  2010  0421  121F               	bcf	31,4	;volatile
  2011                           
  2012                           ;ADC.c: 19:         ADCON0bits.CHS1=0;
  2013  0422  119F               	bcf	31,3	;volatile
  2014                           
  2015                           ;ADC.c: 20:         ADCON0bits.CHS0=1;
  2016  0423  151F               	bsf	31,2	;volatile
  2017                           
  2018                           ;ADC.c: 21:         ADCON0bits.ADON = 1;
  2019  0424  141F               	bsf	31,0	;volatile
  2020                           
  2021                           ;ADC.c: 22:         ADCON0bits.GO = 1;
  2022  0425  149F               	bsf	31,1	;volatile
  2023  0426  2C1C               	goto	l2134
  2024  0427                     l270:	
  2025                           ;ADC.c: 25:     case 2:
  2026                           
  2027                           
  2028                           ;ADC.c: 26:         ADCON0bits.CHS3=0;
  2029  0427  129F               	bcf	31,5	;volatile
  2030                           
  2031                           ;ADC.c: 27:         ADCON0bits.CHS2=0;
  2032  0428  121F               	bcf	31,4	;volatile
  2033                           
  2034                           ;ADC.c: 28:         ADCON0bits.CHS1=1;
  2035  0429  159F               	bsf	31,3	;volatile
  2036                           
  2037                           ;ADC.c: 29:         ADCON0bits.CHS0=0;
  2038  042A  111F               	bcf	31,2	;volatile
  2039                           
  2040                           ;ADC.c: 30:         ADCON0bits.ADON = 1;
  2041  042B  141F               	bsf	31,0	;volatile
  2042                           
  2043                           ;ADC.c: 31:         ADCON0bits.GO = 1;
  2044  042C  149F               	bsf	31,1	;volatile
  2045  042D  2C1C               	goto	l2134
  2046  042E                     l271:	
  2047                           ;ADC.c: 34:     case 3:
  2048                           
  2049                           
  2050                           ;ADC.c: 35:         ADCON0bits.CHS3=0;
  2051  042E  129F               	bcf	31,5	;volatile
  2052                           
  2053                           ;ADC.c: 36:         ADCON0bits.CHS2=0;
  2054  042F  121F               	bcf	31,4	;volatile
  2055                           
  2056                           ;ADC.c: 37:         ADCON0bits.CHS1=1;
  2057  0430  159F               	bsf	31,3	;volatile
  2058                           
  2059                           ;ADC.c: 38:         ADCON0bits.CHS0=1;
  2060  0431  151F               	bsf	31,2	;volatile
  2061                           
  2062                           ;ADC.c: 39:         ADCON0bits.ADON = 1;
  2063  0432  141F               	bsf	31,0	;volatile
  2064                           
  2065                           ;ADC.c: 40:         ADCON0bits.GO = 1;
  2066  0433  149F               	bsf	31,1	;volatile
  2067  0434  2C1C               	goto	l2134
  2068  0435                     l272:	
  2069                           ;ADC.c: 43:     case 4:
  2070                           
  2071                           
  2072                           ;ADC.c: 44:         ADCON0bits.CHS3=0;
  2073  0435  129F               	bcf	31,5	;volatile
  2074                           
  2075                           ;ADC.c: 45:         ADCON0bits.CHS2=1;
  2076  0436  161F               	bsf	31,4	;volatile
  2077                           
  2078                           ;ADC.c: 46:         ADCON0bits.CHS1=0;
  2079  0437  119F               	bcf	31,3	;volatile
  2080                           
  2081                           ;ADC.c: 47:         ADCON0bits.CHS0=0;
  2082  0438  111F               	bcf	31,2	;volatile
  2083                           
  2084                           ;ADC.c: 48:         ADCON0bits.ADON = 1;
  2085  0439  141F               	bsf	31,0	;volatile
  2086                           
  2087                           ;ADC.c: 49:         ADCON0bits.GO = 1;
  2088  043A  149F               	bsf	31,1	;volatile
  2089  043B  2C1C               	goto	l2134
  2090  043C                     l273:	
  2091                           ;ADC.c: 52:     case 5:
  2092                           
  2093                           
  2094                           ;ADC.c: 53:         ADCON0bits.CHS3=0;
  2095  043C  129F               	bcf	31,5	;volatile
  2096                           
  2097                           ;ADC.c: 54:         ADCON0bits.CHS2=1;
  2098  043D  161F               	bsf	31,4	;volatile
  2099                           
  2100                           ;ADC.c: 55:         ADCON0bits.CHS1=0;
  2101  043E  119F               	bcf	31,3	;volatile
  2102                           
  2103                           ;ADC.c: 56:         ADCON0bits.CHS0=1;
  2104  043F  151F               	bsf	31,2	;volatile
  2105                           
  2106                           ;ADC.c: 57:         ADCON0bits.ADON = 1;
  2107  0440  141F               	bsf	31,0	;volatile
  2108                           
  2109                           ;ADC.c: 58:         ADCON0bits.GO = 1;
  2110  0441  149F               	bsf	31,1	;volatile
  2111  0442  2C1C               	goto	l2134
  2112  0443                     l274:	
  2113                           ;ADC.c: 61:     case 6:
  2114                           
  2115                           
  2116                           ;ADC.c: 62:         ADCON0bits.CHS3=0;
  2117  0443  129F               	bcf	31,5	;volatile
  2118                           
  2119                           ;ADC.c: 63:         ADCON0bits.CHS2=1;
  2120  0444  161F               	bsf	31,4	;volatile
  2121                           
  2122                           ;ADC.c: 64:         ADCON0bits.CHS1=1;
  2123  0445  159F               	bsf	31,3	;volatile
  2124                           
  2125                           ;ADC.c: 65:         ADCON0bits.CHS0=0;
  2126  0446  111F               	bcf	31,2	;volatile
  2127                           
  2128                           ;ADC.c: 66:         ADCON0bits.ADON = 1;
  2129  0447  141F               	bsf	31,0	;volatile
  2130                           
  2131                           ;ADC.c: 67:         ADCON0bits.GO = 1;
  2132  0448  149F               	bsf	31,1	;volatile
  2133  0449  2C1C               	goto	l2134
  2134  044A                     l275:	
  2135                           ;ADC.c: 70:     case 7:
  2136                           
  2137                           
  2138                           ;ADC.c: 71:         ADCON0bits.CHS3=0;
  2139  044A  129F               	bcf	31,5	;volatile
  2140                           
  2141                           ;ADC.c: 72:         ADCON0bits.CHS2=1;
  2142  044B  161F               	bsf	31,4	;volatile
  2143                           
  2144                           ;ADC.c: 73:         ADCON0bits.CHS1=1;
  2145  044C  159F               	bsf	31,3	;volatile
  2146                           
  2147                           ;ADC.c: 74:         ADCON0bits.CHS0=1;
  2148  044D  151F               	bsf	31,2	;volatile
  2149                           
  2150                           ;ADC.c: 75:         ADCON0bits.ADON = 1;
  2151  044E  141F               	bsf	31,0	;volatile
  2152                           
  2153                           ;ADC.c: 76:         ADCON0bits.GO = 1;
  2154  044F  149F               	bsf	31,1	;volatile
  2155  0450  2C1C               	goto	l2134
  2156  0451                     l276:	
  2157                           ;ADC.c: 79:     case 8:
  2158                           
  2159                           
  2160                           ;ADC.c: 80:         ADCON0bits.CHS3=1;
  2161  0451  169F               	bsf	31,5	;volatile
  2162                           
  2163                           ;ADC.c: 81:         ADCON0bits.CHS2=0;
  2164  0452  121F               	bcf	31,4	;volatile
  2165                           
  2166                           ;ADC.c: 82:         ADCON0bits.CHS1=0;
  2167  0453  119F               	bcf	31,3	;volatile
  2168                           
  2169                           ;ADC.c: 83:         ADCON0bits.CHS0=0;
  2170  0454  111F               	bcf	31,2	;volatile
  2171                           
  2172                           ;ADC.c: 84:         ADCON0bits.ADON = 1;
  2173  0455  141F               	bsf	31,0	;volatile
  2174                           
  2175                           ;ADC.c: 85:         ADCON0bits.GO = 1;
  2176  0456  149F               	bsf	31,1	;volatile
  2177  0457  2C1C               	goto	l2134
  2178  0458                     l277:	
  2179                           ;ADC.c: 88:     case 9:
  2180                           
  2181                           
  2182                           ;ADC.c: 89:         ADCON0bits.CHS3=1;
  2183  0458  169F               	bsf	31,5	;volatile
  2184                           
  2185                           ;ADC.c: 90:         ADCON0bits.CHS2=0;
  2186  0459  121F               	bcf	31,4	;volatile
  2187                           
  2188                           ;ADC.c: 91:         ADCON0bits.CHS1=0;
  2189  045A  119F               	bcf	31,3	;volatile
  2190                           
  2191                           ;ADC.c: 92:         ADCON0bits.CHS0=1;
  2192  045B  151F               	bsf	31,2	;volatile
  2193                           
  2194                           ;ADC.c: 93:         ADCON0bits.ADON = 1;
  2195  045C  141F               	bsf	31,0	;volatile
  2196                           
  2197                           ;ADC.c: 94:         ADCON0bits.GO = 1;
  2198  045D  149F               	bsf	31,1	;volatile
  2199  045E  2C1C               	goto	l2134
  2200  045F                     l278:	
  2201                           ;ADC.c: 97:     case 10:
  2202                           
  2203                           
  2204                           ;ADC.c: 98:         ADCON0bits.CHS3=1;
  2205  045F  169F               	bsf	31,5	;volatile
  2206                           
  2207                           ;ADC.c: 99:         ADCON0bits.CHS2=0;
  2208  0460  121F               	bcf	31,4	;volatile
  2209                           
  2210                           ;ADC.c: 100:         ADCON0bits.CHS1=1;
  2211  0461  159F               	bsf	31,3	;volatile
  2212                           
  2213                           ;ADC.c: 101:         ADCON0bits.CHS0=0;
  2214  0462  111F               	bcf	31,2	;volatile
  2215                           
  2216                           ;ADC.c: 102:         ADCON0bits.ADON = 1;
  2217  0463  141F               	bsf	31,0	;volatile
  2218                           
  2219                           ;ADC.c: 103:         ADCON0bits.GO = 1;
  2220  0464  149F               	bsf	31,1	;volatile
  2221  0465  2C1C               	goto	l2134
  2222  0466                     l279:	
  2223                           ;ADC.c: 106:     case 11:
  2224                           
  2225                           
  2226                           ;ADC.c: 107:         ADCON0bits.CHS3=1;
  2227  0466  169F               	bsf	31,5	;volatile
  2228                           
  2229                           ;ADC.c: 108:         ADCON0bits.CHS2=0;
  2230  0467  121F               	bcf	31,4	;volatile
  2231                           
  2232                           ;ADC.c: 109:         ADCON0bits.CHS1=1;
  2233  0468  159F               	bsf	31,3	;volatile
  2234                           
  2235                           ;ADC.c: 110:         ADCON0bits.CHS0=1;
  2236  0469  151F               	bsf	31,2	;volatile
  2237                           
  2238                           ;ADC.c: 111:         ADCON0bits.ADON = 1;
  2239  046A  141F               	bsf	31,0	;volatile
  2240                           
  2241                           ;ADC.c: 112:         ADCON0bits.GO = 1;
  2242  046B  149F               	bsf	31,1	;volatile
  2243  046C  2C1C               	goto	l2134
  2244  046D                     l280:	
  2245                           ;ADC.c: 115:     case 12:
  2246                           
  2247                           
  2248                           ;ADC.c: 116:         ADCON0bits.CHS3=1;
  2249  046D  169F               	bsf	31,5	;volatile
  2250                           
  2251                           ;ADC.c: 117:         ADCON0bits.CHS2=1;
  2252  046E  161F               	bsf	31,4	;volatile
  2253                           
  2254                           ;ADC.c: 118:         ADCON0bits.CHS1=0;
  2255  046F  119F               	bcf	31,3	;volatile
  2256                           
  2257                           ;ADC.c: 119:         ADCON0bits.CHS0=0;
  2258  0470  111F               	bcf	31,2	;volatile
  2259                           
  2260                           ;ADC.c: 120:         ADCON0bits.ADON = 1;
  2261  0471  141F               	bsf	31,0	;volatile
  2262                           
  2263                           ;ADC.c: 121:         ADCON0bits.GO = 1;
  2264  0472  149F               	bsf	31,1	;volatile
  2265  0473  2C1C               	goto	l2134
  2266  0474                     l281:	
  2267                           ;ADC.c: 124:     case 13:
  2268                           
  2269                           
  2270                           ;ADC.c: 125:         ADCON0bits.CHS3=1;
  2271  0474  169F               	bsf	31,5	;volatile
  2272                           
  2273                           ;ADC.c: 126:         ADCON0bits.CHS2=1;
  2274  0475  161F               	bsf	31,4	;volatile
  2275                           
  2276                           ;ADC.c: 127:         ADCON0bits.CHS1=0;
  2277  0476  119F               	bcf	31,3	;volatile
  2278                           
  2279                           ;ADC.c: 128:         ADCON0bits.CHS0=1;
  2280  0477  151F               	bsf	31,2	;volatile
  2281                           
  2282                           ;ADC.c: 129:         ADCON0bits.ADON = 1;
  2283  0478  141F               	bsf	31,0	;volatile
  2284                           
  2285                           ;ADC.c: 130:         ADCON0bits.GO = 1;
  2286  0479  149F               	bsf	31,1	;volatile
  2287  047A  2C1C               	goto	l2134
  2288  047B                     l282:	
  2289                           ;ADC.c: 133:     case 14:
  2290                           
  2291                           
  2292                           ;ADC.c: 134:         ADCON0bits.CHS3=1;
  2293  047B  169F               	bsf	31,5	;volatile
  2294                           
  2295                           ;ADC.c: 135:         ADCON0bits.CHS2=1;
  2296  047C  161F               	bsf	31,4	;volatile
  2297                           
  2298                           ;ADC.c: 136:         ADCON0bits.CHS1=1;
  2299  047D  159F               	bsf	31,3	;volatile
  2300                           
  2301                           ;ADC.c: 137:         ADCON0bits.CHS0=0;
  2302  047E  111F               	bcf	31,2	;volatile
  2303                           
  2304                           ;ADC.c: 138:         ADCON0bits.ADON = 1;
  2305  047F  141F               	bsf	31,0	;volatile
  2306                           
  2307                           ;ADC.c: 139:         ADCON0bits.GO = 1;
  2308  0480  149F               	bsf	31,1	;volatile
  2309  0481  2C1C               	goto	l2134
  2310  0482                     l283:	
  2311                           ;ADC.c: 142:     default:
  2312                           
  2313                           
  2314                           ;ADC.c: 143:         ADCON0bits.CHS3=1;
  2315  0482  169F               	bsf	31,5	;volatile
  2316                           
  2317                           ;ADC.c: 144:         ADCON0bits.CHS2=1;
  2318  0483  161F               	bsf	31,4	;volatile
  2319                           
  2320                           ;ADC.c: 145:         ADCON0bits.CHS1=1;
  2321  0484  159F               	bsf	31,3	;volatile
  2322                           
  2323                           ;ADC.c: 146:         ADCON0bits.CHS0=1;
  2324  0485  151F               	bsf	31,2	;volatile
  2325                           
  2326                           ;ADC.c: 147:         ADCON0bits.ADON = 1;
  2327  0486  141F               	bsf	31,0	;volatile
  2328                           
  2329                           ;ADC.c: 148:         ADCON0bits.GO = 1;
  2330  0487  149F               	bsf	31,1	;volatile
  2331  0488  2C1C               	goto	l2134
  2332  0489                     l2172:
  2333  0489  0823               	movf	ADC_CHS_CLKS@C,w
  2334  048A  00A1               	movwf	??_ADC_CHS_CLKS
  2335  048B  01A2               	clrf	??_ADC_CHS_CLKS+1
  2336                           
  2337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 1, Range of values is 0 to 0
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            4     3 (average)
  2343                           ; direct_byte           11     8 (fixed)
  2344                           ; jumptable            260     6 (fixed)
  2345                           ;	Chosen strategy is simple_byte
  2346  048C  0822               	movf	??_ADC_CHS_CLKS+1,w
  2347  048D  3A00               	xorlw	0	; case 0
  2348  048E  1903               	skipnz
  2349  048F  2C91               	goto	l2528
  2350  0490  2C82               	goto	l283
  2351  0491                     l2528:
  2352                           
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 15, Range of values is 0 to 14
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte           46    24 (average)
  2358                           ; direct_byte           53     8 (fixed)
  2359                           ; jumptable            260     6 (fixed)
  2360                           ;	Chosen strategy is simple_byte
  2361  0491  0821               	movf	??_ADC_CHS_CLKS,w
  2362  0492  3A00               	xorlw	0	; case 0
  2363  0493  1903               	skipnz
  2364  0494  2C16               	goto	l267
  2365  0495  3A01               	xorlw	1	; case 1
  2366  0496  1903               	skipnz
  2367  0497  2C20               	goto	l269
  2368  0498  3A03               	xorlw	3	; case 2
  2369  0499  1903               	skipnz
  2370  049A  2C27               	goto	l270
  2371  049B  3A01               	xorlw	1	; case 3
  2372  049C  1903               	skipnz
  2373  049D  2C2E               	goto	l271
  2374  049E  3A07               	xorlw	7	; case 4
  2375  049F  1903               	skipnz
  2376  04A0  2C35               	goto	l272
  2377  04A1  3A01               	xorlw	1	; case 5
  2378  04A2  1903               	skipnz
  2379  04A3  2C3C               	goto	l273
  2380  04A4  3A03               	xorlw	3	; case 6
  2381  04A5  1903               	skipnz
  2382  04A6  2C43               	goto	l274
  2383  04A7  3A01               	xorlw	1	; case 7
  2384  04A8  1903               	skipnz
  2385  04A9  2C4A               	goto	l275
  2386  04AA  3A0F               	xorlw	15	; case 8
  2387  04AB  1903               	skipnz
  2388  04AC  2C51               	goto	l276
  2389  04AD  3A01               	xorlw	1	; case 9
  2390  04AE  1903               	skipnz
  2391  04AF  2C58               	goto	l277
  2392  04B0  3A03               	xorlw	3	; case 10
  2393  04B1  1903               	skipnz
  2394  04B2  2C5F               	goto	l278
  2395  04B3  3A01               	xorlw	1	; case 11
  2396  04B4  1903               	skipnz
  2397  04B5  2C66               	goto	l279
  2398  04B6  3A07               	xorlw	7	; case 12
  2399  04B7  1903               	skipnz
  2400  04B8  2C6D               	goto	l280
  2401  04B9  3A01               	xorlw	1	; case 13
  2402  04BA  1903               	skipnz
  2403  04BB  2C74               	goto	l281
  2404  04BC  3A03               	xorlw	3	; case 14
  2405  04BD  1903               	skipnz
  2406  04BE  2C7B               	goto	l282
  2407  04BF  2C82               	goto	l283
  2408  04C0                     l290:
  2409  04C0  0008               	return
  2410  04C1                     __end_of_ADC_CHS_CLKS:
  2411                           
  2412                           	psect	text5
  2413  0792                     __ptext5:	
  2414 ;; *************** function _Setup *****************
  2415 ;; Defined at:
  2416 ;;		line 108 in file "LCD16X2.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         0       0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    3
  2437 ;; This function calls:
  2438 ;;		_initOsc
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           
  2445                           ;psect for function _Setup
  2446  0792                     _Setup:
  2447  0792                     l2210:	
  2448                           ;incstack = 0
  2449                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2450                           
  2451                           
  2452                           ;LCD16X2.c: 109:     initOsc(6);
  2453  0792  3006               	movlw	6
  2454  0793  120A  118A  2589  120A  118A  	fcall	_initOsc
  2455  0798                     l2212:
  2456                           
  2457                           ;LCD16X2.c: 110:     INTCONbits.PEIE = 1;
  2458  0798  170B               	bsf	11,6	;volatile
  2459  0799                     l2214:
  2460                           
  2461                           ;LCD16X2.c: 111:     PIE1bits.ADIE = 1;
  2462  0799  1683               	bsf	3,5	;RP0=1, select bank1
  2463  079A  1303               	bcf	3,6	;RP1=0, select bank1
  2464  079B  170C               	bsf	12,6	;volatile
  2465  079C                     l2216:
  2466                           
  2467                           ;LCD16X2.c: 112:     PIR1bits.ADIF = 0;
  2468  079C  1283               	bcf	3,5	;RP0=0, select bank0
  2469  079D  1303               	bcf	3,6	;RP1=0, select bank0
  2470  079E  130C               	bcf	12,6	;volatile
  2471  079F                     l2218:
  2472                           
  2473                           ;LCD16X2.c: 113:     INTCONbits.GIE = 1;
  2474  079F  178B               	bsf	11,7	;volatile
  2475  07A0                     l2220:
  2476                           
  2477                           ;LCD16X2.c: 114:     ADCON0bits.GO_DONE = 1;
  2478  07A0  149F               	bsf	31,1	;volatile
  2479  07A1                     l2222:
  2480                           
  2481                           ;LCD16X2.c: 115:     INTCONbits.TMR0IE=1;
  2482  07A1  168B               	bsf	11,5	;volatile
  2483  07A2                     l2224:
  2484                           
  2485                           ;LCD16X2.c: 116:     INTCONbits.TMR0IF=0;
  2486  07A2  110B               	bcf	11,2	;volatile
  2487  07A3                     l2226:
  2488                           
  2489                           ;LCD16X2.c: 118:     PORTA = 0;
  2490  07A3  0185               	clrf	5	;volatile
  2491  07A4                     l2228:
  2492                           
  2493                           ;LCD16X2.c: 119:     PORTB = 0;
  2494  07A4  0186               	clrf	6	;volatile
  2495  07A5                     l2230:
  2496                           
  2497                           ;LCD16X2.c: 120:     PORTC = 0;
  2498  07A5  0187               	clrf	7	;volatile
  2499  07A6                     l2232:
  2500                           
  2501                           ;LCD16X2.c: 121:     PORTD = 0;
  2502  07A6  0188               	clrf	8	;volatile
  2503  07A7                     l2234:
  2504                           
  2505                           ;LCD16X2.c: 122:     PORTE = 0;
  2506  07A7  0189               	clrf	9	;volatile
  2507  07A8                     l2236:
  2508                           
  2509                           ;LCD16X2.c: 124:     TRISA = 0B00000011;
  2510  07A8  3003               	movlw	3
  2511  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  2512  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  2513  07AB  0085               	movwf	5	;volatile
  2514  07AC                     l2238:
  2515                           
  2516                           ;LCD16X2.c: 125:     TRISB = 0B00000000;
  2517  07AC  0186               	clrf	6	;volatile
  2518  07AD                     l2240:
  2519                           
  2520                           ;LCD16X2.c: 126:     TRISC = 0B10000000;
  2521  07AD  3080               	movlw	128
  2522  07AE  0087               	movwf	7	;volatile
  2523  07AF                     l2242:
  2524                           
  2525                           ;LCD16X2.c: 127:     TRISD = 0B00000000;
  2526  07AF  0188               	clrf	8	;volatile
  2527  07B0                     l2244:
  2528                           
  2529                           ;LCD16X2.c: 128:     TRISE = 0 ;
  2530  07B0  0189               	clrf	9	;volatile
  2531  07B1                     l2246:
  2532                           
  2533                           ;LCD16X2.c: 130:     ANSEL = 0B00000011;
  2534  07B1  3003               	movlw	3
  2535  07B2  1683               	bsf	3,5	;RP0=1, select bank3
  2536  07B3  1703               	bsf	3,6	;RP1=1, select bank3
  2537  07B4  0088               	movwf	8	;volatile
  2538  07B5                     l2248:
  2539                           
  2540                           ;LCD16X2.c: 131:     ANSELH = 0B00000000;
  2541  07B5  0189               	clrf	9	;volatile
  2542  07B6                     l156:
  2543  07B6  0008               	return
  2544  07B7                     __end_of_Setup:
  2545                           
  2546                           	psect	text6
  2547  0589                     __ptext6:	
  2548 ;; *************** function _initOsc *****************
  2549 ;; Defined at:
  2550 ;;		line 6 in file "Oscilador.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  IRCF            1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  IRCF            1    2[BANK0 ] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         0       1       0       0       0
  2566 ;;      Temps:          0       2       0       0       0
  2567 ;;      Totals:         0       3       0       0       0
  2568 ;;Total ram usage:        3 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    2
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_Setup
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _initOsc
  2580  0589                     _initOsc:
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2584                           ;initOsc@IRCF stored from wreg
  2585  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2586  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2587  058B  00A2               	movwf	initOsc@IRCF
  2588  058C                     l2120:
  2589                           
  2590                           ;Oscilador.c: 7: switch (IRCF) {
  2591  058C  2DC3               	goto	l2124
  2592  058D                     l296:	
  2593                           ;Oscilador.c: 8:             case 0:
  2594                           
  2595                           
  2596                           ;Oscilador.c: 9:                 OSCCONbits.IRCF2=0;
  2597  058D  1683               	bsf	3,5	;RP0=1, select bank1
  2598  058E  1303               	bcf	3,6	;RP1=0, select bank1
  2599  058F  130F               	bcf	15,6	;volatile
  2600                           
  2601                           ;Oscilador.c: 10:                 OSCCONbits.IRCF1=0;
  2602  0590  128F               	bcf	15,5	;volatile
  2603                           
  2604                           ;Oscilador.c: 11:                 OSCCONbits.IRCF0=0;
  2605  0591  120F               	bcf	15,4	;volatile
  2606                           
  2607                           ;Oscilador.c: 12:                 break;
  2608  0592  2DE5               	goto	l297
  2609  0593                     l298:	
  2610                           ;Oscilador.c: 13:             case 1:
  2611                           
  2612                           
  2613                           ;Oscilador.c: 14:                 OSCCONbits.IRCF2=0;
  2614  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2616  0595  130F               	bcf	15,6	;volatile
  2617                           
  2618                           ;Oscilador.c: 15:                 OSCCONbits.IRCF1=0;
  2619  0596  128F               	bcf	15,5	;volatile
  2620                           
  2621                           ;Oscilador.c: 16:                 OSCCONbits.IRCF0=1;
  2622  0597  160F               	bsf	15,4	;volatile
  2623                           
  2624                           ;Oscilador.c: 17:                 break;
  2625  0598  2DE5               	goto	l297
  2626  0599                     l299:	
  2627                           ;Oscilador.c: 18:             case 2:
  2628                           
  2629                           
  2630                           ;Oscilador.c: 19:                 OSCCONbits.IRCF2=0;
  2631  0599  1683               	bsf	3,5	;RP0=1, select bank1
  2632  059A  1303               	bcf	3,6	;RP1=0, select bank1
  2633  059B  130F               	bcf	15,6	;volatile
  2634                           
  2635                           ;Oscilador.c: 20:                 OSCCONbits.IRCF1=1;
  2636  059C  168F               	bsf	15,5	;volatile
  2637                           
  2638                           ;Oscilador.c: 21:                 OSCCONbits.IRCF0=0;
  2639  059D  120F               	bcf	15,4	;volatile
  2640                           
  2641                           ;Oscilador.c: 22:                 break;
  2642  059E  2DE5               	goto	l297
  2643  059F                     l300:	
  2644                           ;Oscilador.c: 23:             case 3:
  2645                           
  2646                           
  2647                           ;Oscilador.c: 24:                 OSCCONbits.IRCF2=0;
  2648  059F  1683               	bsf	3,5	;RP0=1, select bank1
  2649  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  2650  05A1  130F               	bcf	15,6	;volatile
  2651                           
  2652                           ;Oscilador.c: 25:                 OSCCONbits.IRCF1=1;
  2653  05A2  168F               	bsf	15,5	;volatile
  2654                           
  2655                           ;Oscilador.c: 26:                 OSCCONbits.IRCF0=1;
  2656  05A3  160F               	bsf	15,4	;volatile
  2657                           
  2658                           ;Oscilador.c: 27:                 break;
  2659  05A4  2DE5               	goto	l297
  2660  05A5                     l301:	
  2661                           ;Oscilador.c: 28:             case 4:
  2662                           
  2663                           
  2664                           ;Oscilador.c: 29:                 OSCCONbits.IRCF2=1;
  2665  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2666  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  2667  05A7  170F               	bsf	15,6	;volatile
  2668                           
  2669                           ;Oscilador.c: 30:                 OSCCONbits.IRCF1=0;
  2670  05A8  128F               	bcf	15,5	;volatile
  2671                           
  2672                           ;Oscilador.c: 31:                 OSCCONbits.IRCF0=0;
  2673  05A9  120F               	bcf	15,4	;volatile
  2674                           
  2675                           ;Oscilador.c: 32:                 break;
  2676  05AA  2DE5               	goto	l297
  2677  05AB                     l302:	
  2678                           ;Oscilador.c: 33:             case 5:
  2679                           
  2680                           
  2681                           ;Oscilador.c: 34:                 OSCCONbits.IRCF2=1;
  2682  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2683  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2684  05AD  170F               	bsf	15,6	;volatile
  2685                           
  2686                           ;Oscilador.c: 35:                 OSCCONbits.IRCF1=0;
  2687  05AE  128F               	bcf	15,5	;volatile
  2688                           
  2689                           ;Oscilador.c: 36:                 OSCCONbits.IRCF0=1;
  2690  05AF  160F               	bsf	15,4	;volatile
  2691                           
  2692                           ;Oscilador.c: 37:                 break;
  2693  05B0  2DE5               	goto	l297
  2694  05B1                     l303:	
  2695                           ;Oscilador.c: 38:             case 6:
  2696                           
  2697                           
  2698                           ;Oscilador.c: 39:                 OSCCONbits.IRCF2=1;
  2699  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2700  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2701  05B3  170F               	bsf	15,6	;volatile
  2702                           
  2703                           ;Oscilador.c: 40:                 OSCCONbits.IRCF1=1;
  2704  05B4  168F               	bsf	15,5	;volatile
  2705                           
  2706                           ;Oscilador.c: 41:                 OSCCONbits.IRCF0=0;
  2707  05B5  120F               	bcf	15,4	;volatile
  2708                           
  2709                           ;Oscilador.c: 42:                 break;
  2710  05B6  2DE5               	goto	l297
  2711  05B7                     l304:	
  2712                           ;Oscilador.c: 43:             case 7:
  2713                           
  2714                           
  2715                           ;Oscilador.c: 44:                 OSCCONbits.IRCF2=1;
  2716  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  2717  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  2718  05B9  170F               	bsf	15,6	;volatile
  2719                           
  2720                           ;Oscilador.c: 45:                 OSCCONbits.IRCF1=1;
  2721  05BA  168F               	bsf	15,5	;volatile
  2722                           
  2723                           ;Oscilador.c: 46:                 OSCCONbits.IRCF0=1;
  2724  05BB  160F               	bsf	15,4	;volatile
  2725                           
  2726                           ;Oscilador.c: 47:                 break;
  2727  05BC  2DE5               	goto	l297
  2728  05BD                     l305:	
  2729                           ;Oscilador.c: 48:             default:
  2730                           
  2731                           
  2732                           ;Oscilador.c: 49:                 OSCCONbits.IRCF2=1;
  2733  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2734  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2735  05BF  170F               	bsf	15,6	;volatile
  2736                           
  2737                           ;Oscilador.c: 50:                 OSCCONbits.IRCF1=1;
  2738  05C0  168F               	bsf	15,5	;volatile
  2739                           
  2740                           ;Oscilador.c: 51:                 OSCCONbits.IRCF0=0;
  2741  05C1  120F               	bcf	15,4	;volatile
  2742                           
  2743                           ;Oscilador.c: 52:                 break;
  2744  05C2  2DE5               	goto	l297
  2745  05C3                     l2124:
  2746  05C3  0822               	movf	initOsc@IRCF,w
  2747  05C4  00A0               	movwf	??_initOsc
  2748  05C5  01A1               	clrf	??_initOsc+1
  2749                           
  2750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2751                           ; Switch size 1, requested type "simple"
  2752                           ; Number of cases is 1, Range of values is 0 to 0
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte            4     3 (average)
  2756                           ; direct_byte           11     8 (fixed)
  2757                           ; jumptable            260     6 (fixed)
  2758                           ;	Chosen strategy is simple_byte
  2759  05C6  0821               	movf	??_initOsc+1,w
  2760  05C7  3A00               	xorlw	0	; case 0
  2761  05C8  1903               	skipnz
  2762  05C9  2DCB               	goto	l2530
  2763  05CA  2DBD               	goto	l305
  2764  05CB                     l2530:
  2765                           
  2766                           ; Switch size 1, requested type "simple"
  2767                           ; Number of cases is 8, Range of values is 0 to 7
  2768                           ; switch strategies available:
  2769                           ; Name         Instructions Cycles
  2770                           ; simple_byte           25    13 (average)
  2771                           ; direct_byte           32     8 (fixed)
  2772                           ; jumptable            260     6 (fixed)
  2773                           ;	Chosen strategy is simple_byte
  2774  05CB  0820               	movf	??_initOsc,w
  2775  05CC  3A00               	xorlw	0	; case 0
  2776  05CD  1903               	skipnz
  2777  05CE  2D8D               	goto	l296
  2778  05CF  3A01               	xorlw	1	; case 1
  2779  05D0  1903               	skipnz
  2780  05D1  2D93               	goto	l298
  2781  05D2  3A03               	xorlw	3	; case 2
  2782  05D3  1903               	skipnz
  2783  05D4  2D99               	goto	l299
  2784  05D5  3A01               	xorlw	1	; case 3
  2785  05D6  1903               	skipnz
  2786  05D7  2D9F               	goto	l300
  2787  05D8  3A07               	xorlw	7	; case 4
  2788  05D9  1903               	skipnz
  2789  05DA  2DA5               	goto	l301
  2790  05DB  3A01               	xorlw	1	; case 5
  2791  05DC  1903               	skipnz
  2792  05DD  2DAB               	goto	l302
  2793  05DE  3A03               	xorlw	3	; case 6
  2794  05DF  1903               	skipnz
  2795  05E0  2DB1               	goto	l303
  2796  05E1  3A01               	xorlw	1	; case 7
  2797  05E2  1903               	skipnz
  2798  05E3  2DB7               	goto	l304
  2799  05E4  2DBD               	goto	l305
  2800  05E5                     l297:
  2801                           
  2802                           ;Oscilador.c: 54: OSCCONbits.SCS = 1;
  2803  05E5  140F               	bsf	15,0	;volatile
  2804  05E6                     l306:
  2805  05E6  0008               	return
  2806  05E7                     __end_of_initOsc:
  2807                           
  2808                           	psect	text7
  2809  07F1                     __ptext7:	
  2810 ;; *************** function _SET_TXR *****************
  2811 ;; Defined at:
  2812 ;;		line 4 in file "EAUSART.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    2
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           
  2841                           ;psect for function _SET_TXR
  2842  07F1                     _SET_TXR:
  2843  07F1                     l2252:	
  2844                           ;incstack = 0
  2845                           ; Regs used in _SET_TXR: [wreg]
  2846                           
  2847                           
  2848                           ;EAUSART.c: 5:     TXSTAbits.SYNC=0;
  2849  07F1  1683               	bsf	3,5	;RP0=1, select bank1
  2850  07F2  1303               	bcf	3,6	;RP1=0, select bank1
  2851  07F3  1218               	bcf	24,4	;volatile
  2852                           
  2853                           ;EAUSART.c: 6:     TXSTAbits.TXEN=1;
  2854  07F4  1698               	bsf	24,5	;volatile
  2855                           
  2856                           ;EAUSART.c: 7:     TXSTAbits.BRGH=1;
  2857  07F5  1518               	bsf	24,2	;volatile
  2858                           
  2859                           ;EAUSART.c: 8:     TXSTAbits.TX9=0;
  2860  07F6  1318               	bcf	24,6	;volatile
  2861                           
  2862                           ;EAUSART.c: 9:     BAUDCTLbits.BRG16=0;
  2863  07F7  1683               	bsf	3,5	;RP0=1, select bank3
  2864  07F8  1703               	bsf	3,6	;RP1=1, select bank3
  2865  07F9  1187               	bcf	7,3	;volatile
  2866  07FA                     l2254:
  2867                           
  2868                           ;EAUSART.c: 10:     SPBRG=25;
  2869  07FA  3019               	movlw	25
  2870  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  2871  07FC  1303               	bcf	3,6	;RP1=0, select bank1
  2872  07FD  0099               	movwf	25	;volatile
  2873  07FE                     l319:
  2874  07FE  0008               	return
  2875  07FF                     __end_of_SET_TXR:
  2876                           
  2877                           	psect	text8
  2878  0FBF                     __ptext8:	
  2879 ;; *************** function _SET_RXT *****************
  2880 ;; Defined at:
  2881 ;;		line 12 in file "EAUSART.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function _SET_RXT
  2911  0FBF                     _SET_RXT:
  2912  0FBF                     l2250:	
  2913                           ;incstack = 0
  2914                           ; Regs used in _SET_RXT: []
  2915                           
  2916                           
  2917                           ;EAUSART.c: 13:     RCSTAbits.SPEN=1;
  2918  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0FC1  1798               	bsf	24,7	;volatile
  2921                           
  2922                           ;EAUSART.c: 14:     RCSTAbits.CREN=1;
  2923  0FC2  1618               	bsf	24,4	;volatile
  2924                           
  2925                           ;EAUSART.c: 15:     RCSTAbits.FERR=0;
  2926  0FC3  1118               	bcf	24,2	;volatile
  2927                           
  2928                           ;EAUSART.c: 16:     RCSTAbits.OERR=0;
  2929  0FC4  1098               	bcf	24,1	;volatile
  2930                           
  2931                           ;EAUSART.c: 17:     RCSTAbits.RX9=0;
  2932  0FC5  1318               	bcf	24,6	;volatile
  2933                           
  2934                           ;EAUSART.c: 18:     PIE1bits.RCIE=1;
  2935  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0FC8  168C               	bsf	12,5	;volatile
  2938  0FC9                     l322:
  2939  0FC9  0008               	return
  2940  0FCA                     __end_of_SET_RXT:
  2941                           
  2942                           	psect	text9
  2943  0FB4                     __ptext9:	
  2944 ;; *************** function _L_ADC *****************
  2945 ;; Defined at:
  2946 ;;		line 145 in file "LCD16X2.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _L_ADC
  2976  0FB4                     _L_ADC:
  2977  0FB4                     l2320:	
  2978                           ;incstack = 0
  2979                           ; Regs used in _L_ADC: [wreg+status,2]
  2980                           
  2981                           
  2982                           ;LCD16X2.c: 146:     if (r > 20){
  2983  0FB4  3015               	movlw	21
  2984  0FB5  0272               	subwf	_r,w
  2985  0FB6  1C03               	skipc
  2986  0FB7  2FB9               	goto	u681
  2987  0FB8  2FBA               	goto	u680
  2988  0FB9                     u681:
  2989  0FB9  2FBE               	goto	l165
  2990  0FBA                     u680:
  2991  0FBA                     l2322:
  2992                           
  2993                           ;LCD16X2.c: 147:         r=0;
  2994  0FBA  01F2               	clrf	_r
  2995  0FBB                     l2324:
  2996                           
  2997                           ;LCD16X2.c: 148:         ADCON0bits.GO_nDONE=1;
  2998  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0FBD  149F               	bsf	31,1	;volatile
  3001  0FBE                     l165:
  3002  0FBE  0008               	return
  3003  0FBF                     __end_of_L_ADC:
  3004                           
  3005                           	psect	text10
  3006  06E7                     __ptext10:	
  3007 ;; *************** function _LCD_IN *****************
  3008 ;; Defined at:
  3009 ;;		line 6 in file "SETLCD.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0
  3025 ;;      Temps:          0       2       0       0       0
  3026 ;;      Totals:         0       2       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    4
  3030 ;; This function calls:
  3031 ;;		_LCD_ON
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _LCD_IN
  3039  06E7                     _LCD_IN:
  3040  06E7                     l2256:	
  3041                           ;incstack = 0
  3042                           ; Regs used in _LCD_IN: [wreg+status,2+status,0+pclath+cstack]
  3043                           
  3044                           
  3045                           ;SETLCD.c: 7:     TRISDbits.TRISD6 = 0;
  3046  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3047  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  3048  06E9  1308               	bcf	8,6	;volatile
  3049                           
  3050                           ;SETLCD.c: 8:     TRISDbits.TRISD7 = 0;
  3051  06EA  1388               	bcf	8,7	;volatile
  3052  06EB                     l2258:
  3053                           
  3054                           ;SETLCD.c: 9:     TRISB = 0;
  3055  06EB  0186               	clrf	6	;volatile
  3056  06EC                     l2260:
  3057                           
  3058                           ;SETLCD.c: 10:     PORTDbits.RD6 = 0;
  3059  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3060  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3061  06EE  1308               	bcf	8,6	;volatile
  3062  06EF                     l2262:
  3063                           
  3064                           ;SETLCD.c: 11:     PORTDbits.RD7 = 0;
  3065  06EF  1388               	bcf	8,7	;volatile
  3066                           
  3067                           ;SETLCD.c: 12:     PORTB = 0;
  3068  06F0  0186               	clrf	6	;volatile
  3069  06F1                     l2264:
  3070                           
  3071                           ;SETLCD.c: 13:     _delay((unsigned long)((50)*(4000000/4000.0)));
  3072  06F1  3041               	movlw	65
  3073  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3074  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3075  06F4  00A4               	movwf	??_LCD_IN+1
  3076  06F5  30ED               	movlw	237
  3077  06F6  00A3               	movwf	??_LCD_IN
  3078  06F7                     u767:
  3079  06F7  0BA3               	decfsz	??_LCD_IN,f
  3080  06F8  2EF7               	goto	u767
  3081  06F9  0BA4               	decfsz	??_LCD_IN+1,f
  3082  06FA  2EF7               	goto	u767
  3083  06FB  2EFC               	nop2
  3084  06FC                     l2266:
  3085                           
  3086                           ;SETLCD.c: 14:     LCD_ON(0x02);
  3087  06FC  3002               	movlw	2
  3088  06FD  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  3089  0702                     l2268:
  3090                           
  3091                           ;SETLCD.c: 15:     LCD_ON(0x38);
  3092  0702  3038               	movlw	56
  3093  0703  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  3094  0708                     l2270:
  3095                           
  3096                           ;SETLCD.c: 16:     LCD_ON(0x0C);
  3097  0708  300C               	movlw	12
  3098  0709  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  3099  070E                     l2272:
  3100                           
  3101                           ;SETLCD.c: 17:     LCD_ON(0x06);
  3102  070E  3006               	movlw	6
  3103  070F  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  3104  0714                     l211:
  3105  0714  0008               	return
  3106  0715                     __end_of_LCD_IN:
  3107                           
  3108                           	psect	text11
  3109  0FA5                     __ptext11:	
  3110 ;; *************** function _LCD_CL *****************
  3111 ;; Defined at:
  3112 ;;		line 36 in file "SETLCD.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, pclath, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    4
  3133 ;; This function calls:
  3134 ;;		_LCD_ON
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _LCD_CL
  3142  0FA5                     _LCD_CL:
  3143  0FA5                     l2274:	
  3144                           ;incstack = 0
  3145                           ; Regs used in _LCD_CL: [wreg+status,2+status,0+pclath+cstack]
  3146                           
  3147                           
  3148                           ;SETLCD.c: 37:     LCD_ON(0x01);
  3149  0FA5  3001               	movlw	1
  3150  0FA6  120A  158A  27EA  120A  158A  	fcall	_LCD_ON
  3151  0FAB                     l223:
  3152  0FAB  0008               	return
  3153  0FAC                     __end_of_LCD_CL:
  3154                           
  3155                           	psect	text12
  3156  01A3                     __ptext12:	
  3157 ;; *************** function _LCDVAL1 *****************
  3158 ;; Defined at:
  3159 ;;		line 61 in file "SETLCD.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  x               2   11[BANK0 ] int 
  3162 ;;  Z               2   13[BANK0 ] int 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       4       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:          0       1       0       0       0
  3177 ;;      Totals:         0       5       0       0       0
  3178 ;;Total ram usage:        5 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    6
  3181 ;; This function calls:
  3182 ;;		_LCD_POINT
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _LCDVAL1
  3190  01A3                     _LCDVAL1:
  3191  01A3                     l2276:	
  3192                           ;incstack = 0
  3193                           ; Regs used in _LCDVAL1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3194                           
  3195                           
  3196                           ;SETLCD.c: 62:     switch (Z){
  3197  01A3  2AD6               	goto	l2314
  3198  01A4                     l2278:
  3199                           
  3200                           ;SETLCD.c: 64:             LCD_POINT(x,2,"0");
  3201  01A4  082C               	movf	LCDVAL1@x+1,w
  3202  01A5  00A5               	movwf	LCD_POINT@x+1
  3203  01A6  082B               	movf	LCDVAL1@x,w
  3204  01A7  00A4               	movwf	LCD_POINT@x
  3205  01A8  3002               	movlw	2
  3206  01A9  00A6               	movwf	LCD_POINT@y
  3207  01AA  3000               	movlw	0
  3208  01AB  00A7               	movwf	LCD_POINT@y+1
  3209  01AC  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3210  01AD  00AF               	movwf	??_LCDVAL1
  3211  01AE  082F               	movf	??_LCDVAL1,w
  3212  01AF  00A8               	movwf	LCD_POINT@D
  3213  01B0  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3214                           
  3215                           ;SETLCD.c: 65:             break;
  3216  01B5  2B0F               	goto	l259
  3217  01B6                     l2280:
  3218                           
  3219                           ;SETLCD.c: 67:             LCD_POINT(x,2,"1");
  3220  01B6  082C               	movf	LCDVAL1@x+1,w
  3221  01B7  00A5               	movwf	LCD_POINT@x+1
  3222  01B8  082B               	movf	LCDVAL1@x,w
  3223  01B9  00A4               	movwf	LCD_POINT@x
  3224  01BA  3002               	movlw	2
  3225  01BB  00A6               	movwf	LCD_POINT@y
  3226  01BC  3000               	movlw	0
  3227  01BD  00A7               	movwf	LCD_POINT@y+1
  3228  01BE  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3229  01BF  00AF               	movwf	??_LCDVAL1
  3230  01C0  082F               	movf	??_LCDVAL1,w
  3231  01C1  00A8               	movwf	LCD_POINT@D
  3232  01C2  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3233                           
  3234                           ;SETLCD.c: 68:             break;
  3235  01C7  2B0F               	goto	l259
  3236  01C8                     l2282:
  3237                           
  3238                           ;SETLCD.c: 70:             LCD_POINT(x,2,"2");
  3239  01C8  082C               	movf	LCDVAL1@x+1,w
  3240  01C9  00A5               	movwf	LCD_POINT@x+1
  3241  01CA  082B               	movf	LCDVAL1@x,w
  3242  01CB  00A4               	movwf	LCD_POINT@x
  3243  01CC  3002               	movlw	2
  3244  01CD  00A6               	movwf	LCD_POINT@y
  3245  01CE  3000               	movlw	0
  3246  01CF  00A7               	movwf	LCD_POINT@y+1
  3247  01D0  3016               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3248  01D1  00AF               	movwf	??_LCDVAL1
  3249  01D2  082F               	movf	??_LCDVAL1,w
  3250  01D3  00A8               	movwf	LCD_POINT@D
  3251  01D4  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3252                           
  3253                           ;SETLCD.c: 71:             break;
  3254  01D9  2B0F               	goto	l259
  3255  01DA                     l2284:
  3256                           
  3257                           ;SETLCD.c: 73:             LCD_POINT(x,2,"3");
  3258  01DA  082C               	movf	LCDVAL1@x+1,w
  3259  01DB  00A5               	movwf	LCD_POINT@x+1
  3260  01DC  082B               	movf	LCDVAL1@x,w
  3261  01DD  00A4               	movwf	LCD_POINT@x
  3262  01DE  3002               	movlw	2
  3263  01DF  00A6               	movwf	LCD_POINT@y
  3264  01E0  3000               	movlw	0
  3265  01E1  00A7               	movwf	LCD_POINT@y+1
  3266  01E2  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3267  01E3  00AF               	movwf	??_LCDVAL1
  3268  01E4  082F               	movf	??_LCDVAL1,w
  3269  01E5  00A8               	movwf	LCD_POINT@D
  3270  01E6  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3271                           
  3272                           ;SETLCD.c: 74:             break;
  3273  01EB  2B0F               	goto	l259
  3274  01EC                     l2286:
  3275                           
  3276                           ;SETLCD.c: 76:             LCD_POINT(x,2,"4");
  3277  01EC  082C               	movf	LCDVAL1@x+1,w
  3278  01ED  00A5               	movwf	LCD_POINT@x+1
  3279  01EE  082B               	movf	LCDVAL1@x,w
  3280  01EF  00A4               	movwf	LCD_POINT@x
  3281  01F0  3002               	movlw	2
  3282  01F1  00A6               	movwf	LCD_POINT@y
  3283  01F2  3000               	movlw	0
  3284  01F3  00A7               	movwf	LCD_POINT@y+1
  3285  01F4  301A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3286  01F5  00AF               	movwf	??_LCDVAL1
  3287  01F6  082F               	movf	??_LCDVAL1,w
  3288  01F7  00A8               	movwf	LCD_POINT@D
  3289  01F8  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3290                           
  3291                           ;SETLCD.c: 77:             break;
  3292  01FD  2B0F               	goto	l259
  3293  01FE                     l2288:
  3294                           
  3295                           ;SETLCD.c: 79:             LCD_POINT(x,2,"5");
  3296  01FE  082C               	movf	LCDVAL1@x+1,w
  3297  01FF  00A5               	movwf	LCD_POINT@x+1
  3298  0200  082B               	movf	LCDVAL1@x,w
  3299  0201  00A4               	movwf	LCD_POINT@x
  3300  0202  3002               	movlw	2
  3301  0203  00A6               	movwf	LCD_POINT@y
  3302  0204  3000               	movlw	0
  3303  0205  00A7               	movwf	LCD_POINT@y+1
  3304  0206  301C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3305  0207  00AF               	movwf	??_LCDVAL1
  3306  0208  082F               	movf	??_LCDVAL1,w
  3307  0209  00A8               	movwf	LCD_POINT@D
  3308  020A  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3309                           
  3310                           ;SETLCD.c: 80:             break;
  3311  020F  2B0F               	goto	l259
  3312  0210                     l2290:
  3313                           
  3314                           ;SETLCD.c: 82:             LCD_POINT(x,2,"6");
  3315  0210  082C               	movf	LCDVAL1@x+1,w
  3316  0211  00A5               	movwf	LCD_POINT@x+1
  3317  0212  082B               	movf	LCDVAL1@x,w
  3318  0213  00A4               	movwf	LCD_POINT@x
  3319  0214  3002               	movlw	2
  3320  0215  00A6               	movwf	LCD_POINT@y
  3321  0216  3000               	movlw	0
  3322  0217  00A7               	movwf	LCD_POINT@y+1
  3323  0218  301E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3324  0219  00AF               	movwf	??_LCDVAL1
  3325  021A  082F               	movf	??_LCDVAL1,w
  3326  021B  00A8               	movwf	LCD_POINT@D
  3327  021C  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3328                           
  3329                           ;SETLCD.c: 83:             break;
  3330  0221  2B0F               	goto	l259
  3331  0222                     l2292:
  3332                           
  3333                           ;SETLCD.c: 85:             LCD_POINT(x,2,"7");
  3334  0222  082C               	movf	LCDVAL1@x+1,w
  3335  0223  00A5               	movwf	LCD_POINT@x+1
  3336  0224  082B               	movf	LCDVAL1@x,w
  3337  0225  00A4               	movwf	LCD_POINT@x
  3338  0226  3002               	movlw	2
  3339  0227  00A6               	movwf	LCD_POINT@y
  3340  0228  3000               	movlw	0
  3341  0229  00A7               	movwf	LCD_POINT@y+1
  3342  022A  3020               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3343  022B  00AF               	movwf	??_LCDVAL1
  3344  022C  082F               	movf	??_LCDVAL1,w
  3345  022D  00A8               	movwf	LCD_POINT@D
  3346  022E  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3347                           
  3348                           ;SETLCD.c: 86:             break;
  3349  0233  2B0F               	goto	l259
  3350  0234                     l2294:
  3351                           
  3352                           ;SETLCD.c: 88:             LCD_POINT(x,2,"8");
  3353  0234  082C               	movf	LCDVAL1@x+1,w
  3354  0235  00A5               	movwf	LCD_POINT@x+1
  3355  0236  082B               	movf	LCDVAL1@x,w
  3356  0237  00A4               	movwf	LCD_POINT@x
  3357  0238  3002               	movlw	2
  3358  0239  00A6               	movwf	LCD_POINT@y
  3359  023A  3000               	movlw	0
  3360  023B  00A7               	movwf	LCD_POINT@y+1
  3361  023C  3022               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3362  023D  00AF               	movwf	??_LCDVAL1
  3363  023E  082F               	movf	??_LCDVAL1,w
  3364  023F  00A8               	movwf	LCD_POINT@D
  3365  0240  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3366                           
  3367                           ;SETLCD.c: 89:             break;
  3368  0245  2B0F               	goto	l259
  3369  0246                     l2296:
  3370                           
  3371                           ;SETLCD.c: 91:             LCD_POINT(x,2,"9");
  3372  0246  082C               	movf	LCDVAL1@x+1,w
  3373  0247  00A5               	movwf	LCD_POINT@x+1
  3374  0248  082B               	movf	LCDVAL1@x,w
  3375  0249  00A4               	movwf	LCD_POINT@x
  3376  024A  3002               	movlw	2
  3377  024B  00A6               	movwf	LCD_POINT@y
  3378  024C  3000               	movlw	0
  3379  024D  00A7               	movwf	LCD_POINT@y+1
  3380  024E  3024               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3381  024F  00AF               	movwf	??_LCDVAL1
  3382  0250  082F               	movf	??_LCDVAL1,w
  3383  0251  00A8               	movwf	LCD_POINT@D
  3384  0252  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3385                           
  3386                           ;SETLCD.c: 92:             break;
  3387  0257  2B0F               	goto	l259
  3388  0258                     l2298:
  3389                           
  3390                           ;SETLCD.c: 94:             LCD_POINT (x,2,"A");
  3391  0258  082C               	movf	LCDVAL1@x+1,w
  3392  0259  00A5               	movwf	LCD_POINT@x+1
  3393  025A  082B               	movf	LCDVAL1@x,w
  3394  025B  00A4               	movwf	LCD_POINT@x
  3395  025C  3002               	movlw	2
  3396  025D  00A6               	movwf	LCD_POINT@y
  3397  025E  3000               	movlw	0
  3398  025F  00A7               	movwf	LCD_POINT@y+1
  3399  0260  3026               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3400  0261  00AF               	movwf	??_LCDVAL1
  3401  0262  082F               	movf	??_LCDVAL1,w
  3402  0263  00A8               	movwf	LCD_POINT@D
  3403  0264  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3404                           
  3405                           ;SETLCD.c: 95:             break;
  3406  0269  2B0F               	goto	l259
  3407  026A                     l2300:
  3408                           
  3409                           ;SETLCD.c: 97:             LCD_POINT (x,2,"B");
  3410  026A  082C               	movf	LCDVAL1@x+1,w
  3411  026B  00A5               	movwf	LCD_POINT@x+1
  3412  026C  082B               	movf	LCDVAL1@x,w
  3413  026D  00A4               	movwf	LCD_POINT@x
  3414  026E  3002               	movlw	2
  3415  026F  00A6               	movwf	LCD_POINT@y
  3416  0270  3000               	movlw	0
  3417  0271  00A7               	movwf	LCD_POINT@y+1
  3418  0272  3028               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3419  0273  00AF               	movwf	??_LCDVAL1
  3420  0274  082F               	movf	??_LCDVAL1,w
  3421  0275  00A8               	movwf	LCD_POINT@D
  3422  0276  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3423                           
  3424                           ;SETLCD.c: 98:             break;
  3425  027B  2B0F               	goto	l259
  3426  027C                     l2302:
  3427                           
  3428                           ;SETLCD.c: 100:             LCD_POINT (x,2,"C");
  3429  027C  082C               	movf	LCDVAL1@x+1,w
  3430  027D  00A5               	movwf	LCD_POINT@x+1
  3431  027E  082B               	movf	LCDVAL1@x,w
  3432  027F  00A4               	movwf	LCD_POINT@x
  3433  0280  3002               	movlw	2
  3434  0281  00A6               	movwf	LCD_POINT@y
  3435  0282  3000               	movlw	0
  3436  0283  00A7               	movwf	LCD_POINT@y+1
  3437  0284  302A               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3438  0285  00AF               	movwf	??_LCDVAL1
  3439  0286  082F               	movf	??_LCDVAL1,w
  3440  0287  00A8               	movwf	LCD_POINT@D
  3441  0288  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3442                           
  3443                           ;SETLCD.c: 101:             break;
  3444  028D  2B0F               	goto	l259
  3445  028E                     l2304:
  3446                           
  3447                           ;SETLCD.c: 103:             LCD_POINT (x,2,"D");
  3448  028E  082C               	movf	LCDVAL1@x+1,w
  3449  028F  00A5               	movwf	LCD_POINT@x+1
  3450  0290  082B               	movf	LCDVAL1@x,w
  3451  0291  00A4               	movwf	LCD_POINT@x
  3452  0292  3002               	movlw	2
  3453  0293  00A6               	movwf	LCD_POINT@y
  3454  0294  3000               	movlw	0
  3455  0295  00A7               	movwf	LCD_POINT@y+1
  3456  0296  302C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3457  0297  00AF               	movwf	??_LCDVAL1
  3458  0298  082F               	movf	??_LCDVAL1,w
  3459  0299  00A8               	movwf	LCD_POINT@D
  3460  029A  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3461                           
  3462                           ;SETLCD.c: 104:             break;
  3463  029F  2B0F               	goto	l259
  3464  02A0                     l2306:
  3465                           
  3466                           ;SETLCD.c: 106:             LCD_POINT (x,2,"E");
  3467  02A0  082C               	movf	LCDVAL1@x+1,w
  3468  02A1  00A5               	movwf	LCD_POINT@x+1
  3469  02A2  082B               	movf	LCDVAL1@x,w
  3470  02A3  00A4               	movwf	LCD_POINT@x
  3471  02A4  3002               	movlw	2
  3472  02A5  00A6               	movwf	LCD_POINT@y
  3473  02A6  3000               	movlw	0
  3474  02A7  00A7               	movwf	LCD_POINT@y+1
  3475  02A8  302E               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3476  02A9  00AF               	movwf	??_LCDVAL1
  3477  02AA  082F               	movf	??_LCDVAL1,w
  3478  02AB  00A8               	movwf	LCD_POINT@D
  3479  02AC  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3480                           
  3481                           ;SETLCD.c: 107:             break;
  3482  02B1  2B0F               	goto	l259
  3483  02B2                     l2308:
  3484                           
  3485                           ;SETLCD.c: 109:             LCD_POINT (x,2,"F");
  3486  02B2  082C               	movf	LCDVAL1@x+1,w
  3487  02B3  00A5               	movwf	LCD_POINT@x+1
  3488  02B4  082B               	movf	LCDVAL1@x,w
  3489  02B5  00A4               	movwf	LCD_POINT@x
  3490  02B6  3002               	movlw	2
  3491  02B7  00A6               	movwf	LCD_POINT@y
  3492  02B8  3000               	movlw	0
  3493  02B9  00A7               	movwf	LCD_POINT@y+1
  3494  02BA  3030               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3495  02BB  00AF               	movwf	??_LCDVAL1
  3496  02BC  082F               	movf	??_LCDVAL1,w
  3497  02BD  00A8               	movwf	LCD_POINT@D
  3498  02BE  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3499                           
  3500                           ;SETLCD.c: 110:             break;
  3501  02C3  2B0F               	goto	l259
  3502  02C4                     l2310:
  3503                           
  3504                           ;SETLCD.c: 112:             LCD_POINT(x,2,".");
  3505  02C4  082C               	movf	LCDVAL1@x+1,w
  3506  02C5  00A5               	movwf	LCD_POINT@x+1
  3507  02C6  082B               	movf	LCDVAL1@x,w
  3508  02C7  00A4               	movwf	LCD_POINT@x
  3509  02C8  3002               	movlw	2
  3510  02C9  00A6               	movwf	LCD_POINT@y
  3511  02CA  3000               	movlw	0
  3512  02CB  00A7               	movwf	LCD_POINT@y+1
  3513  02CC  3010               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  3514  02CD  00AF               	movwf	??_LCDVAL1
  3515  02CE  082F               	movf	??_LCDVAL1,w
  3516  02CF  00A8               	movwf	LCD_POINT@D
  3517  02D0  120A  118A  2740  120A  118A  	fcall	_LCD_POINT
  3518                           
  3519                           ;SETLCD.c: 113:             break;
  3520  02D5  2B0F               	goto	l259
  3521  02D6                     l2314:
  3522                           
  3523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3524                           ; Switch size 1, requested type "simple"
  3525                           ; Number of cases is 1, Range of values is 0 to 0
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte            4     3 (average)
  3529                           ; direct_byte           11     8 (fixed)
  3530                           ; jumptable            260     6 (fixed)
  3531                           ;	Chosen strategy is simple_byte
  3532  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3533  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3534  02D8  082E               	movf	LCDVAL1@Z+1,w
  3535  02D9  3A00               	xorlw	0	; case 0
  3536  02DA  1903               	skipnz
  3537  02DB  2ADD               	goto	l2532
  3538  02DC  2AC4               	goto	l2310
  3539  02DD                     l2532:
  3540                           
  3541                           ; Switch size 1, requested type "simple"
  3542                           ; Number of cases is 16, Range of values is 0 to 15
  3543                           ; switch strategies available:
  3544                           ; Name         Instructions Cycles
  3545                           ; simple_byte           49    25 (average)
  3546                           ; direct_byte           56     8 (fixed)
  3547                           ; jumptable            260     6 (fixed)
  3548                           ;	Chosen strategy is simple_byte
  3549  02DD  082D               	movf	LCDVAL1@Z,w
  3550  02DE  3A00               	xorlw	0	; case 0
  3551  02DF  1903               	skipnz
  3552  02E0  29A4               	goto	l2278
  3553  02E1  3A01               	xorlw	1	; case 1
  3554  02E2  1903               	skipnz
  3555  02E3  29B6               	goto	l2280
  3556  02E4  3A03               	xorlw	3	; case 2
  3557  02E5  1903               	skipnz
  3558  02E6  29C8               	goto	l2282
  3559  02E7  3A01               	xorlw	1	; case 3
  3560  02E8  1903               	skipnz
  3561  02E9  29DA               	goto	l2284
  3562  02EA  3A07               	xorlw	7	; case 4
  3563  02EB  1903               	skipnz
  3564  02EC  29EC               	goto	l2286
  3565  02ED  3A01               	xorlw	1	; case 5
  3566  02EE  1903               	skipnz
  3567  02EF  29FE               	goto	l2288
  3568  02F0  3A03               	xorlw	3	; case 6
  3569  02F1  1903               	skipnz
  3570  02F2  2A10               	goto	l2290
  3571  02F3  3A01               	xorlw	1	; case 7
  3572  02F4  1903               	skipnz
  3573  02F5  2A22               	goto	l2292
  3574  02F6  3A0F               	xorlw	15	; case 8
  3575  02F7  1903               	skipnz
  3576  02F8  2A34               	goto	l2294
  3577  02F9  3A01               	xorlw	1	; case 9
  3578  02FA  1903               	skipnz
  3579  02FB  2A46               	goto	l2296
  3580  02FC  3A03               	xorlw	3	; case 10
  3581  02FD  1903               	skipnz
  3582  02FE  2A58               	goto	l2298
  3583  02FF  3A01               	xorlw	1	; case 11
  3584  0300  1903               	skipnz
  3585  0301  2A6A               	goto	l2300
  3586  0302  3A07               	xorlw	7	; case 12
  3587  0303  1903               	skipnz
  3588  0304  2A7C               	goto	l2302
  3589  0305  3A01               	xorlw	1	; case 13
  3590  0306  1903               	skipnz
  3591  0307  2A8E               	goto	l2304
  3592  0308  3A03               	xorlw	3	; case 14
  3593  0309  1903               	skipnz
  3594  030A  2AA0               	goto	l2306
  3595  030B  3A01               	xorlw	1	; case 15
  3596  030C  1903               	skipnz
  3597  030D  2AB2               	goto	l2308
  3598  030E  2AC4               	goto	l2310
  3599  030F                     l259:
  3600  030F  0008               	return
  3601  0310                     __end_of_LCDVAL1:
  3602                           
  3603                           	psect	text13
  3604  0740                     __ptext13:	
  3605 ;; *************** function _LCD_POINT *****************
  3606 ;; Defined at:
  3607 ;;		line 45 in file "SETLCD.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  x               2    4[BANK0 ] int 
  3610 ;;  y               2    6[BANK0 ] int 
  3611 ;;  D               1    8[BANK0 ] PTR unsigned char 
  3612 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  3613 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  3614 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  3615 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  3616 ;;		 -> STR_2(2), STR_1(15), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  LOC             1   10[BANK0 ] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       5       0       0       0
  3629 ;;      Locals:         0       1       0       0       0
  3630 ;;      Temps:          0       1       0       0       0
  3631 ;;      Totals:         0       7       0       0       0
  3632 ;;Total ram usage:        7 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    5
  3635 ;; This function calls:
  3636 ;;		_LCD_ON
  3637 ;;		_LCD_P
  3638 ;; This function is called by:
  3639 ;;		_main
  3640 ;;		_LCDVAL1
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _LCD_POINT
  3646  0740                     _LCD_POINT:
  3647  0740                     l2100:	
  3648                           ;incstack = 0
  3649                           ; Regs used in _LCD_POINT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3650                           
  3651                           
  3652                           ;SETLCD.c: 46:     char LOC;;SETLCD.c: 47:     switch (y){
  3653  0740  2F4D               	goto	l2110
  3654  0741                     l2102:
  3655                           
  3656                           ;SETLCD.c: 49:             LOC = 0x80 + x;
  3657  0741  0824               	movf	LCD_POINT@x,w
  3658  0742  3E80               	addlw	128
  3659  0743  00A9               	movwf	??_LCD_POINT
  3660  0744  0829               	movf	??_LCD_POINT,w
  3661  0745  00AA               	movwf	LCD_POINT@LOC
  3662                           
  3663                           ;SETLCD.c: 50:             break;
  3664  0746  2F5C               	goto	l2112
  3665  0747                     l2104:
  3666                           
  3667                           ;SETLCD.c: 52:             LOC = 0xC0 + x;
  3668  0747  0824               	movf	LCD_POINT@x,w
  3669  0748  3EC0               	addlw	192
  3670  0749  00A9               	movwf	??_LCD_POINT
  3671  074A  0829               	movf	??_LCD_POINT,w
  3672  074B  00AA               	movwf	LCD_POINT@LOC
  3673                           
  3674                           ;SETLCD.c: 53:             break;
  3675  074C  2F5C               	goto	l2112
  3676  074D                     l2110:
  3677                           
  3678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3679                           ; Switch size 1, requested type "simple"
  3680                           ; Number of cases is 1, Range of values is 0 to 0
  3681                           ; switch strategies available:
  3682                           ; Name         Instructions Cycles
  3683                           ; simple_byte            4     3 (average)
  3684                           ; direct_byte           11     8 (fixed)
  3685                           ; jumptable            260     6 (fixed)
  3686                           ;	Chosen strategy is simple_byte
  3687  074D  1283               	bcf	3,5	;RP0=0, select bank0
  3688  074E  1303               	bcf	3,6	;RP1=0, select bank0
  3689  074F  0827               	movf	LCD_POINT@y+1,w
  3690  0750  3A00               	xorlw	0	; case 0
  3691  0751  1903               	skipnz
  3692  0752  2F54               	goto	l2534
  3693  0753  2F41               	goto	l2102
  3694  0754                     l2534:
  3695                           
  3696                           ; Switch size 1, requested type "simple"
  3697                           ; Number of cases is 2, Range of values is 1 to 2
  3698                           ; switch strategies available:
  3699                           ; Name         Instructions Cycles
  3700                           ; simple_byte            7     4 (average)
  3701                           ; direct_byte           17    11 (fixed)
  3702                           ; jumptable            263     9 (fixed)
  3703                           ;	Chosen strategy is simple_byte
  3704  0754  0826               	movf	LCD_POINT@y,w
  3705  0755  3A01               	xorlw	1	; case 1
  3706  0756  1903               	skipnz
  3707  0757  2F41               	goto	l2102
  3708  0758  3A03               	xorlw	3	; case 2
  3709  0759  1903               	skipnz
  3710  075A  2F47               	goto	l2104
  3711  075B  2F41               	goto	l2102
  3712  075C                     l2112:
  3713                           
  3714                           ;SETLCD.c: 58:     LCD_ON(LOC);
  3715  075C  082A               	movf	LCD_POINT@LOC,w
  3716  075D  120A  158A  27EA  120A  118A  	fcall	_LCD_ON
  3717  0762                     l2114:
  3718                           
  3719                           ;SETLCD.c: 59:     LCD_P(D);
  3720  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0763  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0764  0828               	movf	LCD_POINT@D,w
  3723  0765  120A  118A  27B7  120A  118A  	fcall	_LCD_P
  3724  076A                     l237:
  3725  076A  0008               	return
  3726  076B                     __end_of_LCD_POINT:
  3727                           
  3728                           	psect	text14
  3729  07B7                     __ptext14:	
  3730 ;; *************** function _LCD_P *****************
  3731 ;; Defined at:
  3732 ;;		line 39 in file "SETLCD.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  D               1    wreg     PTR unsigned char 
  3735 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  3736 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  3737 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  3738 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  3739 ;;		 -> STR_2(2), STR_1(15), 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  D               1    3[BANK0 ] PTR unsigned char 
  3742 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  3743 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  3744 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  3745 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  3746 ;;		 -> STR_2(2), STR_1(15), 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       0       0       0
  3757 ;;      Locals:         0       1       0       0       0
  3758 ;;      Temps:          0       1       0       0       0
  3759 ;;      Totals:         0       2       0       0       0
  3760 ;;Total ram usage:        2 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    4
  3763 ;; This function calls:
  3764 ;;		_LCD_PLAY
  3765 ;; This function is called by:
  3766 ;;		_LCD_POINT
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function _LCD_P
  3772  07B7                     _LCD_P:
  3773                           
  3774                           ;incstack = 0
  3775                           ; Regs used in _LCD_P: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3776                           ;LCD_P@D stored from wreg
  3777  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3778  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  3779  07B9  00A3               	movwf	LCD_P@D
  3780  07BA                     l2064:
  3781                           
  3782                           ;SETLCD.c: 40:     while (*D){
  3783  07BA  2FCD               	goto	l2070
  3784  07BB                     l2066:
  3785                           
  3786                           ;SETLCD.c: 41:         LCD_PLAY(*D);
  3787  07BB  0823               	movf	LCD_P@D,w
  3788  07BC  0084               	movwf	4
  3789  07BD  120A  118A  267D  120A  118A  	fcall	stringdir
  3790  07C2  120A  158A  27D7  120A  118A  	fcall	_LCD_PLAY
  3791  07C7                     l2068:
  3792                           
  3793                           ;SETLCD.c: 42:         D++;
  3794  07C7  3001               	movlw	1
  3795  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  3796  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  3797  07CA  00A2               	movwf	??_LCD_P
  3798  07CB  0822               	movf	??_LCD_P,w
  3799  07CC  07A3               	addwf	LCD_P@D,f
  3800  07CD                     l2070:
  3801                           
  3802                           ;SETLCD.c: 40:     while (*D){
  3803  07CD  0823               	movf	LCD_P@D,w
  3804  07CE  0084               	movwf	4
  3805  07CF  120A  118A  267D  120A  118A  	fcall	stringdir
  3806  07D4  3A00               	xorlw	0
  3807  07D5  1D03               	skipz
  3808  07D6  2FD8               	goto	u611
  3809  07D7  2FD9               	goto	u610
  3810  07D8                     u611:
  3811  07D8  2FBB               	goto	l2066
  3812  07D9                     u610:
  3813  07D9                     l229:
  3814  07D9  0008               	return
  3815  07DA                     __end_of_LCD_P:
  3816                           
  3817                           	psect	text15
  3818  0FD7                     __ptext15:	
  3819 ;; *************** function _LCD_PLAY *****************
  3820 ;; Defined at:
  3821 ;;		line 30 in file "SETLCD.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  D               1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  D               1    1[BANK0 ] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, pclath, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3835 ;;      Params:         0       0       0       0       0
  3836 ;;      Locals:         0       1       0       0       0
  3837 ;;      Temps:          0       1       0       0       0
  3838 ;;      Totals:         0       2       0       0       0
  3839 ;;Total ram usage:        2 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    3
  3842 ;; This function calls:
  3843 ;;		_LCD_TIM
  3844 ;; This function is called by:
  3845 ;;		_LCD_P
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           
  3850                           ;psect for function _LCD_PLAY
  3851  0FD7                     _LCD_PLAY:
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _LCD_PLAY: [wreg+status,2+status,0+pclath+cstack]
  3855                           ;LCD_PLAY@D stored from wreg
  3856  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0FD9  00A1               	movwf	LCD_PLAY@D
  3859  0FDA                     l2048:
  3860                           
  3861                           ;SETLCD.c: 31:     PORTDbits.RD6=1;
  3862  0FDA  1708               	bsf	8,6	;volatile
  3863  0FDB                     l2050:
  3864                           
  3865                           ;SETLCD.c: 32:     PORTB=D;
  3866  0FDB  0821               	movf	LCD_PLAY@D,w
  3867  0FDC  0086               	movwf	6	;volatile
  3868  0FDD                     l2052:
  3869                           
  3870                           ;SETLCD.c: 33:     LCD_TIM();
  3871  0FDD  120A  158A  27CA  120A  158A  	fcall	_LCD_TIM
  3872  0FE2                     l2054:
  3873                           
  3874                           ;SETLCD.c: 34:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  3875  0FE2  300F               	movlw	15
  3876  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0FE5  00A0               	movwf	??_LCD_PLAY
  3879  0FE6                     u777:
  3880  0FE6  0BA0               	decfsz	??_LCD_PLAY,f
  3881  0FE7  2FE6               	goto	u777
  3882  0FE8  2FE9               	nop2
  3883  0FE9                     l220:
  3884  0FE9  0008               	return
  3885  0FEA                     __end_of_LCD_PLAY:
  3886                           
  3887                           	psect	text16
  3888  0FEA                     __ptext16:	
  3889 ;; *************** function _LCD_ON *****************
  3890 ;; Defined at:
  3891 ;;		line 19 in file "SETLCD.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  C               1    wreg     unsigned char 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  C               1    2[BANK0 ] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0, pclath, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       0       0       0       0
  3906 ;;      Locals:         0       1       0       0       0
  3907 ;;      Temps:          0       2       0       0       0
  3908 ;;      Totals:         0       3       0       0       0
  3909 ;;Total ram usage:        3 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    3
  3912 ;; This function calls:
  3913 ;;		_LCD_TIM
  3914 ;; This function is called by:
  3915 ;;		_LCD_IN
  3916 ;;		_LCD_CL
  3917 ;;		_LCD_POINT
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           
  3922                           ;psect for function _LCD_ON
  3923  0FEA                     _LCD_ON:
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  3927                           ;LCD_ON@C stored from wreg
  3928  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0FEC  00A2               	movwf	LCD_ON@C
  3931  0FED                     l2056:
  3932                           
  3933                           ;SETLCD.c: 20:     PORTDbits.RD6=0;
  3934  0FED  1308               	bcf	8,6	;volatile
  3935  0FEE                     l2058:
  3936                           
  3937                           ;SETLCD.c: 21:     PORTB=C;
  3938  0FEE  0822               	movf	LCD_ON@C,w
  3939  0FEF  0086               	movwf	6	;volatile
  3940  0FF0                     l2060:
  3941                           
  3942                           ;SETLCD.c: 22:     LCD_TIM();
  3943  0FF0  120A  158A  27CA  120A  158A  	fcall	_LCD_TIM
  3944  0FF5                     l2062:
  3945                           
  3946                           ;SETLCD.c: 23:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3947  0FF5  3003               	movlw	3
  3948  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0FF8  00A1               	movwf	??_LCD_ON+1
  3951  0FF9  3097               	movlw	151
  3952  0FFA  00A0               	movwf	??_LCD_ON
  3953  0FFB                     u787:
  3954  0FFB  0BA0               	decfsz	??_LCD_ON,f
  3955  0FFC  2FFB               	goto	u787
  3956  0FFD  0BA1               	decfsz	??_LCD_ON+1,f
  3957  0FFE  2FFB               	goto	u787
  3958  0FFF                     l214:
  3959  0FFF  0008               	return
  3960  1000                     __end_of_LCD_ON:
  3961                           
  3962                           	psect	text17
  3963  0FCA                     __ptext17:	
  3964 ;; *************** function _LCD_TIM *****************
  3965 ;; Defined at:
  3966 ;;		line 25 in file "SETLCD.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		None
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0
  3983 ;;      Totals:         0       0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    2
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_LCD_ON
  3991 ;;		_LCD_PLAY
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function _LCD_TIM
  3997  0FCA                     _LCD_TIM:
  3998  0FCA                     l2046:	
  3999                           ;incstack = 0
  4000                           ; Regs used in _LCD_TIM: []
  4001                           
  4002                           
  4003                           ;SETLCD.c: 26:     PORTDbits.RD7 = 1;
  4004  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4006  0FCC  1788               	bsf	8,7	;volatile
  4007                           
  4008                           ;SETLCD.c: 27:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  4009  0FCD  2FCE               	nop2	;2 cycle nop
  4010  0FCE  2FCF               	nop2	;2 cycle nop
  4011  0FCF  0000               	nop
  4012                           
  4013                           ;SETLCD.c: 28:     PORTDbits.RD7 = 0;
  4014  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4016  0FD2  1388               	bcf	8,7	;volatile
  4017                           
  4018                           ;SETLCD.c: 29:     _delay((unsigned long)((5)*(4000000/4000000.0)));}
  4019  0FD3  2FD4               	nop2	;2 cycle nop
  4020  0FD4  2FD5               	nop2	;2 cycle nop
  4021  0FD5  0000               	nop
  4022  0FD6                     l217:
  4023  0FD6  0008               	return
  4024  0FD7                     __end_of_LCD_TIM:
  4025                           
  4026                           	psect	text18
  4027  052A                     __ptext18:	
  4028 ;; *************** function _CONVET_cont *****************
  4029 ;; Defined at:
  4030 ;;		line 220 in file "LCD16X2.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4044 ;;      Params:         0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0
  4046 ;;      Temps:          0       4       0       0       0
  4047 ;;      Totals:         0       4       0       0       0
  4048 ;;Total ram usage:        4 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    3
  4051 ;; This function calls:
  4052 ;;		___awdiv
  4053 ;;		___bmul
  4054 ;;		___wmul
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _CONVET_cont
  4062  052A                     _CONVET_cont:
  4063  052A                     l2364:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _CONVET_cont: [wreg+status,2+status,0+pclath+cstack]
  4066                           
  4067                           
  4068                           ;LCD16X2.c: 221:     cont_1=(cont/100);
  4069  052A  3064               	movlw	100
  4070  052B  1283               	bcf	3,5	;RP0=0, select bank0
  4071  052C  1303               	bcf	3,6	;RP1=0, select bank0
  4072  052D  00A6               	movwf	___awdiv@divisor
  4073  052E  3000               	movlw	0
  4074  052F  00A7               	movwf	___awdiv@divisor+1
  4075  0530  084B               	movf	_cont,w
  4076  0531  00AF               	movwf	??_CONVET_cont
  4077  0532  01B0               	clrf	??_CONVET_cont+1
  4078  0533  082F               	movf	??_CONVET_cont,w
  4079  0534  00A8               	movwf	___awdiv@dividend
  4080  0535  0830               	movf	??_CONVET_cont+1,w
  4081  0536  00A9               	movwf	___awdiv@dividend+1
  4082  0537  120A  118A  24C1  120A  118A  	fcall	___awdiv
  4083  053C  1283               	bcf	3,5	;RP0=0, select bank0
  4084  053D  1303               	bcf	3,6	;RP1=0, select bank0
  4085  053E  0826               	movf	?___awdiv,w
  4086  053F  00B1               	movwf	??_CONVET_cont+2
  4087  0540  0831               	movf	??_CONVET_cont+2,w
  4088  0541  00BE               	movwf	_cont_1
  4089                           
  4090                           ;LCD16X2.c: 222:     cont_2=((cont)-(cont_1*100))/10;
  4091  0542  300A               	movlw	10
  4092  0543  00A6               	movwf	___awdiv@divisor
  4093  0544  3000               	movlw	0
  4094  0545  00A7               	movwf	___awdiv@divisor+1
  4095  0546  083E               	movf	_cont_1,w
  4096  0547  00AF               	movwf	??_CONVET_cont
  4097  0548  01B0               	clrf	??_CONVET_cont+1
  4098  0549  082F               	movf	??_CONVET_cont,w
  4099  054A  00A0               	movwf	___wmul@multiplier
  4100  054B  0830               	movf	??_CONVET_cont+1,w
  4101  054C  00A1               	movwf	___wmul@multiplier+1
  4102  054D  309C               	movlw	156
  4103  054E  00A2               	movwf	___wmul@multiplicand
  4104  054F  30FF               	movlw	255
  4105  0550  00A3               	movwf	___wmul@multiplicand+1
  4106  0551  120A  118A  276B  120A  118A  	fcall	___wmul
  4107  0556  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0557  1303               	bcf	3,6	;RP1=0, select bank0
  4109  0558  084B               	movf	_cont,w
  4110  0559  0720               	addwf	?___wmul,w
  4111  055A  00A8               	movwf	___awdiv@dividend
  4112  055B  0821               	movf	?___wmul+1,w
  4113  055C  1803               	skipnc
  4114  055D  0A21               	incf	?___wmul+1,w
  4115  055E  00A9               	movwf	___awdiv@dividend+1
  4116  055F  120A  118A  24C1  120A  118A  	fcall	___awdiv
  4117  0564  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0565  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0566  0826               	movf	?___awdiv,w
  4120  0567  00B1               	movwf	??_CONVET_cont+2
  4121  0568  0831               	movf	??_CONVET_cont+2,w
  4122  0569  00BD               	movwf	_cont_2
  4123                           
  4124                           ;LCD16X2.c: 223:     cont_3=((cont)-(cont_1*100)-(cont_2*10));
  4125  056A  309C               	movlw	156
  4126  056B  00AF               	movwf	??_CONVET_cont
  4127  056C  082F               	movf	??_CONVET_cont,w
  4128  056D  00A0               	movwf	___bmul@multiplicand
  4129  056E  083E               	movf	_cont_1,w
  4130  056F  120A  118A  27DA  120A  118A  	fcall	___bmul
  4131  0574  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0575  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0576  00B0               	movwf	??_CONVET_cont+1
  4134  0577  30F6               	movlw	246
  4135  0578  00B1               	movwf	??_CONVET_cont+2
  4136  0579  0831               	movf	??_CONVET_cont+2,w
  4137  057A  00A0               	movwf	___bmul@multiplicand
  4138  057B  083D               	movf	_cont_2,w
  4139  057C  120A  118A  27DA  120A  118A  	fcall	___bmul
  4140  0581  1283               	bcf	3,5	;RP0=0, select bank0
  4141  0582  1303               	bcf	3,6	;RP1=0, select bank0
  4142  0583  0730               	addwf	??_CONVET_cont+1,w
  4143  0584  074B               	addwf	_cont,w
  4144  0585  00B2               	movwf	??_CONVET_cont+3
  4145  0586  0832               	movf	??_CONVET_cont+3,w
  4146  0587  00BC               	movwf	_cont_3
  4147  0588                     l194:
  4148  0588  0008               	return
  4149  0589                     __end_of_CONVET_cont:
  4150                           
  4151                           	psect	text19
  4152  076B                     __ptext19:	
  4153 ;; *************** function ___wmul *****************
  4154 ;; Defined at:
  4155 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4158 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  product         2    4[BANK0 ] unsigned int 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  2    0[BANK0 ] unsigned int 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       4       0       0       0
  4171 ;;      Locals:         0       2       0       0       0
  4172 ;;      Temps:          0       0       0       0       0
  4173 ;;      Totals:         0       6       0       0       0
  4174 ;;Total ram usage:        6 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    2
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_CONVET
  4181 ;;		_CONVET_cont
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function ___wmul
  4187  076B                     ___wmul:
  4188  076B                     l2072:	
  4189                           ;incstack = 0
  4190                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4191                           
  4192  076B  1283               	bcf	3,5	;RP0=0, select bank0
  4193  076C  1303               	bcf	3,6	;RP1=0, select bank0
  4194  076D  01A4               	clrf	___wmul@product
  4195  076E  01A5               	clrf	___wmul@product+1
  4196  076F                     l2074:
  4197  076F  1C20               	btfss	___wmul@multiplier,0
  4198  0770  2F72               	goto	u621
  4199  0771  2F73               	goto	u620
  4200  0772                     u621:
  4201  0772  2F79               	goto	l408
  4202  0773                     u620:
  4203  0773                     l2076:
  4204  0773  0822               	movf	___wmul@multiplicand,w
  4205  0774  07A4               	addwf	___wmul@product,f
  4206  0775  1803               	skipnc
  4207  0776  0AA5               	incf	___wmul@product+1,f
  4208  0777  0823               	movf	___wmul@multiplicand+1,w
  4209  0778  07A5               	addwf	___wmul@product+1,f
  4210  0779                     l408:
  4211  0779  3001               	movlw	1
  4212  077A                     u635:
  4213  077A  1003               	clrc
  4214  077B  0DA2               	rlf	___wmul@multiplicand,f
  4215  077C  0DA3               	rlf	___wmul@multiplicand+1,f
  4216  077D  3EFF               	addlw	-1
  4217  077E  1D03               	skipz
  4218  077F  2F7A               	goto	u635
  4219  0780                     l2078:
  4220  0780  3001               	movlw	1
  4221  0781                     u645:
  4222  0781  1003               	clrc
  4223  0782  0CA1               	rrf	___wmul@multiplier+1,f
  4224  0783  0CA0               	rrf	___wmul@multiplier,f
  4225  0784  3EFF               	addlw	-1
  4226  0785  1D03               	skipz
  4227  0786  2F81               	goto	u645
  4228  0787                     l2080:
  4229  0787  0820               	movf	___wmul@multiplier,w
  4230  0788  0421               	iorwf	___wmul@multiplier+1,w
  4231  0789  1D03               	btfss	3,2
  4232  078A  2F8C               	goto	u651
  4233  078B  2F8D               	goto	u650
  4234  078C                     u651:
  4235  078C  2F6F               	goto	l2074
  4236  078D                     u650:
  4237  078D                     l2082:
  4238  078D  0825               	movf	___wmul@product+1,w
  4239  078E  00A1               	movwf	?___wmul+1
  4240  078F  0824               	movf	___wmul@product,w
  4241  0790  00A0               	movwf	?___wmul
  4242  0791                     l410:
  4243  0791  0008               	return
  4244  0792                     __end_of___wmul:
  4245                           
  4246                           	psect	text20
  4247  07DA                     __ptext20:	
  4248 ;; *************** function ___bmul *****************
  4249 ;; Defined at:
  4250 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  multiplier      1    wreg     unsigned char 
  4253 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4256 ;;  product         1    2[BANK0 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      unsigned char 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       1       0       0       0
  4267 ;;      Locals:         0       2       0       0       0
  4268 ;;      Temps:          0       1       0       0       0
  4269 ;;      Totals:         0       4       0       0       0
  4270 ;;Total ram usage:        4 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    2
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_CONVET
  4277 ;;		_CONVET_cont
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function ___bmul
  4283  07DA                     ___bmul:
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4287                           ;___bmul@multiplier stored from wreg
  4288  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4289  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4290  07DC  00A3               	movwf	___bmul@multiplier
  4291  07DD                     l2086:
  4292  07DD  01A2               	clrf	___bmul@product
  4293  07DE                     l2088:
  4294  07DE  1C23               	btfss	___bmul@multiplier,0
  4295  07DF  2FE1               	goto	u661
  4296  07E0  2FE2               	goto	u660
  4297  07E1                     u661:
  4298  07E1  2FE6               	goto	l2092
  4299  07E2                     u660:
  4300  07E2                     l2090:
  4301  07E2  0820               	movf	___bmul@multiplicand,w
  4302  07E3  00A1               	movwf	??___bmul
  4303  07E4  0821               	movf	??___bmul,w
  4304  07E5  07A2               	addwf	___bmul@product,f
  4305  07E6                     l2092:
  4306  07E6  1003               	clrc
  4307  07E7  0DA0               	rlf	___bmul@multiplicand,f
  4308  07E8                     l2094:
  4309  07E8  1003               	clrc
  4310  07E9  0CA3               	rrf	___bmul@multiplier,f
  4311  07EA  0823               	movf	___bmul@multiplier,w
  4312  07EB  1D03               	btfss	3,2
  4313  07EC  2FEE               	goto	u671
  4314  07ED  2FEF               	goto	u670
  4315  07EE                     u671:
  4316  07EE  2FDE               	goto	l2088
  4317  07EF                     u670:
  4318  07EF                     l2096:
  4319  07EF  0822               	movf	___bmul@product,w
  4320  07F0                     l434:
  4321  07F0  0008               	return
  4322  07F1                     __end_of___bmul:
  4323                           
  4324                           	psect	text21
  4325  04C1                     __ptext21:	
  4326 ;; *************** function ___awdiv *****************
  4327 ;; Defined at:
  4328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  divisor         2    6[BANK0 ] int 
  4331 ;;  dividend        2    8[BANK0 ] int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  quotient        2   13[BANK0 ] int 
  4334 ;;  sign            1   12[BANK0 ] unsigned char 
  4335 ;;  counter         1   11[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  2    6[BANK0 ] int 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       4       0       0       0
  4346 ;;      Locals:         0       4       0       0       0
  4347 ;;      Temps:          0       1       0       0       0
  4348 ;;      Totals:         0       9       0       0       0
  4349 ;;Total ram usage:        9 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    2
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_CONVET
  4356 ;;		_CONVET_cont
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function ___awdiv
  4362  04C1                     ___awdiv:
  4363  04C1                     l1528:	
  4364                           ;incstack = 0
  4365                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4366                           
  4367  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  4368  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  4369  04C3  01AC               	clrf	___awdiv@sign
  4370  04C4                     l1530:
  4371  04C4  1FA7               	btfss	___awdiv@divisor+1,7
  4372  04C5  2CC7               	goto	u381
  4373  04C6  2CC8               	goto	u380
  4374  04C7                     u381:
  4375  04C7  2CCF               	goto	l1536
  4376  04C8                     u380:
  4377  04C8                     l1532:
  4378  04C8  09A6               	comf	___awdiv@divisor,f
  4379  04C9  09A7               	comf	___awdiv@divisor+1,f
  4380  04CA  0AA6               	incf	___awdiv@divisor,f
  4381  04CB  1903               	skipnz
  4382  04CC  0AA7               	incf	___awdiv@divisor+1,f
  4383  04CD                     l1534:
  4384  04CD  01AC               	clrf	___awdiv@sign
  4385  04CE  0AAC               	incf	___awdiv@sign,f
  4386  04CF                     l1536:
  4387  04CF  1FA9               	btfss	___awdiv@dividend+1,7
  4388  04D0  2CD2               	goto	u391
  4389  04D1  2CD3               	goto	u390
  4390  04D2                     u391:
  4391  04D2  2CDC               	goto	l1542
  4392  04D3                     u390:
  4393  04D3                     l1538:
  4394  04D3  09A8               	comf	___awdiv@dividend,f
  4395  04D4  09A9               	comf	___awdiv@dividend+1,f
  4396  04D5  0AA8               	incf	___awdiv@dividend,f
  4397  04D6  1903               	skipnz
  4398  04D7  0AA9               	incf	___awdiv@dividend+1,f
  4399  04D8                     l1540:
  4400  04D8  3001               	movlw	1
  4401  04D9  00AA               	movwf	??___awdiv
  4402  04DA  082A               	movf	??___awdiv,w
  4403  04DB  06AC               	xorwf	___awdiv@sign,f
  4404  04DC                     l1542:
  4405  04DC  01AD               	clrf	___awdiv@quotient
  4406  04DD  01AE               	clrf	___awdiv@quotient+1
  4407  04DE                     l1544:
  4408  04DE  0826               	movf	___awdiv@divisor,w
  4409  04DF  0427               	iorwf	___awdiv@divisor+1,w
  4410  04E0  1903               	btfsc	3,2
  4411  04E1  2CE3               	goto	u401
  4412  04E2  2CE4               	goto	u400
  4413  04E3                     u401:
  4414  04E3  2D1B               	goto	l1564
  4415  04E4                     u400:
  4416  04E4                     l1546:
  4417  04E4  01AB               	clrf	___awdiv@counter
  4418  04E5  0AAB               	incf	___awdiv@counter,f
  4419  04E6  2CF2               	goto	l1552
  4420  04E7                     l1548:
  4421  04E7  3001               	movlw	1
  4422  04E8                     u415:
  4423  04E8  1003               	clrc
  4424  04E9  0DA6               	rlf	___awdiv@divisor,f
  4425  04EA  0DA7               	rlf	___awdiv@divisor+1,f
  4426  04EB  3EFF               	addlw	-1
  4427  04EC  1D03               	skipz
  4428  04ED  2CE8               	goto	u415
  4429  04EE                     l1550:
  4430  04EE  3001               	movlw	1
  4431  04EF  00AA               	movwf	??___awdiv
  4432  04F0  082A               	movf	??___awdiv,w
  4433  04F1  07AB               	addwf	___awdiv@counter,f
  4434  04F2                     l1552:
  4435  04F2  1FA7               	btfss	___awdiv@divisor+1,7
  4436  04F3  2CF5               	goto	u421
  4437  04F4  2CF6               	goto	u420
  4438  04F5                     u421:
  4439  04F5  2CE7               	goto	l1548
  4440  04F6                     u420:
  4441  04F6                     l1554:
  4442  04F6  3001               	movlw	1
  4443  04F7                     u435:
  4444  04F7  1003               	clrc
  4445  04F8  0DAD               	rlf	___awdiv@quotient,f
  4446  04F9  0DAE               	rlf	___awdiv@quotient+1,f
  4447  04FA  3EFF               	addlw	-1
  4448  04FB  1D03               	skipz
  4449  04FC  2CF7               	goto	u435
  4450  04FD  0827               	movf	___awdiv@divisor+1,w
  4451  04FE  0229               	subwf	___awdiv@dividend+1,w
  4452  04FF  1D03               	skipz
  4453  0500  2D03               	goto	u445
  4454  0501  0826               	movf	___awdiv@divisor,w
  4455  0502  0228               	subwf	___awdiv@dividend,w
  4456  0503                     u445:
  4457  0503  1C03               	skipc
  4458  0504  2D06               	goto	u441
  4459  0505  2D07               	goto	u440
  4460  0506                     u441:
  4461  0506  2D0E               	goto	l1560
  4462  0507                     u440:
  4463  0507                     l1556:
  4464  0507  0826               	movf	___awdiv@divisor,w
  4465  0508  02A8               	subwf	___awdiv@dividend,f
  4466  0509  0827               	movf	___awdiv@divisor+1,w
  4467  050A  1C03               	skipc
  4468  050B  03A9               	decf	___awdiv@dividend+1,f
  4469  050C  02A9               	subwf	___awdiv@dividend+1,f
  4470  050D                     l1558:
  4471  050D  142D               	bsf	___awdiv@quotient,0
  4472  050E                     l1560:
  4473  050E  3001               	movlw	1
  4474  050F                     u455:
  4475  050F  1003               	clrc
  4476  0510  0CA7               	rrf	___awdiv@divisor+1,f
  4477  0511  0CA6               	rrf	___awdiv@divisor,f
  4478  0512  3EFF               	addlw	-1
  4479  0513  1D03               	skipz
  4480  0514  2D0F               	goto	u455
  4481  0515                     l1562:
  4482  0515  3001               	movlw	1
  4483  0516  02AB               	subwf	___awdiv@counter,f
  4484  0517  1D03               	btfss	3,2
  4485  0518  2D1A               	goto	u461
  4486  0519  2D1B               	goto	u460
  4487  051A                     u461:
  4488  051A  2CF6               	goto	l1554
  4489  051B                     u460:
  4490  051B                     l1564:
  4491  051B  082C               	movf	___awdiv@sign,w
  4492  051C  1903               	btfsc	3,2
  4493  051D  2D1F               	goto	u471
  4494  051E  2D20               	goto	u470
  4495  051F                     u471:
  4496  051F  2D25               	goto	l1568
  4497  0520                     u470:
  4498  0520                     l1566:
  4499  0520  09AD               	comf	___awdiv@quotient,f
  4500  0521  09AE               	comf	___awdiv@quotient+1,f
  4501  0522  0AAD               	incf	___awdiv@quotient,f
  4502  0523  1903               	skipnz
  4503  0524  0AAE               	incf	___awdiv@quotient+1,f
  4504  0525                     l1568:
  4505  0525  082E               	movf	___awdiv@quotient+1,w
  4506  0526  00A7               	movwf	?___awdiv+1
  4507  0527  082D               	movf	___awdiv@quotient,w
  4508  0528  00A6               	movwf	?___awdiv
  4509  0529                     l561:
  4510  0529  0008               	return
  4511  052A                     __end_of___awdiv:
  4512                           
  4513                           	psect	text22
  4514  063F                     __ptext22:	
  4515 ;; *************** function _isr *****************
  4516 ;; Defined at:
  4517 ;;		line 54 in file "LCD16X2.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          4       0       0       0       0
  4534 ;;      Totals:         4       0       0       0       0
  4535 ;;Total ram usage:        4 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    1
  4538 ;; This function calls:
  4539 ;;		_send
  4540 ;; This function is called by:
  4541 ;;		Interrupt level 1
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function _isr
  4547  063F                     _isr:
  4548  063F                     i1l1870:
  4549                           
  4550                           ;LCD16X2.c: 55:     if (ADIF==1){
  4551  063F  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0640  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0641  1F0C               	btfss	12,6	;volatile
  4554  0642  2E44               	goto	u56_21
  4555  0643  2E45               	goto	u56_20
  4556  0644                     u56_21:
  4557  0644  2E46               	goto	i1l139
  4558  0645                     u56_20:
  4559  0645                     i1l1872:
  4560                           
  4561                           ;LCD16X2.c: 56:         PIR1bits.ADIF=0;}
  4562  0645  130C               	bcf	12,6	;volatile
  4563  0646                     i1l139:
  4564                           
  4565                           ;LCD16X2.c: 57:     if (PIR1bits.RCIF==1){
  4566  0646  1E8C               	btfss	12,5	;volatile
  4567  0647  2E49               	goto	u57_21
  4568  0648  2E4A               	goto	u57_20
  4569  0649                     u57_21:
  4570  0649  2E4E               	goto	i1l1876
  4571  064A                     u57_20:
  4572  064A                     i1l1874:
  4573                           
  4574                           ;LCD16X2.c: 58:         GET=RCREG;}
  4575  064A  081A               	movf	26,w	;volatile
  4576  064B  00F8               	movwf	??_isr
  4577  064C  0878               	movf	??_isr,w
  4578  064D  00F4               	movwf	_GET
  4579  064E                     i1l1876:
  4580                           
  4581                           ;LCD16X2.c: 60:     if (PIR1bits.TXIF == 1){
  4582  064E  1E0C               	btfss	12,4	;volatile
  4583  064F  2E51               	goto	u58_21
  4584  0650  2E52               	goto	u58_20
  4585  0651                     u58_21:
  4586  0651  2E69               	goto	i1l141
  4587  0652                     u58_20:
  4588  0652                     i1l1878:
  4589                           
  4590                           ;LCD16X2.c: 61:         z++;
  4591  0652  3001               	movlw	1
  4592  0653  00F8               	movwf	??_isr
  4593  0654  0878               	movf	??_isr,w
  4594  0655  07F5               	addwf	_z,f
  4595  0656                     i1l1880:
  4596                           
  4597                           ;LCD16X2.c: 62:         send();
  4598  0656  120A  118A  25E7  120A  118A  	fcall	_send
  4599  065B                     i1l1882:
  4600                           
  4601                           ;LCD16X2.c: 63:         PIE1bits.TXIE = 0;
  4602  065B  1683               	bsf	3,5	;RP0=1, select bank1
  4603  065C  1303               	bcf	3,6	;RP1=0, select bank1
  4604  065D  120C               	bcf	12,4	;volatile
  4605  065E                     i1l1884:
  4606                           
  4607                           ;LCD16X2.c: 64:         if (Q==1){Q=0;}
  4608  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4609  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0660  0352               	decf	_Q,w
  4611  0661  1D03               	btfss	3,2
  4612  0662  2E64               	goto	u59_21
  4613  0663  2E65               	goto	u59_20
  4614  0664                     u59_21:
  4615  0664  2E67               	goto	i1l142
  4616  0665                     u59_20:
  4617  0665                     i1l1886:
  4618  0665  01D2               	clrf	_Q
  4619  0666  2E69               	goto	i1l141
  4620  0667                     i1l142:	
  4621                           ;LCD16X2.c: 65:         else {Q=1;}
  4622                           
  4623  0667  01D2               	clrf	_Q
  4624  0668  0AD2               	incf	_Q,f
  4625  0669                     i1l141:	
  4626                           ;LCD16X2.c: 66:     }
  4627                           
  4628                           
  4629                           ;LCD16X2.c: 67:     if (INTCONbits.TMR0IF==1){
  4630  0669  1D0B               	btfss	11,2	;volatile
  4631  066A  2E6C               	goto	u60_21
  4632  066B  2E6D               	goto	u60_20
  4633  066C                     u60_21:
  4634  066C  2E74               	goto	i1l145
  4635  066D                     u60_20:
  4636  066D                     i1l1888:
  4637                           
  4638                           ;LCD16X2.c: 68:         TMR0=236;
  4639  066D  30EC               	movlw	236
  4640  066E  0081               	movwf	1	;volatile
  4641  066F                     i1l1890:
  4642                           
  4643                           ;LCD16X2.c: 69:         INTCONbits.TMR0IF=0;
  4644  066F  110B               	bcf	11,2	;volatile
  4645  0670                     i1l1892:
  4646                           
  4647                           ;LCD16X2.c: 70:         r++;
  4648  0670  3001               	movlw	1
  4649  0671  00F8               	movwf	??_isr
  4650  0672  0878               	movf	??_isr,w
  4651  0673  07F2               	addwf	_r,f
  4652  0674                     i1l145:
  4653  0674  087B               	movf	??_isr+3,w
  4654  0675  008A               	movwf	10
  4655  0676  087A               	movf	??_isr+2,w
  4656  0677  0084               	movwf	4
  4657  0678  0E79               	swapf	??_isr+1,w
  4658  0679  0083               	movwf	3
  4659  067A  0EFE               	swapf	btemp,f
  4660  067B  0E7E               	swapf	btemp,w
  4661  067C  0009               	retfie
  4662  067D                     __end_of_isr:
  4663                           
  4664                           	psect	intentry
  4665  0004                     __pintentry:	
  4666                           ;incstack = 0
  4667                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4668                           
  4669  0004                     interrupt_function:
  4670  007E                     saved_w	set	btemp
  4671  0004  00FE               	movwf	btemp
  4672  0005  0E03               	swapf	3,w
  4673  0006  00F9               	movwf	??_isr+1
  4674  0007  0804               	movf	4,w
  4675  0008  00FA               	movwf	??_isr+2
  4676  0009  080A               	movf	10,w
  4677  000A  00FB               	movwf	??_isr+3
  4678  000B  120A  118A  2E3F   	ljmp	_isr
  4679                           
  4680                           	psect	text23
  4681  05E7                     __ptext23:	
  4682 ;; *************** function _send *****************
  4683 ;; Defined at:
  4684 ;;		line 169 in file "LCD16X2.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4698 ;;      Params:         0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0
  4700 ;;      Temps:          2       0       0       0       0
  4701 ;;      Totals:         2       0       0       0       0
  4702 ;;Total ram usage:        2 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_isr
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           
  4712                           ;psect for function _send
  4713  05E7                     _send:
  4714  05E7                     i1l1680:	
  4715                           ;incstack = 0
  4716                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0]
  4717                           
  4718                           
  4719                           ;LCD16X2.c: 170:     switch (z){
  4720  05E7  2E16               	goto	i1l1708
  4721  05E8                     i1l1682:
  4722                           
  4723                           ;LCD16X2.c: 172:             TXREG = POT1_Uas;
  4724  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  4725  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  4726  05EA  0844               	movf	_POT1_Uas,w
  4727  05EB  0099               	movwf	25	;volatile
  4728                           
  4729                           ;LCD16X2.c: 173:             break;
  4730  05EC  2E3E               	goto	i1l184
  4731  05ED                     i1l1686:
  4732                           
  4733                           ;LCD16X2.c: 178:             TXREG = 0x2E;
  4734  05ED  302E               	movlw	46
  4735  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  4736  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  4737  05F0  0099               	movwf	25	;volatile
  4738                           
  4739                           ;LCD16X2.c: 179:             break;
  4740  05F1  2E3E               	goto	i1l184
  4741  05F2                     i1l1688:
  4742                           
  4743                           ;LCD16X2.c: 181:             TXREG = POT1_Tas;
  4744  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  4745  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  4746  05F4  0840               	movf	_POT1_Tas,w
  4747  05F5  0099               	movwf	25	;volatile
  4748                           
  4749                           ;LCD16X2.c: 182:             break;
  4750  05F6  2E3E               	goto	i1l184
  4751  05F7                     i1l1690:
  4752                           
  4753                           ;LCD16X2.c: 184:             TXREG = POT1_Has;
  4754  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4755  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4756  05F9  0842               	movf	_POT1_Has,w
  4757  05FA  0099               	movwf	25	;volatile
  4758                           
  4759                           ;LCD16X2.c: 185:             break;
  4760  05FB  2E3E               	goto	i1l184
  4761  05FC                     i1l1692:
  4762                           
  4763                           ;LCD16X2.c: 187:             TXREG = 0x20;
  4764  05FC  3020               	movlw	32
  4765  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  4766  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  4767  05FF  0099               	movwf	25	;volatile
  4768                           
  4769                           ;LCD16X2.c: 188:             break;
  4770  0600  2E3E               	goto	i1l184
  4771  0601                     i1l1694:
  4772                           
  4773                           ;LCD16X2.c: 190:             TXREG = POT2_Uas;
  4774  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0603  0843               	movf	_POT2_Uas,w
  4777  0604  0099               	movwf	25	;volatile
  4778                           
  4779                           ;LCD16X2.c: 191:             break;
  4780  0605  2E3E               	goto	i1l184
  4781  0606                     i1l1698:
  4782                           
  4783                           ;LCD16X2.c: 196:             TXREG = POT2_Tas;
  4784  0606  1283               	bcf	3,5	;RP0=0, select bank0
  4785  0607  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0608  083F               	movf	_POT2_Tas,w
  4787  0609  0099               	movwf	25	;volatile
  4788                           
  4789                           ;LCD16X2.c: 197:             break;
  4790  060A  2E3E               	goto	i1l184
  4791  060B                     i1l1700:
  4792                           
  4793                           ;LCD16X2.c: 199:             TXREG = POT2_Has;
  4794  060B  1283               	bcf	3,5	;RP0=0, select bank0
  4795  060C  1303               	bcf	3,6	;RP1=0, select bank0
  4796  060D  0841               	movf	_POT2_Has,w
  4797  060E  0099               	movwf	25	;volatile
  4798                           
  4799                           ;LCD16X2.c: 200:             break;
  4800  060F  2E3E               	goto	i1l184
  4801  0610                     i1l1702:
  4802                           
  4803                           ;LCD16X2.c: 202:              TXREG = 0x0D;
  4804  0610  300D               	movlw	13
  4805  0611  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0612  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0613  0099               	movwf	25	;volatile
  4808  0614                     i1l1704:
  4809                           
  4810                           ;LCD16X2.c: 203:              z=0;
  4811  0614  01F5               	clrf	_z
  4812                           
  4813                           ;LCD16X2.c: 204:             break;
  4814  0615  2E3E               	goto	i1l184
  4815  0616                     i1l1708:
  4816  0616  0875               	movf	_z,w
  4817  0617  00F6               	movwf	??_send
  4818  0618  01F7               	clrf	??_send+1
  4819                           
  4820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4821                           ; Switch size 1, requested type "simple"
  4822                           ; Number of cases is 1, Range of values is 0 to 0
  4823                           ; switch strategies available:
  4824                           ; Name         Instructions Cycles
  4825                           ; simple_byte            4     3 (average)
  4826                           ; direct_byte           11     8 (fixed)
  4827                           ; jumptable            260     6 (fixed)
  4828                           ;	Chosen strategy is simple_byte
  4829  0619  0877               	movf	??_send+1,w
  4830  061A  3A00               	xorlw	0	; case 0
  4831  061B  1903               	skipnz
  4832  061C  2E1E               	goto	i1l2536
  4833  061D  2E10               	goto	i1l1702
  4834  061E                     i1l2536:
  4835                           
  4836                           ; Switch size 1, requested type "simple"
  4837                           ; Number of cases is 10, Range of values is 0 to 9
  4838                           ; switch strategies available:
  4839                           ; Name         Instructions Cycles
  4840                           ; simple_byte           31    16 (average)
  4841                           ; direct_byte           38     8 (fixed)
  4842                           ; jumptable            260     6 (fixed)
  4843                           ;	Chosen strategy is simple_byte
  4844  061E  0876               	movf	??_send,w
  4845  061F  3A00               	xorlw	0	; case 0
  4846  0620  1903               	skipnz
  4847  0621  2DE8               	goto	i1l1682
  4848  0622  3A01               	xorlw	1	; case 1
  4849  0623  1903               	skipnz
  4850  0624  2DE8               	goto	i1l1682
  4851  0625  3A03               	xorlw	3	; case 2
  4852  0626  1903               	skipnz
  4853  0627  2DED               	goto	i1l1686
  4854  0628  3A01               	xorlw	1	; case 3
  4855  0629  1903               	skipnz
  4856  062A  2DF2               	goto	i1l1688
  4857  062B  3A07               	xorlw	7	; case 4
  4858  062C  1903               	skipnz
  4859  062D  2DF7               	goto	i1l1690
  4860  062E  3A01               	xorlw	1	; case 5
  4861  062F  1903               	skipnz
  4862  0630  2DFC               	goto	i1l1692
  4863  0631  3A03               	xorlw	3	; case 6
  4864  0632  1903               	skipnz
  4865  0633  2E01               	goto	i1l1694
  4866  0634  3A01               	xorlw	1	; case 7
  4867  0635  1903               	skipnz
  4868  0636  2DED               	goto	i1l1686
  4869  0637  3A0F               	xorlw	15	; case 8
  4870  0638  1903               	skipnz
  4871  0639  2E06               	goto	i1l1698
  4872  063A  3A01               	xorlw	1	; case 9
  4873  063B  1903               	skipnz
  4874  063C  2E0B               	goto	i1l1700
  4875  063D  2E10               	goto	i1l1702
  4876  063E                     i1l184:
  4877  063E  0008               	return
  4878  063F                     __end_of_send:
  4879  007E                     btemp	set	126	;btemp
  4880  007E                     wtemp0	set	126
  4881                           
  4882                           	psect	config
  4883                           
  4884                           ;Config register CONFIG1 @ 0x2007
  4885                           ;	Oscillator Selection bits
  4886                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4887                           ;	Watchdog Timer Enable bit
  4888                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4889                           ;	Power-up Timer Enable bit
  4890                           ;	PWRTE = OFF, PWRT disabled
  4891                           ;	RE3/MCLR pin function select bit
  4892                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4893                           ;	Code Protection bit
  4894                           ;	CP = OFF, Program memory code protection is disabled
  4895                           ;	Data Code Protection bit
  4896                           ;	CPD = OFF, Data memory code protection is disabled
  4897                           ;	Brown Out Reset Selection bits
  4898                           ;	BOREN = OFF, BOR disabled
  4899                           ;	Internal External Switchover bit
  4900                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4901                           ;	Fail-Safe Clock Monitor Enabled bit
  4902                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4903                           ;	Low Voltage Programming Enable bit
  4904                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4905                           ;	In-Circuit Debugger Mode bit
  4906                           ;	DEBUG = 0x1, unprogrammed default
  4907  2007                     	org	8199
  4908  2007  20D4               	dw	8404
  4909                           
  4910                           ;Config register CONFIG2 @ 0x2008
  4911                           ;	Brown-out Reset Selection bit
  4912                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4913                           ;	Flash Program Memory Self Write Enable bits
  4914                           ;	WRT = OFF, Write protection off
  4915  2008                     	org	8200
  4916  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     28      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_POINT@D	PTR unsigned char  size(1) Largest target is 15
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[15]), 

    LCD_P@D	PTR unsigned char  size(1) Largest target is 15
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_send

Critical Paths under _main in BANK0

    _main->_pull
    _pull->_CONVET
    _CONVET->___awdiv
    _Setup->_initOsc
    _LCD_IN->_LCD_ON
    _LCD_CL->_LCD_ON
    _LCDVAL1->_LCD_POINT
    _LCD_POINT->_LCD_P
    _LCD_P->_LCD_PLAY
    _CONVET_cont->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21161
                                             26 BANK0      2     2      0
                        _CONVET_cont
                            _LCDVAL1
                             _LCD_CL
                             _LCD_IN
                          _LCD_POINT
                              _L_ADC
                            _SET_RXT
                            _SET_TXR
                              _Setup
                               _pull
                               _push
 ---------------------------------------------------------------------------------
 (1) _push                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _pull                                                 1     1      0    4202
                                             25 BANK0      1     1      0
                       _ADC_CHS_CLKS
                             _CONVET
 ---------------------------------------------------------------------------------
 (2) _CONVET                                              10    10      0    3960
                                             15 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _ADC_CHS_CLKS                                         4     3      1     242
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      31
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SET_TXR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_RXT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _L_ADC                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_IN                                               2     2      0      31
                                              3 BANK0      2     2      0
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCD_CL                                               0     0      0      31
                             _LCD_ON
 ---------------------------------------------------------------------------------
 (1) _LCDVAL1                                              5     1      4    7756
                                             11 BANK0      5     1      4
                          _LCD_POINT
 ---------------------------------------------------------------------------------
 (1) _LCD_POINT                                            7     2      5    5218
                                              4 BANK0      7     2      5
                             _LCD_ON
                              _LCD_P
 ---------------------------------------------------------------------------------
 (2) _LCD_P                                                2     2      0     132
                                              2 BANK0      2     2      0
                           _LCD_PLAY
 ---------------------------------------------------------------------------------
 (3) _LCD_PLAY                                             2     2      0      31
                                              0 BANK0      2     2      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               3     3      0      31
                                              0 BANK0      3     3      0
                            _LCD_TIM
 ---------------------------------------------------------------------------------
 (4) _LCD_TIM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVET_cont                                          4     4      0    3892
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     676
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1820
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                               _send
 ---------------------------------------------------------------------------------
 (7) _send                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET_cont
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _LCDVAL1
     _LCD_POINT
       _LCD_ON
         _LCD_TIM
       _LCD_P
         _LCD_PLAY
           _LCD_TIM
   _LCD_CL
     _LCD_ON
       _LCD_TIM
   _LCD_IN
     _LCD_ON
       _LCD_TIM
   _LCD_POINT
     _LCD_ON
       _LCD_TIM
     _LCD_P
       _LCD_PLAY
         _LCD_TIM
   _L_ADC
   _SET_RXT
   _SET_TXR
   _Setup
     _initOsc
   _pull
     _ADC_CHS_CLKS
     _CONVET
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
   _push

 _isr (ROOT)
   _send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 22:17:15 2021

                      _H 0051                        _K 004F                        _L 0054  
                      _Q 0052                        _S 0073                        _W 0071  
                      _h 0050                        _k 004E                        _l 0053  
                      _r 0072                        _w 0070                        _z 0075  
                      pc 0002           ___bmul@product 0022    __size_of_ADC_CHS_CLKS 00AF  
           ___awdiv@sign 002C                       fsr 0004      ___wmul@multiplicand 0022  
                    l211 0714                      l220 0FE9                      l300 059F  
                    l301 05A5                      l214 0FFF                      l302 05AB  
                    l223 0FAB                      l303 05B1                      l304 05B7  
                    l217 0FD6                      l305 05BD                      l161 073F  
                    l410 0791                      l322 0FC9                      l306 05E6  
                    l156 07B6                      l229 07D9                      l237 076A  
                    l165 0FBE                      l270 0427                      l319 07FE  
                    l271 042E                      l191 06E6                      l408 0779  
                    l280 046D                      l272 0435                      l168 01A2  
                    l281 0474                      l273 043C                      l434 07F0  
                    l194 0588                      l282 047B                      l274 0443  
                    l290 04C0                      l259 030F                      l283 0482  
                    l275 044A                      l267 0416                      l276 0451  
                    l277 0458                      l269 0420                      l278 045F  
                    l279 0466                      l296 058D                      l561 0529  
                    l297 05E5                      l298 0593                      l299 0599  
                    _GET 0074                      u400 04E4                      u401 04E3  
                    u420 04F6                      u421 04F5                      u415 04E8  
                    u440 0507                      u441 0506                      u610 07D9  
                    u435 04F7                      u611 07D8                      u460 051B  
                    u380 04C8                      u620 0773                      u700 06BA  
                    u461 051A                      u445 0503                      u381 04C7  
                    u621 0772                      u701 06B9                      u470 0520  
                    u390 04D3                      u710 06C2                      u471 051F  
                    u455 050F                      u391 04D2                      u711 06C1  
                    u720 06C7                      u721 06C6                      u650 078D  
                    u730 06D4                      u651 078C                      u635 077A  
                    u731 06D3                      u660 07E2                      u740 06DC  
                    u661 07E1                      u645 0781                      u741 06DB  
                    u670 07EF                      u750 06E1                      u671 07EE  
                    u751 06E0                      u680 0FBA                      u681 0FB9  
                    u690 071C                      u691 071B                      u767 06F7  
                    u777 0FE6                      u787 0FFB                      _isr 063F  
                    fsr0 0004                      indf 0000             LCD_POINT@LOC 002A  
        __end_of_LCDVAL1 0310          __end_of_LCD_TIM 0FD7                     l2100 0740  
                   l2102 0741                     l2110 074D                     l2104 0747  
                   l2112 075C                     l2120 058C                     l2200 0189  
                   l2050 0FDB                     l2114 0762                     l2210 0792  
                   l2202 018E                     l2060 0FF0                     l2052 0FDD  
                   l2300 026A                     l2124 05C3                     l2220 07A0  
                   l2212 0798                     l2132 0415                     l2204 0193  
                   l2046 0FCA                     l2062 0FF5                     l2054 0FE2  
                   l2070 07CD                     l2310 02C4                     l2302 027C  
                   l2230 07A5                     l2222 07A1                     l2214 0799  
                   l2134 041C                     l2206 0198                     l2080 0787  
                   l2072 076B                     l2056 0FED                     l2048 0FDA  
                   l2064 07BA                     l2304 028E                     l2320 0FB4  
                   l2240 07AD                     l2232 07A6                     l2224 07A2  
                   l2216 079C                     l2208 019D                     l2400 03D3  
                   l1530 04C4                     l2090 07E2                     l2082 078D  
                   l2074 076F                     l2058 0FEE                     l2066 07BB  
                   l2306 02A0                     l2314 02D6                     l2322 0FBA  
                   l2250 0FBF                     l2242 07AF                     l2234 07A7  
                   l2226 07A3                     l2218 079F                     l2330 0720  
                   l2402 03D8                     l1540 04D8                     l1532 04C8  
                   l2092 07E6                     l2076 0773                     l2068 07C7  
                   l2308 02B2                     l2260 06EC                     l2324 0FBB  
                   l2252 07F1                     l2244 07B0                     l2236 07A8  
                   l2228 07A4                     l2172 0489                     l2180 0024  
                   l2332 072A                     l2340 06B4                     l2404 03EA  
                   l1550 04EE                     l1542 04DC                     l1534 04CD  
                   l2094 07E8                     l2086 07DD                     l2078 0780  
                   l2270 0708                     l2262 06EF                     l2254 07FA  
                   l2246 07B1                     l2238 07AC                     l2190 00D9  
                   l2182 002E                     l2334 0730                     l2326 0715  
                   l2350 06C8                     l2342 06BA                     l2406 03FC  
                   l1560 050E                     l1552 04F2                     l1544 04DE  
                   l1536 04CF                     l1528 04C1                     l2096 07EF  
                   l2088 07DE                     l2280 01B6                     l2272 070E  
                   l2264 06F1                     l2256 06E7                     l2248 07B5  
                   l2192 00EF                     l2184 0044                     l2336 0734  
                   l2328 071C                     l2360 06E1                     l2352 06CE  
                   l2344 06BC                     l1562 0515                     l1554 04F6  
                   l1546 04E4                     l1538 04D3                     l2290 0210  
                   l2282 01C8                     l2274 0FA5                     l2266 06FC  
                   l2258 06EB                     l2530 05CB                     l2194 012E  
                   l2186 0083                     l2362 06E2                     l2354 06D4  
                   l2346 06C2                     l2370 031A                     l1556 0507  
                   l1548 04E7                     l1564 051B                     l2364 052A  
                   l2532 02DD                     l2292 0222                     l2284 01DA  
                   l2276 01A3                     l2268 0702                     l2196 0141  
                   l2188 0096                     l2356 06D6                     l2348 06C7  
                   l2380 034A                     l2372 031F                     l1566 0520  
                   l1558 050D                     l2534 0754                     l2294 0234  
                   l2286 01EC                     l2278 01A4                     l2198 0184  
                   l2358 06DC                     l2390 0386                     l2382 0359  
                   l2374 0324                     l2366 0310                     l1568 0525  
                   l2296 0246                     l2288 01FE                     l2528 0491  
                   l2392 0398                     l2384 035E                     l2376 0329  
                   l2368 0315                     l2298 0258                     l2394 03AA  
                   l2386 0363                     l2378 033B                     l2396 03BC  
                   l2388 0374                     l2398 03CE                     _ADIF 0066  
                   ?_isr 0076                     STR_1 0683                     STR_2 0694  
                   STR_3 0696                     STR_4 0698                     STR_5 069A  
                   STR_6 069C                     STR_7 069E                     STR_8 06A0  
                   STR_9 06A2                     _TMR0 0001       __size_of_LCD_POINT 002B  
        __end_of_SET_RXT 0FCA          __end_of_SET_TXR 07FF                     _cont 004B  
                   _main 0310                     _tem1 004D                     _tem2 004C  
                   _send 05E7                     _pull 0715                     _push 06B4  
                   btemp 007E                     start 000E             _ADC_CHS_CLKS 0412  
      ___bmul@multiplier 0023         __end_of_LCD_PLAY 0FEA                    ??_isr 0078  
                  ?_main 0076          __end_of___awdiv 052A                    ?_send 0076  
                  STR_10 06A4                    STR_11 06A6                    STR_12 06A8  
                  STR_13 06AA                    STR_14 06AC                    STR_15 06AE  
                  STR_16 06B0                    STR_17 06B2                    STR_18 0692  
                  ?_pull 0076                    ?_push 0076                    _ANSEL 0188  
        ___awdiv@divisor 0026                    _LCD_P 07B7                    i1l141 0669  
                  i1l142 0667                    i1l145 0674                    i1l139 0646  
                  i1l184 063E          ___awdiv@counter 002B                    _RCREG 001A  
                  _L_ADC 0FB4                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u60_20 066D                    u60_21 066C  
                  u56_20 0645                    u56_21 0644                    u57_20 064A  
                  u57_21 0649                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  u58_20 0652                    u58_21 0651                    u59_20 0665  
                  u59_21 0664                    _TXREG 0019                    _Setup 0792  
        __end_of_initOsc 05E7                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0412  
           __end_of_send 063F             __end_of_pull 0740             __end_of_push 06E7  
      __end_of_LCD_POINT 076B                   ??_main 003A                   ??_send 0076  
                 ??_pull 0039                   ??_push 0020                ??_LCDVAL1 002F  
                 ?_LCD_P 0076                   LCD_P@D 0023                ??_LCD_TIM 0020  
                 ?_L_ADC 0076                   ?_Setup 0076                ??_SET_RXT 0020  
              ??_SET_TXR 0020                   _ADCON1 009F                   _ADRESH 001E  
            initOsc@IRCF 0022         ___awdiv@dividend 0028                   _ANSELH 0189  
   __size_of_CONVET_cont 005F                   _CONVET 0024                   _LCD_CL 0FA5  
                 _LCD_IN 06E7                   _LCD_ON 0FEA                   i1l1700 060B  
                 i1l1702 0610                   i1l1704 0614                   i1l1708 0616  
                 i1l2536 061E                   i1l1680 05E7                   i1l1690 05F7  
                 i1l1682 05E8                   i1l1692 05FC                   i1l1694 0601  
                 i1l1686 05ED                   i1l1870 063F                   i1l1688 05F2  
                 i1l1880 0656                   i1l1872 0645                   i1l1698 0606  
                 i1l1890 066F                   i1l1882 065B                   i1l1874 064A  
                 i1l1892 0670                   i1l1884 065E                   i1l1876 064E  
                 i1l1886 0665                   i1l1878 0652                   i1l1888 066D  
                 _POT1_H 0048                   _POT2_H 0047                   _POT1_T 0046  
                 _POT1_U 004A                   _POT2_T 0045                   _POT2_U 0049  
                 ___bmul 07DA                   ___wmul 076B                ??___awdiv 002A  
                 _cont_1 003E                   _cont_2 003D                   _cont_3 003C  
       ___awdiv@quotient 002D                ??_initOsc 0020                   saved_w 007E  
              ?_LCD_PLAY 0076  __end_of__initialization 0020                LCD_PLAY@D 0021  
          __end_of_LCD_P 07DA            __end_of_L_ADC 0FBF      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0076            __end_of_Setup 07B7                  ??_LCD_P 0022  
                ??_L_ADC 0020                  ??_Setup 0023                  ?_CONVET 0076  
                ?_LCD_CL 0076               __pbssBANK0 003C                  ?_LCD_IN 0076  
                ?_LCD_ON 0076                  LCD_ON@C 0022               ??_LCD_PLAY 0020  
             __pmaintext 0310                  ?___bmul 0020                  ?___wmul 0020  
             __pintentry 0004                  _LCDVAL1 01A3                  _LCD_TIM 0FCA  
                _SET_RXT 0FBF                  _SET_TXR 07F1               __stringtab 067D  
        __size_of_CONVET 017F          __size_of_LCD_CL 0007          __size_of_LCD_IN 002E  
        __size_of_LCD_ON 0016          __size_of___bmul 0017                  ___awdiv 04C1  
        __size_of___wmul 0027                  __ptext1 06B4                  __ptext2 0715  
                __ptext3 0024                  __ptext4 0412                  __ptext5 0792  
                __ptext6 0589                  __ptext7 07F1                  __ptext8 0FBF  
                __ptext9 0FB4                  _initOsc 0589             __size_of_isr 003E  
              _LCD_POINT 0740                  clrloop0 0FAD     end_of_initialization 0020  
              _RCSTAbits 0018                _PORTDbits 0008               ?_LCD_POINT 0024  
          ??_CONVET_cont 002F                _TRISDbits 0088            ADC_CHS_CLKS@C 0023  
          ADC_CHS_CLKS@S 0020               LCD_POINT@D 0028               LCD_POINT@x 0024  
             LCD_POINT@y 0026           __end_of_CONVET 01A3           __end_of_LCD_CL 0FAC  
         __end_of_LCD_IN 0715           __end_of_LCD_ON 1000                _TXSTAbits 0098  
      __size_of_LCD_PLAY 0013           __end_of___bmul 07F1           __end_of___wmul 0792  
            _BAUDCTLbits 0187      start_initialization 0011              __end_of_isr 067D  
               ??_CONVET 002F                 ??_LCD_CL 0023                 ??_LCD_IN 0023  
               ??_LCD_ON 0020      __end_of_CONVET_cont 0589            ?_ADC_CHS_CLKS 0020  
               ??___bmul 0021                 ??___wmul 0024                 LCDVAL1@Z 002D  
               LCDVAL1@x 002B                 ?_LCDVAL1 002B                 ?_LCD_TIM 0076  
            __pbssCOMMON 0070                ___latbits 0002              ??_LCD_POINT 0029  
          __pcstackBANK0 0020                 ?_SET_RXT 0076                 ?_SET_TXR 0076  
         ??_ADC_CHS_CLKS 0021              _CONVET$1215 0037                 ?___awdiv 0026  
              __pstrings 067D           __size_of_LCD_P 0023                 ?_initOsc 0076  
         __size_of_L_ADC 000B              _CONVET_cont 052A           __size_of_Setup 0025  
               _LCD_PLAY 0FD7        interrupt_function 0004           ___wmul@product 0024  
              clear_ram0 0FAC                 _PIE1bits 008C                 _PIR1bits 000C  
               _POT1_Has 0042                 _POT2_Has 0041                 _POT1_Tas 0040  
               _POT1_Uas 0044                 _POT2_Tas 003F                 _POT2_Uas 0043  
             _ADCON0bits 001F              __stringbase 0682        ___wmul@multiplier 0020  
       __size_of_LCDVAL1 016D         __size_of_LCD_TIM 000D         __size_of_SET_RXT 000B  
       __size_of_SET_TXR 000E         __size_of___awdiv 0069       __end_of__stringtab 0683  
   __end_of_ADC_CHS_CLKS 04C1         __size_of_initOsc 005E                 __ptext10 06E7  
               __ptext11 0FA5                 __ptext20 07DA                 __ptext12 01A3  
               __ptext21 04C1                 __ptext13 0740                 __ptext22 063F  
               __ptext14 07B7                 __ptext23 05E7                 __ptext15 0FD7  
               __ptext16 0FEA                 __ptext17 0FCA                 __ptext18 052A  
               __ptext19 076B            __size_of_main 0102            __size_of_send 0058  
          __size_of_pull 002B            __size_of_push 0033               _INTCONbits 000B  
               intlevel1 0000                stringcode 067D               _OSCCONbits 008F  
               stringdir 067D                 stringtab 067D             ?_CONVET_cont 0076  
